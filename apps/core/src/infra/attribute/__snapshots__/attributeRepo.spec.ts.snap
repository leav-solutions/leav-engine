// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AttributeRepo createAttribute Should create a new attribute 1`] = `"INSERT @value0 IN @@value1 RETURN NEW"`;

exports[`AttributeRepo createAttribute Should create a new attribute 2`] = `
{
  "@value1": "core_attributes",
  "value0": {
    "_key": "test_attribute",
    "format": "text",
    "label": {
      "fr": "Test",
    },
    "multiple_values": false,
    "system": true,
    "type": "standard",
  },
}
`;

exports[`AttributeRepo deleteAttribute Should delete an attribute and return deleted attribute 1`] = `
"
                    FOR e IN @@value0
                        FILTER e._to == @value1
                        REMOVE e IN @@value0
                    "
`;

exports[`AttributeRepo deleteAttribute Should delete an attribute and return deleted attribute 2`] = `
{
  "@value0": "core_edge_libraries_attributes",
  "value1": "core_attributes/test_attribute",
}
`;

exports[`AttributeRepo deleteAttribute Should delete an attribute and return deleted attribute 3`] = `"REMOVE @value0 IN @@value1 RETURN OLD"`;

exports[`AttributeRepo deleteAttribute Should delete an attribute and return deleted attribute 4`] = `
{
  "@value1": "core_attributes",
  "value0": {
    "_key": "test_attribute",
  },
}
`;

exports[`AttributeRepo getAttributeLibraries Should get libraries linked to attribute through graph query 1`] = `
{
  "_source": [Function],
  "bindVars": {
    "value0": "core_attributes/label",
    "value1": "core_edge_libraries_attributes",
  },
  "query": "
                FOR lib IN 1 INBOUND @value0
                @value1
                RETURN lib
            ",
}
`;

exports[`AttributeRepo getLibraryAttributes Should get library attributes through graph query 1`] = `
{
  "_source": [Function],
  "bindVars": {
    "value0": "core_libraries/users",
    "value1": "core_edge_libraries_attributes",
  },
  "query": "
                FOR v
                IN 1 OUTBOUND @value0
                @value1
                RETURN v
            ",
}
`;

exports[`AttributeRepo getLibraryFullTextAttributes Should get library full text attributes through graph query 1`] = `
"LET fullTextAttrs = (
                            FOR e IN @@value0
                                FILTER e._from == @value1
                                FILTER e.full_text_search == true
                            RETURN LAST(SPLIT(e._to, '/'))
                        )
                        FOR a IN @@value2
                            FILTER POSITION(fullTextAttrs, a._key)
                        RETURN a
                    "
`;

exports[`AttributeRepo updateAttribute Should update an existing attribute 1`] = `"UPDATE @value0 IN @@value1 RETURN NEW"`;

exports[`AttributeRepo updateAttribute Should update an existing attribute 2`] = `
{
  "@value1": "core_attributes",
  "value0": {
    "_key": "test_attribute",
    "format": "text",
    "label": {
      "fr": "Test",
    },
    "multiple_values": false,
    "system": true,
    "type": "standard",
  },
}
`;
