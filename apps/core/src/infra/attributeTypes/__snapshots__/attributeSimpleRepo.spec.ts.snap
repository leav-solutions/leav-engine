// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AttributeSimpleRepo clearAllValues Should delete field of given attribute 1`] = `undefined`;

exports[`AttributeSimpleRepo clearAllValues Should delete field of given attribute 2`] = `undefined`;

exports[`AttributeSimpleRepo createValue Should create a new index value 1`] = `
"
                UPDATE @value0
                WITH @value1
                IN @@value2
                OPTIONS { keepNull: false }
                RETURN NEW"
`;

exports[`AttributeSimpleRepo createValue Should create a new index value 2`] = `
{
  "@value2": "test_lib",
  "value0": {
    "_key": "12345",
  },
  "value1": {
    "test_attr": "test val",
  },
}
`;

exports[`AttributeSimpleRepo deleteValue Should delete a value 1`] = `
"
                UPDATE @value0
                WITH @value1
                IN @@value2
                OPTIONS { keepNull: false }
                RETURN NEW"
`;

exports[`AttributeSimpleRepo deleteValue Should delete a value 2`] = `
{
  "@value2": "test_lib",
  "value0": {
    "_key": "12345",
  },
  "value1": {
    "test_attr": null,
  },
}
`;

exports[`AttributeSimpleRepo filterValueQueryPart Should query to retrieve value to filter on 1`] = `
{
  "_source": [Function],
  "bindVars": {
    "value0": "simple_attribute",
  },
  "query": "r.@value0",
}
`;

exports[`AttributeSimpleRepo filterValueQueryPart Should query to retrieve value to filter on, on extended format 1`] = `
{
  "_source": [Function],
  "bindVars": {
    "value0": "subfield",
    "value1": "simple_attribute",
  },
  "query": "TRANSLATE(@value0, TRANSLATE(@value1, r))",
}
`;

exports[`AttributeSimpleRepo getValues Should return values for index attribute 1`] = `
"
                FOR r IN @@value0
                    FILTER r._key == @value1
                    RETURN r.@value2
            "
`;

exports[`AttributeSimpleRepo getValues Should return values for index attribute 2`] = `
{
  "@value0": "test_lib",
  "value1": "123456",
  "value2": "test_attr",
}
`;

exports[`AttributeSimpleRepo sortQueryPart Should return simple sort 1`] = `
{
  "_source": [Function],
  "bindVars": {
    "value0": "_key",
    "value1": "ASC",
  },
  "query": "SORT r.@value0 @value1",
}
`;
