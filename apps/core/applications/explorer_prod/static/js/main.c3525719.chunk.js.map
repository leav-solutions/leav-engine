{"version":3,"sources":["themingVar.js","components/shared/Login/login.module.css","../../../src/types/errors.ts","../../../src/types/forms.ts","../../src/utils.ts","../../src/index.ts","hooks/useAuthToken/useAuthToken.ts","_gqlTypes/globalTypes.ts","_types/types.ts","components/shared/Login/Login.tsx","components/shared/Login/index.ts","redux/activePanel.ts","components/shared/ErrorDisplay/ErrorDisplay.tsx","redux/display.ts","redux/navigation.ts","redux/notifications.ts","redux/utils.ts","redux/selection.ts","redux/store.ts","components/app/StyledComponent/PrimaryBtn.tsx","components/shared/ErrorDisplay/index.ts","components/app/ApolloHandler/ApolloHandler.tsx","components/app/ApolloHandler/index.ts","hooks/useGraphqlPossibleTypes/useGraphqlPossibleTypes.ts","graphQL/queries/records/recordIdentityFragment.ts","graphQL/queries/userData/me.ts","graphQL/queries/cache/activeLibrary/getActiveLibraryQuery.ts","hooks/ActiveLibHook/ActiveLibHook.ts","graphQL/queries/cache/lang/getLangQuery.ts","hooks/LangHook/LangHook.ts","graphQL/queries/cache/user/userQuery.ts","hooks/UserHook/UserHook.ts","constants/constants.ts","utils/utils.tsx","assets/svg/svgEllipsis.svg","assets/icons/IconEllipsisHorizontal.tsx","components/shared/FloatingMenu/FloatingMenu.tsx","components/shared/FloatingMenu/index.ts","graphQL/mutations/userData/saveUserData.ts","graphQL/queries/userData/getUserData.ts","graphQL/queries/libraries/getLibrariesListQuery.ts","hooks/useGetLibrariesListQuery/useGetLibrariesListQuery.ts","components/Home/FavoriteStar/FavoriteStar.tsx","components/Home/LibrariesList/ImportModal/ImportModal.tsx","components/Home/FavoriteStar/index.ts","graphQL/queries/attributes/getAttributesByLib.ts","graphQL/queries/import/importExcel.ts","components/Home/LibrariesList/ImportModal/index.ts","components/Home/LibrariesList/LibrariesList.tsx","graphQL/queries/trees/getTreeListQuery.ts","hooks/useGetTreesListQuery/useGetTreesListQuery.ts","components/Home/TreeList/TreeList.tsx","graphQL/queries/cache/activeTree/getActiveTreeQuery.ts","hooks/ActiveTreeHook/ActiveTreeHook.ts","components/Sidebar/Sidebar.tsx","components/Sidebar/index.ts","components/HeaderNotification/DisplayNotification/DisplayNotification.tsx","components/HeaderNotification/DisplayNotification/index.ts","components/HeaderNotification/HeaderNotification.tsx","components/HeaderNotification/index.ts","components/TopBar/UserMenu/UserMenu.tsx","components/TopBar/UserMenu/index.ts","components/TopBar/TopBar.tsx","components/TopBar/index.ts","components/shared/AvailableSoon/AvailableSoon.tsx","components/shared/AvailableSoon/index.ts","components/UserPanel/LangSwitcher/LangSwitcher.tsx","components/UserPanel/LangSwitcher/index.ts","components/UserPanel/UserPanel.tsx","components/UserPanel/index.ts","components/Home/LibrariesList/index.ts","components/Home/TreeList/index.ts","components/Home/Home.tsx","hooks/useSearchReducer/searchReducer.ts","components/Home/index.ts","context/selectionModeContext.ts","hooks/useSearchReducer/searchContext.ts","graphQL/queries/records/getRecordsFromLibraryQuery.ts","graphQL/queries/views/getViewById.ts","hooks/useSearchReducer/index.ts","hooks/useSearchReducer/useSearchReducer.ts","components/LibraryItemsList/LibraryItemsListPagination/LibraryItemsListPagination.tsx","components/LibraryItemsList/LibraryItemsListPagination/index.ts","assets/svg/svgIconClosePanel.svg","assets/icons/IconClosePanel.tsx","assets/icons/IconOpenPanel.tsx","components/shared/Loading/Loading.tsx","components/shared/Loading/index.ts","components/shared/RecordPreview/RecordPreview.tsx","components/shared/RecordPreview/index.ts","components/shared/RecordCard/RecordCard.tsx","graphQL/queries/records/getRecordPermissions.ts","components/shared/RecordCard/index.ts","graphQL/mutations/records/createRecordMutation.ts","graphQL/queries/libraries/getLibraryPermissionsQuery.ts","hooks/useCanEditRecord/useCanEditRecord.ts","graphQL/queries/forms/getRecordFormQuery.ts","hooks/useRecordsConsultationHistory/useRecordsConsultationHistory.ts","hooks/useRecordsConsultationHistory/index.ts","components/RecordEdition/EditRecord/EditRecordSkeleton.tsx","components/RecordEdition/EditRecord/hooks/useRecordEditionContext.ts","components/RecordEdition/EditRecord/uiElements/Container/Container.tsx","components/RecordEdition/EditRecord/uiElements/Container/index.ts","components/RecordEdition/EditRecord/uiElements/FormDivider/FormDivider.tsx","components/RecordEdition/EditRecord/uiElements/FormDivider/index.ts","components/RecordEdition/EditRecord/uiElements/FormTabs/FormTabs.tsx","components/RecordEdition/EditRecord/uiElements/FormTabs/index.ts","components/shared/Dimmer/Dimmer.tsx","components/shared/Dimmer/index.ts","components/shared/ErrorMessage/ErrorMessage.tsx","components/shared/ErrorMessage/index.ts","hooks/useGetRecordColumnsValuesQuery/useGetRecordColumnsValuesQuery.ts","graphQL/queries/records/getRecordColumnsValues.ts","components/RecordEdition/EditRecord/shared/AddValueBtn/AddValueBtn.tsx","components/RecordEdition/EditRecord/shared/AddValueBtn/index.ts","components/RecordEdition/EditRecord/shared/NoValue/NoValue.tsx","components/RecordEdition/EditRecord/_types.ts","components/RecordEdition/EditRecord/shared/NoValue/index.ts","components/RecordEdition/EditRecord/shared/DeleteValueBtn/DeleteValueBtn.tsx","components/RecordEdition/editRecordReducer/editRecordReducer.ts","components/RecordEdition/EditRecord/shared/DeleteValueBtn/index.ts","components/RecordEdition/editRecordReducer/editRecordReducerContext.ts","components/RecordEdition/editRecordReducer/useEditRecordReducer.ts","components/RecordEdition/EditRecord/shared/ValueDetailsBtn/ValueDetailsBtn.tsx","components/RecordEdition/EditRecord/shared/ValueDetailsBtn/index.ts","components/RecordEdition/EditRecordBtn/EditRecordBtn.tsx","components/RecordEdition/EditRecordBtn/index.ts","components/RecordEdition/EditRecord/uiElements/LinkField/FloatingMenuHandler/FloatingMenuHandler.tsx","components/RecordEdition/EditRecord/uiElements/LinkField/FloatingMenuHandler/index.ts","graphQL/queries/attributes/getAttributeWithEmbeddedFields.ts","hooks/useGetLibraryDetailExtendedQuery/useGetLibraryDetailExtendedQuery.ts","graphQL/queries/libraries/getLibraryDetailExtendQuery.ts","components/SearchModal/SearchModal.tsx","components/SearchModal/index.ts","components/shared/List/List.tsx","components/shared/List/index.ts","components/RecordEdition/EditRecord/uiElements/LinkField/ValuesAdd/ValuesAdd.tsx","components/RecordEdition/EditRecord/uiElements/LinkField/ValuesAdd/index.ts","components/RecordEdition/EditRecord/uiElements/LinkField/LinkField.tsx","components/RecordEdition/EditRecord/uiElements/StandardField/standardFieldReducer/standardFieldReducer.ts","components/RecordEdition/EditRecord/uiElements/LinkField/index.ts","components/RecordEdition/EditRecordModal/creationErrorContext.ts","components/RecordEdition/EditRecord/uiElements/StandardField/StandardFieldValue/Inputs/CheckboxInput.tsx","components/RecordEdition/EditRecord/uiElements/StandardField/StandardFieldValue/Inputs/DateInput.tsx","components/RecordEdition/EditRecord/uiElements/StandardField/StandardFieldValue/Inputs/DateRangeInput.tsx","components/RecordEdition/EditRecord/uiElements/StandardField/StandardFieldValue/Inputs/EncryptedInput.tsx","components/RecordEdition/EditRecord/uiElements/StandardField/StandardFieldValue/Inputs/NumberInput.tsx","components/RecordEdition/EditRecord/uiElements/StandardField/StandardFieldValue/Inputs/TextInput.tsx","components/RecordEdition/EditRecord/uiElements/StandardField/StandardFieldValue/ValuesList/ValuesList.tsx","components/RecordEdition/EditRecord/uiElements/StandardField/StandardFieldValue/ValuesList/index.ts","components/RecordEdition/EditRecord/uiElements/StandardField/StandardFieldValue/StandardFieldValue.tsx","components/RecordEdition/EditRecord/uiElements/StandardField/StandardFieldValue/index.ts","components/RecordEdition/EditRecord/uiElements/StandardField/StandardField.tsx","components/RecordEdition/EditRecord/uiElements/StandardField/index.ts","components/RecordEdition/EditRecord/uiElements/TextBlock/TextBlock.tsx","components/RecordEdition/EditRecord/uiElements/TextBlock/index.ts","components/RecordEdition/EditRecord/uiElements/TreeField/TreeFieldValue/TreeFieldValue.tsx","components/RecordEdition/EditRecord/uiElements/TreeField/TreeFieldValue/index.ts","graphQL/queries/trees/getTreeNodeChildren.ts","components/shared/SelectTreeNode/SelectTreeNode.tsx","components/shared/SelectTreeNode/index.ts","components/RecordEdition/EditRecord/uiElements/TreeField/ValuesAdd/ValuesAdd.tsx","components/RecordEdition/EditRecord/uiElements/TreeField/ValuesAdd/index.ts","components/RecordEdition/EditRecord/uiElements/TreeField/TreeField.tsx","components/RecordEdition/EditRecord/uiElements/TreeField/index.ts","components/RecordEdition/EditRecord/uiElements/index.tsx","components/RecordEdition/EditRecord/helpers/extractFormElements/index.ts","components/RecordEdition/EditRecord/helpers/extractFormElements/extractFormElements.ts","components/RecordEdition/EditRecord/EditRecord.tsx","components/RecordEdition/EditRecord/index.ts","graphQL/mutations/values/deleteValueMutation.ts","components/RecordEdition/EditRecord/hooks/helpers/getPropertyCacheFieldName.ts","graphQL/mutations/values/saveValueBatchMutation.ts","components/RecordEdition/editRecordReducer/index.ts","components/shared/PropertiesList/PropertiesList.tsx","components/shared/PropertiesList/index.ts","components/shared/RecordSummary/RecordSummary.tsx","components/shared/RecordSummary/index.ts","components/RecordEdition/EditRecord/shared/ValueDetails/TreeValuePath/TreeValuePath.tsx","components/RecordEdition/EditRecord/shared/ValueDetails/TreeValuePath/index.ts","components/RecordEdition/EditRecord/shared/ValueDetails/ValueDetails.tsx","components/RecordEdition/EditRecord/shared/ValueDetails/index.ts","components/RecordEdition/EditRecordSidebar/EditRecordSidebar.tsx","components/RecordEdition/EditRecordSidebar/index.ts","components/RecordEdition/EditRecordModal/EditRecordModal.tsx","components/LibraryItemsList/LibraryItemsListTable/BodyCell/SelectCellsBtn.tsx","components/RecordEdition/EditRecordModal/index.ts","components/RecordEdition/EditRecord/hooks/useSaveValueBatchMutation.ts","components/RecordEdition/EditRecord/hooks/useDeleteValueMutation.ts","components/LibraryItemsList/LibraryItemsListTable/Cell/CellInfos/CellInfos.tsx","components/LibraryItemsList/LibraryItemsListTable/Cell/CellInfos/index.ts","components/LibraryItemsList/LibraryItemsListTable/Cell/Cell.tsx","components/LibraryItemsList/LibraryItemsListTable/Cell/index.ts","components/LibraryItemsList/LibraryItemsListTable/Cell/CellSelection/CellSelection.tsx","components/LibraryItemsList/LibraryItemsListTable/Cell/CellSelection/index.ts","components/LibraryItemsList/LibraryItemsListTable/BodyCell/BodyCell.tsx","components/LibraryItemsList/LibraryItemsListTable/BodyCell/index.ts","components/LibraryItemsList/LibraryItemsListTable/BodyRow/BodyRow.tsx","components/AttributesSelectionList/reducer/attributesSelectionListReducer.tsx","components/LibraryItemsList/LibraryItemsListTable/BodyRow/index.ts","components/LibraryItemsList/LibraryItemsListTable/BodyCell/getSelectedCell.tsx","components/AttributesSelectionList/reducer/attributesSelectionListStateContext.ts","components/AttributesSelectionList/sharedComponents.tsx","components/AttributesSelectionList/Attribute/Attribute.tsx","components/AttributesSelectionList/Attribute/index.ts","components/AttributesSelectionList/SelectedAttributesList/SelectedAttribute/SelectedAttribute.tsx","components/AttributesSelectionList/SelectedAttributesList/SelectedAttributesList.tsx","components/AttributesSelectionList/SelectedAttributesList/index.ts","components/AttributesSelectionList/AttributesSelectionList.tsx","components/AttributesSelectionList/index.ts","components/LibraryItemsList/LibraryItemsListTable/ChooseTableColumns/ChooseTableColumns.tsx","components/LibraryItemsList/LibraryItemsListTable/ChooseTableColumns/index.ts","components/LibraryItemsList/LibraryItemsListTable/Header/Header.tsx","components/LibraryItemsList/LibraryItemsListTable/Header/index.ts","components/LibraryItemsList/LibraryItemsListTable/Table.tsx","components/LibraryItemsList/LibraryItemsListTable/index.ts","components/LibraryItemsList/TileDisplay/ItemTileDisplay/ItemTileDisplay.tsx","components/LibraryItemsList/TileDisplay/ItemTileDisplay/index.ts","components/LibraryItemsList/TileDisplay/TileDisplay.tsx","components/LibraryItemsList/TileDisplay/index.ts","components/LibraryItemsList/DisplayTypeSelector/DisplayTypeSelector.tsx","components/LibraryItemsList/DisplayTypeSelector/index.ts","components/LibraryItemsList/FiltersPanel/getFiltersFromRequest.ts","components/LibraryItemsList/FiltersPanel/getRequestFromFilter.ts","components/LibraryItemsList/manageItems.ts","components/IconViewType/IconViewType.tsx","components/LibraryItemsList/DisplayOptions/DisplayOptions.tsx","components/LibraryItemsList/DisplayOptions/index.ts","components/LibraryItemsList/MenuItemActions/MenuItemActions.tsx","components/LibraryItemsList/MenuItemActions/index.ts","components/LibraryItemsList/MenuSelection/MenuSelection.tsx","components/LibraryItemsList/MenuSelection/index.ts","graphQL/mutations/views/addViewMutation.ts","components/LibraryItemsList/DisplayTypeSelector/FilterInput/DateBetweenFilter/index.ts","components/LibraryItemsList/DisplayTypeSelector/FilterInput/DateBetweenFilter/DateBetweenFilter.tsx","components/shared/SelectTreeNodeModal/SelectTreeNodeModal.tsx","components/LibraryItemsList/DisplayTypeSelector/FilterInput/DateFilter/DateFilter.tsx","components/LibraryItemsList/DisplayTypeSelector/FilterInput/DateFilter/index.ts","components/LibraryItemsList/DisplayTypeSelector/FilterInput/NumericFilter/index.ts","components/LibraryItemsList/DisplayTypeSelector/FilterInput/NumericFilter/NumericFilter.tsx","components/LibraryItemsList/DisplayTypeSelector/FilterInput/TextFilter/TextFilter.tsx","components/LibraryItemsList/DisplayTypeSelector/FilterInput/TextFilter/index.ts","components/LibraryItemsList/FiltersPanel/FilterDropdownButton/FilterDropdownButton.tsx","components/LibraryItemsList/FiltersPanel/FilterDropdownButton/index.ts","components/LibraryItemsList/FiltersPanel/FiltersOptions.tsx","components/LibraryItemsList/FiltersPanel/FilterTreeCondition/index.ts","components/LibraryItemsList/FiltersPanel/FilterTreeCondition/FilterTreeCondition.tsx","components/LibraryItemsList/FiltersPanel/mustHideValue.ts","components/LibraryItemsList/DisplayTypeSelector/FilterInput/BooleanFilter/BooleanFilter.tsx","components/LibraryItemsList/DisplayTypeSelector/FilterInput/BooleanFilter/index.ts","components/LibraryItemsList/FiltersPanel/Filter/FilterAttributeCondition/FilterAttributeCondition.tsx","components/LibraryItemsList/FiltersPanel/Filter/FilterAttributeCondition/index.ts","components/LibraryItemsList/FiltersPanel/Filter/Filter.tsx","components/LibraryItemsList/FiltersDropdown/FiltersDropdown.tsx","components/LibraryItemsList/FiltersDropdown/index.ts","components/LibraryItemsList/MenuView/MenuView.tsx","components/LibraryItemsList/MenuView/index.ts","components/LibraryItemsList/SearchItems/SearchItems.tsx","components/LibraryItemsList/SearchItems/index.ts","components/LibraryItemsList/MenuItemList/MenuItemList.tsx","components/LibraryItemsList/MenuItemListSelected/ActionsMenu/ExportModal/ExportModal.tsx","components/LibraryItemsList/MenuItemList/index.ts","graphQL/queries/export/exportQuery.ts","components/LibraryItemsList/MenuItemListSelected/ActionsMenu/ExportModal/index.ts","components/LibraryItemsList/MenuItemListSelected/ActionsMenu/ActionsMenu.tsx","components/LibraryItemsList/MenuItemListSelected/ActionsMenu/index.ts","components/LibraryItemsList/MenuItemListSelected/MenuItemListSelected.tsx","components/LibraryItemsList/MenuItemListSelected/index.ts","components/LibraryItemsList/FiltersPanel/FiltersPanel.tsx","components/LibraryItemsList/FiltersPanel/index.ts","graphQL/queries/views/getViewsListQuery.ts","components/LibraryItemsList/ViewPanel/EditView/EditView.tsx","components/LibraryItemsList/ViewPanel/EditView/index.ts","graphQL/mutations/views/deleteViewMutation.ts","components/IconViewType/index.ts","components/LibraryItemsList/ViewPanel/View/View.tsx","components/LibraryItemsList/ViewPanel/View/index.ts","components/LibraryItemsList/ViewPanel/ViewPanel.tsx","components/LibraryItemsList/ViewPanel/index.ts","components/LibraryItemsList/SideItems/SideItems.tsx","components/LibraryItemsList/SideItems/index.ts","components/LibraryItemsList/LibraryItemsList.tsx","components/LibraryItemsList/index.ts","components/LibraryHome/LibraryHome.tsx","components/LibraryHome/index.ts","components/Navigation/NavigationView/Column/DetailNavigation/DetailNavigation.tsx","components/Navigation/NavigationView/Column/DetailNavigation/index.ts","assets/icons/IconEllipsisVertical.tsx","components/app/StyledComponent/StandardBtn.tsx","graphQL/mutations/trees/addTreeElementMutation.ts","graphQL/mutations/trees/removeTreeElementMutation.ts","graphQL/queries/trees/getTreeLibraries.ts","hooks/useRefreshTreeContent/index.ts","hooks/useRefreshTreeContent/useRefreshTreeContent.ts","components/Navigation/NavigationView/Column/HeaderColumnNavigation/HeaderColumnNavigationActions/DefaultActions/DefaultActions.tsx","components/Navigation/NavigationView/Column/HeaderColumnNavigation/HeaderColumnNavigationActions/DefaultActions/index.ts","graphQL/mutations/trees/moveTreeElementMutation.ts","components/Navigation/NavigationView/Column/HeaderColumnNavigation/HeaderColumnNavigationActions/SelectionActions/SelectionActions.tsx","components/Navigation/NavigationView/Column/HeaderColumnNavigation/HeaderColumnNavigationActions/SelectionActions/index.ts","components/Navigation/NavigationView/Column/HeaderColumnNavigation/HeaderColumnNavigationActions/HeaderColumnNavigationActions.tsx","components/Navigation/NavigationView/Column/HeaderColumnNavigation/HeaderColumnNavigationActions/index.ts","components/Navigation/NavigationView/Column/HeaderColumnNavigation/HeaderColumnNavigation.tsx","components/Navigation/NavigationView/Column/HeaderColumnNavigation/index.ts","components/Navigation/NavigationView/Column/Row/Row.tsx","components/Navigation/NavigationView/Column/Row/index.ts","components/Navigation/NavigationView/Column/Column.tsx","components/Navigation/NavigationView/Column/index.ts","components/Navigation/NavigationView/NavigationView.tsx","components/Navigation/NavigationView/index.ts","components/Navigation/Navigation.tsx","components/Navigation/index.ts","components/Workspace/Workspace.tsx","components/Workspace/index.ts","components/Router/RouteNotFound/RouteNotFound.tsx","components/Router/RouteNotFound/index.ts","components/Router/Routes/ListRoutes.ts","components/Router/Routes/Routes.tsx","components/Router/Routes/index.ts","components/Router/Router.tsx","components/Router/index.ts","components/app/AppHandler/AppHandler.tsx","components/app/AppHandler/index.ts","components/app/ThemeHandler/ThemeHandler.tsx","components/app/ThemeHandler/index.ts","components/app/App.tsx","components/app/AuthHandler/AuthHandler.tsx","components/app/AuthHandler/index.ts","i18n.ts","index.less","serviceWorker.ts","index.tsx"],"names":["module","exports","ErrorTypes","FormUIElementTypes","FormFieldTypes","TabsDirection","STORAGE_TOKEN_KEY","useAuthToken","storage","window","sessionStorage","getToken","getItem","saveToken","token","setItem","deleteToken","removeItem","AttributeFormat","AttributeType","FormElementTypes","RecordFilterCondition","RecordFilterOperator","SortOrder","ViewSizes","ViewTypes","LinkedType","PreviewAttributes","PreviewSize","AvailableLanguage","FilterTypes","FilterType","OperatorFilter","TreeConditionFilter","ThroughConditionFilter","extractValueFromEventAndThen","next","event","target","value","Login","onSuccess","message","url","t","useTranslation","useState","login","setLogin","password","setPassword","isLoading","setIsLoading","loginError","setLoginError","authUrl","proceedAuth","useCallback","setTimeout","fetch","method","headers","Headers","body","JSON","stringify","then","response","ok","status","Error","error","json","data","processLogin","className","styles","loginBackground","loginContainer","title","style","width","Item","prefix","UserOutlined","type","name","placeholder","autoFocus","onChange","LockOutlined","description","icon","showIcon","size","loading","disabled","onClick","htmlType","SendOutlined","block","OrderSearch","NotificationType","NotificationPriority","NotificationChannel","TypeSideItem","SharedStateSelectionType","WorkspacePanels","AttributeConditionFilter","ErrorDisplayTypes","activePanelSlice","createSlice","initialState","HOME","reducers","setActivePanel","_","action","payload","actions","displayInitialState","side","visible","filters","displaySlice","setDisplaySide","state","navigationSlice","activeTree","path","setNavigationActiveTree","setNavigationPath","notificationsInitialState","stack","base","content","basic","notificationsSlice","setNotificationBase","setNotificationStack","addNotification","toggleInSelection","selection","selected","find","elementSelected","id","library","selectionType","navigation","parent","filter","search","allSelected","selectionInitialState","searchSelection","selectionSlice","setSelection","resetSelection","setSelectionAllSelected","setSelectionToggleSelected","setSearchSelection","resetSearchSelection","setSelectionToggleSearchSelectionElement","newSearchSelection","store","configureStore","reducer","display","displayReducer","selectionReducer","navigationReducer","notification","notificationsReducer","activePanel","activePanelReducer","useAppSelector","useSelector","useAppDispatch","useDispatch","PrimaryBtn","styled","props","children","themingVar","ErrorDisplay","actionButton","showActionButton","ERROR","history","useHistory","errorByType","CloseCircleFilled","color","PERMISSION_ERROR","MinusCircleFilled","replace","subTitle","extra","UNAUTHORIZED","ApolloHandler","onTokenInvalid","dispatch","setError","possibleTypes","setPossibleTypes","_fetchPossibleTypes","a","Authorization","variables","query","res","resData","fetchedPossibleTypes","__schema","types","reduce","allTypes","map","possibleType","String","useEffect","useGraphqlPossibleTypes","process","REACT_APP_API_URL","includes","_handleApolloError","onError","graphQLErrors","networkError","locations","extensions","errorContent","interpolation","escapeValue","code","channel","trigger","passive","statusCode","gqlClient","ApolloClient","link","ApolloLink","from","createUploadLink","uri","cache","InMemoryCache","dataIdFromObject","responseObject","Record","__typename","_id","defaultDataIdFromObject","idValue","typePolicies","EmbeddedAttribute","keyFields","RecordIdentity","Library","fields","gqlNames","merge","existing","incoming","Query","treeContent","Form","UserData","Tree","permissions","TreeNode","RecordForm","FormElementWithValues","ApolloProvider","client","recordIdentityFragment","gql","getMe","getActiveLibrary","initialActiveLibrary","searchableFields","attributes","trees","access_library","access_record","create_record","edit_record","delete_record","useActiveLibrary","useQuery","useMemo","activeLib","newActiveLibrary","writeQuery","tree","access_tree","getLangAll","useLang","lang","availableLangs","defaultLang","updateLang","langInfo","newLang","newAvailableLangs","newDefaultLang","getUser","useUser","user","newUser","selectionColumn","infosCol","panelSize","defaultSort","field","order","asc","viewSettingsField","defaultView","label","fr","en","owner","list","MEDIUM","shared","sort","formatNotUsingCondition","defaultLinkAttributeFilterFormat","text","treeNavigationPageSize","getFileUrl","filepath","REACT_APP_CORE_URL","getInvertColor","hexColor","parseInt","substr","hslToHex","h","s","l","hslToRgb","r","g","b","toHex","x","hex","toString","length","q","p","hue2rgb","Math","round","stringToColor","str","format","saturation","luminosity","hash","i","charCodeAt","hue","localizedTranslation","translations","availableLanguages","userLang","fallbackLang","Object","keys","checkTypeIsLink","simple_link","advanced_link","displayTypeToPreviewSize","displayType","SMALL","small","medium","BIG","big","paginationOptions","sortNotificationByPriority","priority","low","high","attributeToSelectedAttribute","attribute","otherProps","pick","gqlUnchecked","defaultFilterConditionByAttributeFormat","date","numeric","EQUAL","encrypted","IS_EMPTY","date_range","extended","CONTAINS","getTreeRecordKey","record","whoAmI","getLibraryLink","libId","getTreeLink","treeId","stringifyDateRangeValue","CustomImg","img","IconEllipsisHorizontal","src","IconSvg","alt","FloatingMenuWrapper","div","overrideStyle","FloatingMenu","moreActions","data-testid","e","stopPropagation","preventDefault","button","shape","placement","overlay","moreAction","aria-label","saveUserData","getUserDataQuery","getLibrariesListQuery","useGetLibrariesListQuery","onlyAllowed","queryData","setQueryData","onCompleted","cleanData","libraries","lib","undefined","Star","span","isFavorite","hoverTrigger","FavoriteStar","ImportSteps","onToggle","StarFilled","StarOutlined","getAttributesByLibQuery","importExcel","Step","Steps","Dragger","Upload","Title","Typography","Content","CenteredWrapper","mapping","key","file","keyChecked","currentStep","SELECT_FILE","okBtn","ImportModal","onClose","open","useReducer","newValues","appDispatch","attrsList","simple","advanced","useMutation","fetchPolicy","DONE","runImport","importError","_runImport","PROCESSING","draggerProps","multiple","accept","showUploadList","beforeUpload","fileToImport","reader","FileReader","readAsBinaryString","onload","workbook","XLSX","d","sheet","Sheets","hasOwnProperty","sheet_to_json","Array","fill","_setFileData","result","_onOk","CONFIG","validateButtonLabel","okText","cancelText","onOk","onCancel","closable","centered","confirmLoading","bodyStyle","height","okButtonProps","cancelButtonProps","destroyOnClose","current","marginBottom","LoadingOutlined","InboxOutlined","direction","align","level","bordered","tableLayout","columns","dataIndex","dataSource","slice","pagination","hideOnSinglePage","assign","col","idx","allowClear","onClear","_onClear","onSelect","_onMappingSelect","Option","defaultChecked","checked","KeyOutlined","k","data-test-id","FAVORITE_LIBRARIES_KEY","Wrapper","LibrariesList","importActiveLibrary","setImportActiveLibrary","librariesListQuery","userDataQuery","updateFavoritesMutation","baseNotification","favoriteIds","userData","Number","render","item","CloudUploadOutlined","to","DatabaseOutlined","right","_handleFavoriteToggle","wasFavorite","concat","global","avatar","background","getTreeListQuery","useGetTreesListQuery","params","skip","FAVORITE_TREES_KEY","TreeList","treeListQuery","ignoreResults","treeList","ShareAltOutlined","getActiveTree","useActiveTree","newActiveTree","HomeButton","NavWrapper","MenuItemContent","Link","Sidebar","activeLibrary","librariesList","treesList","favoritesList","executeSaveUserData","activeTreeLibrariesIds","activeLibraryTreesIds","libraryFavorites","treeFavorites","groupedLibraries","groups","newGroups","related","push","favorites","others","groupedTrees","_handleToggleFavorite","entityId","entityType","newFavorites","f","_goTo","_goToActiveLibrary","_goToActiveTree","libsMenu","libraryGroupKey","ItemGroup","treesMenu","treeGroupKey","HomeOutlined","role","selectedKeys","activeKey","onTitleClick","CustomBadge","Badge","ErrorMessage","WarningMessage","SuccessMessage","Message","warning","success","DisplayNotification","activeTimeouts","cancelNotification","triggerNotifications","setTriggerNotifications","restNotifications","antMessage","info","count","CloseOutlined","HeaderNotification","setMessage","setActiveTimeouts","acc","passiveNotifications","triggerNotifs","notifications","sortPassiveNotifications","notificationTime","time","timeouts","clearTimeout","notificationTimeout","baseTimeout","at","msg","CustomIcon","UserMenu","iconContent","userName","split","word","MenuItem","isActive","themingVars","MenuItemUser","WrapperHeaderNotification","TopBar","userPanelVisible","toggleUserPanelVisible","AvailableSoon","toLocaleUpperCase","LangSwitcher","i18nClient","i18n","unicodeFlagByLang","FlagOutlined","padding","changeLanguage","language","UserPanel","hideUserPanel","getContainer","mode","CarryOutOutlined","DoubleRightOutlined","ExclamationCircleOutlined","location","LogoutOutlined","Home","SearchActionTypes","gutter","SelectionModeContext","createContext","initialSearchState","records","totalCount","offset","active","fullText","queryFilters","view","reload","sync","userViewsOrder","sharedViewsOrder","searchReducer","toCheck","viewFieldsKeys","settings","join","checkSync","SET_SORT","SET_FILTERS","SET_DISPLAY","SET_FIELDS","SET_RECORDS","SET_TOTAL_COUNT","SET_PAGINATION","page","SET_OFFSET","SET_LOADING","CANCEL_SORT","SET_ATTRIBUTES","SET_FULLTEXT","SET_QUERY_FILTERS","SET_VIEW","SET_USER_VIEWS_ORDER","SET_SHARED_VIEWS_ORDER","SearchContext","React","handleType","getRecordsFromLibraryQuery","libraryName","libQueryName","toUpperCase","parentAttributeData","parentAttributeId","libTypeName","getGraphqlTypeFromLibraryName","recordLibrary","embeddedData","shift","getRecordsFields","getViewByIdQuery","useSearchReducer","useContext","LibraryItemsListPagination","searchState","searchDispatch","currentPage","defaultCurrent","total","defaultPageSize","onShowSizeChange","showSizeChanger","pageSizeOptions","option","pageSize","IconClosePanel","IconOpenPanel","LoadingElem","Spin","Loading","getPreviewSize","GeneratedPreview","bgColor","fontColor","displayName","ImagePreview","GeneratedPreviewTile","ImagePreviewWrapper","Image","$loaded","CustomSkeletonImage","Skeleton","ImageSpinner","RecordPreviewWrapper","image","tile","imageLoaded","setImageLoaded","position","spin","onLoad","initial","RecordPreviewTile","maxHeight","maxWidth","objectFit","containerSize","fontSize","RecordPreviewList","RecordPreview","memo","recordColor","RecordPermissionsActions","CardPart","PreviewWrapper","RecordLabel","LibLabel","getPreviewBySize","preview","fileSizeByPreviewSize","previewPath","RecordCard","withPreview","withLibrary","ellipsis","rows","tooltip","createRecordMutation","getLibraryPermissionsQuery","useCanEditRecord","recordId","libraryGqlQueryName","isCreationMode","values","recordPermissionsLoading","recordPermissionsError","recordPermissionsData","libraryId","libraryPermissionsLoading","libraryPermissionsError","libraryPermissionsData","canEdit","isReadOnly","libraryPermissionsElem","recordPermissionsElem","getRecordFormQuery","RECORDS_CONSULTATION_KEY","refetchQueries","updatingRecordsConsultationMutation","indexOf","splice","pop","unshift","useRecordsConsultationHistory","EditRecordSkeleton","rowsArray","el","Input","margin","RecordEditionContext","elements","readOnly","useRecordEditionContext","Container","element","onValueSubmit","onValueDelete","uiElement","FormDivider","StyledTabs","Tabs","FormTabs","tabPosition","VERTICAL","tabs","tab","tabContainer","containerId","layout","formComponents","FIELDS_CONTAINER","uiElementType","TabPane","DimmerElem","Dimmer","ErrorMessageWrapper","ErrorsList","ul","displayedError","isArray","border","_recordIdsToQueryFilters","recordIds","allFilters","operator","OR","condition","useGetRecordColumnsValuesQuery","libraryGqlQueryType","_convertQueryResult","queryResult","valuesByRecord","recordValues","libraryGqlType","column","_getColumnQueryPart","getRecordColumnsValues","customRefetch","refetchRecordIds","customVariables","refetch","refetchData","StyledBtn","rest","AddValueBtn","PlusOutlined","NoValueWrapper","AddButton","Button","NoValue","APICallStatus","canAddValue","onAddValue","FileAddOutlined","FileOutlined","DeleteValueBtn","EditRecordReducerActionsTypes","onDelete","buttonProps","onConfirm","DeleteOutlined","danger","activeValue","sidebarCollapsed","editRecordReducer","TOGGLE_SIDEBAR","SET_ACTIVE_VALUE","EditRecordReducerContext","useEditRecordReducer","ValueDetailsBtn","InfoOutlined","EditRecordBtn","isModalOpen","setIsModalOpen","ArrowsAltOutlined","FloatingMenuHandler","menuActions","getEmbeddedFields","depth","useGetLibraryDetailExtendedQuery","depthEmbeddedFields","WrapperItemsList","SearchModal","setVisible","submitAction","selectionState","handleModalClose","handleOk","renderModal","overflow","top","selectionMode","ListItem","AntdList","CheckboxWrapper","List","onItemClick","renderItemContent","selectable","selectedItems","onSelectionChange","listProps","renderItem","_handleClick","some","selectedItem","isEqual","newSelection","wrapperMaxHeight","ListsWrapper","SearchActions","FooterWrapper","Space","SearchInput","Search","CloseButton","StartTypingMessage","_renderListItem","ValuesAdd","onAdd","valuesList","linkValuesList","enable","filteredValuesList","setFilteredValuesList","wrapperRef","useRef","searchInputRef","selectedValues","setSelectedValues","isSearchModalVisible","setIsSearchModalVisible","valuesListCurrentPage","setValuesListCurrentPage","searchCurrentPage","setSearchCurrentPage","canSearch","allowFreeEntry","useLazyQuery","linked_library","runSearch","searchData","scrollIntoView","focus","_handleClose","_handleSearchModalSubmit","selectedRecordToSave","multiple_values","valuesToSave","selectedRecord","currentSearch","input","searchResult","listCommonProps","valueListItem","locale","emptyText","paginationCommonProps","ref","onSearch","submittedSearch","newValuesList","regex","RegExp","toLowerCase","match","limit","sortOrder","SearchOutlined","orientation","BulbOutlined","TableWrapper","isValuesAddVisible","FieldLabel","Paragraph","LinkField","StandardFieldValueState","StandardFieldReducerActionsTypes","isRecordReadOnly","linkedRecordsColumns","errorMessage","setErrorMessage","setIsValuesAddVisible","fieldValues","setFieldValues","c","linkValue","recordColumnsLoading","recordColumnsData","_handleAddValue","_handleCloseValuesAdd","_handleDeleteValue","SUCCESS","val","id_value","_handleAddValueSubmit","v","errors","selectedRecordsById","cur","errorsMessage","err","linkedRecordLabel","system","edit_value","colsToDisplay","displayRecordIdentity","cols","index","colData","rowData","valueRender","paragraph","allCols","treeValue","_isTreeValue","footer","scroll","y","CreationErrorContext","newValueId","virginValue","displayValue","editingValue","originRawValue","isErrorDisplayed","isEditing","PRISTINE","standardFieldReducer","_updateValueData","newValueData","_ensureOneValueIsPresent","ADD_VALUE","CHANGE_VALUE","DIRTY","FOCUS_FIELD","SET_ERROR","CLEAR_ERROR","SET_ERROR_DISPLAY","displayError","UNEDIT_FIELD","UPDATE_AFTER_SUBMIT","newRawValue","newValue","raw_value","newState","newValIndex","UPDATE_AFTER_DELETE","CANCEL_EDITING","CheckboxInput","fieldValue","onSubmit","indeterminate","DateInput","onFocus","inputRef","formElement","isValuesListEnabled","values_list","isValuesListOpen","_handleDateChange","selectedDate","dateToSave","unix","dateValue","moment","pickerPosition","points","picker","defaultOpen","showTime","withTime","popupStyle","dropdownAlign","Intl","DateTimeFormat","Date","DateRangeInput","selectedDates","dateFrom","dateTo","editingRangeValue","rangeValue","rangeDisplayValue","RangePicker","EncryptedInput","onPressEnter","Password","onKeyPress","NumberInput","editingValueNumber","isNaN","TextInput","ValuesList","onValueCopy","onValueSelect","valueToDisplay","isNewValue","canCopy","CopyOutlined","rawValue","FormWrapper","InputWrapper","ActionsWrapper","ButtonsWrapper","FormItem","inputComponentByFormat","StandardFieldValue","actionsWrapperRef","editRecordDispatch","_handleSubmit","valueToSave","_handleDelete","convertedValue","_handlePressEnter","_getFilteredValuesList","_handleCancel","_handleFocus","_handleValueChange","dateRangeValues","hydratedValues","isErrorVisible","wrapperClasses","canDeleteValue","valueActions","displayedValue","dateRangeValue","InputComponent","_getInput","StandardField","isMultipleValues","creationErrors","initialValues","allValues","isSavingNewValue","submitRes","attributeError","VALIDATION_ERROR","deleteRes","valuesToDisplay","valueA","valueB","hasValue","canAddAnotherValue","borderTopLeftRadius","borderTopRightRadius","TextBlock","TreeFieldValue","valueMenuActions","treeNodeChildrenQuery","_constructTreeContent","isLeaf","childrenCount","SelectTreeNode","onCheck","initSelectedNode","selectedNode","rootNode","paginationOffset","treeMap","setTreeMap","setSelectedNode","fetchError","setFetchError","loadTreeContent","called","_fetchTreeContent","node","formattedNodes","treeNodeChildren","parentMapKey","newTreeMap","parentElement","showMoreKey","child","nodeForTreeMap","showMoreElement","isShowMore","_handleLoadData","nodeData","currentNodeOffset","defaultExpandedKeys","nodes","treeData","loadData","checkStrictly","checkable","showLine","showLeafIcon","switcherIcon","DownOutlined","SelectionWrapper","BreadcrumbWrapper","BreadcrumbRoot","Breadcrumb","BreadcrumbItem","treeValuesList","selectedValuesFromTree","setSelectedValuesFromTree","selectedValuesFromList","setSelectedValuesFromList","recordKey","pathToDisplay","ancestors","parents","recordCardSettings","separator","ancestor","Separator","linked_tree","selectedNodes","selectedVal","TreeField","_handleSubmitSelectTreeNodeModal","treeNodes","selectedNodesById","ListFooter","TEXT_INPUT","DATE","CHECKBOX","ENCRYPTED","LINK","TREE","TABS","TEXT_BLOCK","DIVIDER","extractFormElements","form","allElements","allSettings","curSettings","EditRecord","readonly","formId","exception","recordForm","elementsByContainer","rootElement","FORM_ROOT_CONTAINER_ID","Provider","deleteValueMutation","saveValueBatchMutation","PropertiesList","items","paddingBottom","labelStyle","fontWeight","divider","RecordSummary","summaryContent","borderRadius","MyTree","TreeValuePath","ancestorsPath","nodesProps","pathToValue","reverse","defaultExpandAll","AttributeTitle","AttributeDescription","Panel","Collapse","ValueDetails","valueDetailsContent","modified_at","toLocaleString","modified_by","attributeDetailsContent","defaultActiveKey","destroyInactivePanel","header","EditRecordSidebar","isSidebarCollapsed","ToggleExpand","EditRecordModal","SelectCellsBtnType","afterSave","afterCreate","permissionsLoading","useApolloClient","executeSaveValueBatch","saveValues","saveRes","saveValueBatch","savedValues","recordWithTypename","savedValue","modify","identify","getPropertyCacheFieldName","cacheValue","newCacheValue","cacheIndex","findIndex","PARTIAL","gqlError","useSaveValueBatchMutation","saveValuesLoading","deleteValue","update","executeDeleteValue","useDeleteValueMutation","createRecord","setCreationErrors","pendingValues","setPendingValues","hasPendingValues","_handleValueSubmit","savableValue","newPendingValues","storedValues","attributeId","valueToStore","created_at","created_by","version","valueRecord","_handleRecordSubmit","createdRecord","newRecord","valuesById","attributeValues","actualValue","console","footerButtons","onDoubleClick","maskClosable","overflowY","SelectCellsBtn","btnProps","selectionData","ONLY","ALL","Info","CellInfos","previewSize","canDeleteRecord","menuBtnSize","warn","selectActions","selectMode","SimpleCell","RecordCardCellWrapper","MoreValuesCount","Cell","columnName","displayedValues","cellValue","_getValueByFormat","FileTextOutlined","firstValue","otherValues","CustomCheckbox","CellSelection","CheckCircleFilled","CheckCircleOutlined","CustomBodyCell","BodyCell","cell","getCellProps","flex","INFOS_COLUMN_WIDTH","minWidth","zIndex","CustomBodyRow","BodyRow","AttributesSelectionListActionTypes","row","getRowProps","editRecordModal","setEditRecordModal","cells","original","selectionToCheck","isSelected","isRowSelected","isAllSelected","canExpandExtendedAttributes","selectedAttributes","expandedAttributePath","attributeSelectionListReducer","TOGGLE_ATTRIBUTE_EXPAND","attributePath","TOGGLE_ATTRIBUTE_SELECTION","existingIndex","MOVE_SELECTED_ATTRIBUTE","startIndex","endIndex","removed","reorder","AttributesSelectionListStateContext","useAttributesSelectionListState","TextAttribute","SmallText","CustomForm","Attribute","parentAttribute","selectedAttribute","isAttributeSelected","DragHandle","CloseWrapper","SelectedAttribute","handleProps","HolderOutlined","WrapperItemSelected","CustomCard","SelectedAttributesList","onDragEnd","destination","source","droppableId","provided","innerRef","droppableProps","draggableId","dragProvided","draggableProps","dragHandleProps","ListWrapper","AttributesSelectionList","searchRef","searchValue","setSearchValue","ChooseTableColumns","currentAttribute","multipleValues","setSelectedAttributes","document","getElementsByClassName","noDuplicateNewAttribute","isLink","isMultiple","allAttributes","newFields","currentAttr","getFieldsKeyFromAttribute","embeddedFieldData","isHover","DropdownContent","WrapperArrow","filterDirection","filterActive","desc","Header","openChangeColumns","setOpenChangeColumns","setIsHover","handleSort","attId","attType","newSortField","getSortFieldByAttributeType","isInfoColumn","transform","onMouseEnter","onMouseLeave","CaretUpOutlined","CaretDownOutlined","CustomTable","TableHead","HeaderRow","HeaderCell","TableBody","Pagination","Table","tableColumns","setTableColumns","tableData","setTableData","scrollHorizontalActive","setScrollHorizontalActive","startColumns","accessor","sticky","columnsFromFields","validAccessor","replaceAll","textAlign","embeddedPath","currentColumns","allData","tableItem","cellData","pathWithoutRoot","parse","get","tableInstance","useTable","useFlexLayout","useSticky","getTableProps","getTableBodyProps","headerGroups","prepareRow","onScroll","scrollValue","scrollLeft","headerGroup","getHeaderGroupProps","headerCellProps","getHeaderProps","itemPreviewSize","buttonsColor","hoverBackgroundColor","selectedBackgroundColor","Card","$previewSize","ImageWrapper","Selection","SelectionActions","Actions","CheckedIconWrapper","ItemTileDisplay","setIsSelect","selectedToggle","newSelected","isChecked","cover","CheckOutlined","Meta","LoadingWrapper","Footer","TileDisplay","DisplayTypeSelector","timeline","cards","getFiltersFromRequest","queryFilter","isConditionWithNoValue","splitKey","ATTRIBUTE","BETWEEN","rootAttribute","attr","linkedAttributeId","linkedAttribute","linkedLibrary","linkedTreeAttribute","LIBRARY","linkedTree","parentTreeLibrary","getRequestFromFilters","THROUGH","Boolean","OPEN_BRACKET","CLOSE_BRACKET","AND","_extractValueFromParent","manageItems","itemFields","attributeExtendedContent","objectPath","manageFields","IconViewType","MenuOutlined","AppstoreFilled","CalendarOutlined","MenuWrapper","Menu","DisplaySizeWrapper","DisplayOptions","SizeAction","sizes","_handleChangeType","_handleChangeSize","LESS","onVisibleChange","MORE","Divider","MenuItemActions","menu","SettingOutlined","MenuSelection","nb","nbItems","addViewMutation","DateBetweenFilter","updateFilterValue","momentValue","utcOffset","startOf","SelectTreeNodeModal","selectedNodeKey","handleCancel","DateFilter","_handleChange","NumericFilter","Text","TextArea","TextFilter","textRows","inputRows","FilterDropdownButton","secondary","allowedConditionByFormat","NOT_CONTAINS","NOT_EQUAL","BEGIN_WITH","END_WITH","IS_NOT_EMPTY","GREATER_THAN","LESS_THAN","TODAY","TOMORROW","YESTERDAY","LAST_MONTH","NEXT_MONTH","START_ON","START_AFTER","START_BEFORE","END_ON","END_AFTER","END_BEFORE","getConditionOptionsByType","showThroughCondition","textByFormat","VALUES_COUNT_EQUAL","VALUES_COUNT_GREATER_THAN","VALUES_COUNT_LOWER_THAN","getAttributeConditionOptions","conditionOption","attributeFilter","FilterTreeCondition","conditionOptions","CLASSIFIED_IN","NOT_CLASSIFIED_IN","getTreeConditionOptions","newFilters","handleOperatorChange","BooleanFilter","BooleanWrapper","FilterAttributeCondition","showthroughCondition","conditionOptionsByType","showStandardCondition","mustHideValue","getDefaultFilterValueByFormat","_handleConditionChange","Handle","hasParent","Head","HeadInfos","HeadOptions","ParentLabel","ClearParentButton","Filter","showSelectTreeNodeModal","setShowSelectTreeNodeModal","newFilterValue","filterOptions","InputByFormat","showTreeCondition","embeddedFieldsToAttribute","embeddedFields","_getValueFromNode","getParentLabel","newFilter","filterPos","getDropdownLabel","embedded_fields","getAttributes","getLibraries","MoreOutlined","ElementsListWrapper","FiltersDropdown","setSearch","addFilter","_translateLabel","localizedLabel","_filterBySearch","searchRegEx","filteredTrees","filteredAttributes","filteredLibraries","isFilterUsed","BranchesOutlined","now","getTreeFilter","NumberOutlined","filterAttribute","getAttributeFilter","getLibraryFilter","MenuView","addView","_saveView","viewFields","omit","_handleAddView","viewType","newView","newViewRes","saveView","Group","marginRight","textOverflow","whiteSpace","RollbackOutlined","SaveFilled","dot","FilterOutlined","SearchItems","handleEnter","MenuItemList","ExportSteps","isRecordCreationVisible","setIsRecordCreationVisible","canCreateRecord","RedoOutlined","exportQuery","ExportModal","ATTRIBUTE_SELECTION","setCurrentStep","setFilepath","runExport","exportError","selectedIds","attributesToExport","_runExport","DownloadOutlined","href","ActionsMenu","activeAction","setActiveAction","ExportOutlined","rotate","modalComp","_handleCloseModal","actionKey","DropdownButton","SelectionSummary","ClearSelection","MenuItemListSelected","countItemsSelected","setCountItemsSelected","allSelectActive","uniqBy","nbSelected","paddingLeft","CloseCircleOutlined","FiltersWrapper","ListFilters","FiltersPanel","filtersSorted","allFiltersDisabled","every","marginTop","marginLeft","providedDroppable","getViewsListQuery","EditView","useForm","setConfirmLoading","_handleOk","submit","upView","forceRender","resetFields","labelCol","wrapperCol","onFinish","availableLang","initialValue","rules","required","valuePropName","deleteViewMutation","Infos","Description","CustomButton","View","onEdit","expand","setDescription","deleteView","domEvent","viewId","_handleDuplicate","viewLabel","expandable","onExpand","symbol","ev","EllipsisOutlined","SubHeader","Views","SearchWrapper","_sortViewFunction","referenceOrder","viewA","viewB","orderA","orderB","isAOrdered","isBOrdered","ViewPanel","editView","setEditView","USER_VIEWS_ORDER_KEY","SHARED_VIEWS_ORDER_KEY","orderDataQuery","updateViewsOrderMutation","views","viewFilters","userId","sharedViews","userViews","_showModal","isOrderingUserViews","orderedViews","sortedUserViews","sortedSharedViews","keyToUpdate","mutationResult","queryToUpdate","cacheData","readQuery","SideItems","showSide","LibraryItemsList","updateSelectedViewMutation","SELECTED_VIEW_KEY","hasAccess","attributesFromQuery","newAttributes","linkedLibraryId","newLinkedAttributes","linkedTreeLibrary","flat","libraryDefaultView","getSelectedView","itemsFromQuery","newRecords","getRecords","getRecordsError","getFieldFromKey","fieldKey","getAttributeFromKey","att","sortField","menuSelectedActive","LibraryHome","updateActiveLibrary","currentLibrary","currentLibLabel","linkedTrees","Detail","DetailElement","DetailNavigation","treeElement","recordData","IconEllipsisVertical","StandardBtnStyled","StandardBtn","addTreeElementMutation","removeTreeElementMutation","getTreeLibraries","useRefreshTreeContent","refreshTreeContent","updateCache","cacheContent","extract","ROOT_QUERY","forEach","evict","fieldName","gc","DefaultActions","isDetail","selectionStat","searchModalVisible","setSearchModalVisible","editRecordModalVisible","setEditRecordModalVisible","createRecordLibrary","setCreateRecordLibrary","createRecordModalVisible","setCreateRecordModalVisible","setLibId","treeLibraries","addToTree","removeFromTree","showSearch","selectedLibId","_handleSubmitAddBySearch","messages","countValid","errorMessageParent","errorMessageElement","elementLabel","_handleAfterCreateRecord","_handleOpenCreateRecordModal","_handleClickDetach","nodeId","elementName","availableLibraries","canEditChildren","edit_children","canDetach","detach","PlusCircleOutlined","InfoCircleOutlined","newPath","showDetails","ExpandAltOutlined","OrderedListOutlined","moveTreeElementMutation","detachFromTree","moveInTree","displayMessages","tMessageSuccess","tMessageFail","_handleAddElements","_handleMoveEnd","parentTo","_handleDetachElements","deletedNodes","searchIsNavigation","columnIsParent","ArrowDownOutlined","HeaderColumnNavigationActions","HeaderCellNavigation","currentPositionInPath","HeaderColumn","HeaderColumnNavigation","selectionCount","CloseSquareOutlined","ghost","columnSelection","RowWrapper","isInPath","RecordCardWrapper","selectionActive","Row","recordLabel","isAccessible","pathPart","LockFilled","newElementSelected","overflowCount","RightOutlined","ColumnWrapper","ColumnContent","ColumnPagination","Column","columnActive","setCurrentPage","setTotalCount","queryVariables","createRef","behavior","canDisplayContent","Page","NavigationView","currentColumnActive","Navigation","updateActiveTree","currentTree","treeName","VisibilityHandler","Workspace","useParams","panel","isHomeActive","isLibraryActive","isTreeActive","RouteNotFound","routes","Routes","exact","Layout","Sider","Router","setUserPanelVisible","theme","collapsible","defaultCollapsed","collapsedWidth","borderRight","AppHandler","i18next","REACT_APP_DEFAULT_LANG","options","fallbackLng","getSysTranslationQueryLanguage","REACT_APP_AVAILABLE_LANG","updateUser","meLoading","meError","me","userPermissions","themes","dark","light","ThemeHandler","themeMap","defaultTheme","App","AuthHandler","removeToken","setToken","internalMessage","setInternalMessage","recordToken","tokenStr","fallback","use","initReactI18next","Backend","LanguageDetector","init","ns","defaultNS","react","useSuspense","hostname","ReactDOM","REACT_APP_AUTH_URL","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c3525719.chunk.js","sourcesContent":["// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nmodule.exports = {\n    '@primary-color': '#0F97E4',\n    '@default-bg': '#FFF',\n    '@default-text-color': '#000',\n    '@error-color': '#e02020',\n    '@divider-color': 'rgba(0, 0, 0, 6%)',\n    '@item-active-bg': '#e5e5e5',\n    '@item-hover-bg': '#f5f5f5',\n    '@btn-primary-bg': 'transparent linear-gradient(180deg, #2CCEFF 0%, #0A8EE0 100%) 0% 0% no-repeat padding-box',\n    '@card-background': '@default-bg',\n    '@table-bg': '@default-bg',\n    '@pagination-item-bg': '@default-bg',\n    '@pagination-item-bg-active': '@default-bg',\n    '@pagination-item-link-bg': '@default-bg',\n    '@pagination-item-input-bg': '@default-bg',\n    '@border-color-base': '#D9D9D9',\n    '@border-radius-base': '4px',\n    '@list-footer-background': '@background-color-light',\n    '@background-color-light': '#FAFAFA',\n    '@leav-secondary-bg': '#f0f0f0',\n    '@leav-secondary-action-bg': '#F4F4F4',\n    '@leav-background-active': '#DEF4FF',\n    '@leav-view-panel-label-background-active': '#C6E2FF',\n    '@leav-view-panel-background-title': '#F4F4F4',\n    '@leav-primary-btn-border': '0.699999988079071px solid #0F97E4',\n    '@leav-primary-btn-bg-hover':\n        'transparent linear-gradient(0deg, #2cceff 0%, #0a8ee0 100%) 0% 0% no-repeat padding-box',\n    '@leav-secondary-divider-color': '#C7C7C7',\n    '@leav-secondary-gradient-bg':\n        'transparent linear-gradient(180deg, #FFFFFF 0%, #F4F4F4 100%) 0% 0% no-repeat padding-box;',\n    '@leav-secondary-item-background': '#FAFAFA',\n    '@leav-small-shadow': '0px 3px 6px #58585812;',\n    '@leav-border': '0.699999988079071px solid #C7C7C7;',\n    '@leav-header-height': '3rem',\n    '@leav-secondary-font-color': 'rgba(0, 0, 0, 0.5)',\n    '@leav-navigation-column-width': '20rem',\n    '@leav-navigation-column-details-width': '30rem'\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginBackground\":\"login_loginBackground__2-wQB\",\"Gradient\":\"login_Gradient__1f0hc\",\"loginContainer\":\"login_loginContainer__29Lqv\",\"loginHeader\":\"login_loginHeader__BmrW1\",\"loginBlock\":\"login_loginBlock__3QeEo\"};","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ErrorTypes = void 0;\n// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nvar ErrorTypes;\n(function (ErrorTypes) {\n    ErrorTypes[\"VALIDATION_ERROR\"] = \"VALIDATION_ERROR\";\n    ErrorTypes[\"PERMISSION_ERROR\"] = \"PERMISSION_ERROR\";\n    ErrorTypes[\"INTERNAL_ERROR\"] = \"INTERNAL_ERROR\";\n})(ErrorTypes = exports.ErrorTypes || (exports.ErrorTypes = {}));\n//# sourceMappingURL=errors.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FORM_ROOT_CONTAINER_ID = exports.TabsDirection = exports.FormFieldTypes = exports.FormUIElementTypes = void 0;\nvar FormUIElementTypes;\n(function (FormUIElementTypes) {\n    FormUIElementTypes[\"DIVIDER\"] = \"divider\";\n    FormUIElementTypes[\"FIELDS_CONTAINER\"] = \"fields_container\";\n    FormUIElementTypes[\"TAB_FIELDS_CONTAINER\"] = \"tab_fields_container\";\n    FormUIElementTypes[\"TEXT_BLOCK\"] = \"text_block\";\n    FormUIElementTypes[\"TABS\"] = \"tabs\";\n})(FormUIElementTypes = exports.FormUIElementTypes || (exports.FormUIElementTypes = {}));\nvar FormFieldTypes;\n(function (FormFieldTypes) {\n    FormFieldTypes[\"TEXT_INPUT\"] = \"input_field\";\n    FormFieldTypes[\"DATE\"] = \"date\";\n    FormFieldTypes[\"CHECKBOX\"] = \"checkbox\";\n    FormFieldTypes[\"ENCRYPTED\"] = \"encrypted\";\n    FormFieldTypes[\"DROPDOWN\"] = \"dropdown\";\n    FormFieldTypes[\"LINK\"] = \"link\";\n    FormFieldTypes[\"TREE\"] = \"tree\";\n})(FormFieldTypes = exports.FormFieldTypes || (exports.FormFieldTypes = {}));\nvar TabsDirection;\n(function (TabsDirection) {\n    TabsDirection[\"HORIZONTAL\"] = \"horizontal\";\n    TabsDirection[\"VERTICAL\"] = \"vertical\";\n})(TabsDirection = exports.TabsDirection || (exports.TabsDirection = {}));\nexports.FORM_ROOT_CONTAINER_ID = '__root';\n//# sourceMappingURL=forms.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isFileAllowed = exports.getGraphqlQueryNameFromLibraryName = exports.getGraphqlTypeFromLibraryName = void 0;\n// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nconst lodash_1 = require(\"lodash\");\nconst minimatch_1 = __importDefault(require(\"minimatch\"));\nconst getGraphqlTypeFromLibraryName = (library) => {\n    return lodash_1.flow([lodash_1.camelCase, lodash_1.upperFirst, lodash_1.trimEnd, lodash_1.partialRight(lodash_1.trimEnd, 's')])(library);\n};\nexports.getGraphqlTypeFromLibraryName = getGraphqlTypeFromLibraryName;\nconst getGraphqlQueryNameFromLibraryName = (library) => {\n    return lodash_1.flow([lodash_1.camelCase, lodash_1.trimEnd])(library);\n};\nexports.getGraphqlQueryNameFromLibraryName = getGraphqlQueryNameFromLibraryName;\nconst isFileAllowed = (fsPath, allowList, ignoreList, filePath) => {\n    // if allowPatterns is empty it's an implicit allow of all files\n    if (!allowList.length) {\n        allowList = ['**'];\n    }\n    const isAllowed = allowList.some(pattern => minimatch_1.default(filePath, `${fsPath}/${pattern}`));\n    const isIgnored = ignoreList.some(pattern => minimatch_1.default(filePath, `${fsPath}/${pattern}`));\n    return !isIgnored && isAllowed;\n};\nexports.isFileAllowed = isFileAllowed;\n//# sourceMappingURL=utils.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\n__exportStar(require(\"./types/errors\"), exports);\n__exportStar(require(\"./types/forms\"), exports);\n__exportStar(require(\"./types/helpers\"), exports);\n__exportStar(require(\"./utils\"), exports);\n//# sourceMappingURL=index.js.map","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nexport interface IUseAuthToken {\n    getToken: () => string;\n    saveToken: (token: string) => void;\n    deleteToken: () => void;\n}\n\nconst STORAGE_TOKEN_KEY = 'accessToken';\n\nexport default function useAuthToken(): IUseAuthToken {\n    const storage = window.sessionStorage;\n    return {\n        getToken(): string {\n            return storage.getItem(STORAGE_TOKEN_KEY) ?? '';\n        },\n        saveToken(token: string) {\n            storage.setItem(STORAGE_TOKEN_KEY, token);\n        },\n        deleteToken() {\n            storage.removeItem(STORAGE_TOKEN_KEY);\n        }\n    };\n}\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\n/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n//==============================================================\n// START Enums and Input Objects\n//==============================================================\n\nexport enum AttributeFormat {\n    boolean = 'boolean',\n    date = 'date',\n    date_range = 'date_range',\n    encrypted = 'encrypted',\n    extended = 'extended',\n    numeric = 'numeric',\n    text = 'text'\n}\n\nexport enum AttributeType {\n    advanced = 'advanced',\n    advanced_link = 'advanced_link',\n    simple = 'simple',\n    simple_link = 'simple_link',\n    tree = 'tree'\n}\n\nexport enum FormElementTypes {\n    field = 'field',\n    layout = 'layout'\n}\n\nexport enum RecordFilterCondition {\n    BEGIN_WITH = 'BEGIN_WITH',\n    BETWEEN = 'BETWEEN',\n    CLASSIFIED_IN = 'CLASSIFIED_IN',\n    CONTAINS = 'CONTAINS',\n    END_AFTER = 'END_AFTER',\n    END_BEFORE = 'END_BEFORE',\n    END_ON = 'END_ON',\n    END_WITH = 'END_WITH',\n    EQUAL = 'EQUAL',\n    GREATER_THAN = 'GREATER_THAN',\n    IS_EMPTY = 'IS_EMPTY',\n    IS_NOT_EMPTY = 'IS_NOT_EMPTY',\n    LAST_MONTH = 'LAST_MONTH',\n    LESS_THAN = 'LESS_THAN',\n    NEXT_MONTH = 'NEXT_MONTH',\n    NOT_CLASSIFIED_IN = 'NOT_CLASSIFIED_IN',\n    NOT_CONTAINS = 'NOT_CONTAINS',\n    NOT_EQUAL = 'NOT_EQUAL',\n    START_AFTER = 'START_AFTER',\n    START_BEFORE = 'START_BEFORE',\n    START_ON = 'START_ON',\n    TODAY = 'TODAY',\n    TOMORROW = 'TOMORROW',\n    VALUES_COUNT_EQUAL = 'VALUES_COUNT_EQUAL',\n    VALUES_COUNT_GREATER_THAN = 'VALUES_COUNT_GREATER_THAN',\n    VALUES_COUNT_LOWER_THAN = 'VALUES_COUNT_LOWER_THAN',\n    YESTERDAY = 'YESTERDAY'\n}\n\nexport enum RecordFilterOperator {\n    AND = 'AND',\n    CLOSE_BRACKET = 'CLOSE_BRACKET',\n    OPEN_BRACKET = 'OPEN_BRACKET',\n    OR = 'OR'\n}\n\nexport enum SortOrder {\n    asc = 'asc',\n    desc = 'desc'\n}\n\nexport enum ViewSizes {\n    BIG = 'BIG',\n    MEDIUM = 'MEDIUM',\n    SMALL = 'SMALL'\n}\n\nexport enum ViewTypes {\n    cards = 'cards',\n    list = 'list',\n    timeline = 'timeline'\n}\n\nexport interface Pagination {\n    limit: number;\n    offset: number;\n}\n\nexport interface RecordFilterInput {\n    field?: string | null;\n    value?: string | null;\n    condition?: RecordFilterCondition | null;\n    operator?: RecordFilterOperator | null;\n    treeId?: string | null;\n}\n\nexport interface RecordSortInput {\n    field?: string | null;\n    order: SortOrder;\n}\n\nexport interface TreeElementInput {\n    id: string;\n    library: string;\n}\n\nexport interface ValueBatchInput {\n    attribute?: string | null;\n    id_value?: string | null;\n    value?: string | null;\n    metadata?: any | null;\n}\n\nexport interface ValueInput {\n    id_value?: string | null;\n    value?: string | null;\n    metadata?: (ValueMetadataInput | null)[] | null;\n    version?: (ValueVersionInput | null)[] | null;\n}\n\nexport interface ValueMetadataInput {\n    name: string;\n    value?: string | null;\n}\n\nexport interface ValueVersionInput {\n    name: string;\n    value: string;\n}\n\nexport interface ViewDisplayInput {\n    type: ViewTypes;\n    size: ViewSizes;\n}\n\nexport interface ViewInput {\n    id?: string | null;\n    library: string;\n    display: ViewDisplayInput;\n    shared: boolean;\n    label?: any | null;\n    description?: any | null;\n    color?: string | null;\n    filters?: RecordFilterInput[] | null;\n    sort?: RecordSortInput | null;\n    settings?: ViewSettingsInput[] | null;\n}\n\nexport interface ViewSettingsInput {\n    name: string;\n    value?: any | null;\n}\n\n//==============================================================\n// END Enums and Input Objects\n//==============================================================\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\n\nimport {GET_ATTRIBUTES_BY_LIB_attributes_list_StandardAttribute_embedded_fields} from '_gqlTypes/GET_ATTRIBUTES_BY_LIB';\nimport {\n    AttributeFormat,\n    AttributeType,\n    RecordFilterCondition,\n    RecordFilterOperator,\n    ViewSizes,\n    ViewTypes\n} from '_gqlTypes/globalTypes';\nimport {RecordIdentity, RecordIdentity_whoAmI} from '_gqlTypes/RecordIdentity';\nimport {TREE_NODE_CHILDREN_treeNodeChildren_list_permissions} from '_gqlTypes/TREE_NODE_CHILDREN';\nimport {\n    ILibraryDetailExtendedAttributeParentLinkedLibrary,\n    ILibraryDetailExtendedAttributeParentLinkedTree\n} from '../graphQL/queries/libraries/getLibraryDetailExtendQuery';\nimport {IGetViewListSettings, IGetViewListSort} from '../graphQL/queries/views/getViewsListQuery';\n\nexport interface ISystemTranslation {\n    [lang: string]: string;\n}\n\nexport interface ILibrary {\n    id: string;\n    label: ISystemTranslation;\n    gqlNames: {\n        query: string;\n        filter: string;\n        searchableFields: string;\n    };\n}\n\nexport enum LinkedType {\n    library = 'library',\n    tree = 'tree'\n}\n\nexport type FilePreview = {\n    tiny: string;\n    small: string;\n    medium: string;\n    big: string;\n    huge: string;\n    pages: string;\n} | null;\n\nexport interface IItemBase {\n    fields: {[x: string]: any};\n    whoAmI: RecordIdentity_whoAmI;\n    index: number;\n}\n\nexport type IItem = IItemBase;\n\nexport interface IRecordIdentityWhoAmI extends RecordIdentity_whoAmI {\n    [x: string]: any;\n    index?: number;\n}\n\nexport enum PreviewAttributes {\n    tiny = 'tiny',\n    small = 'small',\n    medium = 'medium',\n    big = 'big',\n    huge = 'huge',\n    pages = 'pages'\n}\n\nexport enum PreviewSize {\n    small = 'small',\n    medium = 'medium',\n    big = 'big'\n}\n\nexport enum AvailableLanguage {\n    en = 'en',\n    fr = 'fr'\n}\n\nexport enum FilterTypes {\n    filter = 'filter',\n    separator = 'separator'\n}\n\nexport interface IFilterSeparatorCommon {\n    key: number;\n    id: string;\n}\n\nexport enum FilterType {\n    ATTRIBUTE = 'ATTRIBUTE',\n    TREE = 'TREE',\n    LIBRARY = 'LIBRARY'\n}\n\nexport interface IFilter {\n    type: FilterType;\n    index: number; // use to sort the filters\n    key: string; // attribute / tree key\n    value: {value: boolean | string | number | null | IDateRangeValue; label?: string};\n    active: boolean;\n    condition: AttributeConditionType | TreeConditionFilter | ThroughConditionFilter;\n}\n\nexport interface IFilterAttribute extends IFilter {\n    attribute: IAttribute; // Put the attribute in the filter to avoid having to fetch them multiple times\n    parentTreeLibrary?: IFilterLibrary; // on tree library attribute\n}\n\nexport interface IFilterTree extends IFilter {\n    tree: {id: string; label?: ISystemTranslation | null};\n}\n\n// on library's tree\nexport interface IFilterLibrary extends IFilter {\n    library: {id: string; label?: ISystemTranslation | null};\n    parentAttribute: IAttribute;\n}\n\nexport enum OperatorFilter {\n    AND = 'AND',\n    OR = 'OR',\n    OPEN_BRACKET = 'OPEN_BRACKET',\n    CLOSE_BRACKET = 'CLOSE_BRACKET'\n}\n\nexport enum TreeConditionFilter {\n    CLASSIFIED_IN = 'CLASSIFIED_IN',\n    NOT_CLASSIFIED_IN = 'NOT_CLASSIFIED_IN'\n}\n\nexport enum ThroughConditionFilter {\n    THROUGH = 'THROUGH'\n}\n\n// We're exporting a const and not an enum to \"merge\" the enum coming\n// from Graphql types with some condition of our own\nexport const AttributeConditionFilter = {\n    ...RecordFilterCondition,\n    ...ThroughConditionFilter\n};\n\nexport type AttributeConditionType = ValueOf<typeof AttributeConditionFilter>;\n\nexport interface IQueryFilter {\n    field?: string;\n    value?: string;\n    condition?: RecordFilterCondition;\n    operator?: RecordFilterOperator;\n    treeId?: string;\n}\n\nexport enum OrderSearch {\n    DESC = 'DESC',\n    ASC = 'ASC'\n}\n\nexport interface IAttribute {\n    id: string;\n    library: string;\n    type: AttributeType;\n    format?: AttributeFormat;\n    label: SystemTranslation | null;\n    isLink: boolean;\n    isMultiple: boolean;\n    linkedLibrary?: ILibraryDetailExtendedAttributeParentLinkedLibrary;\n    linkedTree?: ILibraryDetailExtendedAttributeParentLinkedTree;\n    parentAttribute?: IAttribute;\n    embedded_fields?: Array<GET_ATTRIBUTES_BY_LIB_attributes_list_StandardAttribute_embedded_fields | null> | null;\n}\n\nexport type ExtendFormat = string | {[key: string]: ExtendFormat[]};\n\nexport interface IEmbeddedFieldData {\n    path: string;\n    format: AttributeFormat;\n}\n\nexport interface IFieldBase {\n    id: string;\n    library: string;\n    label: string;\n    key: string;\n    format?: AttributeFormat;\n    embeddedData?: IEmbeddedFieldData;\n    multipleValues?: boolean;\n}\n\nexport interface IFieldTypeBasic extends IFieldBase {\n    type: AttributeType.simple | AttributeType.advanced;\n    parentAttributeData?: IParentAttributeData;\n}\n\nexport interface IFieldTypeLink extends IFieldBase {\n    type: AttributeType.simple_link | AttributeType.advanced_link;\n    parentAttributeData?: IParentAttributeData;\n}\n\nexport interface IFieldTypeTree extends IFieldBase {\n    type: AttributeType.tree;\n    parentAttributeData?: IParentAttributeData;\n    recordLibrary?: string;\n    treeData?: ITreeData;\n}\n\nexport type IField = IFieldTypeBasic | IFieldTypeLink | IFieldTypeTree;\n\nexport interface IRecordEdition {\n    show: boolean;\n    item?: IItem;\n}\n\nexport interface IAccordionActive {\n    id: string;\n    library: string;\n    depth: number;\n}\n\nexport interface ISelectedAttribute {\n    id: string;\n    library: string;\n    path: string;\n    label: SystemTranslation | null;\n    type: AttributeType;\n    format?: AttributeFormat | null;\n    multiple_values: boolean;\n    parentAttributeData?: IParentAttributeData;\n    embeddedFieldData?: IEmbeddedFields;\n    treeData?: ITreeData;\n}\n\nexport interface IParentAttributeData {\n    id: string;\n    type: AttributeType;\n}\n\nexport interface ITreeData {\n    treeAttributeId: string;\n    libraryTypeName: string;\n}\n\nexport interface IEmbeddedFields {\n    id: string;\n    format: AttributeFormat;\n    label: ISystemTranslation;\n    embedded_fields: IEmbeddedFields[];\n}\n\nexport interface IGroupEmbeddedFields {\n    [attributeId: string]: {\n        embedded_fields: {[key: string]: IEmbeddedFields};\n    };\n}\n\nexport interface IAttributeSelected {\n    id: string;\n    library: string;\n    originAttributeData?: IParentAttributeData;\n    extendedData?: IEmbeddedFieldData;\n    treeData?: ITreeData;\n}\n\nexport interface ITree {\n    id: string;\n    label: ISystemTranslation | null;\n    libraries: Array<{\n        library: {\n            id: string;\n            label: ISystemTranslation | null;\n        };\n    }>;\n}\n\nexport interface INavigationPath {\n    id: string;\n    library: string;\n    label?: string | null;\n}\n\nexport enum NotificationType {\n    basic = 'basic',\n    success = 'success',\n    warning = 'warning',\n    error = 'error'\n}\n\nexport enum NotificationPriority {\n    low = 'low',\n    medium = 'medium',\n    high = 'high'\n}\n\nexport enum NotificationChannel {\n    trigger = 'trigger',\n    passive = 'passive'\n}\n\nexport interface IBaseNotification {\n    content: string;\n    type: NotificationType;\n}\n\nexport interface INotification extends IBaseNotification {\n    time?: number;\n    priority?: NotificationPriority;\n    channel?: NotificationChannel;\n}\n\nexport type ILang = string[];\n\nexport enum TypeSideItem {\n    filters = 'filters',\n    view = 'view'\n}\n\nexport interface IView {\n    id: string;\n    library?: string;\n    label: ISystemTranslation;\n    display: IViewDisplay;\n    owner: boolean;\n    shared: boolean;\n    description?: ISystemTranslation;\n    color?: string;\n    filters?: IFilter[];\n    settings?: IGetViewListSettings[];\n    sort?: IGetViewListSort;\n}\n\nexport interface IViewDisplay {\n    type: ViewTypes;\n    size: ViewSizes;\n}\n\nexport interface ILinkedElement {\n    id: string;\n    linkedType: LinkedType;\n}\n\nexport interface ITableCell {\n    value: any;\n    type: AttributeType;\n    format?: AttributeFormat;\n}\n\nexport interface ITableRow {\n    record: RecordIdentity_whoAmI;\n    [x: string]: ITableCell | IRecordIdentityWhoAmI | string;\n}\n\nexport interface ISharedStateSelectionSearch {\n    type: SharedStateSelectionType.search;\n    selected: ISharedSelected[];\n    allSelected?: boolean;\n}\n\nexport interface ISharedStateSelectionNavigation {\n    type: SharedStateSelectionType.navigation;\n    selected: ISharedSelected[];\n    parent: string;\n}\n\nexport type SharedStateSelection = ISharedStateSelectionSearch | ISharedStateSelectionNavigation;\n\nexport enum SharedStateSelectionType {\n    navigation,\n    search\n}\n\nexport interface ISharedSelected {\n    id: string;\n    library: string;\n    label: string;\n    nodeId?: string;\n}\n\nexport interface IToggleSelection {\n    selectionType: SharedStateSelectionType;\n    elementSelected: ISharedSelected;\n    parent?: string;\n}\n\nexport enum WorkspacePanels {\n    HOME = 'home',\n    LIBRARY = 'library',\n    TREE = 'tree'\n}\nexport interface IDateRangeValue {\n    from: string;\n    to: string;\n}\n\nexport type ValueOf<T> = T[keyof T];\n\nexport interface IPermissions {\n    [key: string]: boolean;\n}\n\nexport interface ITreeContentRecordAndChildren {\n    id: string;\n    record: RecordIdentity;\n    children?: ITreeContentRecordAndChildren[];\n    permissions: TREE_NODE_CHILDREN_treeNodeChildren_list_permissions;\n}\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {LockOutlined, SendOutlined, UserOutlined} from '@ant-design/icons';\nimport {Alert, Button, Card, Form, Input, Spin} from 'antd';\nimport React, {useCallback, useState} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport styles from './login.module.css';\n\ninterface ILoginProps {\n    url: string;\n    onSuccess: (token: string) => void;\n    message?: string;\n}\n\nconst extractValueFromEventAndThen = (next: any) => (event: any) => {\n    next(event.target.value);\n};\n\nconst processLogin = (\n    authUrl: string,\n    login: string,\n    password: string,\n    setIsLoading: (n: boolean) => void,\n    onSuccess: (n: string) => void,\n    setLoginError: (n: string) => void\n) => {\n    fetch(authUrl, {\n        method: 'POST',\n        headers: new Headers([['Content-Type', 'application/json']]),\n        body: JSON.stringify({\n            login,\n            password\n        })\n    })\n        .then(\n            response => {\n                if (response.ok) {\n                    return response;\n                } else {\n                    if (response.status === 401) {\n                        throw new Error('bad_credentials');\n                    }\n                    throw new Error('no_server_response');\n                }\n            },\n            error => {\n                throw new Error('no_server_response');\n            }\n        )\n        .then(response => response.json())\n        .then(data => {\n            setIsLoading(false);\n            onSuccess(data.token);\n        })\n        .catch(error => {\n            setIsLoading(false);\n            setLoginError(error.message);\n        });\n};\n\nconst Login = ({onSuccess, message, url}: ILoginProps): JSX.Element => {\n    const {t} = useTranslation();\n    const [login, setLogin] = useState('');\n    const [password, setPassword] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n    const [loginError, setLoginError] = useState('');\n    const authUrl = url;\n\n    const proceedAuth = useCallback(() => {\n        setIsLoading(true);\n        setLoginError('');\n        setTimeout(() => {\n            processLogin(authUrl, login, password, setIsLoading, onSuccess, setLoginError);\n        }, 2000);\n    }, [onSuccess, authUrl, login, password]);\n\n    return (\n        <>\n            <div className={styles.loginBackground} />\n            <div className={styles.loginContainer}>\n                <Card title={<h2>{t('login.header')}</h2>} style={{width: '30rem'}}>\n                    <Form>\n                        <Form.Item>\n                            <Input\n                                prefix={<UserOutlined />}\n                                type=\"text\"\n                                name=\"email\"\n                                placeholder={t('login.email')}\n                                autoFocus\n                                value={login}\n                                onChange={extractValueFromEventAndThen(setLogin)}\n                            />\n                        </Form.Item>\n                        <Form.Item>\n                            <Input\n                                prefix={<LockOutlined />}\n                                type=\"password\"\n                                name=\"password\"\n                                placeholder={t('login.password')}\n                                value={password}\n                                onChange={extractValueFromEventAndThen(setPassword)}\n                            />\n                        </Form.Item>\n                        <Form.Item>\n                            {isLoading ? (\n                                <Alert\n                                    message={t('login.loading.header')}\n                                    description={t('login.loading.text')}\n                                    icon={<Spin />}\n                                    type=\"warning\"\n                                    showIcon\n                                />\n                            ) : (\n                                <Button\n                                    size=\"large\"\n                                    type=\"primary\"\n                                    loading={isLoading}\n                                    disabled={isLoading}\n                                    onClick={proceedAuth}\n                                    htmlType=\"submit\"\n                                    icon={<SendOutlined />}\n                                    block\n                                >\n                                    {t('login.submit')}\n                                </Button>\n                            )}\n                        </Form.Item>\n                    </Form>\n                    {loginError ? (\n                        <Alert\n                            message={t('login.apologize')}\n                            description={t('login.error.' + loginError)}\n                            type=\"error\"\n                            showIcon\n                        />\n                    ) : null}\n                    {message ? (\n                        <Alert message={t('login.apologize')} description={t(message)} type=\"warning\" showIcon />\n                    ) : null}\n                </Card>\n            </div>\n        </>\n    );\n};\nexport default Login;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport Login from './Login';\nexport default Login;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {createSlice, PayloadAction} from '@reduxjs/toolkit';\nimport {WorkspacePanels} from '_types/types';\n\nconst activePanelSlice = createSlice({\n    name: 'activePanel',\n    initialState: WorkspacePanels.HOME,\n    reducers: {\n        setActivePanel: (_, action: PayloadAction<WorkspacePanels>) => {\n            return action.payload;\n        }\n    }\n});\n\nexport const {setActivePanel} = activePanelSlice.actions;\n\nexport default activePanelSlice.reducer;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {CloseCircleFilled, MinusCircleFilled} from '@ant-design/icons';\nimport {Result} from 'antd';\nimport {PrimaryBtn} from 'components/app/StyledComponent/PrimaryBtn';\nimport React, {ReactNode} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {useHistory} from 'react-router-dom';\n\nexport enum ErrorDisplayTypes {\n    ERROR = 'error',\n    PERMISSION_ERROR = 'permission_error'\n}\n\ninterface IErrorProps {\n    message?: string;\n    type?: ErrorDisplayTypes;\n    actionButton?: ReactNode;\n    showActionButton?: boolean;\n}\n\nfunction ErrorDisplay({\n    message,\n    actionButton,\n    showActionButton = true,\n    type = ErrorDisplayTypes.ERROR\n}: IErrorProps): JSX.Element {\n    const {t} = useTranslation();\n    const history = useHistory();\n\n    const _handleBackHomeClick = () => history.replace('/');\n\n    const errorByType = {\n        [ErrorDisplayTypes.ERROR]: {\n            title: t('error.error_occurred'),\n            icon: <CloseCircleFilled color=\"red\" />,\n            message: '',\n            actionButton: null\n        },\n        [ErrorDisplayTypes.PERMISSION_ERROR]: {\n            title: t('error.access_denied'),\n            icon: <MinusCircleFilled color=\"red\" />,\n            message: t('error.access_denied_details'),\n            actionButton: showActionButton ? (\n                <PrimaryBtn onClick={_handleBackHomeClick}>{t('global.go_back_home')}</PrimaryBtn>\n            ) : null\n        }\n    };\n\n    return (\n        <Result\n            title={errorByType[type].title}\n            subTitle={message ?? errorByType[type].message}\n            status=\"error\"\n            icon={errorByType[type].icon}\n            extra={actionButton ?? errorByType[type].actionButton}\n        />\n    );\n}\n\nexport default ErrorDisplay;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {createSlice, PayloadAction} from '@reduxjs/toolkit';\nimport {TypeSideItem} from '_types/types';\nimport {IDisplaySide, IDisplayState} from './stateType';\n\nexport const displayInitialState: IDisplayState = {\n    side: {\n        visible: false,\n        type: TypeSideItem.filters\n    }\n};\n\nconst displaySlice = createSlice({\n    name: 'display',\n    initialState: displayInitialState,\n    reducers: {\n        setDisplaySide: (state, action: PayloadAction<IDisplaySide>) => {\n            state.side = action.payload;\n        }\n    }\n});\n\nexport const {setDisplaySide} = displaySlice.actions;\n\nexport default displaySlice.reducer;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {createSlice, PayloadAction} from '@reduxjs/toolkit';\nimport {GET_TREE_CONTENT_treeContent} from '_gqlTypes/GET_TREE_CONTENT';\nimport {INavigationState} from './stateType';\n\nexport const navigationInitialState: INavigationState = {\n    activeTree: '',\n    path: []\n};\n\nconst navigationSlice = createSlice({\n    name: 'display',\n    initialState: navigationInitialState,\n    reducers: {\n        setNavigationActiveTree: (state, action: PayloadAction<string>) => {\n            if (state.activeTree !== action.payload) {\n                state.activeTree = action.payload;\n                state.path = [];\n            }\n        },\n        setNavigationPath: (state, action: PayloadAction<GET_TREE_CONTENT_treeContent[]>) => {\n            state.path = action.payload;\n        }\n    }\n});\n\nexport const {setNavigationActiveTree, setNavigationPath} = navigationSlice.actions;\n\nexport default navigationSlice.reducer;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {createSlice, PayloadAction} from '@reduxjs/toolkit';\nimport {IBaseNotification, INotification, NotificationType} from '_types/types';\nimport {INotificationsState} from './stateType';\n\nexport const notificationsInitialState: INotificationsState = {\n    stack: [],\n    base: {\n        content: '',\n        type: NotificationType.basic\n    }\n};\n\nconst notificationsSlice = createSlice({\n    name: 'notifications',\n    initialState: notificationsInitialState,\n    reducers: {\n        setNotificationBase: (state, action: PayloadAction<IBaseNotification>) => {\n            state.base = action.payload;\n        },\n        setNotificationStack: (state, action: PayloadAction<INotification[]>) => {\n            state.stack = action.payload;\n        },\n        addNotification: (state, action: PayloadAction<INotification>) => {\n            state.stack = [...state.stack, action.payload];\n        }\n    }\n});\n\nexport const {setNotificationBase, setNotificationStack, addNotification} = notificationsSlice.actions;\n\nexport default notificationsSlice.reducer;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {IToggleSelection, SharedStateSelection, SharedStateSelectionType} from '_types/types';\n\nexport const toggleInSelection = (selection: SharedStateSelection, payload: IToggleSelection): SharedStateSelection => {\n    const isSelected = selection.selected.find(\n        elementSelected =>\n            elementSelected.id === payload.elementSelected.id &&\n            elementSelected.library === payload.elementSelected.library\n    );\n\n    if (isSelected) {\n        if (payload.selectionType === SharedStateSelectionType.navigation) {\n            return {\n                parent: payload.parent,\n                type: payload.selectionType,\n                selected: selection.selected.filter(\n                    elementSelected =>\n                        elementSelected.id !== payload.elementSelected.id ||\n                        elementSelected.library !== payload.elementSelected.library\n                )\n            };\n        } else if (payload.selectionType === SharedStateSelectionType.search) {\n            return {\n                allSelected: false,\n                type: payload.selectionType,\n                selected: selection.selected.filter(\n                    elementSelected =>\n                        elementSelected.id !== payload.elementSelected.id ||\n                        elementSelected.library !== payload.elementSelected.library\n                )\n            };\n        }\n    }\n    if (payload.selectionType === SharedStateSelectionType.navigation) {\n        return {\n            parent: payload.parent,\n            type: payload.selectionType,\n            selected: [...selection.selected, payload.elementSelected]\n        };\n    } else if (payload.selectionType === SharedStateSelectionType.search) {\n        return {\n            allSelected: false,\n            type: payload.selectionType,\n            selected: [...selection.selected, payload.elementSelected]\n        };\n    }\n\n    return selection;\n};\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {createSlice, PayloadAction} from '@reduxjs/toolkit';\nimport {\n    ISharedSelected,\n    ISharedStateSelectionSearch,\n    IToggleSelection,\n    SharedStateSelection,\n    SharedStateSelectionType\n} from '_types/types';\nimport {ISelectionState} from './stateType';\nimport {toggleInSelection} from './utils';\n\nexport const selectionInitialState: ISelectionState = {\n    selection: {\n        type: SharedStateSelectionType.search,\n        selected: []\n    },\n    searchSelection: {\n        type: SharedStateSelectionType.search,\n        selected: []\n    }\n};\n\nconst selectionSlice = createSlice({\n    name: 'filters',\n    initialState: selectionInitialState,\n    reducers: {\n        setSelection: (state, action: PayloadAction<SharedStateSelection>) => {\n            state.selection = action.payload;\n        },\n        resetSelection: state => {\n            state.selection.selected = [];\n            if (state.selection.type === SharedStateSelectionType.search && state.selection.allSelected) {\n                state.selection.allSelected = false;\n            }\n        },\n        setSelectionAllSelected: (state, action: PayloadAction<boolean>) => {\n            if (state.selection.type === SharedStateSelectionType.search) {\n                state.selection.allSelected = action.payload;\n            }\n        },\n        setSelectionToggleSelected: (state, action: PayloadAction<IToggleSelection>) => {\n            state.selection = toggleInSelection(state.selection, action.payload);\n        },\n        setSearchSelection: (state, action: PayloadAction<ISharedStateSelectionSearch>) => {\n            state.searchSelection = action.payload;\n        },\n        resetSearchSelection: state => {\n            state.searchSelection.selected = [];\n            state.searchSelection.allSelected = false;\n        },\n        setSelectionToggleSearchSelectionElement: (state, action: PayloadAction<ISharedSelected>) => {\n            const newSearchSelection = toggleInSelection(state.searchSelection, {\n                selectionType: SharedStateSelectionType.search,\n                elementSelected: action.payload\n            });\n\n            if (newSearchSelection.type === SharedStateSelectionType.search) {\n                state.searchSelection = newSearchSelection;\n            }\n        }\n    }\n});\n\nexport const {\n    setSelection,\n    resetSelection,\n    setSelectionAllSelected,\n    setSelectionToggleSelected,\n    setSearchSelection,\n    resetSearchSelection,\n    setSelectionToggleSearchSelectionElement\n} = selectionSlice.actions;\n\nexport default selectionSlice.reducer;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {configureStore} from '@reduxjs/toolkit';\nimport {TypedUseSelectorHook, useDispatch, useSelector} from 'react-redux';\nimport activePanelReducer from './activePanel';\nimport displayReducer from './display';\nimport navigationReducer from './navigation';\nimport notificationsReducer from './notifications';\nimport selectionReducer from './selection';\n\nconst store = configureStore({\n    reducer: {\n        display: displayReducer,\n        selection: selectionReducer,\n        navigation: navigationReducer,\n        notification: notificationsReducer,\n        activePanel: activePanelReducer\n    }\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type RootDispatch = typeof store.dispatch;\n\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\nexport const useAppDispatch = () => useDispatch<RootDispatch>();\n\nexport default store;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {Button} from 'antd';\nimport {ButtonProps} from 'antd/lib/button';\nimport React from 'react';\nimport styled from 'styled-components';\nimport themingVar from '../../../themingVar';\n\ntype PrimaryBtnCompProps = Omit<ButtonProps, 'type'>;\n\nconst PrimaryBtnComp = (props: PrimaryBtnCompProps) => (\n    <Button type=\"primary\" {...props}>\n        {props.children}\n    </Button>\n);\n\nexport const PrimaryBtn = styled(PrimaryBtnComp)`\n    &&& {\n        border: ${themingVar['@leav-primary-btn-border']};\n        font-weight: 600;\n\n        &&&&:hover {\n            background: ${themingVar['@leav-primary-btn-bg-hover']};\n        }\n\n        &&&&:active {\n            box-shadow: 0px 3px 6px #5858584d;\n            background: ${themingVar['@leav-primary-btn-bg-hover']};\n        }\n\n        &&&&:focus {\n            box-shadow: 0px 3px 6px #5858584d;\n            background: ${themingVar['@btn-primary-bg']};\n        }\n    }\n`;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport ErrorDisplay from './ErrorDisplay';\nexport default ErrorDisplay;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {\n    ApolloClient,\n    ApolloLink,\n    ApolloProvider,\n    defaultDataIdFromObject,\n    InMemoryCache,\n    ServerError\n} from '@apollo/client';\nimport {onError} from '@apollo/link-error';\nimport {Spin} from 'antd';\nimport {createUploadLink} from 'apollo-upload-client';\nimport ErrorDisplay from 'components/shared/ErrorDisplay';\nimport useGraphqlPossibleTypes from 'hooks/useGraphqlPossibleTypes';\nimport React, {ReactNode} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {addNotification} from 'redux/notifications';\nimport {useAppDispatch} from 'redux/store';\nimport {INotification, NotificationChannel, NotificationType} from '_types/types';\n\ninterface IApolloHandlerProps {\n    token: string;\n    onTokenInvalid: (message?: string) => void;\n    children: ReactNode;\n}\n\nexport const UNAUTHORIZED = 'Unauthorized';\n\nfunction ApolloHandler({token, children, onTokenInvalid}: IApolloHandlerProps): JSX.Element {\n    const {t} = useTranslation();\n    const dispatch = useAppDispatch();\n\n    const {loading, error, possibleTypes} = useGraphqlPossibleTypes(process.env.REACT_APP_API_URL, token);\n\n    if (loading) {\n        return <Spin />;\n    }\n\n    if (error) {\n        if (error.includes(UNAUTHORIZED)) {\n            onTokenInvalid();\n            return <></>;\n        }\n\n        return <ErrorDisplay message={error} />;\n    }\n\n    // This function will catch the errors from the exchange between Apollo Client and the server.\n    const _handleApolloError = onError(({graphQLErrors, networkError}) => {\n        if (graphQLErrors) {\n            graphQLErrors.map(({message, locations, path, extensions}) => {\n                const errorContent = t('error.graphql_error_occurred', {\n                    error: message,\n                    interpolation: {escapeValue: false}\n                });\n\n                let notification: INotification;\n\n                switch (extensions.code) {\n                    case 'INTERNAL_ERROR':\n                        notification = {\n                            content: errorContent,\n                            type: NotificationType.error,\n                            channel: NotificationChannel.trigger\n                        };\n                        break;\n                    case 'VALIDATION_ERROR':\n                    case 'PERMISSION_ERROR':\n                    default:\n                        notification = {\n                            content: errorContent,\n                            type: NotificationType.error,\n                            channel: NotificationChannel.passive\n                        };\n                        break;\n                }\n\n                dispatch(addNotification(notification));\n\n                const errorMessage = `[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`;\n                return errorMessage;\n            });\n        }\n\n        if (networkError) {\n            if ((networkError as ServerError).statusCode === 401) {\n                onTokenInvalid();\n            }\n\n            const errorContent = t('error.network_error_occurred');\n\n            const notification: INotification = {\n                content: errorContent,\n                type: NotificationType.error,\n                channel: NotificationChannel.trigger\n            };\n\n            dispatch(addNotification(notification));\n        }\n\n        if (!graphQLErrors && !networkError) {\n            const errorContent = t('error.error_occurred');\n\n            const notification: INotification = {\n                content: errorContent,\n                type: NotificationType.error,\n                channel: NotificationChannel.trigger\n            };\n\n            dispatch(addNotification(notification));\n        }\n    });\n\n    const gqlClient = new ApolloClient({\n        link: ApolloLink.from([\n            _handleApolloError,\n            createUploadLink({\n                uri: process.env.REACT_APP_API_URL,\n                headers: {\n                    Authorization: token\n                }\n            })\n        ]),\n        cache: new InMemoryCache({\n            // For records, ID might sometimes be in the _id property to avoid messing up\n            // with the ID attribute (eg. in the getRecordPropertiesQuery).\n            // Thus, we have to force Apollo to use the _id field for cache key.\n            dataIdFromObject(responseObject) {\n                // If it's not a record, just use regular caching\n                if (\n                    !possibleTypes ||\n                    !possibleTypes.Record.includes(responseObject.__typename) ||\n                    (!responseObject._id && !responseObject.id)\n                ) {\n                    return defaultDataIdFromObject(responseObject);\n                }\n\n                const idValue = responseObject._id || responseObject.id;\n                return `${responseObject.__typename}:${String(idValue)}`;\n            },\n            typePolicies: {\n                EmbeddedAttribute: {\n                    keyFields: false\n                },\n                RecordIdentity: {\n                    keyFields: ['id', 'library', ['id']]\n                },\n                Library: {\n                    fields: {\n                        gqlNames: {\n                            merge(existing, incoming) {\n                                return {...existing, ...incoming};\n                            }\n                        }\n                    }\n                },\n                Query: {\n                    fields: {\n                        treeContent: {\n                            merge(existing, incoming) {\n                                return [...incoming];\n                            }\n                        }\n                    }\n                },\n                Form: {\n                    keyFields: ['id', 'library', ['id']]\n                },\n                UserData: {\n                    keyFields: ['global'],\n                    fields: {\n                        data: {\n                            merge(existing, incoming) {\n                                return {...existing, ...incoming};\n                            }\n                        }\n                    }\n                },\n                Tree: {\n                    fields: {\n                        permissions: {\n                            merge: true\n                        }\n                    }\n                },\n                TreeNode: {\n                    fields: {\n                        children: {\n                            merge(existing, incoming) {\n                                return incoming;\n                            }\n                        }\n                    }\n                },\n                RecordForm: {\n                    keyFields: ['id', 'recordId', 'library', ['id']]\n                },\n                FormElementWithValues: {\n                    keyFields: false\n                }\n            },\n            possibleTypes\n        })\n    });\n\n    return <ApolloProvider client={gqlClient}>{children}</ApolloProvider>;\n}\n\nexport default ApolloHandler;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport ApolloHandler from './ApolloHandler';\nexport default ApolloHandler;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {PossibleTypesMap} from '@apollo/client';\nimport {IntrospectionResultData} from 'apollo-cache-inmemory';\nimport {useCallback, useEffect, useState} from 'react';\nimport {UNAUTHORIZED} from 'components/app/ApolloHandler/ApolloHandler';\n\nexport interface IUseGraphqlPossibleTypes {\n    loading: boolean;\n    error: string;\n    possibleTypes: PossibleTypesMap;\n}\n\nexport default function (url: string, token: string): IUseGraphqlPossibleTypes {\n    const [isLoading, setIsLoading] = useState<boolean>(true);\n    const [error, setError] = useState<string>();\n    const [possibleTypes, setPossibleTypes] = useState<PossibleTypesMap>();\n\n    const _fetchPossibleTypes = useCallback(async () => {\n        // If the server sends a 401, resData will not contain the schema.\n        // The try and catch allows to handle the situation.\n        try {\n            const res = await fetch(url, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    Authorization: token\n                },\n                body: JSON.stringify({\n                    variables: {},\n                    query: `\n                  {\n                    __schema {\n                      types {\n                        kind\n                        name\n                        possibleTypes {\n                          name\n                        }\n                      }\n                    }\n                  }\n                `\n                })\n            });\n\n            if (res.status === 401) {\n                throw new Error(UNAUTHORIZED);\n            }\n\n            const resData: IntrospectionResultData = (await res.json()).data;\n            const fetchedPossibleTypes: PossibleTypesMap = resData.__schema.types.reduce((allTypes, type) => {\n                if (!type.possibleTypes) {\n                    return allTypes;\n                }\n\n                return {\n                    ...allTypes,\n                    [type.name]: type.possibleTypes.map(possibleType => possibleType.name)\n                };\n            }, {});\n\n            setIsLoading(false);\n            setPossibleTypes(fetchedPossibleTypes);\n        } catch (err) {\n            setIsLoading(false);\n            setError(String(err));\n        }\n    }, [url, token]);\n\n    useEffect(() => {\n        _fetchPossibleTypes();\n    }, [_fetchPossibleTypes]);\n\n    return {\n        loading: isLoading,\n        error,\n        possibleTypes\n    };\n}\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {gql} from 'graphql-tag';\n\nconst recordIdentityFragment = gql`\n    fragment RecordIdentity on Record {\n        id\n        whoAmI {\n            id\n            label\n            color\n            library {\n                id\n                label\n                gqlNames {\n                    query\n                    type\n                }\n            }\n            preview {\n                tiny\n                small\n                medium\n                big\n                huge\n                pages\n            }\n        }\n    }\n`;\n\nexport default recordIdentityFragment;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport gql from 'graphql-tag';\nimport recordIdentityFragment from 'graphQL/queries/records/recordIdentityFragment';\n\nexport const getMe = gql`\n    ${recordIdentityFragment}\n\n    query ME {\n        me {\n            login\n            ...RecordIdentity\n        }\n    }\n`;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport gql from 'graphql-tag';\nimport {\n    GET_LIBRARY_DETAIL_EXTENDED_libraries_list_attributes,\n    GET_LIBRARY_DETAIL_EXTENDED_libraries_list_linkedTrees,\n    GET_LIBRARY_DETAIL_EXTENDED_libraries_list_permissions\n} from '_gqlTypes/GET_LIBRARY_DETAIL_EXTENDED';\n\nexport interface IActiveLibrary {\n    id: string;\n    name: string;\n    filter: string;\n    attributes: GET_LIBRARY_DETAIL_EXTENDED_libraries_list_attributes[];\n    gql: {\n        searchableFields: string;\n        query: string;\n        type: string;\n    };\n    trees: GET_LIBRARY_DETAIL_EXTENDED_libraries_list_linkedTrees[];\n    permissions: GET_LIBRARY_DETAIL_EXTENDED_libraries_list_permissions;\n}\n\nexport interface IGetActiveLibrary {\n    activeLib: IActiveLibrary;\n}\n\nexport const getActiveLibrary = gql`\n    query GET_ACTIVE_LIBRARY {\n        activeLib @client {\n            id @client\n            name @client\n            filter @client\n            attributes @client\n            gql @client {\n                searchableFields @client\n                query @client\n                type @client\n            }\n            trees\n            permissions @client {\n                access_library @client\n                access_record @client\n                create_record @client\n                edit_record @client\n                delete_record @client\n            }\n        }\n    }\n`;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {useQuery} from '@apollo/client';\nimport {useCallback, useMemo} from 'react';\nimport {\n    getActiveLibrary,\n    IActiveLibrary,\n    IGetActiveLibrary\n} from '../../graphQL/queries/cache/activeLibrary/getActiveLibraryQuery';\n\nexport const initialActiveLibrary = {\n    id: '',\n    name: '',\n    filter: '',\n    gql: {\n        searchableFields: '',\n        query: '',\n        type: ''\n    },\n    attributes: [],\n    trees: [],\n    permissions: {\n        access_library: true,\n        access_record: true,\n        create_record: true,\n        edit_record: true,\n        delete_record: true\n    }\n};\n\nexport const useActiveLibrary = (): [IActiveLibrary | undefined, (newActiveLibrary: IActiveLibrary) => void] => {\n    const {data, client} = useQuery<IGetActiveLibrary>(getActiveLibrary);\n\n    const activeLibrary: IActiveLibrary | undefined = useMemo(() => data?.activeLib ?? initialActiveLibrary, [data]);\n\n    const updateActiveLibrary = useCallback(\n        (newActiveLibrary: IActiveLibrary) => {\n            client.writeQuery({\n                query: getActiveLibrary,\n                data: {\n                    activeLib: {\n                        ...newActiveLibrary,\n                        trees: newActiveLibrary.trees.filter(tree => tree.permissions.access_tree)\n                    }\n                }\n            });\n        },\n        [client]\n    );\n\n    return [activeLibrary, updateActiveLibrary];\n};\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport gql from 'graphql-tag';\nimport {ILang} from '../../../../_types/types';\n\nexport interface IGetLangAll {\n    lang: ILang;\n    availableLangs: string[];\n    defaultLang: string;\n}\n\nexport const getLangAll = gql`\n    query GET_LANG_ALL {\n        lang @client\n        availableLangs @client\n        defaultLang @client\n    }\n`;\n\nexport interface IGetLang {\n    lang: ILang;\n}\n\nexport const getLang = gql`\n    query GET_LANG {\n        lang @client\n    }\n`;\n\nexport interface IGetAvailableLangs {\n    lang: ILang;\n    availableLangs: string[];\n}\n\nexport const getAvailableLangs = gql`\n    query GET_AVAILABLE_LANGS {\n        availableLangs @client\n        lang @client\n    }\n`;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {useQuery} from '@apollo/client';\nimport {useCallback, useMemo} from 'react';\nimport {getLangAll, IGetLangAll} from '../../graphQL/queries/cache/lang/getLangQuery';\n\nexport type UseLangValue = [IGetLangAll, (langInfo: Partial<IGetLangAll>) => void];\n\nexport const useLang = (): UseLangValue => {\n    const {data, client} = useQuery<IGetLangAll>(getLangAll);\n\n    const lang = useMemo(() => data?.lang || [], [data]);\n    const availableLangs = useMemo(() => data?.availableLangs || [], [data]);\n    const defaultLang = data?.defaultLang || '';\n\n    const updateLang = useCallback(\n        (langInfo: Partial<IGetLangAll>) => {\n            const newLang = langInfo?.lang || lang;\n            const newAvailableLangs = langInfo?.availableLangs || availableLangs;\n            const newDefaultLang = langInfo?.defaultLang || defaultLang;\n\n            client.writeQuery({\n                query: getLangAll,\n                data: {lang: newLang, availableLangs: newAvailableLangs, defaultLang: newDefaultLang}\n            });\n        },\n        [client, lang, availableLangs, defaultLang]\n    );\n\n    return [\n        {\n            lang,\n            availableLangs,\n            defaultLang\n        },\n        updateLang\n    ];\n};\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport gql from 'graphql-tag';\n\nexport interface IGetUser {\n    userId: string;\n    userName: string;\n    userPermissions: any;\n}\n\nexport const getUser = gql`\n    query GET_USER {\n        userId @client\n        userName @client\n        userPermissions @client\n    }\n`;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {useQuery} from '@apollo/client';\nimport {useCallback} from 'react';\nimport {getUser, IGetUser} from '../../graphQL/queries/cache/user/userQuery';\n\nexport const useUser = (): [IGetUser | undefined, (newUser: IGetUser) => void] => {\n    const {data: user, client} = useQuery<IGetUser>(getUser);\n\n    const updateUser = useCallback(\n        (newUser: IGetUser) => {\n            client.writeQuery<IGetUser>({\n                query: getUser,\n                data: newUser\n            });\n        },\n        [client]\n    );\n\n    return [user, updateUser];\n};\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {AttributeFormat, SortOrder, ViewSizes, ViewTypes} from '_gqlTypes/globalTypes';\nimport {IView} from '../_types/types';\n\nexport const selectionColumn = 'selection-column';\nexport const infosCol = 'infos';\n\nexport const defaultNotificationsTime = 5000;\n\nexport const panelSize = '22.5rem';\n\nexport const defaultSort = {\n    field: 'id',\n    order: SortOrder.asc\n};\n\nexport const initialColumnsLimit = 5;\n\nexport const viewSettingsField = 'fields';\n\nexport const attributeExtendedKey = 'extended';\n\nexport const defaultView: IView = {\n    id: 'default-view',\n    label: {fr: 'Vue par défaut', en: 'Default view'},\n    owner: true,\n    display: {type: ViewTypes.list, size: ViewSizes.MEDIUM},\n    shared: false,\n    filters: [],\n    sort: defaultSort\n};\n\nexport const formatNotUsingCondition = [AttributeFormat.boolean];\n\nexport const defaultLinkAttributeFilterFormat = AttributeFormat.text;\n\nexport const treeNavigationPageSize = 20;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {gql} from 'graphql-tag';\nimport {i18n, TFunction} from 'i18next';\nimport {pick} from 'lodash';\nimport {AttributeFormat, AttributeType, ViewSizes} from '_gqlTypes/globalTypes';\nimport {RecordIdentity} from '_gqlTypes/RecordIdentity';\nimport {defaultLinkAttributeFilterFormat, infosCol} from '../constants/constants';\nimport {GET_ATTRIBUTES_BY_LIB_attributes_list} from '../_gqlTypes/GET_ATTRIBUTES_BY_LIB';\nimport {\n    AttributeConditionFilter,\n    AttributeConditionType,\n    AvailableLanguage,\n    ExtendFormat,\n    IAttribute,\n    IDateRangeValue,\n    INotification,\n    ISelectedAttribute,\n    NotificationPriority,\n    PreviewAttributes,\n    PreviewSize\n} from '../_types/types';\n\nexport function getRecordIdentityCacheKey(libId: string, recordId: string): string {\n    return `recordIdentity/${libId}/${recordId}`;\n}\n\nexport function getFileUrl(filepath: string) {\n    const url = process.env.REACT_APP_CORE_URL;\n    return url + filepath;\n}\n\nexport const getInvertColor = (color: string): string => {\n    const hexColor = color.replace(/#/g, '');\n    const r = parseInt(hexColor.substr(0, 2), 16);\n    const g = parseInt(hexColor.substr(2, 2), 16);\n    const b = parseInt(hexColor.substr(4, 2), 16);\n    const yiq = (r * 299 + g * 587 + b * 114) / 1000;\n\n    return yiq >= 128 ? '#000000' : '#FFFFFF';\n};\n\nconst hslToHex = (h: number, s: number, l: number): string => {\n    const [r, g, b] = hslToRgb(h, s, l);\n    const toHex = (x: number) => {\n        const hex = x.toString(16);\n        return hex.length === 1 ? '0' + hex : hex;\n    };\n    return `#${toHex(r)}${toHex(g)}${toHex(b)}`;\n};\n\nconst hslToRgb = (h: number, s: number, l: number): number[] => {\n    h /= 360;\n    s /= 100;\n    l /= 100;\n    let r: number;\n    let g: number;\n    let b: number;\n    if (s === 0) {\n        r = g = b = l; // achromatic\n    } else {\n        const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        const p = 2 * l - q;\n        r = hue2rgb(p, q, h + 1 / 3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1 / 3);\n    }\n\n    return [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255)];\n};\n\nconst hue2rgb = (p: number, q: number, t: number) => {\n    if (t < 0) {\n        t += 1;\n    }\n    if (t > 1) {\n        t -= 1;\n    }\n    if (t < 1 / 6) {\n        return p + (q - p) * 6 * t;\n    }\n    if (t < 1 / 2) {\n        return q;\n    }\n    if (t < 2 / 3) {\n        return p + (q - p) * (2 / 3 - t) * 6;\n    }\n    return p;\n};\n\nexport const stringToColor = (str = '', format = 'hsl', saturation = 30, luminosity = 80): string => {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n        // eslint-disable-next-line no-bitwise\n        hash = str.charCodeAt(i) + ((hash << 5) - hash);\n    }\n\n    const hue = hash % 360;\n    switch (format) {\n        case 'hex':\n            return hslToHex(hue, saturation, luminosity);\n        case 'rgb':\n            const [r, g, b] = hslToRgb(hue, saturation, luminosity);\n            return `rgb(${r},${g},${b})`;\n        case 'hsl':\n            return `hsl(${hue}, ${saturation}%, ${luminosity}%)`;\n        default:\n            return `hsl(${hue}, ${saturation}%, ${luminosity}%)`;\n    }\n};\n\nexport function getRandomColor() {\n    const letters = '0123456789ABCDEF';\n    let color = '#';\n    for (let i = 0; i < 6; i++) {\n        color += letters[Math.floor(Math.random() * 16)];\n    }\n    return color;\n}\n\nexport const getPreviewSizes = (): PreviewAttributes[] => {\n    return Object.keys(PreviewAttributes).filter(previewAttribute => !(parseInt(previewAttribute, 10) + 1)) as any;\n};\n\nexport const localizedTranslation = (translations: any, availableLanguages: AvailableLanguage[] | string[]): string => {\n    if (!translations) {\n        return '';\n    }\n\n    const userLang = availableLanguages[0];\n    const fallbackLang = availableLanguages[1] ? availableLanguages[1] : '';\n\n    return translations[userLang] || translations[fallbackLang] || translations[Object.keys(translations)[0]] || '';\n};\n\nexport const getSysTranslationQueryLanguage = (i18next: i18n): AvailableLanguage[] => {\n    const userLang = i18next.language\n        ? i18next.language.split('-')[0]\n        : AvailableLanguage[process.env.REACT_APP_DEFAULT_LANG as AvailableLanguage] ?? AvailableLanguage.en;\n    const fallbackLang = i18next.options?.fallbackLng ? (i18next as any).options.fallbackLng[0] : '';\n\n    return [userLang, fallbackLang];\n};\n\nexport const checkTypeIsLink = (type: AttributeType) => {\n    return type === AttributeType.simple_link || type === AttributeType.advanced_link;\n};\n\nexport const displayTypeToPreviewSize = (displayType: ViewSizes) => {\n    switch (displayType) {\n        case ViewSizes.SMALL:\n            return PreviewSize.small;\n        case ViewSizes.MEDIUM:\n            return PreviewSize.medium;\n        case ViewSizes.BIG:\n            return PreviewSize.big;\n        default:\n            return PreviewSize.small;\n    }\n};\n\nexport const getSortFieldByAttributeType = (attributeId: string, type: AttributeType) => {\n    attributeId = infosCol === attributeId ? 'id' : attributeId;\n\n    switch (type) {\n        case AttributeType.tree:\n        case AttributeType.simple_link:\n            const subFieldByDefault = 'id';\n            return `${attributeId}.${subFieldByDefault}`;\n        case AttributeType.advanced_link:\n        default:\n            return attributeId;\n    }\n};\n\nexport const getExtendedFormat = (itemContent: any): ExtendFormat[] => {\n    return Object.keys(itemContent).map(key =>\n        typeof itemContent[key] === 'object' && itemContent[key] !== null\n            ? {[key]: getExtendedFormat(itemContent[key])}\n            : key\n    );\n};\n\nexport const paginationOptions = [5, 10, 20, 50, 100];\n\nexport const getFieldsKeyFromAttribute = (attribute: ISelectedAttribute) => {\n    if (attribute?.format === AttributeFormat.extended && attribute.path) {\n        return `${attribute.path}`;\n    } else if (attribute.parentAttributeData) {\n        return attribute.parentAttributeData.type === AttributeType.tree\n            ? `${attribute.parentAttributeData.id}.${attribute.library}.${attribute.id}`\n            : `${attribute.parentAttributeData.id}.${attribute.id}`;\n    }\n\n    return `${attribute.id}`;\n};\n\nexport const reorder = (list: any[], startIndex: number, endIndex: number) => {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n\n    return result.filter(element => !!element);\n};\n\nexport const flatArray = (arrays: any[]): any[] => {\n    return [].concat.apply([], arrays);\n};\n\nexport const getUniqueId = () => {\n    return '_' + Math.random().toString(36).substr(2, 9);\n};\n\nexport const sortNotificationByPriority = (a: INotification, b: INotification) => {\n    switch (a.priority) {\n        case NotificationPriority.low:\n            switch (b.priority) {\n                case NotificationPriority.low:\n                    return 0;\n                case NotificationPriority.medium:\n                    return 1;\n                case NotificationPriority.high:\n                default:\n                    return 1;\n            }\n        case NotificationPriority.medium:\n            switch (b.priority) {\n                case NotificationPriority.low:\n                    return -1;\n                case NotificationPriority.medium:\n                    return 0;\n                case NotificationPriority.high:\n                default:\n                    return 1;\n            }\n        case NotificationPriority.high:\n            switch (b.priority) {\n                case NotificationPriority.low:\n                    return -1;\n                case NotificationPriority.medium:\n                    return -1;\n                case NotificationPriority.high:\n                default:\n                    return 0;\n            }\n    }\n};\n\nexport const isAttributeSelected = (path: string, selectedAttributes: ISelectedAttribute[]): boolean =>\n    selectedAttributes.findIndex(selectedAttribute => selectedAttribute.path === path) !== -1;\n\nexport const attributeToSelectedAttribute = (\n    attribute: GET_ATTRIBUTES_BY_LIB_attributes_list,\n    otherProps: Pick<ISelectedAttribute, 'path' | 'library' | 'parentAttributeData' | 'embeddedFieldData'>\n): ISelectedAttribute => ({\n    ...pick(attribute, ['id', 'label', 'format', 'type', 'multiple_values']),\n    ...otherProps\n});\n\n/**\n * Cloning gql template tag because some apollo tools like query validation and codegen won't be happy if we use\n * interpolation in template strings. With a different tag name, the query won't be parsed by these tools\n * thus they won't complain about it.\n * It works exactly the same at runtime.\n */\nexport const gqlUnchecked = gql;\n\nexport const getAttributeFromKey = (key: string, library: string, attributes: IAttribute[]): IAttribute | undefined => {\n    const splitKey = key.split('.');\n\n    // Get root attribute by first key part\n    const rootAttribute = attributes.find(attr => attr.library === library && attr.id === splitKey[0]);\n\n    if (!rootAttribute) {\n        return;\n    }\n\n    if (rootAttribute.type === AttributeType.simple || rootAttribute.type === AttributeType.advanced) {\n        return rootAttribute;\n    }\n\n    if (checkTypeIsLink(rootAttribute.type)) {\n        if (splitKey[1]) {\n            const linkedAttribute = attributes.find(\n                attr => attr.library === rootAttribute?.linkedLibrary?.id && attr.id === splitKey[1]\n            );\n\n            return {...linkedAttribute, parentAttribute: {...rootAttribute, format: defaultLinkAttributeFilterFormat}};\n        }\n\n        return rootAttribute;\n    }\n\n    if (rootAttribute.type === AttributeType.tree) {\n        const [, libraryId, linkedTreeAttribute] = splitKey;\n\n        if (!libraryId && !linkedTreeAttribute) {\n            // Only root attribute => search on tree\n            return {...rootAttribute, format: defaultLinkAttributeFilterFormat};\n        } else if (libraryId && !linkedTreeAttribute) {\n            return rootAttribute;\n        }\n\n        const linkedAttribute = attributes.find(attr => attr.library === splitKey[1] && attr.id === splitKey[2]);\n\n        return linkedAttribute;\n    }\n};\n\nexport const defaultFilterConditionByAttributeFormat = (format: AttributeFormat): AttributeConditionType => {\n    switch (format) {\n        case AttributeFormat.boolean:\n        case AttributeFormat.date:\n        case AttributeFormat.numeric:\n            return AttributeConditionFilter.EQUAL;\n        case AttributeFormat.encrypted:\n            return AttributeConditionFilter.IS_EMPTY;\n        case AttributeFormat.text:\n        case AttributeFormat.date_range:\n        case AttributeFormat.extended:\n        default:\n            return AttributeConditionFilter.CONTAINS;\n    }\n};\n\nexport const defaultFilterValueByAttributeFormat = (format: AttributeFormat): string | boolean | number => {\n    switch (format) {\n        case AttributeFormat.text:\n            return '';\n        case AttributeFormat.boolean:\n            return true;\n        case AttributeFormat.date:\n        case AttributeFormat.numeric:\n            return 0;\n        default:\n            return null;\n    }\n};\n\nexport const getTreeRecordKey = (record: RecordIdentity): string => `${record.whoAmI.library.id}/${record.id}`;\n\nexport const getLibraryLink = (libId: string) => `/library/${libId}`;\nexport const getTreeLink = (treeId: string) => `/tree/${treeId}`;\n\nexport const stringifyDateRangeValue = (value: IDateRangeValue, t: TFunction): string =>\n    t('record_edition.date_range_value', {\n        ...value,\n        interpolation: {escapeValue: false}\n    });\n","export default __webpack_public_path__ + \"static/media/svgEllipsis.773f43ad.svg\";","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport React from 'react';\nimport styled from 'styled-components';\nimport IconSvg from '../svg/svgEllipsis.svg';\n\nconst CustomImg = styled.img`\n    transform: translate(0px, -1px);\n`;\n\nexport const IconEllipsisHorizontal = () => {\n    return (\n        <div>\n            <CustomImg src={IconSvg} alt=\"icon ellipsis\" />\n        </div>\n    );\n};\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {Dropdown, Menu, Tooltip} from 'antd';\nimport Button, {ButtonSize} from 'antd/lib/button';\nimport {SizeType} from 'antd/lib/config-provider/SizeContext';\nimport {IconEllipsisHorizontal} from 'assets/icons/IconEllipsisHorizontal';\nimport React from 'react';\nimport {useTranslation} from 'react-i18next';\nimport styled, {CSSObject} from 'styled-components';\n\nexport interface IFloatingMenuActionWithBtn extends IFloatingMenuActionCommon {\n    button?: React.ReactNode;\n}\n\nexport interface IFloatingMenuActionWithIcon extends IFloatingMenuActionCommon {\n    icon?: React.ReactNode;\n    onClick?: () => void;\n    size?: ButtonSize;\n}\n\nexport interface IFloatingMenuActionCommon {\n    title: string;\n}\n\nexport type FloatingMenuAction = IFloatingMenuActionWithIcon | IFloatingMenuActionWithBtn;\n\nexport interface IFloatingMenuProps {\n    actions: FloatingMenuAction[];\n    moreActions?: IFloatingMenuActionWithIcon[];\n    size?: SizeType;\n    style?: CSSObject;\n}\n\nconst FloatingMenuWrapper = styled.div<{overrideStyle?: CSSObject}>`\n    position: absolute;\n    z-index: 1000;\n    right: 0;\n    top: 0;\n\n    display: flex;\n    justify-content: space-around;\n    padding: 0.5rem;\n\n    & > * {\n        margin: 0 0.2rem;\n        box-shadow: 0px 2px 6px #0000002f;\n    }\n\n    ${p => p.overrideStyle}\n`;\n\nfunction FloatingMenu({actions, moreActions, style, size = 'small'}: IFloatingMenuProps): JSX.Element {\n    const {t} = useTranslation();\n\n    return (\n        <FloatingMenuWrapper\n            data-testid=\"floating-menu\"\n            className=\"floating-menu\"\n            style={style}\n            onClick={e => {\n                e.stopPropagation();\n                e.preventDefault();\n            }}\n        >\n            {actions.map(action => (\n                <Tooltip title={action.title} key={action.title}>\n                    {(action as IFloatingMenuActionWithBtn).button ?? (\n                        <Button\n                            shape=\"circle\"\n                            size={(action as IFloatingMenuActionWithIcon).size}\n                            icon={(action as IFloatingMenuActionWithIcon).icon}\n                            onClick={(action as IFloatingMenuActionWithIcon).onClick}\n                        />\n                    )}\n                </Tooltip>\n            ))}\n            {moreActions?.length && (\n                <Tooltip title={t('items_list.table.actions-tooltips.more')}>\n                    <Dropdown\n                        placement=\"bottomRight\"\n                        overlay={\n                            <Menu className=\"floating-menu-overlay\">\n                                {moreActions.map(moreAction => (\n                                    <Menu.Item key={moreAction.title}>\n                                        {moreAction.icon} {moreAction.title}\n                                    </Menu.Item>\n                                ))}\n                            </Menu>\n                        }\n                    >\n                        <Button\n                            size={size}\n                            icon={<IconEllipsisHorizontal />}\n                            aria-label={t('floating_menu.more_actions')}\n                            title={t('floating_menu.more_actions')}\n                            shape=\"circle\"\n                        />\n                    </Dropdown>\n                </Tooltip>\n            )}\n        </FloatingMenuWrapper>\n    );\n}\n\nexport default FloatingMenu;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport FloatingMenu from './FloatingMenu';\nexport default FloatingMenu;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport gql from 'graphql-tag';\n\nexport const saveUserData = gql`\n    mutation SAVE_USER_DATA($key: String!, $value: Any, $global: Boolean!) {\n        saveUserData(key: $key, value: $value, global: $global) {\n            global\n            data\n        }\n    }\n`;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport gql from 'graphql-tag';\n\nexport const getUserDataQuery = gql`\n    query GET_USER_DATA($keys: [String!]!, $global: Boolean) {\n        userData(keys: $keys, global: $global) {\n            global\n            data\n        }\n    }\n`;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport gql from 'graphql-tag';\n\nexport const getLibrariesListQuery = gql`\n    query GET_LIBRARIES_LIST {\n        libraries {\n            list {\n                id\n                label\n                gqlNames {\n                    query\n                    filter\n                    searchableFields\n                }\n                permissions {\n                    access_library\n                    access_record\n                    create_record\n                    edit_record\n                    delete_record\n                }\n            }\n        }\n    }\n`;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\n\nimport {QueryResult, useQuery} from '@apollo/client';\nimport {getLibrariesListQuery} from 'graphQL/queries/libraries/getLibrariesListQuery';\nimport {useState} from 'react';\nimport {GET_LIBRARIES_LIST} from '_gqlTypes/GET_LIBRARIES_LIST';\n\nexport type IUseGetLibrariesListQueryHook = QueryResult<GET_LIBRARIES_LIST>;\n\nexport interface IUseGetLibrariesListQueryHookParams {\n    onlyAllowed?: boolean;\n}\n\nexport default function useGetLibrariesListQuery({\n    onlyAllowed = true\n}: IUseGetLibrariesListQueryHookParams = {}): IUseGetLibrariesListQueryHook {\n    const [queryData, setQueryData] = useState<GET_LIBRARIES_LIST>();\n\n    const query = useQuery<GET_LIBRARIES_LIST>(getLibrariesListQuery, {\n        onCompleted: data => {\n            const cleanData: GET_LIBRARIES_LIST = {\n                ...data,\n                libraries: {\n                    list: data.libraries.list.filter(lib => !onlyAllowed || lib.permissions.access_library)\n                }\n            };\n\n            setQueryData(cleanData);\n        }\n    });\n\n    return {...query, loading: query.loading || (!query.loading && typeof queryData === undefined), data: queryData};\n}\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {StarFilled, StarOutlined} from '@ant-design/icons';\nimport React from 'react';\nimport styled from 'styled-components';\n\ninterface IFavoriteStarProps {\n    isFavorite: boolean;\n    onToggle: (wasFavorite: boolean) => void;\n    hoverTrigger?: JSX.Element | string;\n}\n\nconst Star = styled.span<Pick<IFavoriteStarProps, 'isFavorite' | 'hoverTrigger'>>`\n    cursor: pointer;\n    display: ${p => (p.isFavorite ? 'inline' : 'none')};\n\n    ${p =>\n        p.hoverTrigger\n            ? `${p.hoverTrigger}:hover > & {\n        display: inline;\n    }`\n            : ''}\n`;\n\nfunction FavoriteStar({isFavorite, onToggle, hoverTrigger}: IFavoriteStarProps): JSX.Element {\n    const _handleClick = e => {\n        e.stopPropagation();\n        onToggle(isFavorite);\n    };\n\n    return (\n        <Star onClick={_handleClick} isFavorite={isFavorite} hoverTrigger={hoverTrigger} data-testid=\"favorite-star\">\n            {isFavorite ? <StarFilled /> : <StarOutlined />}\n        </Star>\n    );\n}\n\nexport default FavoriteStar;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {InboxOutlined, KeyOutlined, LoadingOutlined} from '@ant-design/icons';\nimport {useMutation, useQuery} from '@apollo/client';\nimport {Checkbox, message, Result, Select, Space, Steps, Table, Typography, Upload} from 'antd';\nimport Modal from 'antd/lib/modal/Modal';\nimport React, {useReducer} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {addNotification} from 'redux/notifications';\nimport {useAppDispatch} from 'redux/store';\nimport styled from 'styled-components';\nimport * as XLSX from 'xlsx';\nimport {AttributeType} from '_gqlTypes/globalTypes';\nimport {getAttributesByLibQuery} from '../../../../graphQL/queries/attributes/getAttributesByLib';\nimport {importExcel} from '../../../../graphQL/queries/import/importExcel';\nimport {useLang} from '../../../../hooks/LangHook/LangHook';\nimport {localizedTranslation} from '../../../../utils';\nimport {GET_ATTRIBUTES_BY_LIB, GET_ATTRIBUTES_BY_LIBVariables} from '../../../../_gqlTypes/GET_ATTRIBUTES_BY_LIB';\nimport {IMPORT, IMPORTVariables} from '../../../../_gqlTypes/IMPORT';\nimport {INotification, NotificationChannel, NotificationPriority, NotificationType} from '../../../../_types/types';\n\nconst {Step} = Steps;\nconst {Dragger} = Upload;\nconst {Title} = Typography;\n\nexport interface IImportModalProps {\n    open: boolean;\n    onClose: () => void;\n    library: string;\n}\n\nenum ImportSteps {\n    SELECT_FILE = 0,\n    CONFIG = 1,\n    PROCESSING = 2,\n    DONE = 3\n}\n\nconst Content = styled.div`\n    margin-top: 2em;\n`;\n\nconst CenteredWrapper = styled.div`\n    text-align: center;\n`;\n\nexport interface IInitialState {\n    data: Array<{[attributeName: string]: any}>;\n    mapping: string[];\n    key: string | null;\n    file: File | null;\n    keyChecked: boolean;\n    currentStep: ImportSteps;\n    okBtn: boolean;\n}\n\nconst initialState: IInitialState = {\n    data: [],\n    mapping: [],\n    key: null,\n    file: null,\n    keyChecked: false,\n    currentStep: ImportSteps.SELECT_FILE,\n    okBtn: false\n};\n\nfunction ImportModal({onClose, open, library}: IImportModalProps): JSX.Element {\n    const {t} = useTranslation();\n\n    const importReducer = (state: IInitialState, newValues: Partial<IInitialState>) => {\n        return {\n            ...state,\n            ...newValues\n        };\n    };\n    const [state, dispatch] = useReducer(importReducer, initialState);\n    const {data, mapping, key, file, keyChecked, currentStep, okBtn} = state;\n\n    const appDispatch = useAppDispatch();\n\n    const [{lang}] = useLang();\n\n    // Retrieve attributes list\n    const {data: attrsList} = useQuery<GET_ATTRIBUTES_BY_LIB, GET_ATTRIBUTES_BY_LIBVariables>(getAttributesByLibQuery, {\n        variables: {\n            library\n        }\n    });\n\n    const attributes =\n        attrsList?.attributes?.list\n            .filter(a => a.type === AttributeType.simple || a.type === AttributeType.advanced)\n            .map(a => ({id: a.id, label: localizedTranslation(a?.label, lang) ?? a.id})) || [];\n\n    const [runImport, {error: importError}] = useMutation<IMPORT, IMPORTVariables>(importExcel, {\n        fetchPolicy: 'no-cache',\n        onCompleted: () => {\n            dispatch({currentStep: ImportSteps.DONE});\n        },\n        onError: error => {\n            const notification: INotification = {\n                type: NotificationType.error,\n                priority: NotificationPriority.high,\n                channel: NotificationChannel.passive,\n                content: `${t('error.error_occurred')}: ${error.message}`\n            };\n\n            appDispatch(addNotification(notification));\n\n            dispatch({currentStep: ImportSteps.DONE});\n        }\n    });\n\n    const _runImport = async () => {\n        dispatch({currentStep: ImportSteps.PROCESSING});\n\n        if (file) {\n            await runImport({\n                variables: {\n                    file,\n                    library,\n                    mapping,\n                    key: keyChecked ? key : null\n                }\n            });\n        }\n    };\n\n    const _setFileData = content => {\n        const workbook = XLSX.read(content, {type: 'binary'});\n        let d = [];\n\n        for (const sheet in workbook.Sheets) {\n            if (workbook.Sheets.hasOwnProperty(sheet)) {\n                // Use the sheet_to_json method to convert excel to json data\n                d = XLSX.utils.sheet_to_json(workbook.Sheets[sheet]);\n                break; // because only the first sheet is taken\n            }\n        }\n\n        if (!d.length) {\n            message.error(t('import.empty_file'));\n            return false;\n        }\n\n        dispatch({data: d, mapping: Array(Object.keys(d[0]).length).fill(null)});\n        return true;\n    };\n\n    const draggerProps = {\n        name: 'file',\n        multiple: false,\n        accept: '.xlsx',\n        showUploadList: false,\n        beforeUpload: fileToImport => {\n            const reader = new FileReader();\n            reader.readAsBinaryString(fileToImport);\n\n            reader.onload = e => {\n                const res = _setFileData(reader.result);\n                if (res) {\n                    dispatch({file: fileToImport});\n                }\n                dispatch({okBtn: res});\n            };\n\n            return true;\n        }\n    };\n\n    const _onOk = async () => {\n        switch (currentStep) {\n            case ImportSteps.SELECT_FILE:\n                dispatch({okBtn: false});\n                dispatch({currentStep: ImportSteps.CONFIG});\n                break;\n            case ImportSteps.CONFIG:\n                await _runImport();\n                break;\n            default:\n                onClose();\n                return;\n        }\n    };\n\n    const validateButtonLabel = t(\n        currentStep === ImportSteps.SELECT_FILE\n            ? 'import.file_configuration'\n            : currentStep === ImportSteps.CONFIG\n            ? 'import.start'\n            : 'global.close'\n    );\n\n    const _onMappingSelect = (idx, id) => {\n        mapping[idx] = id;\n        dispatch({\n            mapping: [...mapping],\n            okBtn: mapping.length === Object.keys(data[0]).length && (!keyChecked || !!key),\n            key: !!key && mapping.includes(key) ? key : null,\n            keyChecked: !!key && mapping.includes(key)\n        });\n    };\n\n    const _onClear = idx => {\n        mapping[idx] = null;\n        dispatch({mapping: [...mapping]});\n    };\n\n    return (\n        <Modal\n            title={t('import.title')}\n            okText={validateButtonLabel}\n            cancelText={t('global.cancel')}\n            onOk={_onOk}\n            onCancel={onClose}\n            visible={open}\n            closable\n            width=\"90vw\"\n            centered\n            confirmLoading={currentStep === ImportSteps.PROCESSING}\n            bodyStyle={{height: 'calc(100vh - 10rem)'}}\n            okButtonProps={{disabled: !okBtn, className: 'submit-btn'}}\n            cancelButtonProps={{disabled: currentStep === ImportSteps.DONE}}\n            destroyOnClose={true}\n        >\n            <Steps current={currentStep} style={{marginBottom: '2em'}}>\n                <Step title={t('import.file_selection')}></Step>\n                <Step title={t('import.file_configuration')}></Step>\n                <Step\n                    title={t('import.in_progress')}\n                    icon={currentStep === ImportSteps.PROCESSING ? <LoadingOutlined /> : null}\n                ></Step>\n                <Step title={t('import.import_done')} status={importError ? 'error' : undefined}></Step>\n            </Steps>\n            <Content>\n                {currentStep === ImportSteps.SELECT_FILE && (\n                    <Dragger {...draggerProps}>\n                        <p className=\"ant-upload-drag-icon\">\n                            <InboxOutlined />\n                        </p>\n                        <p className=\"ant-upload-text\">{file?.name || t('import.file_selection_instruction')}</p>\n                    </Dragger>\n                )}\n                {currentStep === ImportSteps.CONFIG && (\n                    <Space direction=\"vertical\" align=\"center\">\n                        <Table\n                            title={() => <Title level={5}>{t('import.data_overview')}</Title>}\n                            bordered={false}\n                            tableLayout={'fixed'}\n                            columns={Object.keys(data[0]).map((s, i) => ({title: s, dataIndex: s}))}\n                            dataSource={data.slice(0, 3).map((r, i) => ({...r, key: i}))}\n                            size=\"small\"\n                            pagination={{hideOnSinglePage: true}}\n                        />\n                        <Table\n                            title={() => <Title level={5}>{t('import.mapping')}</Title>}\n                            tableLayout={'fixed'}\n                            bordered={false}\n                            columns={Object.keys(data[0]).map(s => ({title: s, dataIndex: s}))}\n                            dataSource={[\n                                Object.assign(\n                                    {key: 'mapping_attributes'},\n                                    ...Object.keys(data[0]).map((col, idx) => ({\n                                        [col]: (\n                                            <Select\n                                                style={{width: '100%'}}\n                                                placeholder={t('import.attribute_selection')}\n                                                value={mapping[idx]}\n                                                allowClear\n                                                onClear={() => _onClear(idx)}\n                                                onSelect={id => _onMappingSelect(idx, id)}\n                                            >\n                                                {attributes.map(a => (\n                                                    <Select.Option key={a.id} value={a.id}>\n                                                        {a.label || a.id}\n                                                    </Select.Option>\n                                                ))}\n                                            </Select>\n                                        )\n                                    }))\n                                )\n                            ]}\n                            size=\"small\"\n                            pagination={{hideOnSinglePage: true}}\n                        />\n                        <Space direction=\"vertical\" align=\"center\">\n                            <Space direction=\"horizontal\" align=\"baseline\">\n                                <Checkbox\n                                    defaultChecked={keyChecked}\n                                    checked={keyChecked}\n                                    onChange={e =>\n                                        dispatch({\n                                            keyChecked: e.target.checked,\n                                            okBtn:\n                                                mapping.length === Object.keys(data[0]).length &&\n                                                (!e.target.checked || !!key)\n                                        })\n                                    }\n                                />\n                                <Title level={5}>\n                                    {t('import.key')} <KeyOutlined />\n                                </Title>\n                            </Space>\n                            <Select\n                                disabled={!keyChecked}\n                                placeholder={'Select a key'}\n                                value={!!key ? key : undefined}\n                                onSelect={k =>\n                                    dispatch({\n                                        key: k,\n                                        okBtn: mapping.length === Object.keys(data[0]).length && (!keyChecked || !!k)\n                                    })\n                                }\n                            >\n                                {attributes\n                                    .filter(a => mapping.includes(a.id))\n                                    .map(a => {\n                                        return (\n                                            <Select.Option key={a.id} value={a.id}>\n                                                {a.label || a.id}\n                                            </Select.Option>\n                                        );\n                                    })}\n                            </Select>\n                        </Space>\n                    </Space>\n                )}\n                {currentStep === ImportSteps.PROCESSING && (\n                    <CenteredWrapper data-test-id=\"processing\">{t('global.processing') + '...'}</CenteredWrapper>\n                )}\n                {currentStep === ImportSteps.DONE && (\n                    <Result\n                        status={importError ? 'error' : 'success'}\n                        title={importError ? t('import.import_failure') : t('import.import_success')}\n                    />\n                )}\n            </Content>\n        </Modal>\n    );\n}\n\nexport default ImportModal;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport FavoriteStar from './FavoriteStar';\nexport default FavoriteStar;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {gql} from '@apollo/client';\n\nexport const getAttributesByLibQuery = gql`\n    query GET_ATTRIBUTES_BY_LIB($library: String!) {\n        attributes(filters: {libraries: [$library]}) {\n            list {\n                id\n                type\n                format\n                label\n                multiple_values\n                ... on LinkAttribute {\n                    linked_library {\n                        id\n                    }\n                }\n                ... on TreeAttribute {\n                    linked_tree {\n                        id\n                        label\n                    }\n                }\n                ... on StandardAttribute {\n                    embedded_fields {\n                        id\n                        format\n                        label\n                    }\n                }\n            }\n        }\n    }\n`;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport gql from 'graphql-tag';\n\nexport const importExcel = gql`\n    mutation IMPORT_EXCEL($file: Upload!, $library: String!, $mapping: [String]!, $key: String) {\n        importExcel(file: $file, library: $library, mapping: $mapping, key: $key)\n    }\n`;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport ImportModal from './ImportModal';\nexport default ImportModal;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {CloudUploadOutlined, DatabaseOutlined} from '@ant-design/icons';\nimport {useMutation, useQuery} from '@apollo/client';\nimport {PageHeader, Table} from 'antd';\nimport {ColumnsType} from 'antd/lib/table';\nimport FloatingMenu from 'components/shared/FloatingMenu';\nimport {FloatingMenuAction} from 'components/shared/FloatingMenu/FloatingMenu';\nimport {saveUserData} from 'graphQL/mutations/userData/saveUserData';\nimport {getUserDataQuery} from 'graphQL/queries/userData/getUserData';\nimport {useLang} from 'hooks/LangHook/LangHook';\nimport useGetLibrariesListQuery from 'hooks/useGetLibrariesListQuery/useGetLibrariesListQuery';\nimport React, {useEffect, useState} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {Link} from 'react-router-dom';\nimport {setNotificationBase} from 'redux/notifications';\nimport {useAppDispatch} from 'redux/store';\nimport styled from 'styled-components';\nimport {getLibraryLink, localizedTranslation} from 'utils';\nimport {GET_USER_DATA, GET_USER_DATAVariables} from '_gqlTypes/GET_USER_DATA';\nimport {SAVE_USER_DATA, SAVE_USER_DATAVariables} from '../../../_gqlTypes/SAVE_USER_DATA';\nimport {IBaseNotification, NotificationType} from '../../../_types/types';\nimport ErrorDisplay from '../../shared/ErrorDisplay';\nimport FavoriteStar from '../FavoriteStar';\nimport ImportModal from './ImportModal';\n\nexport const FAVORITE_LIBRARIES_KEY = 'favorites_libraries_ids';\n\ninterface IListItem {\n    key: string;\n    id: string;\n    label: string;\n    isFavorite: boolean;\n}\n\nconst Wrapper = styled.div`\n    & table .label-cell:not(:hover) .floating-menu {\n        display: none;\n    }\n`;\n\nfunction LibrariesList(): JSX.Element {\n    const {t} = useTranslation();\n    const [{lang}] = useLang();\n\n    const dispatch = useAppDispatch();\n    const [importActiveLibrary, setImportActiveLibrary] = useState<string>();\n\n    const librariesListQuery = useGetLibrariesListQuery();\n    const userDataQuery = useQuery<GET_USER_DATA, GET_USER_DATAVariables>(getUserDataQuery, {\n        variables: {keys: [FAVORITE_LIBRARIES_KEY]}\n    });\n\n    const [updateFavoritesMutation] = useMutation<SAVE_USER_DATA, SAVE_USER_DATAVariables>(saveUserData);\n\n    useEffect(() => {\n        const baseNotification: IBaseNotification = {\n            content: t('notification.base-message'),\n            type: NotificationType.basic\n        };\n        dispatch(setNotificationBase(baseNotification));\n    }, [t, dispatch]);\n\n    if (librariesListQuery.error || userDataQuery.error) {\n        return <ErrorDisplay message={librariesListQuery.error?.message || userDataQuery.error?.message} />;\n    }\n\n    const libraries = librariesListQuery.data?.libraries?.list ?? [];\n    const favoriteIds = userDataQuery.data?.userData?.data[FAVORITE_LIBRARIES_KEY] ?? [];\n\n    const list: IListItem[] = libraries\n        .map(library => ({\n            key: library.id,\n            id: library.id,\n            label: localizedTranslation(library.label, lang),\n            isFavorite: favoriteIds.includes(library.id)\n        }))\n        .sort((a, b) => Number(b.isFavorite) - Number(a.isFavorite));\n\n    const columns: ColumnsType<IListItem> = [\n        {\n            title: t('home.label'),\n            dataIndex: 'label',\n            key: 'label',\n            className: 'label-cell',\n            render: (label, item) => {\n                const actions: FloatingMenuAction[] = [\n                    {\n                        title: t('import.title'),\n                        icon: <CloudUploadOutlined size={20} />,\n                        onClick: () => setImportActiveLibrary(item.id)\n                    }\n                ];\n\n                return (\n                    <Link\n                        to={getLibraryLink(item.id)}\n                        style={{display: 'inline-block', width: '100%', color: 'inherit'}}\n                    >\n                        <DatabaseOutlined /> {label}\n                        <FloatingMenu style={{right: '28px'}} actions={actions} />\n                    </Link>\n                );\n            }\n        },\n        {\n            dataIndex: 'isFavorite',\n            key: 'isFavorite',\n            width: 20,\n            render: (isFavorite, item) => {\n                const _handleFavoriteToggle = async (wasFavorite: boolean) => {\n                    const {id} = item;\n\n                    await updateFavoritesMutation({\n                        variables: {\n                            key: FAVORITE_LIBRARIES_KEY,\n                            value: wasFavorite ? favoriteIds.filter(e => e !== id) : favoriteIds.concat([id]),\n                            global: false\n                        }\n                    });\n                };\n\n                return (\n                    <FavoriteStar\n                        isFavorite={isFavorite}\n                        onToggle={_handleFavoriteToggle}\n                        hoverTrigger=\".ant-table-cell\"\n                    />\n                );\n            }\n        }\n    ];\n\n    return (\n        <Wrapper className=\"wrapper-page\">\n            <PageHeader\n                avatar={{icon: <DatabaseOutlined />, shape: 'square', style: {background: 'none', color: '#000'}}}\n                title={t('home.libraries')}\n            />\n            <Table\n                bordered\n                columns={columns}\n                dataSource={list}\n                loading={librariesListQuery.loading}\n                pagination={false}\n            />\n            {importActiveLibrary && (\n                <ImportModal\n                    library={importActiveLibrary}\n                    open={!!importActiveLibrary}\n                    onClose={() => setImportActiveLibrary('')}\n                />\n            )}\n        </Wrapper>\n    );\n}\n\nexport default LibrariesList;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport gql from 'graphql-tag';\n\nexport const getTreeListQuery = gql`\n    query GET_TREE_LIST_QUERY($treeId: ID) {\n        trees(filters: {id: $treeId}) {\n            list {\n                id\n                label\n                libraries {\n                    library {\n                        id\n                        label\n                    }\n                }\n                permissions {\n                    access_tree\n                    edit_children\n                }\n            }\n        }\n    }\n`;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\n\nimport {QueryResult, useQuery} from '@apollo/client';\nimport {getTreeListQuery} from 'graphQL/queries/trees/getTreeListQuery';\nimport {useState} from 'react';\nimport {GET_TREE_LIST_QUERY, GET_TREE_LIST_QUERYVariables} from '_gqlTypes/GET_TREE_LIST_QUERY';\n\nexport type IUseGetTreesListQueryHook = QueryResult<GET_TREE_LIST_QUERY>;\n\nexport interface IUseGetTreesListQueryHookParams {\n    treeId?: string;\n    onlyAllowed?: boolean;\n    skip?: boolean;\n}\n\nexport default function useGetTreesListQuery(params: IUseGetTreesListQueryHookParams = {}): IUseGetTreesListQueryHook {\n    const [queryData, setQueryData] = useState<GET_TREE_LIST_QUERY>();\n    const {treeId, onlyAllowed = true, skip = false} = params;\n\n    const variables: GET_TREE_LIST_QUERYVariables = {};\n\n    if (treeId) {\n        variables.treeId = treeId;\n    }\n\n    const query = useQuery<GET_TREE_LIST_QUERY>(getTreeListQuery, {\n        variables,\n        skip,\n        onCompleted: data => {\n            const cleanData: GET_TREE_LIST_QUERY = {\n                ...data,\n                trees: {\n                    list: data.trees.list.filter(tree => !onlyAllowed || tree.permissions.access_tree)\n                }\n            };\n\n            setQueryData(cleanData);\n        }\n    });\n\n    return {...query, loading: query.loading || (!query.loading && typeof queryData === undefined), data: queryData};\n}\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {ShareAltOutlined} from '@ant-design/icons';\nimport {useMutation, useQuery} from '@apollo/client';\nimport {PageHeader, Table} from 'antd';\nimport {ColumnsType} from 'antd/lib/table';\nimport {saveUserData} from 'graphQL/mutations/userData/saveUserData';\nimport {getUserDataQuery} from 'graphQL/queries/userData/getUserData';\nimport {useLang} from 'hooks/LangHook/LangHook';\nimport useGetTreesListQuery from 'hooks/useGetTreesListQuery/useGetTreesListQuery';\nimport {default as React, useEffect} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {Link} from 'react-router-dom';\nimport {setNotificationBase} from 'redux/notifications';\nimport {useAppDispatch} from 'redux/store';\nimport {getTreeLink, localizedTranslation} from 'utils';\nimport {GET_USER_DATA, GET_USER_DATAVariables} from '_gqlTypes/GET_USER_DATA';\nimport {SAVE_USER_DATA, SAVE_USER_DATAVariables} from '../../../_gqlTypes/SAVE_USER_DATA';\nimport {IBaseNotification, NotificationType} from '../../../_types/types';\nimport ErrorDisplay from '../../shared/ErrorDisplay';\nimport FavoriteStar from '../FavoriteStar';\n\nexport const FAVORITE_TREES_KEY = 'favorites_trees_ids';\n\ninterface IListItem {\n    key: string;\n    id: string;\n    label: string;\n    isFavorite: boolean;\n}\n\nfunction TreeList(): JSX.Element {\n    const {t} = useTranslation();\n    const [{lang}] = useLang();\n\n    const dispatch = useAppDispatch();\n\n    const treeListQuery = useGetTreesListQuery();\n    const userDataQuery = useQuery<GET_USER_DATA, GET_USER_DATAVariables>(getUserDataQuery, {\n        variables: {keys: [FAVORITE_TREES_KEY]}\n    });\n\n    const [updateFavoritesMutation] = useMutation<SAVE_USER_DATA, SAVE_USER_DATAVariables>(saveUserData, {\n        ignoreResults: true\n    });\n\n    useEffect(() => {\n        const baseNotification: IBaseNotification = {\n            content: t('notification.base-message'),\n            type: NotificationType.basic\n        };\n        dispatch(setNotificationBase(baseNotification));\n    }, [t, dispatch]);\n\n    if (treeListQuery.error || userDataQuery.error) {\n        return <ErrorDisplay message={treeListQuery.error.message || userDataQuery.error.message} />;\n    }\n\n    const treeList = treeListQuery.data?.trees?.list ?? [];\n    const favoriteIds = userDataQuery.data?.userData?.data[FAVORITE_TREES_KEY] ?? [];\n\n    const list: IListItem[] = treeList\n        .map(tree => ({\n            key: tree.id,\n            id: tree.id,\n            label: localizedTranslation(tree.label, lang),\n            isFavorite: !!favoriteIds.includes(tree.id)\n        }))\n        .sort((a, b) => Number(b.isFavorite) - Number(a.isFavorite));\n\n    const columns: ColumnsType<IListItem> = [\n        {\n            title: t('home.label'),\n            dataIndex: 'label',\n            key: 'label',\n            render: (label, item) => {\n                return (\n                    <Link to={getTreeLink(item.id)} style={{display: 'inline-block', width: '100%', color: 'inherit'}}>\n                        <ShareAltOutlined /> {label}\n                    </Link>\n                );\n            }\n        },\n        {\n            dataIndex: 'isFavorite',\n            key: 'isFavorite',\n            width: 20,\n            render: (isFavorite, item) => {\n                const _handleFavoriteToggle = async (wasFavorite: boolean) => {\n                    const {id} = item;\n\n                    await updateFavoritesMutation({\n                        variables: {\n                            key: FAVORITE_TREES_KEY,\n                            value: wasFavorite ? favoriteIds.filter(e => e !== id) : favoriteIds.concat([id]),\n                            global: false\n                        }\n                    });\n                };\n\n                return (\n                    <FavoriteStar\n                        isFavorite={isFavorite}\n                        onToggle={_handleFavoriteToggle}\n                        hoverTrigger=\".ant-table-cell\"\n                    />\n                );\n            }\n        }\n    ];\n\n    return (\n        <div className=\"wrapper-page\">\n            <PageHeader\n                avatar={{icon: <ShareAltOutlined />, shape: 'square', style: {background: 'none', color: '#000'}}}\n                title={t('home.trees')}\n            />\n            <Table bordered columns={columns} dataSource={list} loading={treeListQuery.loading} pagination={false} />\n        </div>\n    );\n}\n\nexport default TreeList;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport gql from 'graphql-tag';\n\nexport interface IActiveTree {\n    id: string;\n    libraries: Array<{id: string}>;\n    label: string;\n    permissions: {\n        access_tree: boolean;\n        edit_children: boolean;\n    };\n}\n\nexport interface IGetActiveTree {\n    activeTree?: IActiveTree;\n}\n\nexport const getActiveTree = gql`\n    query GET_ACTIVE_TREE {\n        activeTree @client {\n            id @client\n            libraries @client {\n                id @client\n            }\n            label @client\n            permissions @client {\n                access_tree @client\n                edit_children @client\n            }\n        }\n    }\n`;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {useQuery} from '@apollo/client';\nimport {useCallback} from 'react';\nimport {getActiveTree, IActiveTree, IGetActiveTree} from '../../graphQL/queries/cache/activeTree/getActiveTreeQuery';\n\nexport const useActiveTree = (): [IActiveTree | undefined, (newActiveLibrary: IActiveTree) => void] => {\n    const {data, client} = useQuery<IGetActiveTree>(getActiveTree);\n\n    const activeTree: IActiveTree | undefined = data?.activeTree;\n\n    const updateActiveTree = useCallback(\n        (newActiveTree: IActiveTree) => {\n            client.writeQuery<IGetActiveTree>({\n                query: getActiveTree,\n                data: {\n                    activeTree: newActiveTree\n                }\n            });\n        },\n        [client]\n    );\n\n    return [activeTree, updateActiveTree];\n};\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {DatabaseOutlined, HomeOutlined, ShareAltOutlined, StarFilled, StarOutlined} from '@ant-design/icons';\nimport {useMutation, useQuery} from '@apollo/client';\nimport {Menu, Spin} from 'antd';\nimport SubMenu from 'antd/lib/menu/SubMenu';\nimport {FAVORITE_LIBRARIES_KEY} from 'components/Home/LibrariesList/LibrariesList';\nimport {FAVORITE_TREES_KEY} from 'components/Home/TreeList/TreeList';\nimport ErrorDisplay from 'components/shared/ErrorDisplay';\nimport {saveUserData} from 'graphQL/mutations/userData/saveUserData';\nimport {getUserDataQuery} from 'graphQL/queries/userData/getUserData';\nimport {useActiveLibrary} from 'hooks/ActiveLibHook/ActiveLibHook';\nimport {useActiveTree} from 'hooks/ActiveTreeHook/ActiveTreeHook';\nimport {useLang} from 'hooks/LangHook/LangHook';\nimport useGetLibrariesListQuery from 'hooks/useGetLibrariesListQuery/useGetLibrariesListQuery';\nimport useGetTreesListQuery from 'hooks/useGetTreesListQuery/useGetTreesListQuery';\nimport React from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {useHistory} from 'react-router-dom';\nimport {useAppSelector} from 'redux/store';\nimport styled from 'styled-components';\nimport themingVar from 'themingVar';\nimport {getLibraryLink, getTreeLink, localizedTranslation} from 'utils';\nimport {GET_LIBRARIES_LIST_libraries_list} from '_gqlTypes/GET_LIBRARIES_LIST';\nimport {GET_TREE_LIST_QUERY_trees_list} from '_gqlTypes/GET_TREE_LIST_QUERY';\nimport {GET_USER_DATA, GET_USER_DATAVariables} from '_gqlTypes/GET_USER_DATA';\nimport {SAVE_USER_DATA, SAVE_USER_DATAVariables} from '_gqlTypes/SAVE_USER_DATA';\n\ninterface IGroupedElements<EntityType> {\n    related: EntityType[];\n    favorites: EntityType[];\n    others: EntityType[];\n}\n\nconst HomeButton = styled.div`\n    height: ${themingVar['@leav-header-height']};\n    background: #0f2027;\n    color: #fff;\n    text-align: center;\n    line-height: 3rem;\n    font-size: 1.5rem;\n    cursor: pointer;\n`;\n\nconst NavWrapper = styled.div`\n    height: 100%;\n`;\n\nconst MenuItemContent = styled.span`\n    display: inline-flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    min-width: 200px;\n`;\n\nconst Link = styled.span`\n    flex-grow: 1;\n`;\n\nconst FavoriteStar = styled.span<{isFavorite: boolean}>`\n    display: ${p => (p.isFavorite ? 'inline' : 'none')};\n\n    ${MenuItemContent}:hover > & {\n        display: inline;\n    }\n`;\n\nfunction Sidebar(): JSX.Element {\n    const {t} = useTranslation();\n    const [{lang}] = useLang();\n    const [activeLibrary] = useActiveLibrary();\n    const [activeTree] = useActiveTree();\n    const history = useHistory();\n    const {activePanel} = useAppSelector(state => state);\n\n    const librariesList = useGetLibrariesListQuery();\n    const treesList = useGetTreesListQuery();\n    const favoritesList = useQuery<GET_USER_DATA, GET_USER_DATAVariables>(getUserDataQuery, {\n        variables: {keys: [FAVORITE_LIBRARIES_KEY, FAVORITE_TREES_KEY]}\n    });\n\n    const [executeSaveUserData] = useMutation<SAVE_USER_DATA, SAVE_USER_DATAVariables>(saveUserData);\n\n    const activeTreeLibrariesIds = (activeTree?.libraries ?? []).map(l => l.id);\n    const activeLibraryTreesIds = activeLibrary?.trees.map(tree => tree.id) ?? [];\n    const libraryFavorites = favoritesList?.data?.userData?.data?.[FAVORITE_LIBRARIES_KEY] ?? [];\n    const treeFavorites = favoritesList?.data?.userData?.data?.[FAVORITE_TREES_KEY] ?? [];\n\n    const groupedLibraries: IGroupedElements<GET_LIBRARIES_LIST_libraries_list> = (\n        librariesList?.data?.libraries?.list ?? []\n    ).reduce(\n        (groups, library) => {\n            const newGroups = {...groups};\n\n            if (activeTreeLibrariesIds.includes(library.id)) {\n                newGroups.related.push(library);\n            } else if (libraryFavorites.includes(library.id)) {\n                newGroups.favorites.push(library);\n            } else {\n                newGroups.others.push(library);\n            }\n\n            return newGroups;\n        },\n        {related: [], favorites: [], others: []}\n    );\n\n    const groupedTrees: IGroupedElements<GET_TREE_LIST_QUERY_trees_list> = (treesList?.data?.trees?.list ?? []).reduce(\n        (groups, tree) => {\n            const newGroups = {...groups};\n\n            if (activeLibraryTreesIds.includes(tree.id)) {\n                newGroups.related.push(tree);\n            } else if (treeFavorites.includes(tree.id)) {\n                newGroups.favorites.push(tree);\n            } else {\n                newGroups.others.push(tree);\n            }\n\n            return newGroups;\n        },\n        {related: [], favorites: [], others: []}\n    );\n\n    const _handleToggleFavorite = (wasFavorite: boolean, entityId: string, entityType: 'library' | 'tree') => {\n        let newFavorites = [...(entityType === 'library' ? libraryFavorites : treeFavorites)];\n        if (wasFavorite) {\n            newFavorites = newFavorites.filter(f => f !== entityId);\n        } else {\n            newFavorites.push(entityId);\n        }\n\n        executeSaveUserData({\n            variables: {\n                key: entityType === 'library' ? FAVORITE_LIBRARIES_KEY : FAVORITE_TREES_KEY,\n                value: newFavorites,\n                global: false\n            }\n        });\n    };\n\n    const _goTo = (url: string) => history.push(url);\n\n    const _goToActiveLibrary = () => {\n        if (!activeLibrary?.id) {\n            return;\n        }\n\n        _goTo(getLibraryLink(activeLibrary.id));\n    };\n\n    const _goToActiveTree = () => {\n        if (!activeTree?.id) {\n            return;\n        }\n\n        _goTo(getTreeLink(activeTree.id));\n    };\n\n    const _handleClickHome = () => _goTo('/');\n\n    const libsMenu =\n        librariesList.loading || favoritesList.loading ? (\n            <Menu.Item>\n                <Spin />\n            </Menu.Item>\n        ) : librariesList.error || favoritesList.error ? (\n            <ErrorDisplay message={(librariesList.error || favoritesList.error).message} />\n        ) : (\n            <>\n                {Object.keys(groupedLibraries).map(libraryGroupKey => {\n                    if (!groupedLibraries[libraryGroupKey].length) {\n                        return null;\n                    }\n\n                    return (\n                        <Menu.ItemGroup\n                            key={`${libraryGroupKey}_libraries`}\n                            title={t(`sidebar.${libraryGroupKey}_libraries`)}\n                        >\n                            {groupedLibraries[libraryGroupKey].map(lib => {\n                                const isFavorite = libraryFavorites.includes(lib.id);\n                                const _handleFavoriteClick = e => {\n                                    e.preventDefault();\n                                    e.stopPropagation();\n                                    _handleToggleFavorite(isFavorite, lib.id, 'library');\n                                };\n\n                                return (\n                                    <Menu.Item key={`library.${lib.id}`} icon={<DatabaseOutlined />}>\n                                        <MenuItemContent>\n                                            <Link onClick={() => _goTo(getLibraryLink(lib.id))}>\n                                                {localizedTranslation(lib.label, lang)}\n                                            </Link>\n                                            <FavoriteStar onClick={_handleFavoriteClick} isFavorite={isFavorite}>\n                                                {isFavorite ? <StarFilled /> : <StarOutlined />}\n                                            </FavoriteStar>\n                                        </MenuItemContent>\n                                    </Menu.Item>\n                                );\n                            })}\n                        </Menu.ItemGroup>\n                    );\n                })}\n            </>\n        );\n\n    const treesMenu =\n        treesList.loading || favoritesList.loading ? (\n            <Menu.Item>\n                <Spin />\n            </Menu.Item>\n        ) : treesList.error || favoritesList.error ? (\n            <ErrorDisplay message={(treesList.error || favoritesList.error).message} />\n        ) : (\n            <>\n                {Object.keys(groupedTrees).map(treeGroupKey => {\n                    if (!groupedTrees[treeGroupKey].length) {\n                        return null;\n                    }\n\n                    return (\n                        <Menu.ItemGroup key={`${treeGroupKey}_trees`} title={t(`sidebar.${treeGroupKey}_trees`)}>\n                            {groupedTrees[treeGroupKey].map(tree => {\n                                const isFavorite = treeFavorites.includes(tree.id);\n                                const _handleFavoriteClick = e => {\n                                    e.preventDefault();\n                                    e.stopPropagation();\n                                    _handleToggleFavorite(isFavorite, tree.id, 'tree');\n                                };\n\n                                return (\n                                    <Menu.Item key={`tree.${tree.id}`} icon={<ShareAltOutlined />}>\n                                        <MenuItemContent>\n                                            <Link onClick={() => _goTo(getTreeLink(tree.id))}>\n                                                {localizedTranslation(tree.label, lang)}\n                                            </Link>\n                                            <FavoriteStar onClick={_handleFavoriteClick} isFavorite={isFavorite}>\n                                                {isFavorite ? <StarFilled /> : <StarOutlined />}\n                                            </FavoriteStar>\n                                        </MenuItemContent>\n                                    </Menu.Item>\n                                );\n                            })}\n                        </Menu.ItemGroup>\n                    );\n                })}\n            </>\n        );\n\n    return (\n        <>\n            <HomeButton onClick={_handleClickHome}>\n                <HomeOutlined role=\"button\" />\n            </HomeButton>\n            <NavWrapper>\n                <Menu\n                    style={{width: '100%'}}\n                    selectedKeys={[activePanel, `${activePanel}.${activeLibrary?.id || activeTree?.id}`]}\n                    activeKey={activePanel}\n                >\n                    <SubMenu\n                        icon={<DatabaseOutlined onClick={_goToActiveLibrary} />}\n                        title={!!activeLibrary?.name ? activeLibrary.name : t('sidebar.library')}\n                        key=\"library\"\n                        onTitleClick={_goToActiveLibrary}\n                    >\n                        {libsMenu}\n                    </SubMenu>\n                    <SubMenu\n                        icon={<ShareAltOutlined onClick={_goToActiveTree} />}\n                        title={!!activeTree?.label ? activeTree.label : t('sidebar.tree')}\n                        key=\"tree\"\n                        onTitleClick={_goToActiveTree}\n                    >\n                        {treesMenu}\n                    </SubMenu>\n                </Menu>\n            </NavWrapper>\n        </>\n    );\n}\n\nexport default Sidebar;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport Sidebar from './Sidebar';\nexport default Sidebar;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {CloseOutlined} from '@ant-design/icons';\nimport {Badge, message as antMessage} from 'antd';\nimport React, {useEffect} from 'react';\nimport {useAppSelector} from 'redux/store';\nimport styled from 'styled-components';\nimport {INotification, NotificationType} from '../../../_types/types';\n\nconst Wrapper = styled.div`\n    padding: 0.3rem 1rem;\n    min-width: 25%;\n    width: auto;\n    text-overflow: hidden;\n    font-weight: 600;\n    line-height: 1em;\n\n    background: #0d1e26 0% 0% no-repeat padding-box;\n    border: 1px solid #70707031;\n    border-radius: 3px;\n\n    display: flex;\n    flex-flow: row wrap;\n    justify-content: space-between;\n\n    height: 3.5ch;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n`;\n\nconst CustomBadge = styled(Badge)`\n    margin: 0 0.3rem;\n    & > * {\n        border: none;\n        box-shadow: none;\n    }\n`;\n\ninterface IDisplayNotificationProps {\n    message: INotification;\n    activeTimeouts: {notification: any; base: any};\n    cancelNotification: () => void;\n    triggerNotifications: INotification[];\n    setTriggerNotifications: React.Dispatch<React.SetStateAction<INotification[]>>;\n}\n\nfunction DisplayNotification({\n    message,\n    activeTimeouts,\n    cancelNotification,\n    triggerNotifications,\n    setTriggerNotifications\n}: IDisplayNotificationProps): JSX.Element {\n    const {stack} = useAppSelector(state => ({stack: state.notification.stack}));\n\n    useEffect(() => {\n        if (triggerNotifications.length) {\n            const [notification, ...restNotifications] = triggerNotifications;\n\n            switch (notification.type) {\n                case NotificationType.error:\n                    antMessage.error(notification.content);\n                    break;\n                case NotificationType.success:\n                    antMessage.success(notification.content);\n                    break;\n                case NotificationType.warning:\n                    antMessage.warning(notification.content);\n                    break;\n                case NotificationType.basic:\n                default:\n                    antMessage.info(notification.content);\n                    break;\n            }\n\n            setTriggerNotifications(restNotifications);\n        }\n    }, [triggerNotifications, setTriggerNotifications]);\n\n    return (\n        <>\n            <Wrapper data-testid=\"notification-message-wrapper\">\n                <Message notification={message} />\n                <span>\n                    {activeTimeouts.notification && (\n                        <div>\n                            <CustomBadge count={stack.length} />\n                            <CloseOutlined onClick={cancelNotification} />\n                        </div>\n                    )}\n                </span>\n            </Wrapper>\n        </>\n    );\n}\n\nconst ErrorMessage = styled.span`\n    color: #e02020;\n    font-weight: 800;\n`;\n\nconst WarningMessage = styled.span`\n    color: orange;\n    font-weight: 600;\n`;\n\nconst SuccessMessage = styled.span`\n    color: greenyellow;\n    font-weight: 600;\n`;\n\nconst Message = ({notification}: {notification: INotification}) => {\n    switch (notification.type) {\n        case NotificationType.error:\n            return <ErrorMessage>{notification.content}</ErrorMessage>;\n        case NotificationType.warning:\n            return <WarningMessage>{notification.content}</WarningMessage>;\n        case NotificationType.success:\n            return <SuccessMessage>{notification.content}</SuccessMessage>;\n        case NotificationType.basic:\n        default:\n            return <span>{notification.content}</span>;\n    }\n};\n\nexport default DisplayNotification;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport DisplayNotification from './DisplayNotification';\nexport default DisplayNotification;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport React, {useEffect, useState} from 'react';\nimport {setNotificationStack} from 'redux/notifications';\nimport {useAppDispatch, useAppSelector} from 'redux/store';\nimport {defaultNotificationsTime} from '../../constants/constants';\nimport {sortNotificationByPriority} from '../../utils';\nimport {INotification, NotificationChannel} from '../../_types/types';\nimport DisplayNotification from './DisplayNotification';\n\nfunction HeaderNotification(): JSX.Element {\n    const {stack, base} = useAppSelector(state => state.notification);\n    const dispatch = useAppDispatch();\n\n    const [message, setMessage] = useState<INotification>(base);\n    const [triggerNotifications, setTriggerNotifications] = useState<INotification[]>([]);\n    const [activeTimeouts, setActiveTimeouts] = useState<{notification: any; base: any}>({\n        notification: null,\n        base: null\n    });\n\n    useEffect(() => {\n        const {passiveNotifications, triggerNotifications: triggerNotifs} = stack.reduce(\n            (acc, notification) => {\n                switch (notification.channel) {\n                    case NotificationChannel.trigger:\n                        return {...acc, triggerNotifications: [...acc.triggerNotifications, notification]};\n                    case NotificationChannel.passive:\n                    default:\n                        return {...acc, passiveNotifications: [...acc.passiveNotifications, notification]};\n                }\n            },\n            {\n                passiveNotifications: [] as INotification[],\n                triggerNotifications: [] as INotification[]\n            }\n        );\n\n        if (triggerNotifs.length) {\n            setTriggerNotifications(notifications => [...notifications, ...triggerNotifs]);\n\n            dispatch(setNotificationStack(passiveNotifications));\n        }\n\n        if (passiveNotifications.length) {\n            // Sort notification by priority\n            const sortPassiveNotifications = [...passiveNotifications].sort(sortNotificationByPriority);\n\n            // Take the first notification\n            const [notification, ...restNotifications] = sortPassiveNotifications;\n\n            if (notification && !activeTimeouts.notification) {\n                setMessage(notification);\n\n                const notificationTime = notification.time ?? defaultNotificationsTime;\n\n                // if a timeout to show base notification is active, clear it\n                if (activeTimeouts.base) {\n                    setActiveTimeouts(timeouts => {\n                        clearTimeout(timeouts.base);\n\n                        return {\n                            base: null,\n                            notification: timeouts.notification\n                        };\n                    });\n                }\n\n                // at the end of the time given for the notification, display base message\n                const notificationTimeout = setTimeout(() => {\n                    if (!activeTimeouts.notification) {\n                        // wait 100 to display base notification to avoid\n                        // base message to appear between two notification\n                        const baseTimeout = setTimeout(() => {\n                            setMessage(base);\n                        }, 100);\n\n                        // set baseTimeout in state\n                        setActiveTimeouts(timeouts => ({\n                            notification: timeouts.notification,\n                            base: baseTimeout\n                        }));\n                    }\n\n                    // reset notification timeout in state\n                    setActiveTimeouts(at => ({\n                        notification: null,\n                        base: at.base\n                    }));\n                }, notificationTime);\n\n                // set the timeout for reset the notification in the state\n                setActiveTimeouts(timeouts => ({\n                    notification: notificationTimeout,\n                    base: timeouts.base\n                }));\n\n                // update notification stack with rest notifications\n                dispatch(setNotificationStack(restNotifications));\n            }\n        } else if (!activeTimeouts.notification) {\n            // if no notification, display base notification\n            setMessage(msg => {\n                if (base.content !== msg.content) {\n                    return base;\n                }\n                return msg;\n            });\n        }\n    }, [setMessage, stack, base, setActiveTimeouts, activeTimeouts, dispatch]);\n\n    const cancelNotification = () => {\n        clearTimeout(activeTimeouts.notification);\n        setActiveTimeouts(timeouts => ({\n            notification: null,\n            base: timeouts.base\n        }));\n    };\n\n    return (\n        <DisplayNotification\n            message={message}\n            activeTimeouts={activeTimeouts}\n            cancelNotification={cancelNotification}\n            triggerNotifications={triggerNotifications}\n            setTriggerNotifications={setTriggerNotifications}\n        />\n    );\n}\n\nexport default HeaderNotification;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport HeaderNotification from './HeaderNotification';\nexport default HeaderNotification;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport React from 'react';\nimport styled from 'styled-components';\nimport {useUser} from '../../../hooks/UserHook/UserHook';\n\nconst Wrapper = styled.div`\n    & {\n        display: flex;\n        flex-flow: row nowrap;\n        align-items: center;\n        justify-content: space-between;\n        cursor: pointer;\n        width: 8rem;\n    }\n`;\n\nconst CustomIcon = styled.div`\n    & {\n        flex-shrink: 0;\n        border-radius: 50%;\n        background: hsl(130, 52%, 58%);\n        color: #ffffff;\n        height: 2rem;\n        width: 2rem;\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        text-align: center;\n        font-weight: bold;\n        font-size: 0.8rem;\n    }\n`;\n\nfunction UserMenu(): JSX.Element {\n    const [user] = useUser();\n\n    const iconContent = user?.userName.split(' ').map(word => word[0]);\n\n    return (\n        <Wrapper>\n            <CustomIcon>{iconContent}</CustomIcon>\n            <div>{user?.userName}</div>\n        </Wrapper>\n    );\n}\n\nexport default UserMenu;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport UserMenu from './UserMenu';\nexport default UserMenu;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport React from 'react';\nimport styled from 'styled-components';\nimport {default as themingVar, default as themingVars} from '../../themingVar';\nimport HeaderNotification from '../HeaderNotification';\nimport UserMenu from './UserMenu';\n\ninterface ITopBarProps {\n    userPanelVisible: boolean;\n    toggleUserPanelVisible: () => void;\n}\n\nconst Wrapper = styled.div`\n    display: flex;\n    flex-direction: row;\n    height: ${themingVar['@leav-header-height']};\n\n    color: white;\n    background: transparent linear-gradient(85deg, #0f2027 0%, #203a43 52%, #2c5364 100%) 0% 0% no-repeat padding-box;\n`;\n\nconst MenuItem = styled.div<IMenuItemProps>`\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n    transition: 275ms ease-out;\n    padding: 0 1rem;\n    background: ${props => (props.isActive ? themingVars['@primary-color'] : 'none')};\n\n    & > * {\n        margin: 0 0.5rem;\n    }\n\n    &:hover {\n        background: ${themingVars['@primary-color']};\n    }\n`;\n\nconst MenuItemUser = styled(MenuItem)`\n    justify-self: end;\n`;\n\nconst WrapperHeaderNotification = styled.div`\n    width: 100%;\n    display: flex;\n    justify-content: start;\n    align-items: center;\n`;\n\ninterface IMenuItemProps {\n    isActive?: boolean;\n}\n\nfunction TopBar({userPanelVisible, toggleUserPanelVisible}: ITopBarProps): JSX.Element {\n    const userPanelKey = 'trigger-user-panel';\n\n    const handleUserPanelClick = () => {\n        toggleUserPanelVisible();\n    };\n\n    return (\n        <Wrapper>\n            <WrapperHeaderNotification key=\"lib-name\">\n                <HeaderNotification />\n            </WrapperHeaderNotification>\n\n            <MenuItemUser key={userPanelKey} onClick={handleUserPanelClick} isActive={userPanelVisible}>\n                <UserMenu />\n            </MenuItemUser>\n        </Wrapper>\n    );\n}\n\nexport default TopBar;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport TopBar from './TopBar';\nexport default TopBar;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport React from 'react';\nimport {useTranslation} from 'react-i18next';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.span`\n    font-size: 0.6em;\n    color: #444;\n    font-weight: bold;\n    background: #dedede;\n    border-radius: 4px;\n    padding: 2px 5px;\n    margin-left: 1em;\n`;\n\nfunction AvailableSoon(): JSX.Element {\n    const {t} = useTranslation();\n    return (\n        <Wrapper>\n            <span role=\"img\" aria-label=\"available_soon\">\n                🔥\n            </span>{' '}\n            {t('global.available_soon').toLocaleUpperCase()}\n        </Wrapper>\n    );\n}\n\nexport default AvailableSoon;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport AvailableSoon from './AvailableSoon';\nexport default AvailableSoon;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {FlagOutlined} from '@ant-design/icons';\nimport {Button} from 'antd';\nimport {useLang} from 'hooks/LangHook/LangHook';\nimport React from 'react';\nimport {useTranslation} from 'react-i18next';\nimport styled from 'styled-components';\nimport {AvailableLanguage} from '_types/types';\n\nconst Wrapper = styled.div`\n    display: flex;\n    align-items: center;\n`;\n\nfunction LangSwitcher(): JSX.Element {\n    const {t, i18n: i18nClient} = useTranslation();\n    const [{availableLangs}, updateLang] = useLang();\n\n    const unicodeFlagByLang = {\n        fr: '🇫🇷',\n        en: '🇬🇧'\n    };\n\n    const _handleLangChange = (lang: string) => () => {\n        i18nClient.changeLanguage(lang);\n\n        // Update cache lang infos\n        const newLang = [i18nClient.language, i18nClient.language];\n\n        const defaultLang = i18nClient.language\n            ? AvailableLanguage[i18nClient.language as AvailableLanguage]\n            : AvailableLanguage.en;\n\n        updateLang({\n            lang: newLang,\n            defaultLang\n        });\n    };\n\n    return (\n        <Wrapper>\n            <FlagOutlined />\n            {t('settings.choose-lang')} :\n            {availableLangs.map(l => (\n                <Button type=\"text\" name={l} key={l} style={{padding: '0 5px'}} onClick={_handleLangChange(l)}>\n                    {unicodeFlagByLang[l] ?? l}\n                </Button>\n            ))}\n        </Wrapper>\n    );\n}\n\nexport default LangSwitcher;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport LangSwitcher from './LangSwitcher';\nexport default LangSwitcher;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {CarryOutOutlined, DoubleRightOutlined, ExclamationCircleOutlined, LogoutOutlined} from '@ant-design/icons';\nimport {Drawer, Menu} from 'antd';\nimport AvailableSoon from 'components/shared/AvailableSoon';\nimport useAuthToken from 'hooks/useAuthToken';\nimport React from 'react';\nimport {useTranslation} from 'react-i18next';\nimport LangSwitcher from './LangSwitcher';\n\ninterface IUserPanelProps {\n    userPanelVisible: boolean;\n    hideUserPanel: () => void;\n}\n\nfunction UserPanel({userPanelVisible, hideUserPanel}: IUserPanelProps): JSX.Element {\n    const {t} = useTranslation();\n    const {deleteToken} = useAuthToken();\n\n    const _handleLogout = () => {\n        deleteToken();\n        window.location.replace('/');\n    };\n\n    return (\n        <Drawer\n            visible={userPanelVisible}\n            onClose={hideUserPanel}\n            placement=\"right\"\n            closable={false}\n            getContainer={false}\n            bodyStyle={{padding: 0}}\n        >\n            <Menu\n                style={{\n                    height: '100%'\n                }}\n                mode=\"inline\"\n            >\n                <Menu.Item disabled>\n                    <CarryOutOutlined />\n                    {t('menu.user_menu.tasks')}\n                    <AvailableSoon />\n                </Menu.Item>\n                <Menu.Item disabled>\n                    <DoubleRightOutlined />\n                    {t('menu.user_menu.shortcuts')}\n                    <AvailableSoon />\n                </Menu.Item>\n                <Menu.Item disabled>\n                    <ExclamationCircleOutlined />\n                    {t('menu.user_menu.events')}\n                    <AvailableSoon />\n                </Menu.Item>\n\n                <Menu.Item>\n                    <LangSwitcher />\n                </Menu.Item>\n\n                <Menu.Item onClick={_handleLogout}>\n                    <LogoutOutlined />\n                    {t('menu.user_menu.logout')}\n                </Menu.Item>\n            </Menu>\n        </Drawer>\n    );\n}\n\nexport default UserPanel;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport UserPanel from './UserPanel';\nexport default UserPanel;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport LibrariesList from './LibrariesList';\nexport default LibrariesList;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport TreeList from './TreeList';\nexport default TreeList;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {Col, Row} from 'antd';\nimport React from 'react';\nimport LibrariesList from './LibrariesList';\nimport TreeList from './TreeList';\n\nfunction Home(): JSX.Element {\n    return (\n        <Row gutter={10}>\n            <Col span={12} data-testid=\"libraries-list\">\n                <LibrariesList />\n            </Col>\n            <Col span={12} data-testid=\"trees-list\">\n                <TreeList />\n            </Col>\n        </Row>\n    );\n}\n\nexport default Home;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {defaultSort, defaultView, viewSettingsField} from 'constants/constants';\nimport {ViewSizes, ViewTypes} from '_gqlTypes/globalTypes';\nimport {IAttribute, IField, IFilter, IQueryFilter, IViewDisplay} from '_types/types';\nimport {ISearchRecord, ISearchSort, ISearchState, IViewState} from './_types';\n\nexport enum SearchActionTypes {\n    SET_RECORDS = 'SET_RECORDS',\n    SET_TOTAL_COUNT = 'SET_TOTAL_COUNT',\n    SET_PAGINATION = 'SET_PAGINATION',\n    SET_OFFSET = 'SET_OFFSET',\n    SET_LOADING = 'SET_LOADING',\n    SET_SORT = 'SET_SORT',\n    CANCEL_SORT = 'CANCEL_SORT',\n    SET_ATTRIBUTES = 'SET_ATTRIBUTES',\n    SET_FIELDS = 'SET_FIELDS',\n    SET_FULLTEXT = 'SET_FULLTEXT',\n    SET_FILTERS = 'SET_FILTERS',\n    SET_QUERY_FILTERS = 'SET_QUERY_FILTERS',\n    SET_VIEW = 'SET_VIEW',\n    SET_USER_VIEWS_ORDER = 'SET_USER_VIEWS_ORDER',\n    SET_SHARED_VIEWS_ORDER = 'SET_SHARED_VIEWS_ORDER',\n    SET_DISPLAY = 'SET_DISPLAY'\n}\n\nexport type SearchAction =\n    | {type: SearchActionTypes.SET_RECORDS; records: ISearchRecord[]}\n    | {type: SearchActionTypes.SET_TOTAL_COUNT; totalCount: number}\n    | {type: SearchActionTypes.SET_PAGINATION; page: number}\n    | {type: SearchActionTypes.SET_OFFSET; offset: number}\n    | {type: SearchActionTypes.SET_LOADING; loading: boolean}\n    | {type: SearchActionTypes.SET_SORT; sort: ISearchSort}\n    | {type: SearchActionTypes.CANCEL_SORT}\n    | {type: SearchActionTypes.SET_ATTRIBUTES; attributes: IAttribute[]}\n    | {type: SearchActionTypes.SET_FIELDS; fields: IField[]}\n    | {type: SearchActionTypes.SET_FULLTEXT; fullText: string}\n    | {type: SearchActionTypes.SET_FILTERS; filters: IFilter[]}\n    | {type: SearchActionTypes.SET_QUERY_FILTERS; queryFilters: IQueryFilter[]}\n    | {type: SearchActionTypes.SET_VIEW; view: IViewState}\n    | {type: SearchActionTypes.SET_DISPLAY; display: IViewDisplay}\n    | {type: SearchActionTypes.SET_USER_VIEWS_ORDER; userViewsOrder: string[]}\n    | {type: SearchActionTypes.SET_SHARED_VIEWS_ORDER; sharedViewsOrder: string[]};\n\nexport const initialSearchState: ISearchState = {\n    library: null,\n    records: [],\n    totalCount: 0,\n    loading: false,\n    pagination: 20,\n    offset: 0,\n    sort: {...defaultSort, active: false},\n    attributes: [],\n    fields: [],\n    fullText: '',\n    filters: [],\n    queryFilters: [],\n    display: {type: ViewTypes.list, size: ViewSizes.MEDIUM},\n    view: {current: defaultView, reload: false, sync: true},\n    userViewsOrder: [],\n    sharedViewsOrder: []\n};\n\nconst checkSync = (\n    state: ISearchState,\n    toCheck: {sort: boolean; filters: boolean; display: boolean; fields: boolean}\n): boolean => {\n    let sync = true;\n\n    if (toCheck.sort) {\n        sync =\n            state.sort.field === state.view?.current?.sort?.field &&\n            state.sort.order === state.view?.current?.sort?.order;\n    }\n\n    if (toCheck.filters) {\n        sync = sync && JSON.stringify(state.view.current?.filters) === JSON.stringify(state.filters);\n    }\n\n    if (toCheck.display) {\n        sync =\n            sync &&\n            state.display.type === state.view.current?.display?.type &&\n            state.display.size === state.view.current?.display?.size;\n    }\n\n    if (toCheck.fields) {\n        const viewFieldsKeys: string[] = !!state.view.current?.settings?.find(s => s.name === viewSettingsField)\n            ? state.view.current?.settings.find(s => s.name === viewSettingsField).value\n            : [];\n\n        sync = sync && state.fields.map(f => f.id).join('.') === viewFieldsKeys.join('.');\n    }\n\n    return sync;\n};\n\nconst searchReducer = (state: ISearchState, action: SearchAction): ISearchState => {\n    let sync = checkSync(state, {\n        sort: action.type !== SearchActionTypes.SET_SORT, // FIXME: probleme avec le sort\n        filters: action.type !== SearchActionTypes.SET_FILTERS,\n        display: action.type !== SearchActionTypes.SET_DISPLAY,\n        fields: action.type !== SearchActionTypes.SET_FIELDS\n    });\n\n    switch (action.type) {\n        case SearchActionTypes.SET_RECORDS:\n            return {...state, records: action.records};\n        case SearchActionTypes.SET_TOTAL_COUNT:\n            return {...state, totalCount: action.totalCount};\n        case SearchActionTypes.SET_PAGINATION:\n            return {...state, pagination: action.page, loading: true};\n        case SearchActionTypes.SET_OFFSET:\n            return {...state, offset: action.offset, loading: true};\n        case SearchActionTypes.SET_LOADING:\n            return {...state, loading: action.loading};\n        case SearchActionTypes.SET_SORT:\n            sync =\n                sync &&\n                state.view.current.sort.field === action.sort.field &&\n                state.view.current.sort.order === action.sort.order;\n\n            return {...state, sort: action.sort, view: {...state.view, sync}};\n        case SearchActionTypes.CANCEL_SORT:\n            return {...state, sort: {...defaultSort, active: false}};\n        case SearchActionTypes.SET_ATTRIBUTES:\n            return {...state, attributes: action.attributes};\n        case SearchActionTypes.SET_FIELDS:\n            const viewFieldsKeys: IField[] = !!state.view.current.settings?.find(s => s.name === viewSettingsField)\n                ? state.view.current?.settings.find(s => s.name === viewSettingsField).value\n                : [];\n\n            sync = sync && action.fields.map(f => f.id).join('.') === viewFieldsKeys.join('.');\n\n            return {...state, fields: action.fields, view: {...state.view, sync}};\n        case SearchActionTypes.SET_FULLTEXT:\n            return {...state, fullText: action.fullText};\n        case SearchActionTypes.SET_FILTERS:\n            sync = sync && JSON.stringify(state.view.current.filters) === JSON.stringify(action.filters);\n            return {...state, filters: action.filters, view: {...state.view, sync}};\n        case SearchActionTypes.SET_QUERY_FILTERS:\n            return {...state, queryFilters: action.queryFilters};\n        case SearchActionTypes.SET_VIEW:\n            return {...state, view: action.view};\n        case SearchActionTypes.SET_DISPLAY:\n            sync =\n                sync &&\n                action.display.type === state.view.current.display.type &&\n                action.display.size === state.view.current.display.size;\n            return {...state, display: action.display, view: {...state.view, sync}};\n        case SearchActionTypes.SET_USER_VIEWS_ORDER:\n            return {...state, userViewsOrder: action.userViewsOrder};\n        case SearchActionTypes.SET_SHARED_VIEWS_ORDER:\n            return {...state, sharedViewsOrder: action.sharedViewsOrder};\n    }\n};\n\nexport default searchReducer;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport Home from './Home';\nexport default Home;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {createContext} from 'react';\n\nconst SelectionModeContext = createContext<boolean>(false);\n\nexport default SelectionModeContext;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport React from 'react';\nimport {initialSearchState, SearchAction} from './searchReducer';\nimport {ISearchState} from './_types';\n\nexport const SearchContext = React.createContext<{\n    state: ISearchState;\n    dispatch: React.Dispatch<SearchAction>;\n}>({state: initialSearchState, dispatch: null});\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {getGraphqlTypeFromLibraryName} from '@leav/utils';\nimport {gqlUnchecked} from 'utils';\nimport {AttributeType} from '_gqlTypes/globalTypes';\nimport {IField, IFieldTypeTree} from '../../../_types/types';\nimport recordIdentityFragment from './recordIdentityFragment';\n\nconst handleType = (field: IField): string => {\n    switch (field.type) {\n        case AttributeType.simple:\n        case AttributeType.advanced:\n            return field.id;\n        case AttributeType.simple_link:\n        case AttributeType.advanced_link:\n            return `${field.id} {\n                ...RecordIdentity\n            }`;\n        case AttributeType.tree:\n            return `${field.id} {\n                record {\n                    ...RecordIdentity\n                }\n            }`;\n    }\n};\n\n// manage linked elements and extended attributes\nexport const getRecordsFields = (fields: IField[] = []) => {\n    if (!fields.length) {\n        return 'id';\n    }\n\n    const queryField = fields.map(field => {\n        if (field.parentAttributeData) {\n            const parentAttributeId = field.parentAttributeData.id;\n\n            switch (field.parentAttributeData.type) {\n                case AttributeType.simple:\n                case AttributeType.advanced:\n                    return handleType(field);\n                case AttributeType.simple_link:\n                case AttributeType.advanced_link:\n                    return `${parentAttributeId} {\n                        ${handleType(field)}\n                    }`;\n                case AttributeType.tree:\n                    const libTypeName = getGraphqlTypeFromLibraryName((field as IFieldTypeTree).recordLibrary);\n                    return libTypeName\n                        ? `${parentAttributeId} {\n                        record {\n                            ...on ${libTypeName} {\n                                ${handleType(field)}\n                            }\n                        }\n                    }`\n                        : '';\n            }\n        } else if (field.embeddedData) {\n            const path = [...field.embeddedData.path.split('.')].shift();\n            return path;\n        }\n\n        return handleType(field);\n    });\n\n    return queryField;\n};\n\nexport const getRecordsFromLibraryQuery = (libraryName?: string, fields?: IField[]) => {\n    const libQueryName = libraryName?.toUpperCase();\n\n    if (!libQueryName?.length) {\n        return gqlUnchecked`\n            query nothing {\n                libraries {\n                    list {\n                        id\n                    }\n                }\n            }\n        `;\n    }\n\n    return gqlUnchecked`\n        ${recordIdentityFragment}\n        query ${'GET_RECORDS_FROM_' + libQueryName} (\n            $limit: Int!\n            $offset: Int\n            $filters: [RecordFilterInput]\n            $sortField: String\n            $sortOrder: SortOrder!\n            $fullText: String\n        ) {\n            ${libraryName} (\n                pagination: {limit: $limit, offset: $offset}\n                filters: $filters\n                sort: {field: $sortField, order: $sortOrder}\n                searchQuery: $fullText\n            ) {\n                totalCount\n                list {\n                    _id: id\n                    ${getRecordsFields(fields)}\n                    ...RecordIdentity\n                }\n            }\n        }\n    `;\n};\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport gql from 'graphql-tag';\nimport recordIdentityFragment from 'graphQL/queries/records/recordIdentityFragment';\n\nexport const getViewByIdQuery = gql`\n    ${recordIdentityFragment}\n\n    query GET_VIEW($viewId: String!) {\n        view(viewId: $viewId) {\n            id\n            display {\n                size\n                type\n            }\n            shared\n            created_by {\n                ...RecordIdentity\n            }\n            label\n            description\n            color\n            filters {\n                field\n                value\n                condition\n                operator\n                tree {\n                    id\n                    label\n                }\n            }\n            sort {\n                field\n                order\n            }\n            settings {\n                name\n                value\n            }\n        }\n    }\n`;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport useSearchReducer from './useSearchReducer';\n\nexport default useSearchReducer;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {useContext} from 'react';\nimport {SearchContext} from './searchContext';\n\nconst useSearchReducer = () => useContext(SearchContext);\n\nexport default useSearchReducer;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {Pagination} from 'antd';\nimport useSearchReducer from 'hooks/useSearchReducer';\nimport {SearchActionTypes} from 'hooks/useSearchReducer/searchReducer';\nimport React from 'react';\nimport {paginationOptions} from '../../../utils';\n\nfunction LibraryItemsListPagination(): JSX.Element {\n    const {state: searchState, dispatch: searchDispatch} = useSearchReducer();\n\n    const setPagination = (current: number, size: number) => {\n        searchDispatch({type: SearchActionTypes.SET_PAGINATION, page: size});\n    };\n\n    const setOffset = (page: number, pageSize: number) => {\n        searchDispatch({type: SearchActionTypes.SET_OFFSET, offset: (page - 1) * (pageSize ?? 0)});\n    };\n\n    const currentPage = searchState.offset / searchState.pagination + 1;\n\n    return (\n        <Pagination\n            defaultCurrent={currentPage}\n            current={currentPage}\n            total={searchState.totalCount}\n            defaultPageSize={searchState.pagination}\n            onShowSizeChange={setPagination}\n            showSizeChanger\n            pageSizeOptions={paginationOptions.map(option => option.toString())}\n            onChange={setOffset}\n        />\n    );\n}\n\nexport default LibraryItemsListPagination;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport LibraryItemsListPagination from './LibraryItemsListPagination';\nexport default LibraryItemsListPagination;\n","export default __webpack_public_path__ + \"static/media/svgIconClosePanel.ef993d3b.svg\";","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport React from 'react';\nimport styled from 'styled-components';\nimport IconSvg from '../svg/svgIconClosePanel.svg';\n\nconst CustomImg = styled.img`\n    transform: translate(0px, -1px);\n`;\n\nexport const IconClosePanel = () => {\n    return (\n        <div>\n            <CustomImg src={IconSvg} alt=\"icon column choice\" />\n        </div>\n    );\n};\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport React from 'react';\nimport styled from 'styled-components';\nimport IconSvg from '../svg/svgIconClosePanel.svg';\n\nconst CustomImg = styled.img`\n    transform: translate(0px, -1px) rotate(180deg);\n`;\n\nexport const IconOpenPanel = () => {\n    return (\n        <div>\n            <CustomImg src={IconSvg} alt=\"icon column choice\" />\n        </div>\n    );\n};\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {Spin} from 'antd';\nimport React from 'react';\nimport styled from 'styled-components';\n\nconst LoadingElem = styled(Spin)`\n    && {\n        display: block;\n        margin: 3em;\n    }\n`;\n\nfunction Loading(): JSX.Element {\n    return <LoadingElem />;\n}\n\nexport default Loading;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport Loading from './Loading';\nexport default Loading;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {LoadingOutlined} from '@ant-design/icons';\nimport {Skeleton} from 'antd';\nimport React, {useState} from 'react';\nimport styled, {CSSObject} from 'styled-components';\nimport {getInvertColor, stringToColor} from '../../../utils/utils';\nimport {PreviewSize} from '../../../_types/types';\n\ninterface IRecordPreviewProps {\n    label: string;\n    color?: string;\n    image?: string;\n    style?: CSSObject;\n    tile?: boolean;\n    size?: PreviewSize;\n}\n\nconst getPreviewSize = (size?: PreviewSize) => {\n    switch (size) {\n        case PreviewSize.medium:\n            return '5rem';\n        case PreviewSize.big:\n            return '8rem';\n        case PreviewSize.small:\n        default:\n            return '3rem';\n    }\n};\n\ninterface IGeneratedPreviewProps {\n    bgColor: string;\n    fontColor: string;\n    size?: PreviewSize;\n    style?: CSSObject;\n}\n\nconst GeneratedPreview = styled.div<IGeneratedPreviewProps>`\n    ${props => props.style || ''}\n    background-color: ${props => props.bgColor};\n    color: ${props => props.fontColor};\n    font-size: 1.1em;\n    height: ${({size}) => getPreviewSize(size)};\n    width: ${({size}) => getPreviewSize(size)};\n    padding: 5px;\n    text-align: center;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    border-radius: 50%;\n`;\nGeneratedPreview.displayName = 'GeneratedPreview';\n\ninterface IImagePreviewProps {\n    size?: PreviewSize;\n    style?: CSSObject;\n}\n\nconst ImagePreview = styled.div<IImagePreviewProps>`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: ${({size}) => getPreviewSize(size)};\n    width: ${({size}) => getPreviewSize(size)};\n    overflow: hidden;\n    border-radius: 50%;\n    border: 1px solid rgba(0, 0, 0, 0.1);\n`;\nImagePreview.displayName = 'ImagePreview';\n\nfunction RecordPreviewList({label, color, image, size, style}: IRecordPreviewProps): JSX.Element {\n    if (image) {\n        return (\n            <ImagePreview size={size} style={style}>\n                <img\n                    src={image}\n                    alt=\"record preview\"\n                    style={{\n                        maxHeight: 'auto',\n                        maxWidth: 'auto',\n                        width: '100%',\n                        height: '100%',\n                        objectFit: 'cover',\n                        ...style\n                    }}\n                />\n            </ImagePreview>\n        );\n    }\n\n    const initial = String(label) ? label[0].toLocaleUpperCase() : '?';\n\n    const bgColor = color || stringToColor(label);\n    const fontColor = getInvertColor(bgColor);\n\n    const containerSize = getPreviewSize(size);\n\n    return (\n        <GeneratedPreview\n            data-testid=\"generated-preview\"\n            className=\"initial\"\n            bgColor={bgColor}\n            fontColor={fontColor}\n            size={size}\n            style={{\n                ...style,\n                fontSize: containerSize > '4rem' ? `calc(${containerSize} - 3rem)` : `calc(${containerSize} - 1rem)`\n            }}\n        >\n            {initial}\n        </GeneratedPreview>\n    );\n}\n\nconst GeneratedPreviewTile = styled.div<IGeneratedPreviewProps>`\n    ${props => props.style || ''}\n    background-color: ${props => props.bgColor};\n    color: ${props => props.fontColor};\n    font-size: 4em;\n    padding: 5px;\n    height: 10rem;\n    text-align: center;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    border-radius: 0.25rem 0.25rem 0 0;\n`;\nGeneratedPreviewTile.displayName = 'GeneratedPreviewTile';\n\ninterface IImagePreviewTileProps {\n    style?: CSSObject;\n}\n\nconst ImagePreviewWrapper = styled.div<IImagePreviewTileProps>`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    overflow: hidden;\n    border-radius: 0.25rem 0.25rem 0 0;\n\n    img {\n        object-fit: cover;\n    }\n`;\nImagePreviewWrapper.displayName = 'ImagePreviewTile';\n\nconst Image = styled.img<{$loaded: boolean}>`\n    display: ${p => (p.$loaded ? 'block' : 'none')};\n`;\n\nconst CustomSkeletonImage = styled(Skeleton.Image)`\n    &&& {\n        height: 100%;\n        width: 100%;\n\n        .ant-skeleton-image-svg {\n            width: 30%;\n            height: 30%;\n        }\n    }\n`;\n\nconst ImageSpinner = styled(LoadingOutlined)`\n    position: absolute;\n    top: 1rem;\n    right: 1rem;\n    font-size: 2em;\n`;\n\nfunction RecordPreviewTile({label, color, image, style}: IRecordPreviewProps): JSX.Element {\n    const [imageLoaded, setImageLoaded] = useState(false);\n\n    if (image) {\n        return (\n            <ImagePreviewWrapper style={{position: 'relative', ...style}}>\n                {!imageLoaded && (\n                    <>\n                        <CustomSkeletonImage style={{...style}} />\n                        <ImageSpinner spin data-testid=\"image-loading\" />\n                    </>\n                )}\n                <Image\n                    $loaded={imageLoaded}\n                    src={image}\n                    alt=\"record preview\"\n                    style={{...style}}\n                    onLoad={() => setImageLoaded(true)}\n                />\n            </ImagePreviewWrapper>\n        );\n    }\n\n    const initial = label ? label[0].toLocaleUpperCase() : '?';\n\n    const bgColor = color || stringToColor(label);\n    const fontColor = getInvertColor(bgColor);\n\n    return (\n        <GeneratedPreviewTile\n            data-testid=\"generated-preview\"\n            className=\"initial\"\n            bgColor={bgColor}\n            fontColor={fontColor}\n            style={style}\n        >\n            {initial}\n        </GeneratedPreviewTile>\n    );\n}\n\nfunction RecordPreviewWrapper({label, color, image, style, tile, size}: IRecordPreviewProps): JSX.Element {\n    if (tile) {\n        return RecordPreviewTile({label, color, image, size, style});\n    }\n    return RecordPreviewList({label, color, image, size, style});\n}\n\nexport default React.memo(RecordPreviewWrapper);\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport RecordPreview from './RecordPreview';\nexport default RecordPreview;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport Paragraph from 'antd/lib/typography/Paragraph';\nimport RecordPreview from 'components/shared/RecordPreview';\nimport React from 'react';\nimport styled, {CSSObject} from 'styled-components';\nimport {getFileUrl, localizedTranslation} from 'utils';\nimport {FilePreview, IRecordIdentityWhoAmI, PreviewSize} from '../../../_types/types';\n\nexport interface IRecordCardProps {\n    record: IRecordIdentityWhoAmI;\n    size: PreviewSize;\n    style?: CSSObject;\n    lang?: string[];\n    withPreview?: boolean;\n    withLibrary?: boolean;\n}\n\ninterface IWrapperProps {\n    recordColor: string | null;\n    style?: CSSObject;\n}\n\n/* tslint:disable:variable-name */\nconst Wrapper = styled.div<IWrapperProps>`\n    border-left: 5px solid ${props => props.recordColor || 'transparent'};\n    display: flex;\n    flex-direction: row;\n    ${props => props.style}\n`;\nWrapper.displayName = 'Wrapper';\n\nconst CardPart = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n`;\n\nconst PreviewWrapper = styled(CardPart)`\n    margin: 0 0.8em;\n`;\n\nconst RecordLabel = styled.div`\n    font-weight: bold;\n    overflow: hidden;\n`;\n\nconst LibLabel = styled.div`\n    font-weight: normal;\n    color: rgba(0, 0, 0, 0.4);\n    font-size: 0.9em;\n`;\n\nconst getPreviewBySize = (preview?: FilePreview, size?: PreviewSize) => {\n    const fileSizeByPreviewSize: {[size in PreviewSize]: string} = {\n        [PreviewSize.small]: 'tiny',\n        [PreviewSize.medium]: 'small',\n        [PreviewSize.big]: 'medium'\n    };\n\n    const previewPath: string = preview?.[fileSizeByPreviewSize[size]] ?? preview?.small;\n\n    return previewPath ? getFileUrl(previewPath) : '';\n};\n\nconst RecordCard = ({\n    record,\n    size,\n    style,\n    lang,\n    withPreview = true,\n    withLibrary = true\n}: IRecordCardProps): JSX.Element => {\n    const label = record.label || record.id;\n\n    return (\n        <Wrapper recordColor={record.color ?? ''} style={style} className=\"record-card\">\n            {withPreview && (\n                <PreviewWrapper className=\"preview\">\n                    <RecordPreview\n                        label={record.label || record.id}\n                        color={record.color}\n                        image={getPreviewBySize(record.preview, size)}\n                        size={size}\n                        style={style}\n                    />\n                </PreviewWrapper>\n            )}\n            <CardPart>\n                <RecordLabel className=\"label\">\n                    <Paragraph ellipsis={{rows: 1, tooltip: label}} style={{marginBottom: 0}}>\n                        {label}\n                    </Paragraph>\n                </RecordLabel>\n                {withLibrary && (\n                    <LibLabel className=\"library-label\">\n                        {localizedTranslation(record.library?.label, lang ?? []) || record.library?.id}\n                    </LibLabel>\n                )}\n            </CardPart>\n        </Wrapper>\n    );\n};\n\nexport default RecordCard;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {gqlUnchecked} from 'utils';\nimport {RecordFilterCondition} from '_gqlTypes/globalTypes';\n\nexport enum RecordPermissionsActions {\n    access_record = 'access_record',\n    create_record = 'create_record',\n    edit_record = 'edit_record',\n    delete_record = 'delete_record'\n}\n\nexport interface IGetRecordPermissions {\n    [libName: string]: {\n        list: Array<{\n            permissions: {[key in RecordPermissionsActions]: boolean};\n        }>;\n    };\n}\n\nexport interface IGetRecordPermissionsVariables {\n    recordId: string;\n}\n\nexport const getRecordPermissionsQuery = (libraryGqlQueryName: string) => {\n    return gqlUnchecked`\n        query GET_RECORD_PERMISSIONS_${libraryGqlQueryName}($recordId: String!) {\n            ${libraryGqlQueryName}(filters: [{field: \"id\", condition: ${\n        RecordFilterCondition.EQUAL\n    }, value: $recordId}]) {\n                list {\n                    permissions {\n                        ${Object.values(RecordPermissionsActions).join(' ')}\n                    }\n                }\n            }\n        }\n    `;\n};\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport RecordCard from './RecordCard';\nexport default RecordCard;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {gql} from '@apollo/client';\nimport recordIdentityFragment from 'graphQL/queries/records/recordIdentityFragment';\n\nconst createRecordMutation = gql`\n    ${recordIdentityFragment}\n    mutation CREATE_RECORD($library: ID!) {\n        createRecord(library: $library) {\n            ...RecordIdentity\n        }\n    }\n`;\n\nexport default createRecordMutation;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport gql from 'graphql-tag';\n\nexport const getLibraryPermissionsQuery = gql`\n    query GET_LIBRARY_PERMISSIONS($libraryId: ID!) {\n        libraries(filters: {id: $libraryId}) {\n            list {\n                permissions {\n                    access_library\n                    access_record\n                    create_record\n                    edit_record\n                    delete_record\n                }\n            }\n        }\n    }\n`;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {useQuery} from '@apollo/client';\nimport {getLibraryPermissionsQuery} from 'graphQL/queries/libraries/getLibraryPermissionsQuery';\nimport {\n    getRecordPermissionsQuery,\n    IGetRecordPermissions,\n    IGetRecordPermissionsVariables\n} from 'graphQL/queries/records/getRecordPermissions';\nimport {GET_LIBRARY_PERMISSIONS, GET_LIBRARY_PERMISSIONSVariables} from '_gqlTypes/GET_LIBRARY_PERMISSIONS';\nimport {RecordIdentity_whoAmI_library_gqlNames} from '_gqlTypes/RecordIdentity';\n\nexport interface IUseCanEditRecordHook {\n    loading: boolean;\n    canEdit: boolean;\n    isReadOnly: boolean;\n}\n\nexport const useCanEditRecord = (\n    library: {id: string; gqlNames?: RecordIdentity_whoAmI_library_gqlNames},\n    recordId?: string\n): IUseCanEditRecordHook => {\n    const isCreationMode = !recordId;\n\n    // Query runs if record is specified (= record edition)\n    const {loading: recordPermissionsLoading, error: recordPermissionsError, data: recordPermissionsData} = useQuery<\n        IGetRecordPermissions,\n        IGetRecordPermissionsVariables\n    >(getRecordPermissionsQuery(library.gqlNames?.query), {\n        variables: {recordId},\n        skip: isCreationMode\n    });\n\n    // Query runs if record is not specified (= record creation)\n    const {loading: libraryPermissionsLoading, error: libraryPermissionsError, data: libraryPermissionsData} = useQuery<\n        GET_LIBRARY_PERMISSIONS,\n        GET_LIBRARY_PERMISSIONSVariables\n    >(getLibraryPermissionsQuery, {\n        variables: {libraryId: library.id},\n        skip: !isCreationMode\n    });\n\n    if (recordPermissionsError || libraryPermissionsError) {\n        return {loading: false, canEdit: false, isReadOnly: true};\n    }\n\n    const libraryPermissionsElem = libraryPermissionsData?.libraries.list[0];\n    const recordPermissionsElem = recordPermissionsData?.[library.gqlNames?.query]?.list[0];\n\n    return {\n        loading: recordPermissionsLoading || libraryPermissionsLoading,\n        canEdit: isCreationMode\n            ? libraryPermissionsElem?.permissions.create_record\n            : recordPermissionsElem?.permissions.access_record,\n        isReadOnly: isCreationMode\n            ? !libraryPermissionsElem?.permissions.create_record\n            : !recordPermissionsElem?.permissions.edit_record\n    };\n};\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {gql} from '@apollo/client';\nimport recordIdentityFragment from '../records/recordIdentityFragment';\n\nexport const getRecordFormQuery = gql`\n    ${recordIdentityFragment}\n    query RECORD_FORM($libraryId: String!, $formId: String!, $recordId: String) {\n        recordForm(recordId: $recordId, libraryId: $libraryId, formId: $formId) {\n            id\n            recordId\n            library {\n                id\n            }\n            elements {\n                id\n                containerId\n                uiElementType\n                type\n                values {\n                    id_value\n                    created_at\n                    modified_at\n                    created_by {\n                        ...RecordIdentity\n                    }\n                    modified_by {\n                        ...RecordIdentity\n                    }\n\n                    ... on Value {\n                        value\n                        raw_value\n                    }\n\n                    ... on LinkValue {\n                        linkValue: value {\n                            ...RecordIdentity\n                        }\n                    }\n\n                    ... on TreeValue {\n                        treeValue: value {\n                            record {\n                                ...RecordIdentity\n                            }\n\n                            ancestors {\n                                record {\n                                    ...RecordIdentity\n                                }\n                            }\n                        }\n                    }\n                }\n                attribute {\n                    id\n                    label\n                    description\n                    type\n                    format\n                    system\n                    multiple_values\n                    permissions(record: {id: $recordId, library: $libraryId}) {\n                        access_attribute\n                        edit_value\n                    }\n\n                    ... on StandardAttribute {\n                        values_list {\n                            ... on StandardStringValuesListConf {\n                                enable\n                                allowFreeEntry\n                                values\n                            }\n\n                            ... on StandardDateRangeValuesListConf {\n                                enable\n                                allowFreeEntry\n                                dateRangeValues: values {\n                                    from\n                                    to\n                                }\n                            }\n                        }\n                    }\n\n                    ... on LinkAttribute {\n                        linked_library {\n                            id\n                            label\n                            gqlNames {\n                                type\n                                query\n                            }\n                        }\n                        linkValuesList: values_list {\n                            enable\n                            allowFreeEntry\n                            values {\n                                ...RecordIdentity\n                            }\n                        }\n                    }\n\n                    ... on TreeAttribute {\n                        linked_tree {\n                            id\n                            label\n                        }\n                        treeValuesList: values_list {\n                            enable\n                            allowFreeEntry\n                            values {\n                                record {\n                                    ...RecordIdentity\n                                }\n                                ancestors {\n                                    record {\n                                        ...RecordIdentity\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                settings {\n                    key\n                    value\n                }\n            }\n        }\n    }\n`;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {useMutation, useQuery} from '@apollo/client';\nimport {saveUserData} from 'graphQL/mutations/userData/saveUserData';\nimport {getUserDataQuery} from 'graphQL/queries/userData/getUserData';\nimport {GET_USER_DATA, GET_USER_DATAVariables} from '_gqlTypes/GET_USER_DATA';\nimport {SAVE_USER_DATA, SAVE_USER_DATAVariables} from '../../_gqlTypes/SAVE_USER_DATA';\n\nconst RECORDS_CONSULTATION_KEY = 'records_consultation';\nconst HISTORY_LENGTH = 10;\n\nexport default async function (libraryId: string | null, recordId: string | null) {\n    const [updatingRecordsConsultationMutation] = useMutation<SAVE_USER_DATA, SAVE_USER_DATAVariables>(saveUserData, {\n        refetchQueries: [\n            {\n                query: getUserDataQuery,\n                variables: {keys: [`${RECORDS_CONSULTATION_KEY}_${libraryId}`]}\n            }\n        ]\n    });\n\n    useQuery<GET_USER_DATA, GET_USER_DATAVariables>(getUserDataQuery, {\n        skip: !libraryId || !recordId,\n        variables: {\n            keys: [`${RECORDS_CONSULTATION_KEY}_${libraryId}`]\n        },\n        onCompleted: async data => {\n            const history = data.userData.data[RECORDS_CONSULTATION_KEY]\n                ? [...data.userData.data[RECORDS_CONSULTATION_KEY]]\n                : [];\n\n            const idx = history.indexOf(recordId);\n\n            if (idx !== -1) {\n                history.splice(idx, 1);\n            } else if (history.length >= HISTORY_LENGTH) {\n                history.pop();\n            }\n\n            history.unshift(recordId);\n\n            await updatingRecordsConsultationMutation({\n                variables: {\n                    key: `${RECORDS_CONSULTATION_KEY}_${libraryId}`,\n                    value: history,\n                    global: false\n                }\n            });\n        }\n    });\n}\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport useRecordsConsultationHistory from './useRecordsConsultationHistory';\nexport default useRecordsConsultationHistory;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {Divider, Skeleton} from 'antd';\nimport React from 'react';\n\ninterface IEditRecordSkeletonProps {\n    rows: number;\n}\n\nfunction EditRecordSkeleton({rows}: IEditRecordSkeletonProps): JSX.Element {\n    const rowsArray = Array(rows)\n        .fill('')\n        .map((_, i) => i);\n\n    return (\n        <>\n            {rowsArray.map(el => (\n                <div key={el} data-testid=\"edit-record-skeleton\">\n                    <Skeleton.Input active size=\"large\" style={{width: 100, margin: '0 .5rem'}} />\n                    <Skeleton.Input active size=\"large\" style={{width: 450, margin: '0 .5rem'}} />\n                    <Divider />\n                </div>\n            ))}\n        </>\n    );\n}\n\nexport default EditRecordSkeleton;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {createContext, useContext} from 'react';\nimport {IRecordEditionContext} from '../_types';\n\nexport const RecordEditionContext = createContext<IRecordEditionContext>({elements: {}, readOnly: false});\n\nexport const useRecordEditionContext = () => useContext(RecordEditionContext);\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {Col, Row} from 'antd';\nimport React from 'react';\nimport {useRecordEditionContext} from '../../hooks/useRecordEditionContext';\nimport {IFormElementProps} from '../../_types';\n\nfunction Container({element, record, onValueSubmit, onValueDelete}: IFormElementProps<{}>): JSX.Element {\n    const {elements: formElements} = useRecordEditionContext();\n    const children = formElements[element.id] ?? [];\n\n    return (\n        <>\n            {children.map(el => (\n                <Row data-testid=\"container-child-element\" key={el.id}>\n                    <Col span={24}>\n                        {el.uiElement && (\n                            <el.uiElement\n                                element={el}\n                                record={record}\n                                onValueSubmit={onValueSubmit}\n                                onValueDelete={onValueDelete}\n                            />\n                        )}\n                    </Col>\n                </Row>\n            ))}\n        </>\n    );\n}\n\nexport default Container;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport Container from './Container';\nexport default Container;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {IFormDividerSettings} from '@leav/utils';\nimport {Divider} from 'antd';\nimport React from 'react';\nimport {IFormElementProps} from '../../_types';\n\nfunction FormDivider({element}: IFormElementProps<IFormDividerSettings>): JSX.Element {\n    const label = element.settings.title ?? null;\n    return <Divider>{label}</Divider>;\n}\n\nexport default FormDivider;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport FormDivider from './FormDivider';\nexport default FormDivider;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {FormUIElementTypes, IFormTabsSettings, TabsDirection} from '@leav/utils';\nimport {Tabs} from 'antd';\nimport {useLang} from 'hooks/LangHook/LangHook';\nimport React from 'react';\nimport styled from 'styled-components';\nimport themingVar from 'themingVar';\nimport {localizedTranslation} from 'utils';\nimport {FormElementTypes} from '_gqlTypes/globalTypes';\nimport {formComponents} from '..';\nimport {FormElement, IFormElementProps} from '../../_types';\n\nconst StyledTabs = styled(Tabs)`\n    && {\n        padding: 1rem;\n        border: 1px solid ${themingVar['@leav-secondary-divider-color']};\n        margin: 1rem 0;\n        border-radius: 3px;\n        overflow: visible;\n    }\n`;\n\nfunction FormTabs({element, record, onValueSubmit, onValueDelete}: IFormElementProps<IFormTabsSettings>): JSX.Element {\n    const [{lang}] = useLang();\n    const tabPosition = element.settings.direction === TabsDirection.VERTICAL ? 'left' : 'top';\n\n    return (\n        <StyledTabs tabPosition={tabPosition} data-testid=\"form-tabs\">\n            {element.settings.tabs.map(tab => {\n                const tabContainer: FormElement<{}> = {\n                    id: `${element.id}/${tab.id}`,\n                    containerId: element.id,\n                    settings: {},\n                    attribute: null,\n                    type: FormElementTypes.layout,\n                    uiElement: formComponents[FormUIElementTypes.FIELDS_CONTAINER],\n                    uiElementType: FormUIElementTypes.FIELDS_CONTAINER,\n                    values: null\n                };\n\n                return (\n                    <Tabs.TabPane tab={localizedTranslation(tab.label, lang)} key={tab.id}>\n                        <tabContainer.uiElement\n                            element={tabContainer}\n                            record={record}\n                            onValueSubmit={onValueSubmit}\n                            onValueDelete={onValueDelete}\n                        />\n                    </Tabs.TabPane>\n                );\n            })}\n        </StyledTabs>\n    );\n}\n\nexport default FormTabs;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport FormTabs from './FormTabs';\nexport default FormTabs;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport React from 'react';\nimport styled from 'styled-components';\n\ninterface IDimmerProps {\n    onClick: () => void;\n}\n\nconst DimmerElem = styled.div`\n    position: fixed;\n    z-index: 1;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    background-color: rgba(0, 0, 0, 0.2);\n`;\n\nfunction Dimmer({onClick}: IDimmerProps): JSX.Element {\n    const _handleClick = () => onClick();\n\n    return <DimmerElem data-testid=\"dimmer\" onClick={_handleClick} />;\n}\n\nexport default Dimmer;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport Dimmer from './Dimmer';\nexport default Dimmer;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {CloseOutlined, ExclamationCircleOutlined} from '@ant-design/icons';\nimport {Button, Space} from 'antd';\nimport React from 'react';\nimport styled from 'styled-components';\nimport themingVar from 'themingVar';\n\ninterface IErrorMessageProps {\n    error: string | string[];\n    onClose: () => void;\n}\n\nconst ErrorMessageWrapper = styled.div`\n    color: ${themingVar['@error-color']};\n    font-weight: bold;\n`;\n\nconst ErrorsList = styled.ul`\n    list-style: none;\n`;\n\nfunction ErrorMessage({error, onClose}: IErrorMessageProps): JSX.Element {\n    const displayedError = Array.isArray(error) ? (\n        <ErrorsList>\n            {error.map(e => (\n                <li>{e}</li>\n            ))}\n        </ErrorsList>\n    ) : (\n        error\n    );\n\n    return (\n        <ErrorMessageWrapper>\n            <Space size=\"small\" align=\"start\">\n                <ExclamationCircleOutlined />\n                {displayedError}\n                <Button onClick={onClose} size=\"small\" icon={<CloseOutlined />} style={{border: 'none'}} />\n            </Space>\n        </ErrorMessageWrapper>\n    );\n}\n\nexport default ErrorMessage;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport ErrorMessage from './ErrorMessage';\nexport default ErrorMessage;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\n\nimport {QueryResult, useQuery} from '@apollo/client';\nimport {Override} from '@leav/utils';\nimport {\n    getRecordColumnsValues,\n    GetRecordColumnsValuesRecord,\n    IGetRecordColumnsValues,\n    IGetRecordColumnsValuesVariables\n} from 'graphQL/queries/records/getRecordColumnsValues';\nimport {useState} from 'react';\nimport {RecordFilterCondition, RecordFilterOperator} from '_gqlTypes/globalTypes';\nimport {IQueryFilter} from '_types/types';\n\nexport interface IColumnsValuesByRecord {\n    [recordId: string]: GetRecordColumnsValuesRecord;\n}\n\nexport type IUseGetRecordColumnsValuesQueryHook = Override<\n    QueryResult<IGetRecordColumnsValues>,\n    {data: IColumnsValuesByRecord}\n>;\n\nconst _recordIdsToQueryFilters = (recordIds: string[]): IQueryFilter[] =>\n    recordIds.reduce((allFilters: IQueryFilter[], recordId: string, i: number) => {\n        if (i) {\n            allFilters.push({operator: RecordFilterOperator.OR});\n        }\n\n        allFilters.push({field: 'id', condition: RecordFilterCondition.EQUAL, value: recordId});\n\n        return allFilters;\n    }, []);\n\nexport const useGetRecordColumnsValuesQuery = (\n    libraryGqlQueryType: string,\n    columns: string[],\n    recordIds: string[]\n): IUseGetRecordColumnsValuesQueryHook => {\n    const [queryData, setQueryData] = useState<IColumnsValuesByRecord>();\n\n    const _convertQueryResult = (queryResult: IGetRecordColumnsValues): IColumnsValuesByRecord =>\n        (queryResult[libraryGqlQueryType]?.list ?? []).reduce((valuesByRecord, recordValues) => {\n            valuesByRecord[recordValues._id] = recordValues;\n            return valuesByRecord;\n        }, {});\n\n    const query = useQuery<IGetRecordColumnsValues, IGetRecordColumnsValuesVariables>(\n        getRecordColumnsValues(libraryGqlQueryType, columns),\n        {\n            variables: {\n                // Turn records ids into filters with OR operators\n                filters: _recordIdsToQueryFilters(recordIds)\n            },\n            skip: !libraryGqlQueryType || !columns.length || !recordIds.length,\n            onCompleted: data => {\n                const cleanData: IColumnsValuesByRecord = _convertQueryResult(data);\n                setQueryData(cleanData);\n            }\n        }\n    );\n\n    const customRefetch = async (refetchRecordIds: string[]) => {\n        const customVariables = {\n            filters: _recordIdsToQueryFilters(refetchRecordIds ?? [])\n        };\n\n        const refetchData = await query.refetch(customVariables);\n\n        const cleanData: IColumnsValuesByRecord = _convertQueryResult(refetchData.data);\n        setQueryData({...queryData, ...cleanData});\n\n        return refetchData;\n    };\n\n    return {\n        ...query,\n        loading: query.loading || typeof queryData === undefined,\n        data: queryData,\n        refetch: customRefetch\n    };\n};\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {gqlUnchecked} from 'utils';\nimport {RecordIdentity_whoAmI} from '_gqlTypes/RecordIdentity';\nimport {IQueryFilter} from '_types/types';\nimport recordIdentityFragment from './recordIdentityFragment';\n\nexport interface IRecordColumnLinkValue {\n    id: string;\n    whoAmI: RecordIdentity_whoAmI;\n}\n\nexport interface IRecordColumnTreeValueRecord {\n    id: string;\n    whoAmI: RecordIdentity_whoAmI;\n}\n\nexport interface IRecordColumnTreeValue {\n    record: IRecordColumnTreeValueRecord;\n}\n\nexport interface IRecordColumnValueStandard {\n    value: string | null;\n}\n\nexport interface IRecordColumnValueLink {\n    linkValue: IRecordColumnLinkValue | null;\n}\n\nexport interface IRecordColumnValueTree {\n    treeValue: IRecordColumnTreeValue | null;\n}\n\nexport type RecordColumnValue = IRecordColumnValueStandard | IRecordColumnValueLink | IRecordColumnValueTree;\n\nexport type GetRecordColumnsValuesRecord = {\n    [attributeName: string]: RecordColumnValue[];\n} & {\n    _id: string;\n};\n\nexport interface IGetRecordColumnsValues {\n    [libName: string]: {\n        list: GetRecordColumnsValuesRecord[];\n    };\n}\n\nexport interface IGetRecordColumnsValuesVariables {\n    filters: IQueryFilter[];\n}\n\nconst _getColumnQueryPart = (column: string): string => `\n    ${column}: property(attribute: \"${column}\") {\n        ...on Value {\n            value\n        }\n\n        ...on LinkValue {\n            linkValue: value {\n                ...RecordIdentity\n            }\n        }\n\n        ...on TreeValue {\n            treeValue: value {\n                record {\n                    ...RecordIdentity\n                }\n            }\n        }\n    }\n`;\n\nexport const getRecordColumnsValues = (libraryGqlType: string, columns: string[]) => {\n    return gqlUnchecked`\n    ${columns.length ? recordIdentityFragment : ''}\n\n    query RECORD_COLUMNS_VALUES_${libraryGqlType}($filters: [RecordFilterInput]) {\n        ${libraryGqlType}(filters: $filters) {\n            list {\n                _id: id\n                ${columns.length ? columns.map(column => _getColumnQueryPart(column)).join('\\n') : ''}\n            }\n        }\n    }`;\n};\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {PlusOutlined} from '@ant-design/icons';\nimport {Button, ButtonProps} from 'antd';\nimport React from 'react';\nimport {useTranslation} from 'react-i18next';\nimport styled from 'styled-components';\nimport themingVar from 'themingVar';\n\ninterface IAddValueBtnProps extends ButtonProps {\n    bordered?: boolean;\n}\n\nconst StyledBtn = styled(({bordered, ...rest}: IAddValueBtnProps) => <Button {...rest} />)`\n    && {\n        color: ${themingVar['@leav-secondary-font-color']};\n        &,\n        &:hover,\n        &[disabled] {\n            background: transparent;\n        }\n        text-align: left;\n\n        ${p => (!p.bordered ? '&, &:hover {border: 0;}' : '')}\n    }\n`;\n\nfunction AddValueBtn({bordered = false, ...props}: IAddValueBtnProps): JSX.Element {\n    const {t} = useTranslation();\n    return (\n        <StyledBtn bordered={bordered} {...props}>\n            <PlusOutlined />\n            {t('record_edition.add_value')}\n        </StyledBtn>\n    );\n}\n\nexport default AddValueBtn;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport AddValueBtn from './AddValueBtn';\nexport default AddValueBtn;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {FileAddOutlined, FileOutlined} from '@ant-design/icons';\nimport {Button} from 'antd';\nimport React from 'react';\nimport {useTranslation} from 'react-i18next';\nimport styled from 'styled-components';\n\ninterface INoValueProps {\n    canAddValue: boolean;\n    onAddValue: () => void;\n}\n\nconst NoValueWrapper = styled.div`\n    font-size: 1.1em;\n\n    span {\n        margin-left: 0.5em;\n    }\n`;\n\nconst AddButton = styled(Button)`\n    && {\n        border: none;\n        width: 100%;\n        color: rgba(0, 0, 0, 0.25);\n    }\n\n    &&:hover {\n        border: none;\n    }\n`;\n\nfunction NoValue({canAddValue, onAddValue}: INoValueProps): JSX.Element {\n    const {t} = useTranslation();\n\n    return (\n        <NoValueWrapper onClick={onAddValue}>\n            {canAddValue ? (\n                <AddButton onClick={onAddValue} size=\"small\">\n                    <FileAddOutlined />\n                    <span>{t('record_edition.add_value')}</span>\n                </AddButton>\n            ) : (\n                <>\n                    <FileOutlined />\n                    <span>{t('record_edition.no_value')}</span>\n                </>\n            )}\n        </NoValueWrapper>\n    );\n}\n\nexport default NoValue;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {AnyPrimitive, FormFieldTypes, FormUIElementTypes, ICommonFieldsSettings, Override} from '@leav/utils';\nimport {Checkbox, DatePicker, Input} from 'antd';\nimport {ITreeNodeWithRecord} from 'components/shared/SelectTreeNodeModal/SelectTreeNodeModal';\nimport {MutableRefObject} from 'react';\nimport {RecordIdentity, RecordIdentity_whoAmI} from '_gqlTypes/RecordIdentity';\nimport {RECORD_FORM_recordForm_elements, RECORD_FORM_recordForm_elements_attribute} from '_gqlTypes/RECORD_FORM';\nimport {\n    SAVE_VALUE_BATCH_saveValueBatch_errors,\n    SAVE_VALUE_BATCH_saveValueBatch_values\n} from '_gqlTypes/SAVE_VALUE_BATCH';\nimport {IDateRangeValue, IRecordIdentityWhoAmI} from '_types/types';\nimport {\n    IStandardFieldReducerState,\n    IStandardFieldValue\n} from './uiElements/StandardField/standardFieldReducer/standardFieldReducer';\nimport {ValueInput} from '_gqlTypes/globalTypes';\n\nexport interface IValueToSubmit {\n    attribute: string;\n    value: AnyPrimitive | null;\n    idValue: string;\n}\n\nexport enum APICallStatus {\n    SUCCESS = 'SUCCESS',\n    ERROR = 'ERROR',\n    PARTIAL = 'PARTIAL'\n}\n\nexport type FieldSubmitMultipleFunc = (\n    record: RecordIdentity_whoAmI,\n    values: IValueToSubmit[]\n) => Promise<ISubmitMultipleResult>;\nexport interface ISubmitMultipleResult {\n    status: APICallStatus;\n    error?: string;\n    values?: SAVE_VALUE_BATCH_saveValueBatch_values[];\n    errors?: SAVE_VALUE_BATCH_saveValueBatch_errors[];\n}\n\nexport interface IDeleteValueResult {\n    status: APICallStatus;\n    error?: string;\n}\n\nexport interface IRecordEditionContext {\n    elements: IFormElementsByContainer;\n    readOnly: boolean;\n}\n\nexport interface IFormElementsByContainer {\n    [containerId: string]: Array<FormElement<unknown>>;\n}\n\nexport interface ISubmittedValueStandard extends ISubmittedValueBase {\n    value: AnyPrimitive;\n}\n\nexport interface ISubmittedValueLink extends ISubmittedValueBase {\n    value: RecordIdentity;\n}\n\nexport interface ISubmittedValueTree extends ISubmittedValueBase {\n    value: ITreeNodeWithRecord;\n}\n\nexport type SubmittedValue = ISubmittedValueStandard | ISubmittedValueLink | ISubmittedValueTree;\n\nexport type SubmitValueFunc = (values: SubmittedValue[]) => Promise<ISubmitMultipleResult>;\nexport type DeleteValueFunc = (value: ValueInput | null, attribute: string) => Promise<IDeleteValueResult>;\n\nexport interface ISubmittedValueBase {\n    attribute: RECORD_FORM_recordForm_elements_attribute;\n    idValue: string;\n}\n\nexport interface IFormElementProps<SettingsType> {\n    record: IRecordIdentityWhoAmI;\n    element: FormElement<SettingsType>;\n    onValueSubmit: SubmitValueFunc;\n    onValueDelete: DeleteValueFunc;\n}\n\nexport type FormElement<SettingsType> = Override<\n    RECORD_FORM_recordForm_elements,\n    {\n        settings: SettingsType;\n        uiElementType: FormUIElementTypes | FormFieldTypes;\n    }\n> & {\n    uiElement: (props: IFormElementProps<unknown>) => JSX.Element;\n};\n\nexport interface IDependencyValues {\n    [attributeId: string]: Array<{id: string; library: string}>;\n}\n\nexport interface IStandardInputProps {\n    state: IStandardFieldReducerState;\n    fieldValue: IStandardFieldValue;\n    onFocus: () => void;\n    onChange: (value: string) => void;\n    onSubmit: (valueToSave: StandardValueTypes) => void;\n    onPressEnter?: () => void;\n    settings: ICommonFieldsSettings;\n    inputRef: MutableRefObject<InputRefPossibleTypes>;\n}\n\nexport type InputRefPossibleTypes = Input | typeof DatePicker | typeof Checkbox;\n\nexport type StandardValueTypes = AnyPrimitive | IDateRangeValue;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport NoValue from './NoValue';\nexport default NoValue;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {DeleteOutlined} from '@ant-design/icons';\nimport {Button, ButtonProps, Popconfirm} from 'antd';\nimport React from 'react';\nimport {useTranslation} from 'react-i18next';\n\ninterface IDeleteValueBtnProps extends ButtonProps {\n    onDelete: () => void;\n}\n\nfunction DeleteValueBtn({onDelete, ...buttonProps}: IDeleteValueBtnProps): JSX.Element {\n    const {t} = useTranslation();\n\n    const _handleDelete = () => onDelete();\n\n    return (\n        <Popconfirm\n            placement=\"leftTop\"\n            title={t('record_edition.delete_value_confirm')}\n            onConfirm={_handleDelete}\n            okText={t('global.submit')}\n            okButtonProps={{'aria-label': 'delete-confirm-button'}}\n            cancelText={t('global.cancel')}\n        >\n            <Button\n                shape=\"circle\"\n                {...buttonProps}\n                icon={<DeleteOutlined />}\n                style={{background: '#FFF'}}\n                danger\n                aria-label=\"delete-value\"\n                onClick={e => e.stopPropagation()}\n                className=\"delete-value-button\"\n            />\n        </Popconfirm>\n    );\n}\n\nexport default DeleteValueBtn;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {RecordProperty} from 'graphQL/queries/records/getRecordPropertiesQuery';\nimport {RecordIdentity_whoAmI} from '_gqlTypes/RecordIdentity';\nimport {RECORD_FORM_recordForm_elements_attribute} from '_gqlTypes/RECORD_FORM';\n\nexport interface IRecordPropertyWithAttribute {\n    attribute: RECORD_FORM_recordForm_elements_attribute;\n    value: RecordProperty;\n}\n\nexport interface IEditRecordReducerState {\n    record: RecordIdentity_whoAmI;\n    activeValue: IRecordPropertyWithAttribute;\n    sidebarCollapsed: boolean;\n}\n\nexport enum EditRecordReducerActionsTypes {\n    TOGGLE_SIDEBAR = 'TOGGLE_SIDEBAR',\n    SET_ACTIVE_VALUE = 'SET_ACTIVE_VALUE'\n}\n\nexport type IEditRecordReducerActions =\n    | {\n          type: EditRecordReducerActionsTypes.TOGGLE_SIDEBAR;\n      }\n    | {\n          type: EditRecordReducerActionsTypes.SET_ACTIVE_VALUE;\n          value: IRecordPropertyWithAttribute;\n      };\n\nexport type EditRecordDispatchFunc = (action: IEditRecordReducerActions) => void;\n\nexport const initialState: IEditRecordReducerState = {\n    record: null,\n    activeValue: null,\n    sidebarCollapsed: true\n};\n\nconst editRecordReducer = (\n    state: IEditRecordReducerState,\n    action: IEditRecordReducerActions\n): IEditRecordReducerState => {\n    switch (action.type) {\n        case EditRecordReducerActionsTypes.TOGGLE_SIDEBAR:\n            return {...state, sidebarCollapsed: !state.sidebarCollapsed};\n        case EditRecordReducerActionsTypes.SET_ACTIVE_VALUE:\n            return {...state, activeValue: action.value};\n        default:\n            return state;\n    }\n};\n\nexport default editRecordReducer;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport DeleteValueBtn from './DeleteValueBtn';\nexport default DeleteValueBtn;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport React, {Dispatch} from 'react';\nimport {IEditRecordReducerActions, IEditRecordReducerState, initialState} from './editRecordReducer';\n\nexport const EditRecordReducerContext = React.createContext<{\n    state: IEditRecordReducerState;\n    dispatch: Dispatch<IEditRecordReducerActions>;\n}>({state: initialState, dispatch: () => initialState});\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {useContext} from 'react';\nimport {EditRecordReducerContext} from './editRecordReducerContext';\n\nexport const useEditRecordReducer = () => useContext(EditRecordReducerContext);\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {InfoOutlined} from '@ant-design/icons';\nimport {Button, ButtonProps} from 'antd';\nimport {EditRecordReducerActionsTypes} from 'components/RecordEdition/editRecordReducer/editRecordReducer';\nimport {useEditRecordReducer} from 'components/RecordEdition/editRecordReducer/useEditRecordReducer';\nimport {RecordProperty} from 'graphQL/queries/records/getRecordPropertiesQuery';\nimport React from 'react';\nimport {RECORD_FORM_recordForm_elements_attribute} from '_gqlTypes/RECORD_FORM';\n\ninterface IValueDetailsBtnProps extends Omit<ButtonProps, 'value'> {\n    attribute: RECORD_FORM_recordForm_elements_attribute;\n    value: RecordProperty;\n}\n\nfunction ValueDetailsBtn({value, attribute, ...buttonProps}: IValueDetailsBtnProps): JSX.Element {\n    const {dispatch} = useEditRecordReducer();\n\n    const _handleClick = () => {\n        dispatch({\n            type: EditRecordReducerActionsTypes.SET_ACTIVE_VALUE,\n            value: {\n                value,\n                attribute\n            }\n        });\n    };\n\n    return (\n        <Button\n            className=\"value-details-btn\"\n            shape=\"circle\"\n            {...buttonProps}\n            icon={<InfoOutlined />}\n            onClick={_handleClick}\n        />\n    );\n}\n\nexport default ValueDetailsBtn;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport ValueDetailsBtn from './ValueDetailsBtn';\nexport default ValueDetailsBtn;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {ArrowsAltOutlined} from '@ant-design/icons';\nimport {Button, ButtonProps} from 'antd';\nimport React, {SyntheticEvent, useState} from 'react';\nimport {IRecordIdentityWhoAmI} from '_types/types';\nimport EditRecordModal from '../EditRecordModal';\n\ninterface IEditRecordBtnProps extends ButtonProps {\n    record: IRecordIdentityWhoAmI;\n}\n\nfunction EditRecordBtn({record, ...buttonProps}: IEditRecordBtnProps): JSX.Element {\n    const [isModalOpen, setIsModalOpen] = useState<boolean>();\n\n    const _handleClick = (e: SyntheticEvent) => {\n        e.stopPropagation();\n        e.preventDefault();\n\n        setIsModalOpen(true);\n    };\n\n    const _handleClose = () => {\n        setIsModalOpen(false);\n    };\n\n    return (\n        <>\n            <Button\n                aria-label=\"edit-record\"\n                shape=\"circle\"\n                {...buttonProps}\n                icon={<ArrowsAltOutlined size={48} />}\n                onClick={_handleClick}\n            />\n            {isModalOpen && (\n                <EditRecordModal\n                    open={isModalOpen}\n                    record={record}\n                    library={record.library.id}\n                    onClose={_handleClose}\n                />\n            )}\n        </>\n    );\n}\n\nexport default EditRecordBtn;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport EditRecordBtn from './EditRecordBtn';\nexport default EditRecordBtn;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport DeleteValueBtn from 'components/RecordEdition/EditRecord/shared/DeleteValueBtn';\nimport ValueDetailsBtn from 'components/RecordEdition/EditRecord/shared/ValueDetailsBtn';\nimport EditRecordBtn from 'components/RecordEdition/EditRecordBtn';\nimport FloatingMenu from 'components/shared/FloatingMenu';\nimport {FloatingMenuAction} from 'components/shared/FloatingMenu/FloatingMenu';\nimport {RecordProperty} from 'graphQL/queries/records/getRecordPropertiesQuery';\nimport React, {ReactNode} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {RECORD_FORM_recordForm_elements_attribute} from '_gqlTypes/RECORD_FORM';\nimport {IRecordIdentityWhoAmI} from '_types/types';\n\ninterface IFloatingMenuHandlerProps {\n    record: IRecordIdentityWhoAmI;\n    onDelete: (record: IRecordIdentityWhoAmI) => void;\n    value: RecordProperty;\n    attribute: RECORD_FORM_recordForm_elements_attribute;\n    isReadOnly: boolean;\n    children?: ReactNode;\n}\n\nfunction FloatingMenuHandler({\n    record,\n    onDelete,\n    value,\n    attribute,\n    isReadOnly,\n    children\n}: IFloatingMenuHandlerProps): JSX.Element {\n    const {t} = useTranslation();\n    const _handleDelete = () => onDelete(record);\n\n    const menuActions: FloatingMenuAction[] = [\n        {\n            title: t('global.edit'),\n            button: <EditRecordBtn record={record} shape=\"circle\" />\n        },\n        {\n            title: t('record_edition.value_details'),\n            button: <ValueDetailsBtn value={value} attribute={attribute} />\n        }\n    ];\n\n    if (!isReadOnly) {\n        menuActions.push({\n            title: t('global.delete'),\n            button: <DeleteValueBtn onDelete={_handleDelete} />\n        });\n    }\n\n    return (\n        <div>\n            {children}\n            <FloatingMenu actions={menuActions} />\n        </div>\n    );\n}\n\nexport default FloatingMenuHandler;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport FloatingMenuHandler from './FloatingMenuHandler';\nexport default FloatingMenuHandler;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {gqlUnchecked} from 'utils';\n\nexport const getEmbeddedFields = (depth = 0) => {\n    return `\n        embedded_fields {\n            id\n            format\n            label\n            ${depth > 0 ? getEmbeddedFields(depth - 1) : ''}\n        }\n    `;\n};\n\nexport const getAttributeWithEmbeddedFields = (depth: number) => {\n    return gqlUnchecked`\n        query GET_ATTRIBUTE_WITH_EMBEDDED_FIELDS($attributeId: ID!) {\n            attributes(filters: {id: $attributeId}) {\n                list {\n                    id\n                    format\n                    label\n                    ... on StandardAttribute {\n                        ${getEmbeddedFields(depth)}\n                    }\n                }\n            }\n        }\n    `;\n};\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\n\nimport {QueryResult, useQuery} from '@apollo/client';\nimport {getLibraryDetailExtendedQuery} from 'graphQL/queries/libraries/getLibraryDetailExtendQuery';\nimport {GET_LIBRARY_DETAIL_EXTENDED, GET_LIBRARY_DETAIL_EXTENDEDVariables} from '_gqlTypes/GET_LIBRARY_DETAIL_EXTENDED';\n\nexport interface IUseGetLibraryDetailExtendedQueryHookParams {\n    library: string;\n}\n\nconst DEPTH_EMBEDDED_FIELDS = 100;\n\nexport default function useGetLibraryDetailExtendedQuery({\n    library\n}: IUseGetLibraryDetailExtendedQueryHookParams): QueryResult<GET_LIBRARY_DETAIL_EXTENDED> {\n    const query = useQuery<GET_LIBRARY_DETAIL_EXTENDED, GET_LIBRARY_DETAIL_EXTENDEDVariables>(\n        getLibraryDetailExtendedQuery(DEPTH_EMBEDDED_FIELDS),\n        {\n            variables: {\n                libId: library\n            },\n            skip: !library\n        }\n    );\n\n    return query;\n}\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {gqlUnchecked} from 'utils';\nimport {AttributeFormat, AttributeType, ViewSizes, ViewTypes} from '_gqlTypes/globalTypes';\nimport {\n    AttributeConditionType,\n    ISystemTranslation,\n    OperatorFilter,\n    OrderSearch,\n    TreeConditionFilter\n} from '../../../_types/types';\nimport {getEmbeddedFields} from '../attributes/getAttributeWithEmbeddedFields';\n\nexport interface ILibraryDetailExtendedFilter {\n    field?: string;\n    value?: string;\n    condition?: AttributeConditionType | TreeConditionFilter;\n    operator?: OperatorFilter;\n}\n\nexport interface ILibraryDetailExtendedDefaultView {\n    id: string;\n    label: string;\n    description?: string;\n    display: {size: ViewSizes; type: ViewTypes};\n    shared: boolean;\n    filters?: ILibraryDetailExtendedFilter[];\n    color: string;\n    sort: {\n        field: string;\n        order: OrderSearch;\n    };\n    settings?: Array<{\n        name: string;\n        value: any;\n    }>;\n}\n\nexport interface ILibraryDetailExtendedGqlNames {\n    query: string;\n    type: string;\n    filter: string;\n    searchableFields: string;\n}\n\nexport interface ILibraryDetailExtendedAttributeParentLinkedLibrary {\n    id: string;\n    label: ISystemTranslation;\n    attributes: ILibraryDetailExtendedAttributeChild[];\n}\n\nexport interface ILibraryDetailExtendedAttributeParentLinkedTree {\n    id: string;\n    label: ISystemTranslation;\n    libraries: Array<{\n        library: ILibraryDetailExtendedAttributeParentLinkedTreeLibrary;\n    }>;\n}\n\nexport interface ILibraryDetailExtendedAttributeParentLinkedTreeLibrary {\n    id: string;\n    label: ISystemTranslation;\n    attributes: ILibraryDetailExtendedAttributeChild[];\n}\n\ninterface ILibraryDetailExtendedAttribute {\n    id: string;\n    type: AttributeType;\n    format: AttributeFormat;\n    label: ISystemTranslation;\n    multiple_values: boolean;\n}\n\nexport type ILibraryDetailExtendedAttributeChild = ILibraryDetailExtendedAttribute;\n\nexport interface ILibraryDetailExtendedAttributeParent extends ILibraryDetailExtendedAttribute {\n    linked_library?: ILibraryDetailExtendedAttributeParentLinkedLibrary;\n    linked_tree?: ILibraryDetailExtendedAttributeParentLinkedTree;\n}\n\nexport interface ILibraryDetailExtended {\n    id: string;\n    system: boolean;\n    label: ISystemTranslation;\n    attributes: ILibraryDetailExtendedAttributeParent[];\n    gqlNames: ILibraryDetailExtendedGqlNames;\n    defaultView?: ILibraryDetailExtendedDefaultView;\n}\n\nexport interface IGetLibraryDetailExtendedQuery {\n    libraries: {\n        list: ILibraryDetailExtended[];\n    };\n}\n\nexport interface IGetLibraryDetailExtendedVariables {\n    libId: string;\n}\n\nexport const getLibraryDetailExtendedQuery = (depthEmbeddedFields: number) => gqlUnchecked`\n    query GET_LIBRARY_DETAIL_EXTENDED($libId: ID) {\n        libraries(filters: {id: $libId}) {\n            list {\n                id\n                system\n                label\n                linkedTrees {\n                    id\n                    label\n                    permissions {\n                        access_tree\n                    }\n                }\n                attributes {\n                    type\n                    format\n                    label\n                    multiple_values\n                    ... on StandardAttribute {\n                        id\n                        ${getEmbeddedFields(depthEmbeddedFields)}\n                    }\n                    ... on LinkAttribute {\n                        id\n                        linked_library {\n                            id\n                            label\n                            attributes {\n                                type\n                                format\n                                label\n                                multiple_values\n                                ... on StandardAttribute {\n                                    id\n                                    ${getEmbeddedFields(depthEmbeddedFields)}\n                                }\n                                ... on LinkAttribute {\n                                    id\n                                }\n                                ... on TreeAttribute {\n                                    id\n                                    linked_tree {\n                                        id\n                                        label\n                                    }\n                                }\n                            }\n                            __typename\n                        }\n                        __typename\n                    }\n                    ... on TreeAttribute {\n                        id\n                        linked_tree {\n                            id\n                            label\n                            libraries {\n                                library {\n                                    id\n                                    label\n                                    attributes {\n                                        id\n                                        type\n                                        format\n                                        label\n                                        multiple_values\n                                        ... on StandardAttribute {\n                                            id\n                                            ${getEmbeddedFields(depthEmbeddedFields)}\n                                        }\n                                        ... on LinkAttribute {\n                                            id\n                                        }\n                                        ... on TreeAttribute {\n                                            id\n                                            linked_tree {\n                                                id\n                                                label\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                gqlNames {\n                    query\n                    type\n                    filter\n                    searchableFields\n                }\n                defaultView {\n                    id\n                    description\n                    label\n                    display {\n                        size\n                        type\n                    }\n                    shared\n                    filters {\n                        field\n                        value\n                        condition\n                        operator\n                    }\n                    color\n                    sort {\n                        field\n                        order\n                    }\n                    settings {\n                        name\n                        value\n                    }\n                }\n                permissions {\n                    access_library\n                    access_record\n                    create_record\n                    edit_record\n                    delete_record\n                }\n            }\n        }\n    }\n`;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport Modal from 'antd/lib/modal/Modal';\nimport LibraryItemsList from 'components/LibraryItemsList';\nimport ErrorDisplay from 'components/shared/ErrorDisplay';\nimport {ErrorDisplayTypes} from 'components/shared/ErrorDisplay/ErrorDisplay';\nimport Loading from 'components/shared/Loading';\nimport useGetLibraryDetailExtendedQuery from 'hooks/useGetLibraryDetailExtendedQuery/useGetLibraryDetailExtendedQuery';\nimport React from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {useDispatch} from 'react-redux';\nimport {resetSearchSelection} from 'redux/selection';\nimport {useAppSelector} from 'redux/store';\nimport styled from 'styled-components';\nimport {ISharedStateSelectionSearch} from '_types/types';\n\nconst WrapperItemsList = styled.div`\n    position: relative;\n    height: 95%;\n`;\n\ninterface ISearchModalProps {\n    libId: string;\n    visible: boolean;\n    setVisible: (visible: boolean) => void;\n    submitAction: (selection: ISharedStateSelectionSearch) => void;\n}\n\nfunction SearchModal({visible, setVisible, submitAction, libId}: ISearchModalProps): JSX.Element {\n    const {t} = useTranslation();\n    const {selectionState} = useAppSelector(state => ({selectionState: state.selection}));\n    const dispatch = useDispatch();\n\n    const handleModalClose = () => {\n        dispatch(resetSearchSelection());\n        setVisible(false);\n    };\n\n    const handleOk = () => {\n        submitAction(selectionState.searchSelection);\n        handleModalClose();\n    };\n\n    const renderModal = (content: JSX.Element): JSX.Element => (\n        <Modal\n            visible={visible}\n            onCancel={handleModalClose}\n            width=\"95vw\"\n            bodyStyle={{height: '90vh', overflow: 'hidden'}}\n            style={{\n                top: '1rem'\n            }}\n            closable={false}\n            onOk={handleOk}\n            okText={t('global.apply')}\n            cancelText={t('global.cancel')}\n        >\n            {content}\n        </Modal>\n    );\n\n    const {loading, data, error} = useGetLibraryDetailExtendedQuery({library: libId});\n\n    if (loading) {\n        return renderModal(<Loading />);\n    }\n\n    if (error) {\n        return renderModal(<ErrorDisplay message={error.message} />);\n    }\n\n    if (!data.libraries.list.length) {\n        return renderModal(<ErrorDisplay message={t('lib_detail.not_found')} />);\n    }\n\n    if (!data.libraries.list[0].permissions.access_library) {\n        return <ErrorDisplay type={ErrorDisplayTypes.PERMISSION_ERROR} showActionButton={false} />;\n    }\n\n    return renderModal(\n        <WrapperItemsList>\n            <LibraryItemsList selectionMode={true} library={data.libraries.list[0]} />\n        </WrapperItemsList>\n    );\n}\n\nexport default SearchModal;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport SearchModal from './SearchModal';\nexport default SearchModal;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {List as AntdList, ListProps} from 'antd';\nimport Checkbox, {CheckboxChangeEvent} from 'antd/lib/checkbox/Checkbox';\nimport isEqual from 'lodash/isEqual';\nimport React from 'react';\nimport styled from 'styled-components';\nimport themingVar from 'themingVar';\n\nexport interface IListProps<D> extends Omit<ListProps<D>, 'renderItem'> {\n    maxHeight?: number | string;\n    dataSource: D[];\n    renderItemContent?: (item: D) => JSX.Element;\n    onItemClick?: (item: D) => void;\n    selectable?: boolean;\n    selectedItems?: D[];\n    onSelectionChange?: (selectedItems: D[]) => void;\n}\n\nconst Wrapper = styled.div<{maxHeight: string}>`\n    background-color: ${themingVar['@default-bg']};\n    border-radius: 5px;\n\n    .ant-list-items {\n        max-height: ${p => p.maxHeight || 'auto'};\n        overflow-y: auto;\n    }\n`;\n\nconst ListItem = styled(AntdList.Item)<{onClick: any}>`\n    cursor: ${p => (p.onClick ? 'pointer' : 'auto')};\n    && {\n        padding: 0;\n        justify-content: flex-start;\n    }\n`;\n\nconst CheckboxWrapper = styled.div`\n    margin: 0 1em;\n`;\n\nfunction List({\n    maxHeight,\n    onItemClick,\n    renderItemContent,\n    selectable,\n    selectedItems,\n    onSelectionChange,\n    ...listProps\n}: IListProps<any>): JSX.Element {\n    const props = {\n        renderItem: item => {\n            const _handleClick = onItemClick\n                ? () => {\n                      onItemClick(item);\n                  }\n                : null;\n\n            const _handleCheck = (e: CheckboxChangeEvent) => {\n                const newSelection = [...selectedItems];\n                if (e.target.checked) {\n                    newSelection.push(item);\n                } else {\n                    newSelection.splice(newSelection.indexOf(item), 1);\n                }\n                onSelectionChange(newSelection);\n            };\n\n            return (\n                <ListItem onClick={_handleClick}>\n                    {selectable && (\n                        <CheckboxWrapper onClick={e => e.stopPropagation()}>\n                            <Checkbox\n                                checked={selectedItems.some(selectedItem => isEqual(item, selectedItem))}\n                                onChange={_handleCheck}\n                            />\n                        </CheckboxWrapper>\n                    )}\n                    {renderItemContent ? renderItemContent(item) : item}\n                </ListItem>\n            );\n        },\n        ...listProps\n    };\n\n    const wrapperMaxHeight = typeof maxHeight === 'number' ? `${maxHeight}px` : String(maxHeight);\n\n    return (\n        <Wrapper maxHeight={wrapperMaxHeight}>\n            <AntdList {...props} />\n        </Wrapper>\n    );\n}\n\nexport default List;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport List from './List';\nexport default List;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {BulbOutlined, CloseOutlined, SearchOutlined} from '@ant-design/icons';\nimport {useLazyQuery} from '@apollo/client';\nimport {Button, Divider, Input, Space, Spin} from 'antd';\nimport Search from 'antd/lib/input/Search';\nimport {PaginationConfig} from 'antd/lib/pagination';\nimport {PrimaryBtn} from 'components/app/StyledComponent/PrimaryBtn';\nimport SearchModal from 'components/SearchModal';\nimport ErrorDisplay from 'components/shared/ErrorDisplay';\nimport List from 'components/shared/List';\nimport {IListProps} from 'components/shared/List/List';\nimport RecordCard from 'components/shared/RecordCard';\nimport {getRecordsFromLibraryQuery} from 'graphQL/queries/records/getRecordsFromLibraryQuery';\nimport {\n    IGetRecordsFromLibraryQuery,\n    IGetRecordsFromLibraryQueryVariables\n} from 'graphQL/queries/records/getRecordsFromLibraryQueryTypes';\nimport {useLang} from 'hooks/LangHook/LangHook';\nimport React, {useEffect, useRef, useState} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport styled from 'styled-components';\nimport themingVar from 'themingVar';\nimport {localizedTranslation} from 'utils';\nimport {SortOrder} from '_gqlTypes/globalTypes';\nimport {RecordIdentity} from '_gqlTypes/RecordIdentity';\nimport {\n    RECORD_FORM_recordForm_elements_attribute_LinkAttribute,\n    RECORD_FORM_recordForm_elements_attribute_LinkAttribute_linkValuesList_values\n} from '_gqlTypes/RECORD_FORM';\nimport {ISharedStateSelectionSearch, PreviewSize} from '_types/types';\n\ntype ValueFromList = RECORD_FORM_recordForm_elements_attribute_LinkAttribute_linkValuesList_values;\n\ninterface IValuesAddProps {\n    attribute: RECORD_FORM_recordForm_elements_attribute_LinkAttribute;\n    onAdd: (values: RecordIdentity[]) => void;\n    onClose: () => void;\n}\n\nconst Wrapper = styled.div`\n    background-color: ${themingVar['@default-bg']};\n    padding: 1em;\n    z-index: 1;\n    position: relative;\n\n    & .record-card .label {\n        font-weight: normal;\n        padding: 0.2em;\n    }\n\n    & .ant-list-pagination {\n        margin-top: 5px;\n    }\n`;\nconst ListsWrapper = styled.div`\n    max-height: 30rem;\n    overflow-y: scroll;\n`;\n\nconst SearchActions = styled.div`\n    margin: 0 0 1em 0;\n    width: 100%;\n    display: flex;\n    direction: row;\n    align-items: center;\n`;\n\nconst FooterWrapper = styled(Space)`\n    padding-top: 1em;\n    width: 100%;\n    display: flex;\n    justify-content: flex-end;\n`;\n\nconst SearchInput = styled(Search)`\n    flex-grow: 1;\n    margin-right: 1em;\n`;\n\nconst CloseButton = styled(CloseOutlined)`\n    margin-left: 2em;\n`;\n\nconst StartTypingMessage = styled.div`\n    padding: 0.5rem;\n    font-style: italic;\n`;\n\nconst _renderListItem = (item: ValueFromList) => (\n    <RecordCard record={item.whoAmI} key={item.id} size={PreviewSize.small} withLibrary={false} withPreview={false} />\n);\n\nfunction ValuesAdd({attribute, onAdd, onClose}: IValuesAddProps): JSX.Element {\n    const {t} = useTranslation();\n    const [{lang}] = useLang();\n    const valuesList = attribute.linkValuesList.enable ? attribute.linkValuesList.values : [];\n    const [filteredValuesList, setFilteredValuesList] = useState<ValueFromList[]>(valuesList);\n\n    const wrapperRef = useRef<HTMLDivElement>();\n    const searchInputRef = useRef<Input>();\n\n    const [selectedValues, setSelectedValues] = useState<ValueFromList[]>([]);\n    const [isSearchModalVisible, setIsSearchModalVisible] = useState<boolean>(false);\n    const [valuesListCurrentPage, setValuesListCurrentPage] = useState<number>(1);\n    const [searchCurrentPage, setSearchCurrentPage] = useState<number>(1);\n    const pageSize = 10;\n    const canSearch = !attribute.linkValuesList.enable || attribute.linkValuesList.allowFreeEntry;\n\n    const [runSearch, {loading, error, data: searchData}] = useLazyQuery<\n        IGetRecordsFromLibraryQuery,\n        IGetRecordsFromLibraryQueryVariables\n    >(getRecordsFromLibraryQuery(attribute.linked_library.id));\n\n    useEffect(() => {\n        wrapperRef.current.scrollIntoView({block: 'nearest'});\n        searchInputRef.current?.focus();\n    }, []);\n\n    const _handleItemClick = (valueListItem: ValueFromList) => {\n        onAdd([valueListItem]);\n    };\n\n    const _handleClose = () => onClose();\n\n    const _handleSelectionChange = (selection: ValueFromList[]) => setSelectedValues(selection);\n\n    const _handleSubmit = () => {\n        onAdd(selectedValues);\n    };\n\n    const _handleClickAdvancedSearch = () => {\n        setIsSearchModalVisible(true);\n    };\n\n    const _handleSearchModalSubmit = async ({selected}: ISharedStateSelectionSearch) => {\n        if (!selected.length) {\n            return;\n        }\n\n        const selectedRecordToSave = attribute.multiple_values ? selected : [selected[0]];\n        const valuesToSave = selectedRecordToSave.map(selectedRecord => ({\n            id: selectedRecord.id,\n            whoAmI: {\n                id: selectedRecord.id,\n                label: selectedRecord.label,\n                library: attribute.linked_library,\n                color: null,\n                preview: null\n            }\n        }));\n\n        onAdd(valuesToSave);\n    };\n\n    const _handleSearchSubmit = (submittedSearch: string) => {\n        setValuesListCurrentPage(1);\n        setSearchCurrentPage(1);\n\n        if (valuesList.length) {\n            const newValuesList = valuesList.filter(value => {\n                const regex = new RegExp(submittedSearch.toLowerCase());\n                const label = String(value.whoAmI?.label) ?? '';\n                return !submittedSearch || value.id.match(regex) || label.toLowerCase().match(regex);\n            });\n            setFilteredValuesList(newValuesList);\n        }\n\n        if (canSearch && submittedSearch) {\n            runSearch({\n                variables: {\n                    fullText: submittedSearch,\n                    limit: pageSize,\n                    offset: 0,\n                    sortOrder: SortOrder.asc\n                }\n            });\n        }\n    };\n\n    const _handleSearchPageChange = (page: number) => {\n        if (!searchInputRef.current.input.value) {\n            return;\n        }\n        setSearchCurrentPage(page);\n        runSearch({\n            variables: {\n                fullText: searchInputRef.current.input.value,\n                limit: pageSize,\n                offset: (page - 1) * pageSize,\n                sortOrder: SortOrder.asc\n            }\n        });\n    };\n\n    const currentSearch = searchInputRef?.current?.input?.value;\n\n    const searchResult =\n        searchData && currentSearch\n            ? searchData[attribute.linked_library.id].list.map(record => ({\n                  id: record.whoAmI.id,\n                  whoAmI: record.whoAmI\n              }))\n            : [];\n\n    const listCommonProps: Partial<IListProps<ValueFromList>> = {\n        onItemClick: _handleItemClick,\n        renderItemContent: _renderListItem,\n        selectable: attribute.multiple_values,\n        selectedItems: selectedValues,\n        onSelectionChange: _handleSelectionChange,\n        locale: {emptyText: t('record_edition.no_matching_value')}\n    };\n    const paginationCommonProps: Partial<PaginationConfig> = {\n        simple: true,\n        pageSize,\n        current: valuesListCurrentPage\n    };\n\n    return (\n        <>\n            <Wrapper data-testid=\"values-add\" ref={wrapperRef}>\n                <SearchActions>\n                    <SearchInput\n                        placeholder={t('record_edition.search_elements')}\n                        onSearch={_handleSearchSubmit}\n                        loading={loading}\n                        allowClear\n                        ref={searchInputRef}\n                        aria-label={t('record_edition.search_elements')}\n                    />\n                    {canSearch && (\n                        <Button icon={<SearchOutlined />} onClick={_handleClickAdvancedSearch}>\n                            {t('record_edition.advanced_search')}\n                        </Button>\n                    )}\n                    <CloseButton onClick={_handleClose} role=\"button\" />\n                </SearchActions>\n                <ListsWrapper>\n                    {!filteredValuesList.length && !searchResult.length && currentSearch ? (\n                        t('record_edition.no_matching_value')\n                    ) : (\n                        <></>\n                    )}\n                    {!!filteredValuesList.length && (\n                        <>\n                            <Divider orientation=\"left\">{t('record_edition.values_list')}</Divider>\n                            <List\n                                {...listCommonProps}\n                                data-testid=\"values_list\"\n                                dataSource={filteredValuesList}\n                                pagination={false}\n                            />\n                        </>\n                    )}\n                    {canSearch && !!searchResult.length && (\n                        <>\n                            <Divider orientation=\"left\">\n                                {localizedTranslation(attribute.linked_library.label, lang)}\n                            </Divider>\n                            {loading && <Spin />}\n                            {error && <ErrorDisplay message={error.message} />}\n                            {!loading && !error && (\n                                <List\n                                    {...listCommonProps}\n                                    data-testid=\"search_result\"\n                                    dataSource={searchResult}\n                                    pagination={{\n                                        ...paginationCommonProps,\n                                        total: searchData?.[attribute.linked_library.id].totalCount ?? 0,\n                                        current: searchCurrentPage,\n                                        onChange: _handleSearchPageChange\n                                    }}\n                                />\n                            )}\n                        </>\n                    )}\n                    {canSearch && !currentSearch && (\n                        <StartTypingMessage>\n                            <BulbOutlined /> {t('record_edition.start_typing_message')}\n                        </StartTypingMessage>\n                    )}\n                </ListsWrapper>\n                {attribute.multiple_values && (\n                    <FooterWrapper>\n                        <Button size=\"small\" onClick={_handleClose}>\n                            {t('global.cancel')}\n                        </Button>\n                        <PrimaryBtn size=\"small\" onClick={_handleSubmit}>\n                            {t('global.submit')}\n                        </PrimaryBtn>\n                    </FooterWrapper>\n                )}\n            </Wrapper>\n            {isSearchModalVisible && (\n                <SearchModal\n                    libId={attribute.linked_library.id}\n                    visible={isSearchModalVisible}\n                    setVisible={setIsSearchModalVisible}\n                    submitAction={_handleSearchModalSubmit}\n                />\n            )}\n        </>\n    );\n}\n\nexport default ValuesAdd;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport ValuesAdd from './ValuesAdd';\nexport default ValuesAdd;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {AnyPrimitive, ICommonFieldsSettings, IFormLinkFieldSettings} from '@leav/utils';\nimport {Popover, Skeleton, Switch, Table} from 'antd';\nimport {ColumnsType} from 'antd/lib/table';\nimport Paragraph from 'antd/lib/typography/Paragraph';\nimport Dimmer from 'components/shared/Dimmer';\nimport ErrorMessage from 'components/shared/ErrorMessage';\nimport RecordCard from 'components/shared/RecordCard';\nimport {\n    IRecordColumnValueLink,\n    IRecordColumnValueStandard,\n    IRecordColumnValueTree,\n    RecordColumnValue\n} from 'graphQL/queries/records/getRecordColumnsValues';\nimport {IRecordPropertyLink, RecordProperty} from 'graphQL/queries/records/getRecordPropertiesQuery';\nimport {useLang} from 'hooks/LangHook/LangHook';\nimport {useGetRecordColumnsValuesQuery} from 'hooks/useGetRecordColumnsValuesQuery/useGetRecordColumnsValuesQuery';\nimport React, {useState} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport styled from 'styled-components';\nimport themingVar from 'themingVar';\nimport {localizedTranslation} from 'utils';\nimport {RecordIdentity, RecordIdentity_whoAmI} from '_gqlTypes/RecordIdentity';\nimport {\n    RECORD_FORM_recordForm_elements_attribute_LinkAttribute,\n    RECORD_FORM_recordForm_elements_values_LinkValue\n} from '_gqlTypes/RECORD_FORM';\nimport {SAVE_VALUE_BATCH_saveValueBatch_values_LinkValue} from '_gqlTypes/SAVE_VALUE_BATCH';\nimport {IRecordIdentityWhoAmI, PreviewSize} from '_types/types';\nimport {useRecordEditionContext} from '../../hooks/useRecordEditionContext';\nimport AddValueBtn from '../../shared/AddValueBtn';\nimport NoValue from '../../shared/NoValue';\nimport {APICallStatus, IFormElementProps} from '../../_types';\nimport FloatingMenuHandler from './FloatingMenuHandler';\nimport ValuesAdd from './ValuesAdd';\n\nconst TableWrapper = styled.div<{isValuesAddVisible: boolean}>`\n    position: relative;\n    z-index: ${p => (p.isValuesAddVisible ? 1 : 'auto')};\n    border: 1px solid ${themingVar['@border-color-base']};\n    margin-bottom: 1.5em;\n    border-radius: ${themingVar['@border-radius-base']};\n\n    tr:not(:hover) .floating-menu {\n        display: none;\n    }\n\n    td {\n        height: 2.5rem; // In case we have no value on the whole row\n    }\n\n    // Disable some unwanted antd styles\n    && table > thead > tr:first-child {\n        th:first-child,\n        th:last-child {\n            border-radius: 0;\n        }\n    }\n\n    &&& .ant-table-footer {\n        padding: 0;\n    }\n`;\n\nconst FieldLabel = styled(Paragraph)`\n    && {\n        top: calc(50% - 0.9em);\n        font-size: 0.9em;\n        background: ${themingVar['@background-color-light']};\n        padding: 0 0.5em;\n        color: ${themingVar['@leav-secondary-font-color']};\n        z-index: 1;\n        margin-bottom: 0;\n    }\n`;\n\nconst FooterWrapper = styled.div`\n    text-align: left;\n`;\n\nconst _isStandardValue = (value: RecordColumnValue): value is IRecordColumnValueStandard =>\n    (value as IRecordColumnValueStandard).value !== undefined;\n\nconst _isLinkValue = (value: RecordColumnValue): value is IRecordColumnValueLink =>\n    (value as IRecordColumnValueLink).linkValue !== undefined;\n\nconst _isTreeValue = (value: RecordColumnValue): value is IRecordColumnValueTree =>\n    (value as IRecordColumnValueTree).treeValue !== undefined;\n\nexport interface IRowData {\n    key: string;\n    whoAmI: IRecordIdentityWhoAmI;\n    value: IRecordPropertyLink;\n    [columnName: string]: unknown;\n}\n\nfunction LinkField({\n    record,\n    element,\n    onValueSubmit,\n    onValueDelete\n}: IFormElementProps<ICommonFieldsSettings>): JSX.Element {\n    const {t} = useTranslation();\n    const [{lang}] = useLang();\n    const {readOnly: isRecordReadOnly} = useRecordEditionContext();\n    const recordValues = (element.values as RECORD_FORM_recordForm_elements_values_LinkValue[]) ?? [];\n\n    const attribute = element.attribute as RECORD_FORM_recordForm_elements_attribute_LinkAttribute;\n    const settings = element.settings as IFormLinkFieldSettings;\n    const linkedRecordsColumns = settings?.columns ?? [];\n\n    const [errorMessage, setErrorMessage] = useState<string | string[]>();\n    const [isValuesAddVisible, setIsValuesAddVisible] = useState<boolean>();\n    const [fieldValues, setFieldValues] = useState<RECORD_FORM_recordForm_elements_values_LinkValue[]>(recordValues);\n    const {loading: recordColumnsLoading, data: recordColumnsData, refetch} = useGetRecordColumnsValuesQuery(\n        record?.library.gqlNames.query,\n        linkedRecordsColumns.map(c => c.id),\n        recordValues.map(r => r.linkValue.id)\n    );\n\n    const _getLinkedRecordColumnsValues = (recordId: string) =>\n        linkedRecordsColumns.reduce((allCols: {[col: string]: string}, col) => {\n            allCols[col.id] = (recordColumnsData?.[recordId]?.[col.id] ?? [])\n                .map(v => {\n                    if (_isStandardValue(v)) {\n                        return v.value;\n                    }\n\n                    if (_isLinkValue(v)) {\n                        return v.linkValue.whoAmI.label ?? v.linkValue.id;\n                    }\n\n                    if (_isTreeValue(v)) {\n                        return v.treeValue.record.whoAmI.label ?? v.treeValue.record.id;\n                    }\n\n                    return '';\n                })\n                .join(', ');\n            return allCols;\n        }, {});\n\n    const _handleAddValue = () => {\n        setIsValuesAddVisible(true);\n    };\n\n    const _handleCloseValuesAdd = () => setIsValuesAddVisible(false);\n\n    const _handleDeleteValue = async (value: IRecordPropertyLink) => {\n        const deleteRes = await onValueDelete({value: value.linkValue.id}, attribute.id);\n\n        if (deleteRes.status === APICallStatus.SUCCESS) {\n            setFieldValues(\n                fieldValues.filter(val => val.id_value !== value.id_value || val.linkValue.id !== value.linkValue.id)\n            );\n            return;\n        }\n    };\n\n    const _handleAddValueSubmit = async (values: RecordIdentity[]) => {\n        const valuesToSave = values.map(value => ({\n            attribute,\n            idValue: null,\n            value\n        }));\n\n        const res = await onValueSubmit(valuesToSave);\n\n        if (res.status === APICallStatus.ERROR) {\n            setErrorMessage(res.error);\n        } else if (res.values) {\n            setFieldValues([...fieldValues, ...(res.values as SAVE_VALUE_BATCH_saveValueBatch_values_LinkValue[])]);\n\n            if (record) {\n                // Fetch columns values for new records\n                refetch(valuesToSave.map(v => v.value.id));\n            }\n        }\n\n        if (res?.errors?.length) {\n            const selectedRecordsById = values.reduce((acc, cur) => ({...acc, [cur.id]: cur}), {});\n\n            const errorsMessage = res.errors.map(err => {\n                const linkedRecordLabel = selectedRecordsById[err.input].label || selectedRecordsById[err.input].id;\n\n                return `${linkedRecordLabel}: ${err.message}`;\n            });\n            setErrorMessage(errorsMessage);\n        } else {\n            setIsValuesAddVisible(false);\n        }\n    };\n\n    const isReadOnly = element.attribute?.system || isRecordReadOnly || !attribute.permissions.edit_value;\n\n    // If no column is selected, force whoAmI column\n    let colsToDisplay = [];\n    if (settings.displayRecordIdentity || !settings?.columns?.length) {\n        colsToDisplay.push({\n            title: t('record_edition.whoAmI'),\n            key: 'whoAmI'\n        });\n    }\n\n    // Additional columns\n    colsToDisplay = [\n        ...colsToDisplay,\n        ...linkedRecordsColumns.map(c => ({\n            title: localizedTranslation(c.label, lang),\n            key: c.id\n        }))\n    ];\n\n    // Convert selected columns to format required by Table component\n    const cols: ColumnsType<IRowData> = colsToDisplay.map((col, index) => ({\n        title: col.title,\n        dataIndex: col.key,\n        render: (colData: IRecordIdentityWhoAmI | AnyPrimitive, rowData: IRowData) => {\n            const _handleDelete = () => _handleDeleteValue(rowData.value);\n\n            const valueRender =\n                col.key === 'whoAmI' ? (\n                    <RecordCard record={colData as RecordIdentity_whoAmI} size={PreviewSize.small} />\n                ) : recordColumnsLoading ? (\n                    <Skeleton title paragraph={false} active />\n                ) : (\n                    <span>\n                        {typeof colData === 'boolean' ? <Switch checked={colData} disabled /> : String(colData ?? '')}\n                    </span>\n                );\n\n            // Add floating menu (edit, delete...) on the last column to display it at the end of the row\n            return index === colsToDisplay.length - 1 ? (\n                <FloatingMenuHandler\n                    record={rowData.whoAmI}\n                    onDelete={_handleDelete}\n                    value={rowData.value as RecordProperty}\n                    attribute={attribute}\n                    isReadOnly={isReadOnly}\n                >\n                    {valueRender}\n                </FloatingMenuHandler>\n            ) : (\n                valueRender\n            );\n        }\n    }));\n\n    const data: IRowData[] = fieldValues.map(val => ({\n        key: val.id_value + val.linkValue.id,\n        value: val,\n        whoAmI: val.linkValue.whoAmI,\n        ..._getLinkedRecordColumnsValues(val.linkValue.id)\n    }));\n\n    const canAddValue = !isReadOnly && (attribute.multiple_values || !fieldValues.length);\n\n    const tableFooter = () => {\n        return fieldValues.length && canAddValue ? (\n            <FooterWrapper>\n                <AddValueBtn onClick={_handleAddValue} disabled={isValuesAddVisible} />\n            </FooterWrapper>\n        ) : null;\n    };\n\n    const _handleCloseError = () => {\n        setErrorMessage('');\n    };\n\n    return (\n        <>\n            {isValuesAddVisible && <Dimmer onClick={_handleCloseValuesAdd} />}\n            <TableWrapper isValuesAddVisible={isValuesAddVisible}>\n                <FieldLabel ellipsis={{rows: 1, tooltip: true}}>{element.settings.label}</FieldLabel>\n                <Table\n                    columns={cols}\n                    dataSource={data}\n                    size=\"small\"\n                    pagination={false}\n                    locale={{\n                        emptyText: <NoValue canAddValue={canAddValue} onAddValue={_handleAddValue} />\n                    }}\n                    data-testid=\"linked-field-values\"\n                    footer={tableFooter}\n                    scroll={{y: 280}}\n                />\n                {isValuesAddVisible && canAddValue && (\n                    <ValuesAdd onAdd={_handleAddValueSubmit} attribute={attribute} onClose={_handleCloseValuesAdd} />\n                )}\n            </TableWrapper>\n            {errorMessage && (\n                <Popover\n                    placement=\"bottomLeft\"\n                    visible={!!errorMessage}\n                    content={<ErrorMessage error={errorMessage} onClose={_handleCloseError} />}\n                ></Popover>\n            )}\n        </>\n    );\n}\n\nexport default LinkField;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {AnyPrimitive, ICommonFieldsSettings, IKeyValue} from '@leav/utils';\nimport {FormElement, StandardValueTypes} from 'components/RecordEdition/EditRecord/_types';\nimport {IRecordPropertyAttribute, IRecordPropertyStandard} from 'graphQL/queries/records/getRecordPropertiesQuery';\nimport {AttributeFormat} from '_gqlTypes/globalTypes';\nimport {SAVE_VALUE_BATCH_saveValueBatch_values_Value} from '_gqlTypes/SAVE_VALUE_BATCH';\nimport {IDateRangeValue, IRecordIdentityWhoAmI} from '_types/types';\n\nexport type IdValue = string | null;\nexport const newValueId = '__new__';\n\nexport enum StandardFieldValueState {\n    PRISTINE = 'PRISTINE',\n    DIRTY = 'DIRTY'\n}\n\nexport interface IStandardFieldValue {\n    idValue: IdValue;\n    index: number;\n    value: IRecordPropertyStandard | null;\n    displayValue: StandardValueTypes;\n    editingValue: StandardValueTypes;\n    originRawValue: StandardValueTypes;\n    isEditing: boolean;\n    error?: string;\n    isErrorDisplayed: boolean;\n    state: StandardFieldValueState;\n}\n\nexport interface IStandardFieldReducerState {\n    record: IRecordIdentityWhoAmI;\n    formElement: FormElement<ICommonFieldsSettings>;\n    attribute: IRecordPropertyAttribute;\n    isReadOnly: boolean;\n    values: IKeyValue<IStandardFieldValue>;\n}\n\nexport enum StandardFieldReducerActionsTypes {\n    ADD_VALUE = 'ADD_VALUE',\n    CHANGE_VALUE = 'CHANGE_VALUE',\n    FOCUS_FIELD = 'FOCUS_FIELD',\n    SET_ERROR = 'SET_ERROR',\n    SET_ERROR_DISPLAY = 'SET_ERROR_DISPLAY',\n    UNEDIT_FIELD = 'UNEDIT_FIELD',\n    CLOSE_ERROR = 'CLOSE_ERROR',\n    CLEAR_ERROR = 'CLEAR_ERROR',\n    UPDATE_AFTER_SUBMIT = 'UPDATE_AFTER_SUBMIT',\n    UPDATE_AFTER_DELETE = 'UPDATE_AFTER_DELETE',\n    CANCEL_EDITING = 'CANCEL_EDITING'\n}\n\nexport const virginValue: IStandardFieldValue = {\n    idValue: null,\n    index: 0,\n    value: null,\n    displayValue: '',\n    editingValue: '',\n    originRawValue: '',\n    error: '',\n    isErrorDisplayed: false,\n    isEditing: false,\n    state: StandardFieldValueState.PRISTINE\n};\n\nexport type StandardFieldReducerAction =\n    | {\n          type: StandardFieldReducerActionsTypes.ADD_VALUE;\n          idValue?: IdValue;\n      }\n    | {\n          type: StandardFieldReducerActionsTypes.CHANGE_VALUE;\n          idValue: IdValue;\n          value: AnyPrimitive | IDateRangeValue;\n      }\n    | {\n          type: StandardFieldReducerActionsTypes.FOCUS_FIELD;\n          idValue: IdValue;\n      }\n    | {\n          type: StandardFieldReducerActionsTypes.SET_ERROR;\n          idValue: IdValue;\n          error: string;\n      }\n    | {\n          type: StandardFieldReducerActionsTypes.UNEDIT_FIELD;\n          idValue: IdValue;\n      }\n    | {\n          type: StandardFieldReducerActionsTypes.SET_ERROR_DISPLAY;\n          idValue: IdValue;\n          displayError: boolean;\n      }\n    | {\n          type: StandardFieldReducerActionsTypes.CLEAR_ERROR;\n          idValue: IdValue;\n      }\n    | {\n          type: StandardFieldReducerActionsTypes.UPDATE_AFTER_SUBMIT;\n          idValue: IdValue;\n          newValue: SAVE_VALUE_BATCH_saveValueBatch_values_Value;\n      }\n    | {\n          type: StandardFieldReducerActionsTypes.UPDATE_AFTER_DELETE;\n          idValue: IdValue;\n      }\n    | {\n          type: StandardFieldReducerActionsTypes.CANCEL_EDITING;\n          idValue: IdValue;\n      };\n\nexport type StandardFieldDispatchFunc = (action: StandardFieldReducerAction) => void;\n\nconst standardFieldReducer = (\n    state: IStandardFieldReducerState,\n    action: StandardFieldReducerAction\n): IStandardFieldReducerState => {\n    const _updateValueData = (newValueData: Partial<IStandardFieldValue>): IStandardFieldReducerState => {\n        const res = {\n            ...state,\n            values: {\n                ...state.values,\n                [action.idValue]: {\n                    ...state.values[action.idValue],\n                    ...newValueData\n                }\n            }\n        };\n        return res;\n    };\n\n    const _ensureOneValueIsPresent = (values: IKeyValue<IStandardFieldValue>): IKeyValue<IStandardFieldValue> => {\n        if (Object.keys(values).length) {\n            return values;\n        }\n\n        return {\n            [newValueId]: {\n                ...virginValue,\n                idValue: newValueId\n            }\n        };\n    };\n\n    switch (action.type) {\n        case StandardFieldReducerActionsTypes.ADD_VALUE:\n            return {\n                ...state,\n                values: {\n                    ...state.values,\n                    [action.idValue ?? newValueId]: {\n                        idValue: action.idValue ?? newValueId,\n                        index: Object.keys(state.values).length,\n                        value: null,\n                        displayValue: '',\n                        editingValue: '',\n                        originRawValue: '',\n                        isEditing: true,\n                        isErrorDisplayed: false,\n                        state: StandardFieldValueState.PRISTINE\n                    }\n                }\n            };\n        case StandardFieldReducerActionsTypes.CHANGE_VALUE:\n            return _updateValueData({\n                editingValue: action.value,\n                state: StandardFieldValueState.DIRTY\n            });\n        case StandardFieldReducerActionsTypes.FOCUS_FIELD:\n            return _updateValueData({\n                isEditing: true\n            });\n        case StandardFieldReducerActionsTypes.SET_ERROR:\n            return state.values[action.idValue]\n                ? _updateValueData({\n                      error: action.error,\n                      isErrorDisplayed: true,\n                      state: StandardFieldValueState.DIRTY\n                  })\n                : state;\n        case StandardFieldReducerActionsTypes.CLEAR_ERROR:\n            return _updateValueData({\n                error: '',\n                isErrorDisplayed: false\n            });\n        case StandardFieldReducerActionsTypes.SET_ERROR_DISPLAY:\n            return _updateValueData({\n                isErrorDisplayed: action.displayError\n            });\n        case StandardFieldReducerActionsTypes.UNEDIT_FIELD:\n            return _updateValueData({\n                isEditing: false,\n                isErrorDisplayed: false,\n                error: '',\n                state: StandardFieldValueState.PRISTINE\n            });\n        case StandardFieldReducerActionsTypes.UPDATE_AFTER_SUBMIT: {\n            const newRawValue =\n                state.attribute.format !== AttributeFormat.encrypted\n                    ? (action.newValue as SAVE_VALUE_BATCH_saveValueBatch_values_Value).raw_value\n                    : state.values[action.idValue].editingValue;\n\n            const newValueData = {\n                idValue: action.newValue.id_value,\n                value: action.newValue as SAVE_VALUE_BATCH_saveValueBatch_values_Value,\n                displayValue: (action.newValue as SAVE_VALUE_BATCH_saveValueBatch_values_Value).value,\n                editingValue: newRawValue,\n                originRawValue: newRawValue,\n                error: '',\n                isErrorDisplayed: false,\n                isEditing: false,\n                state: StandardFieldValueState.PRISTINE\n            };\n\n            if (action.idValue !== newValueId) {\n                return _updateValueData(newValueData);\n            }\n\n            const newState = {...state};\n\n            // Delete new value placeholder, replace it with actual new value with proper ID\n            const newValIndex = newState.values[newValueId]?.index;\n            delete newState.values[newValueId];\n\n            newState.values[action.newValue.id_value] = {\n                ...newValueData,\n                index: newValIndex ?? Object.keys(newState.values).length\n            };\n\n            return newState;\n        }\n        case StandardFieldReducerActionsTypes.UPDATE_AFTER_DELETE: {\n            const newState = {...state};\n\n            delete newState.values[action.idValue];\n\n            newState.values = _ensureOneValueIsPresent(newState.values);\n            // Restore index on all remaining values\n            newState.values = Object.values(newState.values).reduce(\n                (values, value, index) => ({\n                    ...values,\n                    [value.idValue]: {\n                        ...value,\n                        index\n                    }\n                }),\n                {}\n            );\n\n            return newState;\n        }\n        case StandardFieldReducerActionsTypes.CANCEL_EDITING: {\n            if (action.idValue !== newValueId) {\n                return _updateValueData({\n                    editingValue: state.values[action.idValue].originRawValue,\n                    isEditing: false,\n                    state: StandardFieldValueState.PRISTINE\n                });\n            }\n\n            const newState = {...state};\n\n            delete newState.values[newValueId];\n\n            newState.values = _ensureOneValueIsPresent(newState.values);\n\n            return newState;\n        }\n\n        default:\n            return state;\n    }\n};\n\nexport default standardFieldReducer;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport LinkField from './LinkField';\nexport default LinkField;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {createContext} from 'react';\nimport {SAVE_VALUE_BATCH_saveValueBatch_errors} from '_gqlTypes/SAVE_VALUE_BATCH';\nexport interface ICreationErrorByField {\n    [attributeId: string]: SAVE_VALUE_BATCH_saveValueBatch_errors;\n}\n\nconst CreationErrorContext = createContext<ICreationErrorByField>({});\n\nexport default CreationErrorContext;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {Checkbox} from 'antd';\nimport {CheckboxChangeEvent} from 'antd/lib/checkbox';\nimport {IStandardInputProps} from 'components/RecordEdition/EditRecord/_types';\nimport React from 'react';\n\nfunction CheckboxInput({state, fieldValue, onSubmit}: IStandardInputProps): JSX.Element {\n    const _handleCheckboxChange = (e: CheckboxChangeEvent) => {\n        onSubmit(String(e.target.checked));\n    };\n\n    const {value} = fieldValue;\n\n    return (\n        <Checkbox\n            className=\"nested-input\"\n            disabled={state.isReadOnly}\n            checked={!!value?.value}\n            indeterminate={typeof value?.value !== 'boolean'}\n            onChange={_handleCheckboxChange}\n        />\n    );\n}\n\nexport default CheckboxInput;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {IFormDateFieldSettings} from '@leav/utils';\nimport {DatePicker, Input} from 'antd';\nimport {IStandardInputProps} from 'components/RecordEdition/EditRecord/_types';\nimport moment from 'moment';\nimport React from 'react';\nimport {useTranslation} from 'react-i18next';\nimport themingVar from 'themingVar';\nimport {RECORD_FORM_recordForm_elements_attribute_StandardAttribute} from '_gqlTypes/RECORD_FORM';\n\nfunction DateInput({state, fieldValue, onFocus, onSubmit, settings, inputRef}: IStandardInputProps): JSX.Element {\n    const {editingValue} = fieldValue;\n    const {i18n} = useTranslation();\n\n    const attribute = state.formElement.attribute as RECORD_FORM_recordForm_elements_attribute_StandardAttribute;\n    const isValuesListEnabled = !!attribute?.values_list?.enable;\n    const isValuesListOpen = !!attribute?.values_list?.allowFreeEntry;\n\n    const _handleDateChange = (selectedDate: moment.Moment) => {\n        const dateToSave = selectedDate ? String(selectedDate.unix()) : null;\n        onSubmit(dateToSave);\n    };\n\n    const dateValue = editingValue ? moment(Number(editingValue) * 1000) : null;\n\n    // If we have a values list, picker must be on top to keep list readable\n    const pickerPosition = isValuesListEnabled ? {points: ['bl', 'tl'], offset: [0, -1]} : null;\n\n    return !isValuesListEnabled || isValuesListOpen ? (\n        <DatePicker\n            className=\"field-wrapper\"\n            data-testid=\"datepicker\"\n            disabled={state.isReadOnly}\n            picker=\"date\"\n            onChange={_handleDateChange}\n            value={dateValue}\n            autoFocus\n            defaultOpen\n            showTime={!!(settings as IFormDateFieldSettings).withTime}\n            onOk={_handleDateChange}\n            popupStyle={{background: themingVar['@default-bg']}}\n            style={{background: themingVar['@default-bg'], width: '100%'}}\n            allowClear={false}\n            dropdownAlign={pickerPosition}\n        />\n    ) : (\n        <Input\n            key=\"editing\"\n            className={`field-wrapper ${editingValue ? 'has-value' : ''}`}\n            value={\n                editingValue ? new Intl.DateTimeFormat(i18n.language).format(new Date(Number(editingValue) * 1000)) : ''\n            }\n            onFocus={onFocus}\n            disabled={true}\n            allowClear\n            autoFocus\n        />\n    );\n}\n\nexport default DateInput;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {IFormDateFieldSettings} from '@leav/utils';\nimport {DatePicker, Input} from 'antd';\nimport {IStandardInputProps} from 'components/RecordEdition/EditRecord/_types';\nimport moment from 'moment';\nimport React from 'react';\nimport {useTranslation} from 'react-i18next';\nimport themingVar from 'themingVar';\nimport {stringifyDateRangeValue} from 'utils';\nimport {RECORD_FORM_recordForm_elements_attribute_StandardAttribute} from '_gqlTypes/RECORD_FORM';\nimport {IDateRangeValue} from '_types/types';\n\nfunction DateRangeInput({state, fieldValue, onFocus, onSubmit, settings}: IStandardInputProps): JSX.Element {\n    const {editingValue, displayValue} = fieldValue;\n    const {t} = useTranslation();\n\n    const attribute = state.formElement.attribute as RECORD_FORM_recordForm_elements_attribute_StandardAttribute;\n    const isValuesListEnabled = !!attribute?.values_list?.enable;\n    const isValuesListOpen = !!attribute?.values_list?.allowFreeEntry;\n\n    const _handleDateChange = (selectedDates: [moment.Moment, moment.Moment]) => {\n        const [dateFrom, dateTo] = selectedDates;\n        const dateToSave = selectedDates ? {from: String(dateFrom.unix()), to: String(dateTo.unix())} : null;\n        onSubmit(dateToSave);\n    };\n\n    const editingRangeValue = editingValue as IDateRangeValue;\n    const rangeValue: [moment.Moment, moment.Moment] = editingRangeValue\n        ? [moment(Number(editingRangeValue.from) * 1000), moment(Number(editingRangeValue.to) * 1000)]\n        : null;\n\n    // If we have a values list, picker must be on top to keep list readable\n    const pickerPosition = isValuesListEnabled ? {points: ['bl', 'tl'], offset: [0, -1]} : null;\n\n    const rangeDisplayValue = displayValue as IDateRangeValue;\n\n    return !isValuesListEnabled || isValuesListOpen ? (\n        <DatePicker.RangePicker\n            className=\"field-wrapper\"\n            data-testid=\"datepicker\"\n            disabled={state.isReadOnly}\n            picker=\"date\"\n            onChange={_handleDateChange}\n            value={rangeValue}\n            autoFocus\n            defaultOpen\n            showTime={!!(settings as IFormDateFieldSettings).withTime}\n            onOk={_handleDateChange}\n            popupStyle={{background: themingVar['@default-bg']}}\n            style={{background: themingVar['@default-bg'], width: '100%'}}\n            allowClear={false}\n            dropdownAlign={pickerPosition}\n        />\n    ) : (\n        <Input\n            key=\"editing\"\n            className={`field-wrapper ${editingValue ? 'has-value' : ''}`}\n            value={rangeDisplayValue.from && rangeDisplayValue.to ? stringifyDateRangeValue(rangeDisplayValue, t) : ''}\n            onFocus={onFocus}\n            disabled={true}\n            allowClear\n            autoFocus\n        />\n    );\n}\n\nexport default DateRangeInput;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {Input} from 'antd';\nimport {IStandardInputProps} from 'components/RecordEdition/EditRecord/_types';\nimport React, {MutableRefObject} from 'react';\n\nfunction EncryptedInput({state, fieldValue, onChange, onPressEnter, inputRef}: IStandardInputProps): JSX.Element {\n    const {editingValue} = fieldValue;\n    const _handleChange = e => {\n        onChange(e.target.value);\n    };\n\n    const _handleKeyPress = e => {\n        if (e.key === 'Enter') {\n            onPressEnter();\n        }\n    };\n\n    return (\n        <Input.Password\n            className=\"nested-input\"\n            ref={inputRef as MutableRefObject<Input>}\n            value={String(editingValue)}\n            onChange={_handleChange}\n            onKeyPress={_handleKeyPress}\n            disabled={state.isReadOnly}\n            autoFocus\n            data-testid=\"encrypted-input\"\n        />\n    );\n}\n\nexport default EncryptedInput;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {Input} from 'antd';\nimport {IStandardInputProps} from 'components/RecordEdition/EditRecord/_types';\nimport React, {ChangeEvent, MutableRefObject} from 'react';\n\nfunction NumberInput({state, fieldValue, onFocus, onPressEnter, onChange, inputRef}: IStandardInputProps): JSX.Element {\n    const {editingValue} = fieldValue;\n\n    const _handleNumberChange = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange(String(e.target.value));\n    };\n\n    const _handlePressEnter = () => {\n        onPressEnter();\n    };\n\n    const editingValueNumber = Number(editingValue);\n\n    return (\n        <Input\n            type=\"number\"\n            ref={inputRef as MutableRefObject<Input>}\n            className=\"nested-input\"\n            value={isNaN(editingValueNumber) ? 0 : editingValueNumber}\n            onFocus={onFocus}\n            onChange={_handleNumberChange}\n            onPressEnter={_handlePressEnter}\n            disabled={state.isReadOnly}\n            allowClear\n            autoFocus\n        />\n    );\n}\n\nexport default NumberInput;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {Input} from 'antd';\nimport {IStandardInputProps} from 'components/RecordEdition/EditRecord/_types';\nimport React, {MutableRefObject, useEffect} from 'react';\n\nfunction TextInput({state, fieldValue, onFocus, onChange, onPressEnter, inputRef}: IStandardInputProps): JSX.Element {\n    const {isEditing, editingValue} = fieldValue;\n\n    useEffect(() => {\n        // Handle focusing via click on label (not standard focus via click on input)\n        if (isEditing) {\n            (inputRef as MutableRefObject<Input>).current.focus();\n        }\n    }, [isEditing, inputRef]);\n\n    const _handleChange = e => {\n        onChange(e.target.value);\n    };\n\n    const _handleKeyPress = e => {\n        if (e.key === 'Enter') {\n            onPressEnter();\n        }\n    };\n\n    return (\n        <Input\n            key=\"editing\"\n            ref={inputRef as MutableRefObject<Input>}\n            className={`field-wrapper ${editingValue ? 'has-value' : ''}`}\n            value={String(editingValue)}\n            onFocus={onFocus}\n            onChange={_handleChange}\n            onKeyPress={_handleKeyPress}\n            disabled={state.isReadOnly}\n            allowClear\n            autoFocus\n        />\n    );\n}\n\nexport default TextInput;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {CopyOutlined} from '@ant-design/icons';\nimport {Button, Tooltip} from 'antd';\nimport List from 'components/shared/List';\nimport React, {SyntheticEvent} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport styled from 'styled-components';\nimport {AttributeFormat} from '_gqlTypes/globalTypes';\nimport {RECORD_FORM_recordForm_elements_attribute_StandardAttribute} from '_gqlTypes/RECORD_FORM';\nimport {IDateRangeValue} from '_types/types';\n\nexport interface IValueOfValuesList {\n    value: string;\n    rawValue: string | IDateRangeValue;\n    isNewValue: boolean;\n    canCopy: boolean;\n}\n\ninterface IValuesListProps {\n    attribute: RECORD_FORM_recordForm_elements_attribute_StandardAttribute;\n    valuesList: IValueOfValuesList[];\n    onValueSelect: (value: string | IDateRangeValue) => void;\n    onValueCopy: (value: string | IDateRangeValue) => void;\n}\nconst ListItem = styled.div`\n    cursor: pointer;\n    display: flex;\n    justify-content: space-between;\n    width: 100%;\n`;\n\nfunction ValuesList({attribute, valuesList: values, onValueCopy, onValueSelect}: IValuesListProps): JSX.Element {\n    const {t, i18n} = useTranslation();\n    const _handleClick = (item: IValueOfValuesList) => {\n        onValueSelect(item.rawValue);\n    };\n\n    const renderItem = (item: IValueOfValuesList) => {\n        const _handleCopy = (e: SyntheticEvent) => {\n            e.stopPropagation();\n\n            onValueCopy(item.rawValue);\n        };\n\n        const valueToDisplay =\n            attribute.format === AttributeFormat.date\n                ? new Intl.DateTimeFormat(i18n.language).format(new Date(Number(item.value) * 1000))\n                : item.value;\n\n        return (\n            <ListItem>\n                <span>\n                    {valueToDisplay}\n                    {item.isNewValue && ` (${t('record_edition.new_value')})`}\n                </span>\n                {item.canCopy && (\n                    <Tooltip title={t('record_edition.copy_value')}>\n                        <Button icon={<CopyOutlined />} shape=\"circle\" onClick={_handleCopy} />\n                    </Tooltip>\n                )}\n            </ListItem>\n        );\n    };\n\n    return (\n        <List\n            dataSource={values}\n            bordered\n            size=\"small\"\n            maxHeight={250}\n            locale={{emptyText: t('record_edition.no_matching_value')}}\n            renderItemContent={renderItem}\n            onItemClick={_handleClick}\n        />\n    );\n}\n\nexport default ValuesList;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport ValuesList from './ValuesList';\nexport default ValuesList;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {CloseOutlined, ExclamationCircleOutlined} from '@ant-design/icons';\nimport {AnyPrimitive} from '@leav/utils';\nimport {Button, Form, Input, Popover, Space} from 'antd';\nimport {PrimaryBtn} from 'components/app/StyledComponent/PrimaryBtn';\nimport DeleteValueBtn from 'components/RecordEdition/EditRecord/shared/DeleteValueBtn';\nimport ValueDetailsBtn from 'components/RecordEdition/EditRecord/shared/ValueDetailsBtn';\nimport {\n    InputRefPossibleTypes,\n    IStandardInputProps,\n    StandardValueTypes\n} from 'components/RecordEdition/EditRecord/_types';\nimport {EditRecordReducerActionsTypes} from 'components/RecordEdition/editRecordReducer/editRecordReducer';\nimport {useEditRecordReducer} from 'components/RecordEdition/editRecordReducer/useEditRecordReducer';\nimport Dimmer from 'components/shared/Dimmer';\nimport FloatingMenu, {FloatingMenuAction} from 'components/shared/FloatingMenu/FloatingMenu';\nimport moment from 'moment';\nimport React, {MutableRefObject, useEffect, useRef} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport styled from 'styled-components';\nimport themingVar from 'themingVar';\nimport {stringifyDateRangeValue} from 'utils';\nimport {AttributeFormat} from '_gqlTypes/globalTypes';\nimport {\n    RECORD_FORM_recordForm_elements_attribute_StandardAttribute,\n    RECORD_FORM_recordForm_elements_attribute_StandardAttribute_values_list_StandardDateRangeValuesListConf,\n    RECORD_FORM_recordForm_elements_attribute_StandardAttribute_values_list_StandardStringValuesListConf\n} from '_gqlTypes/RECORD_FORM';\nimport {IDateRangeValue} from '_types/types';\nimport {\n    IdValue,\n    IStandardFieldReducerState,\n    IStandardFieldValue,\n    newValueId,\n    StandardFieldDispatchFunc,\n    StandardFieldReducerActionsTypes,\n    StandardFieldValueState\n} from '../standardFieldReducer/standardFieldReducer';\nimport CheckboxInput from './Inputs/CheckboxInput';\nimport DateInput from './Inputs/DateInput';\nimport DateRangeInput from './Inputs/DateRangeInput';\nimport EncryptedInput from './Inputs/EncryptedInput';\nimport NumberInput from './Inputs/NumberInput';\nimport TextInput from './Inputs/TextInput';\nimport ValuesList from './ValuesList';\nimport {IValueOfValuesList} from './ValuesList/ValuesList';\n\ninterface IStandardFieldValueProps {\n    value: IStandardFieldValue;\n    state: IStandardFieldReducerState;\n    dispatch: StandardFieldDispatchFunc;\n    onSubmit: (idValue: IdValue, value: AnyPrimitive) => void;\n    onDelete: (idValue: IdValue) => void;\n}\n\ntype IStringValuesListConf = RECORD_FORM_recordForm_elements_attribute_StandardAttribute_values_list_StandardStringValuesListConf;\ntype IDateRangeValuesListConf = RECORD_FORM_recordForm_elements_attribute_StandardAttribute_values_list_StandardDateRangeValuesListConf;\n\nconst ErrorMessage = styled.div`\n    color: ${themingVar['@error-color']};\n    font-weight: bold;\n`;\n\nconst FormWrapper = styled.div<{isEditing: boolean}>`\n    position: relative;\n    z-index: ${p => (p.isEditing ? 2 : 0)};\n`;\n\nconst InputWrapper = styled.div<{isEditing: boolean}>`\n    position: relative;\n\n    && input {\n        background: ${themingVar['@default-bg']};\n        transition: none;\n        border-radius: 0;\n        line-height: 2.5em;\n    }\n\n    ${FormWrapper}:not(:last-child) & input:not(:hover) {\n        border-bottom: none;\n    }\n\n    ${FormWrapper}:first-child & input {\n        border-top-left-radius: 5px;\n        border-top-right-radius: 5px;\n    }\n\n    ${FormWrapper}:last-child & input {\n        border-bottom-left-radius: 5px;\n        border-bottom-right-radius: 5px;\n    }\n\n    &.editing input {\n        border-radius: 5px;\n    }\n\n    &.editing .field-wrapper,\n    &.editing .nested-input {\n        z-index: 0;\n    }\n\n    &.format-boolean label {\n        margin-right: 1em;\n    }\n\n    &:not(.format-boolean) label {\n        position: absolute;\n        left: 5px;\n        top: calc(50% - 0.9em);\n        font-size: 1.1em;\n        background: transparent;\n        padding: 0 0.5em;\n        color: ${themingVar['@leav-secondary-font-color']};\n        transition: all 0.2s ease;\n        transition-property: left, top, font-size;\n        z-index: 1;\n        white-space: nowrap;\n        text-overflow: ellipsis;\n        overflow: hidden;\n        width: 100%;\n    }\n\n    &:not(.format-boolean):not(.editing):not(.has-value) label {\n        padding-right: 3rem;\n    }\n\n    input:disabled {\n        background: ${themingVar['@default-bg']};\n    }\n\n    &.has-value:not(.format-boolean) label,\n    &.editing:not(.format-boolean) label {\n        top: 0px;\n        font-size: 0.9em;\n        background: transparent;\n        text-shadow: 0px 0px 4px #fff;\n        z-index: 2;\n        border-radius: 5px;\n    }\n\n    ${FormWrapper}.first-value &.has-value:not(.format-boolean) input:not(:first-child),\n    ${FormWrapper}.first-value &.editing:not(.format-boolean) input:not(:only-child),\n    ${FormWrapper}.first-value &.editing.format-date_range input,\n    ${FormWrapper}.first-value &.editing.format-date_range .ant-picker-range-separator {\n        padding-top: 1em;\n    }\n\n    &:not(.has-value):not(.editing):not(.format-boolean) input {\n        padding: 9px 0;\n    }\n\n    &:not(:hover) .floating-menu {\n        display: none;\n    }\n\n    .floating-menu {\n        top: 50%;\n        transform: translateY(-50%);\n    }\n`;\n\nconst ActionsWrapper = styled.div`\n    position: absolute;\n    display: flex;\n    width: 100%;\n    flex-direction: column;\n`;\n\nconst ButtonsWrapper = styled.div`\n    display: flex;\n    margin: 0.5em 0;\n    justify-content: flex-end;\n\n    & > button {\n        margin-left: 0.5em;\n    }\n`;\n\nconst FormItem = styled(Form.Item)`\n    && {\n        margin: 0;\n    }\n`;\n\nconst inputComponentByFormat: {[format in AttributeFormat]: (props: IStandardInputProps) => JSX.Element} = {\n    [AttributeFormat.text]: TextInput,\n    [AttributeFormat.date]: DateInput,\n    [AttributeFormat.date_range]: DateRangeInput,\n    [AttributeFormat.boolean]: CheckboxInput,\n    [AttributeFormat.numeric]: NumberInput,\n    [AttributeFormat.encrypted]: EncryptedInput,\n    [AttributeFormat.extended]: TextInput\n};\n\nfunction StandardFieldValue({\n    value: fieldValue,\n    onSubmit,\n    onDelete,\n    state,\n    dispatch\n}: IStandardFieldValueProps): JSX.Element {\n    const {t} = useTranslation();\n    const actionsWrapperRef = useRef<HTMLDivElement>();\n    const inputRef = useRef<InputRefPossibleTypes>();\n\n    const {dispatch: editRecordDispatch} = useEditRecordReducer();\n\n    const attribute = state.formElement.attribute as RECORD_FORM_recordForm_elements_attribute_StandardAttribute;\n\n    const isValuesListEnabled = !!attribute?.values_list?.enable;\n    const isValuesListOpen = !!attribute?.values_list?.allowFreeEntry;\n\n    useEffect(() => {\n        if (fieldValue.isEditing) {\n            actionsWrapperRef?.current?.scrollIntoView({block: 'nearest'});\n        }\n    }, [fieldValue.isEditing]);\n\n    const _handleSubmit = async (valueToSave: StandardValueTypes) => {\n        if (valueToSave === '') {\n            return _handleDelete();\n        }\n\n        const convertedValue = typeof valueToSave === 'object' ? JSON.stringify(valueToSave) : valueToSave;\n        onSubmit(fieldValue.idValue, convertedValue);\n\n        editRecordDispatch({\n            type: EditRecordReducerActionsTypes.SET_ACTIVE_VALUE,\n            value: null\n        });\n    };\n\n    const _handlePressEnter = async () => {\n        if (!isValuesListEnabled) {\n            return _handleSubmit(fieldValue.editingValue);\n        }\n\n        const valuesList = _getFilteredValuesList();\n        if (!valuesList.length) {\n            return;\n        }\n\n        return _handleSubmit(valuesList[0].value);\n    };\n\n    const _handleDelete = async () => {\n        if (fieldValue.idValue === newValueId) {\n            return _handleCancel();\n        }\n\n        onDelete(fieldValue.idValue);\n    };\n\n    const _handleFocus = () => {\n        if (state.isReadOnly || fieldValue.isEditing || attribute.format === AttributeFormat.boolean) {\n            return;\n        }\n\n        dispatch({\n            type: StandardFieldReducerActionsTypes.FOCUS_FIELD,\n            idValue: fieldValue.idValue\n        });\n\n        editRecordDispatch({\n            type: EditRecordReducerActionsTypes.SET_ACTIVE_VALUE,\n            value: {value: fieldValue.value, attribute}\n        });\n    };\n\n    const _handleValueChange = (value: AnyPrimitive | IDateRangeValue) => {\n        dispatch({\n            type: StandardFieldReducerActionsTypes.CHANGE_VALUE,\n            idValue: fieldValue.idValue,\n            value\n        });\n    };\n\n    const _handleCloseError = () =>\n        dispatch({\n            type: StandardFieldReducerActionsTypes.SET_ERROR_DISPLAY,\n            displayError: false,\n            idValue: fieldValue.idValue\n        });\n\n    const _handleCancel = () => {\n        dispatch({\n            type: StandardFieldReducerActionsTypes.CANCEL_EDITING,\n            idValue: fieldValue.idValue\n        });\n\n        editRecordDispatch({\n            type: EditRecordReducerActionsTypes.SET_ACTIVE_VALUE,\n            value: null\n        });\n    };\n\n    const _handleClickSubmit = () => {\n        _handleSubmit(fieldValue.editingValue);\n    };\n\n    const _handleValueCopy = (value: AnyPrimitive | IDateRangeValue) => {\n        (inputRef as MutableRefObject<Input>)?.current?.focus();\n\n        _handleValueChange(value);\n    };\n\n    const _getInput = (): JSX.Element => {\n        if (!fieldValue.isEditing && attribute.format !== AttributeFormat.boolean) {\n            let displayedValue = String(fieldValue.displayValue);\n\n            if (fieldValue.displayValue) {\n                switch (attribute.format) {\n                    case AttributeFormat.date_range:\n                        const dateRangeValue = fieldValue.displayValue as IDateRangeValue;\n                        displayedValue = stringifyDateRangeValue(dateRangeValue, t);\n                        break;\n                    case AttributeFormat.encrypted:\n                        displayedValue = '•••••••••';\n                        break;\n                }\n            }\n\n            return (\n                <Input\n                    key=\"display\"\n                    className={fieldValue.displayValue ? 'has-value' : ''}\n                    value={displayedValue}\n                    onFocus={_handleFocus}\n                    disabled={state.isReadOnly}\n                />\n            );\n        }\n\n        const InputComponent = inputComponentByFormat[attribute.format];\n\n        // This should never happen, unless we have some bad settings in DB\n        if (!InputComponent) {\n            return <div>{t('record_edition.invalid_format')}</div>;\n        }\n\n        return (\n            <InputComponent\n                state={state}\n                fieldValue={fieldValue}\n                onChange={_handleValueChange}\n                onFocus={_handleFocus}\n                onSubmit={_handleSubmit}\n                onPressEnter={_handlePressEnter}\n                settings={state.formElement.settings}\n                inputRef={inputRef}\n            />\n        );\n    };\n\n    const _getFilteredValuesList = (): IValueOfValuesList[] => {\n        let values: Array<Pick<IValueOfValuesList, 'value' | 'rawValue'>> = [];\n\n        if (isValuesListEnabled) {\n            if (attribute.format === AttributeFormat.date_range) {\n                const valuesList = (attribute?.values_list as IDateRangeValuesListConf)?.dateRangeValues ?? [];\n\n                values = valuesList\n                    .filter(val => {\n                        return fieldValue.state === StandardFieldValueState.PRISTINE || !fieldValue.editingValue;\n                    })\n                    .map(v => {\n                        const rangeValue = {\n                            from: moment(Number(v.from) * 1000).format('L'),\n                            to: moment(Number(v.to) * 1000).format('L')\n                        };\n                        return {\n                            value: stringifyDateRangeValue(rangeValue, t),\n                            rawValue: {from: v.from, to: v.to}\n                        };\n                    });\n            } else {\n                const valuesList = (attribute?.values_list as IStringValuesListConf)?.values ?? [];\n\n                values = valuesList\n                    .filter(val => {\n                        return (\n                            fieldValue.state === StandardFieldValueState.PRISTINE ||\n                            !fieldValue.editingValue ||\n                            attribute.format === AttributeFormat.date ||\n                            val.match(new RegExp(String(fieldValue.editingValue), 'i'))\n                        );\n                    })\n                    .map(v => ({value: v, rawValue: v}));\n            }\n        }\n\n        const hydratedValues: IValueOfValuesList[] = values.map(value => ({\n            ...value,\n            isNewValue: false,\n            canCopy:\n                isValuesListOpen &&\n                attribute.format !== AttributeFormat.date &&\n                attribute.format !== AttributeFormat.date_range\n        }));\n\n        // Display current value on top of values list as \"new value\". Don't do that for date range attribute as it\n        // doesn't make much sense\n        if (\n            isValuesListOpen &&\n            String(fieldValue.editingValue) &&\n            attribute.format !== AttributeFormat.date_range &&\n            !((attribute?.values_list as IStringValuesListConf)?.values ?? []).some(v => v === fieldValue.editingValue)\n        ) {\n            hydratedValues.unshift({\n                value: String(fieldValue.editingValue),\n                rawValue: String(fieldValue.editingValue),\n                isNewValue: true,\n                canCopy: false\n            });\n        }\n\n        return hydratedValues;\n    };\n\n    const errorContent = (\n        <ErrorMessage>\n            <Space size=\"small\">\n                <ExclamationCircleOutlined />\n                {fieldValue.error}\n                <Button onClick={_handleCloseError} size=\"small\" icon={<CloseOutlined />} style={{border: 'none'}} />\n            </Space>\n        </ErrorMessage>\n    );\n\n    const isErrorVisible =\n        (fieldValue.isEditing || attribute.format === AttributeFormat.boolean || !state.record) &&\n        fieldValue.isErrorDisplayed;\n\n    const wrapperClasses = `\n        ${attribute.format ? `format-${attribute.format}` : ''}\n        ${fieldValue.value?.value ? 'has-value' : ''}\n        ${fieldValue.isEditing ? 'editing' : ''}\n    `;\n\n    const canDeleteValue =\n        !state.isReadOnly && fieldValue.idValue !== newValueId && attribute.format !== AttributeFormat.boolean;\n\n    const valuesList = _getFilteredValuesList();\n\n    const valueActions: FloatingMenuAction[] = [\n        {\n            title: t('record_edition.value_details'),\n            button: <ValueDetailsBtn value={fieldValue.value} attribute={attribute} shape=\"circle\" />\n        }\n    ];\n\n    if (canDeleteValue && !fieldValue.isEditing && fieldValue.displayValue) {\n        valueActions.push({\n            title: t('global.delete'),\n            button: <DeleteValueBtn onDelete={_handleDelete} shape=\"circle\" />\n        });\n    }\n\n    return (\n        <>\n            {fieldValue.isEditing && <Dimmer onClick={_handleCancel} />}\n            <FormWrapper isEditing={fieldValue.isEditing} className={!fieldValue.index ? 'first-value' : ''}>\n                <Form>\n                    <FormItem>\n                        <Popover placement=\"topLeft\" visible={isErrorVisible} content={errorContent}>\n                            <InputWrapper\n                                isEditing={fieldValue.isEditing}\n                                className={wrapperClasses}\n                                data-testid=\"input-wrapper\"\n                            >\n                                {!fieldValue.index && (\n                                    <label className=\"attribute-label\" onClick={_handleFocus}>\n                                        {state.formElement.settings.label}\n                                    </label>\n                                )}\n                                {_getInput()}\n                                <FloatingMenu actions={valueActions} />\n                            </InputWrapper>\n                        </Popover>\n                        <ActionsWrapper ref={actionsWrapperRef}>\n                            {fieldValue.isEditing && attribute?.values_list?.enable && (\n                                <ValuesList\n                                    attribute={attribute}\n                                    valuesList={valuesList}\n                                    onValueSelect={_handleSubmit}\n                                    onValueCopy={_handleValueCopy}\n                                />\n                            )}\n                            {fieldValue.isEditing && (\n                                <ButtonsWrapper>\n                                    <Button size=\"small\" onClick={_handleCancel} style={{background: '#FFF'}}>\n                                        {t('global.cancel')}\n                                    </Button>\n                                    {(!isValuesListEnabled || isValuesListOpen) && (\n                                        <PrimaryBtn size=\"small\" onClick={_handleClickSubmit}>\n                                            {t('global.submit')}\n                                        </PrimaryBtn>\n                                    )}\n                                </ButtonsWrapper>\n                            )}\n                        </ActionsWrapper>\n                    </FormItem>\n                </Form>\n            </FormWrapper>\n        </>\n    );\n}\n\nexport default StandardFieldValue;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport StandardFieldValue from './StandardFieldValue';\nexport default StandardFieldValue;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {AnyPrimitive, ErrorTypes, ICommonFieldsSettings, IKeyValue} from '@leav/utils';\nimport CreationErrorContext from 'components/RecordEdition/EditRecordModal/creationErrorContext';\nimport ErrorDisplay from 'components/shared/ErrorDisplay';\nimport React, {useContext, useEffect, useReducer} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport styled from 'styled-components';\nimport {AttributeFormat} from '_gqlTypes/globalTypes';\nimport {RECORD_FORM_recordForm_elements_values_Value} from '_gqlTypes/RECORD_FORM';\nimport {SAVE_VALUE_BATCH_saveValueBatch_values_Value} from '_gqlTypes/SAVE_VALUE_BATCH';\nimport {useRecordEditionContext} from '../../hooks/useRecordEditionContext';\nimport AddValueBtn from '../../shared/AddValueBtn';\nimport {APICallStatus, IFormElementProps} from '../../_types';\nimport standardFieldReducer, {\n    IdValue,\n    IStandardFieldReducerState,\n    IStandardFieldValue,\n    newValueId,\n    StandardFieldReducerActionsTypes,\n    virginValue\n} from './standardFieldReducer/standardFieldReducer';\nimport StandardFieldValue from './StandardFieldValue';\n\nconst Wrapper = styled.div`\n    margin-bottom: 1.5em;\n`;\n\nfunction StandardField({\n    element,\n    record,\n    onValueSubmit,\n    onValueDelete\n}: IFormElementProps<ICommonFieldsSettings>): JSX.Element {\n    const {t} = useTranslation();\n    const {readOnly: isRecordReadOnly} = useRecordEditionContext();\n\n    const fieldValues = (element.values as RECORD_FORM_recordForm_elements_values_Value[]) ?? [];\n    const isMultipleValues = element.attribute.multiple_values;\n    const {attribute} = element;\n    const creationErrors = useContext(CreationErrorContext);\n\n    const initialValues = fieldValues.length\n        ? fieldValues.reduce(\n              (allValues, fieldValue, index): IKeyValue<IStandardFieldValue> => ({\n                  ...allValues,\n                  [fieldValue.id_value]: {\n                      ...virginValue,\n                      idValue: fieldValue?.id_value ?? null,\n                      index,\n                      value: fieldValue ?? null,\n                      displayValue: fieldValue?.value ?? '',\n                      editingValue: attribute.format === AttributeFormat.encrypted ? '' : fieldValue?.raw_value ?? '',\n                      originRawValue: attribute.format === AttributeFormat.encrypted ? '' : fieldValue?.raw_value ?? ''\n                  }\n              }),\n              {}\n          )\n        : {\n              [newValueId]: {\n                  ...virginValue,\n                  idValue: newValueId\n              }\n          };\n\n    const initialState: IStandardFieldReducerState = {\n        attribute,\n        record,\n        formElement: element,\n        isReadOnly: attribute?.system || isRecordReadOnly || !attribute.permissions.edit_value,\n        values: initialValues\n    };\n\n    const [state, dispatch] = useReducer(standardFieldReducer, initialState);\n\n    useEffect(() => {\n        if (creationErrors[attribute.id]) {\n            const idValue =\n                Object.values(state.values).filter(val => val.editingValue === creationErrors[attribute.id].input)?.[0]\n                    .idValue ?? null;\n            dispatch({\n                type: StandardFieldReducerActionsTypes.SET_ERROR,\n                idValue,\n                error: creationErrors[attribute.id].message\n            });\n        }\n    }, [creationErrors, attribute.id, state.values]);\n\n    const _handleSubmit = async (idValue: IdValue, valueToSave: AnyPrimitive) => {\n        const isSavingNewValue = idValue === newValueId;\n        dispatch({\n            type: StandardFieldReducerActionsTypes.CLEAR_ERROR,\n            idValue\n        });\n\n        const submitRes = await onValueSubmit([\n            {value: valueToSave, idValue: isSavingNewValue ? null : idValue, attribute}\n        ]);\n\n        if (submitRes.status === APICallStatus.SUCCESS) {\n            dispatch({\n                type: StandardFieldReducerActionsTypes.UPDATE_AFTER_SUBMIT,\n                newValue: submitRes.values[0] as SAVE_VALUE_BATCH_saveValueBatch_values_Value,\n                idValue\n            });\n\n            return;\n        }\n\n        let errorMessage = submitRes.error;\n        if (!errorMessage && submitRes.errors) {\n            const attributeError = (submitRes?.errors ?? []).filter(err => err.attribute === attribute.id)?.[0];\n\n            if (attributeError) {\n                errorMessage =\n                    attributeError.type === ErrorTypes.VALIDATION_ERROR\n                        ? attributeError.message\n                        : t(`errors.${attributeError.type}`);\n            }\n        }\n\n        dispatch({\n            type: StandardFieldReducerActionsTypes.SET_ERROR,\n            idValue,\n            error: errorMessage\n        });\n    };\n\n    const _handleDelete = async (idValue: IdValue) => {\n        dispatch({\n            type: StandardFieldReducerActionsTypes.UNEDIT_FIELD,\n            idValue\n        });\n\n        const deleteRes = await onValueDelete({id_value: idValue}, attribute.id);\n\n        if (deleteRes.status === APICallStatus.SUCCESS) {\n            dispatch({\n                type: StandardFieldReducerActionsTypes.UPDATE_AFTER_DELETE,\n                idValue\n            });\n\n            return;\n        }\n\n        dispatch({\n            type: StandardFieldReducerActionsTypes.SET_ERROR,\n            idValue,\n            error: deleteRes.error\n        });\n    };\n\n    const _handleAddValue = () => {\n        dispatch({\n            type: StandardFieldReducerActionsTypes.ADD_VALUE\n        });\n    };\n\n    if (!element.attribute) {\n        return <ErrorDisplay message={t('record_edition.missing_attribute')} />;\n    }\n\n    const valuesToDisplay = Object.values(state.values).sort((valueA, valueB) => valueA.index - valueB.index);\n    const hasValue = valuesToDisplay[0].idValue !== newValueId && valuesToDisplay[0].idValue !== null;\n    const canAddAnotherValue = isMultipleValues && hasValue && attribute.format !== AttributeFormat.boolean;\n\n    return (\n        <Wrapper>\n            {valuesToDisplay.map(value => (\n                <StandardFieldValue\n                    key={value.idValue}\n                    value={value}\n                    state={state}\n                    dispatch={dispatch}\n                    onSubmit={_handleSubmit}\n                    onDelete={_handleDelete}\n                />\n            ))}\n            {canAddAnotherValue && (\n                <AddValueBtn\n                    onClick={_handleAddValue}\n                    style={{borderTopLeftRadius: 0, borderTopRightRadius: 0, width: '100%'}}\n                    bordered\n                />\n            )}\n        </Wrapper>\n    );\n}\n\nexport default StandardField;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport StandardField from './StandardField';\nexport default StandardField;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {IFormTextBlockSettings} from '@leav/utils';\nimport React from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport {IFormElementProps} from '../../_types';\n\nfunction TextBlock({element}: IFormElementProps<IFormTextBlockSettings>): JSX.Element {\n    return <ReactMarkdown>{element.settings.content}</ReactMarkdown>;\n}\n\nexport default TextBlock;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport TextBlock from './TextBlock';\nexport default TextBlock;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport DeleteValueBtn from 'components/RecordEdition/EditRecord/shared/DeleteValueBtn';\nimport ValueDetailsBtn from 'components/RecordEdition/EditRecord/shared/ValueDetailsBtn';\nimport EditRecordBtn from 'components/RecordEdition/EditRecordBtn';\nimport FloatingMenu from 'components/shared/FloatingMenu';\nimport {FloatingMenuAction} from 'components/shared/FloatingMenu/FloatingMenu';\nimport RecordCard from 'components/shared/RecordCard';\nimport {IRecordPropertyTree} from 'graphQL/queries/records/getRecordPropertiesQuery';\nimport React from 'react';\nimport {useTranslation} from 'react-i18next';\nimport styled from 'styled-components';\nimport themingVar from 'themingVar';\nimport {RECORD_FORM_recordForm_elements_attribute_TreeAttribute} from '_gqlTypes/RECORD_FORM';\nimport {PreviewSize} from '_types/types';\n\ninterface ITreeFieldValueProps {\n    value: IRecordPropertyTree;\n    attribute: RECORD_FORM_recordForm_elements_attribute_TreeAttribute;\n    onDelete: () => void;\n    isReadOnly: boolean;\n}\n\nconst ListItem = styled.div`\n    padding: 0.5em 0;\n    position: relative;\n    &:not(:last-child) {\n        border-bottom: 1px solid ${themingVar['@border-color-base']};\n    }\n\n    &:not(:hover) .floating-menu {\n        display: none;\n    }\n\n    & .floating-menu {\n        right: 30px;\n    }\n`;\n\nfunction TreeFieldValue({value, attribute, onDelete, isReadOnly}: ITreeFieldValueProps): JSX.Element {\n    const {t} = useTranslation();\n    const _handleDelete = async () => onDelete();\n\n    const valueMenuActions: FloatingMenuAction[] = [\n        {\n            title: t('record_edition.edit_record'),\n            button: <EditRecordBtn record={value.treeValue.record.whoAmI} />\n        },\n        {\n            title: t('record_edition.value_details'),\n            button: <ValueDetailsBtn value={value} attribute={attribute} />\n        }\n    ];\n\n    if (!isReadOnly) {\n        valueMenuActions.push({\n            title: t('global.delete'),\n            button: <DeleteValueBtn onDelete={_handleDelete} />\n        });\n    }\n\n    return (\n        <ListItem>\n            <RecordCard record={value.treeValue.record.whoAmI} size={PreviewSize.small} />\n            <FloatingMenu actions={valueMenuActions} />\n        </ListItem>\n    );\n}\n\nexport default TreeFieldValue;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport TreeFieldValue from './TreeFieldValue';\nexport default TreeFieldValue;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport gql from 'graphql-tag';\nimport recordIdentityFragment from '../records/recordIdentityFragment';\n\nexport const treeNodeChildrenQuery = gql`\n    ${recordIdentityFragment}\n    query TREE_NODE_CHILDREN($treeId: ID!, $node: ID, $pagination: Pagination) {\n        treeNodeChildren(treeId: $treeId, node: $node, pagination: $pagination) {\n            totalCount\n            list {\n                id\n                childrenCount\n                record {\n                    ...RecordIdentity\n                }\n                permissions {\n                    access_tree\n                    detach\n                    edit_children\n                }\n            }\n        }\n    }\n`;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {DownOutlined} from '@ant-design/icons';\nimport {useLazyQuery} from '@apollo/client';\nimport {Spin, Tree} from 'antd';\nimport {Key} from 'antd/lib/table/interface';\nimport {EventDataNode} from 'antd/lib/tree';\nimport {treeNavigationPageSize} from 'constants/constants';\nimport {treeNodeChildrenQuery} from 'graphQL/queries/trees/getTreeNodeChildren';\nimport {useLang} from 'hooks/LangHook/LangHook';\nimport React, {useEffect, useState} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {localizedTranslation} from 'utils';\nimport {\n    TREE_NODE_CHILDREN,\n    TREE_NODE_CHILDRENVariables,\n    TREE_NODE_CHILDREN_treeNodeChildren_list\n} from '_gqlTypes/TREE_NODE_CHILDREN';\nimport {ISystemTranslation} from '_types/types';\nimport ErrorDisplay from '../ErrorDisplay';\nimport {ITreeNodeWithRecord} from '../SelectTreeNodeModal/SelectTreeNodeModal';\n\ninterface ISelectTreeNodeProps {\n    tree: {id: string; label?: ISystemTranslation | null};\n    selectedNode?: string;\n    onSelect: (node: ITreeNodeWithRecord, selected: boolean) => void;\n    onCheck?: (selection: ITreeNodeWithRecord[]) => void;\n    multiple?: boolean;\n}\n\nconst _constructTreeContent = (data: TREE_NODE_CHILDREN_treeNodeChildren_list[]): ITreeNodeWithRecord[] => {\n    return data.map(e => {\n        return {\n            record: e.record,\n            title: e.record.whoAmI.label || e.record.whoAmI.id,\n            id: e.id,\n            key: e.id,\n            isLeaf: !e.childrenCount,\n            children: []\n        };\n    });\n};\n\nconst _getTreeNodeByKey = (key: string, treeContent: ITreeNodeWithRecord[]): ITreeNodeWithRecord => {\n    for (const node of treeContent) {\n        if (key === node.key) {\n            return node;\n        }\n\n        const n = _getTreeNodeByKey(key, node.children);\n\n        if (!!n) {\n            return n;\n        }\n    }\n};\n\ntype ITreeMapElement = ITreeNodeWithRecord & {\n    isLeaf?: boolean;\n    paginationOffset: number;\n    children: ITreeMapElement[];\n    isShowMore?: boolean;\n    selectable?: boolean;\n};\n\ninterface ITreeMap {\n    [nodeId: string]: ITreeMapElement;\n}\n\nfunction SelectTreeNode({\n    tree,\n    onSelect,\n    onCheck,\n    selectedNode: initSelectedNode,\n    multiple = false\n}: ISelectTreeNodeProps): JSX.Element {\n    const [{lang}] = useLang();\n    const {t} = useTranslation();\n\n    const rootNode: ITreeMapElement = {\n        title: localizedTranslation(tree.label, lang) || tree.id,\n        record: null,\n        id: tree.id,\n        key: tree.id,\n        isLeaf: false,\n        paginationOffset: 0,\n        children: []\n    };\n\n    // As we'll fetch children when a node is expanded, we store the whole tree content in a hash map\n    // to make update easier and more efficient\n    const [treeMap, setTreeMap] = useState<ITreeMap>({\n        [tree.id]: rootNode\n    });\n    const [selectedNode, setSelectedNode] = useState<string>(initSelectedNode);\n    const [fetchError, setFetchError] = useState<string>();\n\n    // Retrieve tree content\n    const [loadTreeContent, {error, called}] = useLazyQuery<TREE_NODE_CHILDREN, TREE_NODE_CHILDRENVariables>(\n        treeNodeChildrenQuery\n    );\n\n    const _fetchTreeContent = async (key?: string, offset: number = 0) => {\n        try {\n            const data = await loadTreeContent({\n                variables: {\n                    treeId: tree.id,\n                    node: key && key !== tree.id ? key : null,\n                    pagination: {\n                        limit: treeNavigationPageSize,\n                        offset\n                    }\n                }\n            });\n\n            const formattedNodes = _constructTreeContent(data.data.treeNodeChildren.list);\n            const parentMapKey = key ?? tree.id;\n\n            const newTreeMap = {...treeMap};\n            const totalCount = data.data.treeNodeChildren.totalCount;\n            const parentElement = newTreeMap[parentMapKey];\n            const showMoreKey = '__showMore' + parentMapKey + offset;\n\n            parentElement.children = parentElement.children.filter(\n                child => !child.key.match(`__showMore${parentMapKey}`)\n            ) as ITreeMapElement[];\n\n            for (const node of formattedNodes) {\n                const nodeForTreeMap = {...node, paginationOffset: 0};\n                newTreeMap[nodeForTreeMap.key] = nodeForTreeMap as ITreeMapElement;\n                parentElement.paginationOffset = offset;\n                parentElement.children.push(nodeForTreeMap);\n            }\n\n            if (totalCount > parentElement.paginationOffset + treeNavigationPageSize) {\n                const showMoreElement: ITreeMapElement = {\n                    id: parentMapKey,\n                    key: showMoreKey,\n                    record: null,\n                    title: t('tree-node-selection.show_more'),\n                    isLeaf: false,\n                    paginationOffset: 0,\n                    isShowMore: true,\n                    selectable: false,\n                    children: []\n                };\n\n                parentElement.children.push(showMoreElement);\n            }\n            setTreeMap(newTreeMap);\n\n            setFetchError(null);\n        } catch (err) {\n            setFetchError(err.message);\n        }\n    };\n\n    useEffect(() => {\n        setSelectedNode(initSelectedNode);\n    }, [initSelectedNode]);\n\n    useEffect(() => {\n        // Load root\n        _fetchTreeContent();\n    }, []);\n\n    const _handleLoadData = async (nodeData: EventDataNode) => {\n        const {id, isShowMore} = nodeData as EventDataNode & ITreeMapElement;\n\n        // Handle offset if we get here through the \"show more\" element\n        const currentNodeOffset = treeMap[id]?.paginationOffset ?? 0;\n        const paginationOffset = isShowMore\n            ? (treeMap[id]?.paginationOffset ?? 0) + treeNavigationPageSize\n            : currentNodeOffset;\n\n        if (id === tree.id) {\n            // Root has already been loaded\n            return;\n        }\n\n        await _fetchTreeContent(String(id), paginationOffset);\n    };\n\n    const _handleSelect = (_, e: {selected: boolean; node: any}) => {\n        const node = treeMap[e.node.key];\n\n        if (node) {\n            onSelect(node, e.selected);\n        }\n    };\n\n    const _handleCheck = (selection: {checked: Key[]} | Key[]) => {\n        const checkedKeys = typeof selection === 'object' ? (selection as {checked: Key[]}).checked : selection;\n        const nodes = checkedKeys.map(key => treeMap[key]);\n        onCheck(nodes);\n    };\n\n    if (!called) {\n        return <Spin />;\n    }\n\n    if (error || fetchError) {\n        return <ErrorDisplay message={error?.message ?? fetchError} />;\n    }\n\n    return (\n        <Tree\n            defaultExpandedKeys={[selectedNode]}\n            multiple={multiple}\n            selectable={true}\n            selectedKeys={[selectedNode]}\n            onSelect={_handleSelect}\n            onCheck={_handleCheck}\n            treeData={[treeMap[rootNode.key]]}\n            loadData={_handleLoadData}\n            checkStrictly\n            checkable={multiple}\n            showLine={{\n                showLeafIcon: false\n            }}\n            switcherIcon={<DownOutlined aria-label=\"toggle-children\" />}\n        />\n    );\n}\n\nexport default SelectTreeNode;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport SelectTreeNode from './SelectTreeNode';\nexport default SelectTreeNode;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {Breadcrumb, Button, Divider, Space} from 'antd';\nimport {PrimaryBtn} from 'components/app/StyledComponent/PrimaryBtn';\nimport List from 'components/shared/List';\nimport RecordCard from 'components/shared/RecordCard';\nimport SelectTreeNode from 'components/shared/SelectTreeNode';\nimport {ITreeNodeWithRecord} from 'components/shared/SelectTreeNodeModal/SelectTreeNodeModal';\nimport {useLang} from 'hooks/LangHook/LangHook';\nimport React, {useEffect, useRef, useState} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport styled from 'styled-components';\nimport themingVar from 'themingVar';\nimport {getTreeRecordKey, localizedTranslation} from 'utils';\nimport {\n    RECORD_FORM_recordForm_elements_attribute_TreeAttribute,\n    RECORD_FORM_recordForm_elements_values_TreeValue_treeValue\n} from '_gqlTypes/RECORD_FORM';\nimport {PreviewSize} from '_types/types';\n\ninterface IValuesAddProps {\n    attribute: RECORD_FORM_recordForm_elements_attribute_TreeAttribute;\n    onAdd: (values: ITreeNodeWithRecord[]) => void;\n    onClose: () => void;\n}\n\nconst Wrapper = styled.div`\n    background-color: ${themingVar['@default-bg']};\n    z-index: 1;\n    position: relative;\n`;\n\nconst SelectionWrapper = styled.div`\n    padding: 1em;\n    max-height: 350px;\n    overflow: auto;\n`;\n\nconst FooterWrapper = styled.div`\n    padding: 0.5em 1em;\n    display: flex;\n    justify-content: flex-end;\n    background: ${themingVar['@background-color-light']};\n`;\n\nconst BreadcrumbWrapper = styled.div`\n    & .record-card .label {\n        font-weight: normal;\n    }\n`;\n\nconst BreadcrumbRoot = styled(Breadcrumb)`\n    display: flex;\n    align-items: center;\n`;\n\nconst BreadcrumbItem = styled(Breadcrumb.Item)`\n    display: flex;\n    align-items: center;\n\n    padding: 0.5em 0;\n`;\n\ntype ValueFromList = RECORD_FORM_recordForm_elements_values_TreeValue_treeValue;\n\nfunction ValuesAdd({attribute, onAdd, onClose}: IValuesAddProps): JSX.Element {\n    const {t} = useTranslation();\n    const [{lang}] = useLang();\n    const valuesList = attribute.treeValuesList.enable ? attribute.treeValuesList.values : [];\n    const wrapperRef = useRef<HTMLDivElement>();\n\n    const [selectedValuesFromTree, setSelectedValuesFromTree] = useState<ITreeNodeWithRecord[]>([]);\n    const [selectedValuesFromList, setSelectedValuesFromList] = useState<ValueFromList[]>([]);\n\n    useEffect(() => {\n        wrapperRef.current.scrollIntoView({block: 'nearest'});\n    }, []);\n\n    const _handleSelectionChange = (selection: ValueFromList[]) => setSelectedValuesFromList(selection);\n\n    const _handleSelect = (node: ITreeNodeWithRecord, selected: boolean) => {\n        if (selected) {\n            onAdd([node]);\n        }\n    };\n\n    const _handleCheck = (selectedNodes: ITreeNodeWithRecord[]) => setSelectedValuesFromTree(selectedNodes);\n\n    const _handleClose = () => onClose();\n\n    const _handleItemClick = (valueListItem: ValueFromList) => {\n        const recordKey = getTreeRecordKey(valueListItem.record);\n        onAdd([\n            {\n                record: valueListItem.record,\n                key: recordKey,\n                id: recordKey,\n                title: valueListItem.record.whoAmI.label,\n                children: null\n            }\n        ]);\n    };\n\n    const _handleSubmit = () => {\n        const selection: ITreeNodeWithRecord[] = [\n            ...selectedValuesFromList.map(selectedVal => {\n                const recordKey = getTreeRecordKey(selectedVal.record);\n                return {\n                    record: selectedVal.record,\n                    id: recordKey,\n                    key: recordKey,\n                    title: selectedVal.record.whoAmI.label,\n                    children: null\n                };\n            }),\n            ...selectedValuesFromTree\n        ];\n\n        onAdd(selection);\n    };\n\n    const _renderListItem = (item: ValueFromList) => {\n        const pathToDisplay = item.ancestors;\n\n        const parents = pathToDisplay.slice(0, -1);\n        const element = pathToDisplay.slice(-1)[0];\n        const recordCardSettings = {withLibrary: false, withPreview: false};\n        return (\n            <BreadcrumbWrapper>\n                <BreadcrumbRoot separator=\"\">\n                    {parents.map(ancestor => {\n                        return (\n                            <BreadcrumbItem key={ancestor.record.id}>\n                                <RecordCard\n                                    record={ancestor.record.whoAmI}\n                                    size={PreviewSize.small}\n                                    {...recordCardSettings}\n                                />\n                                <Breadcrumb.Separator>{'>'}</Breadcrumb.Separator>\n                            </BreadcrumbItem>\n                        );\n                    })}\n                    <BreadcrumbItem key={element.record.id}>\n                        <RecordCard record={element.record.whoAmI} size={PreviewSize.small} {...recordCardSettings} />\n                    </BreadcrumbItem>\n                </BreadcrumbRoot>\n            </BreadcrumbWrapper>\n        );\n    };\n\n    return (\n        <>\n            <Wrapper data-testid=\"values-add\" ref={wrapperRef}>\n                <SelectionWrapper>\n                    {!!valuesList.length && (\n                        <>\n                            <Divider orientation=\"left\">{t('record_edition.values_list')}</Divider>\n                            <List\n                                dataSource={valuesList}\n                                onItemClick={_handleItemClick}\n                                renderItemContent={_renderListItem}\n                                selectable={attribute.multiple_values}\n                                selectedItems={selectedValuesFromList}\n                                onSelectionChange={_handleSelectionChange}\n                                pagination={false}\n                            />\n                        </>\n                    )}\n                    <Divider orientation=\"left\">{localizedTranslation(attribute.linked_tree.label, lang)}</Divider>\n                    <SelectTreeNode\n                        tree={attribute.linked_tree}\n                        onSelect={_handleSelect}\n                        onCheck={_handleCheck}\n                        multiple={attribute.multiple_values}\n                    />\n                </SelectionWrapper>\n                {attribute.multiple_values && (\n                    <FooterWrapper>\n                        <Space>\n                            <Button size=\"small\" onClick={_handleClose}>\n                                {t('global.cancel')}\n                            </Button>\n                            <PrimaryBtn size=\"small\" onClick={_handleSubmit}>\n                                {t('global.submit')}\n                            </PrimaryBtn>\n                        </Space>\n                    </FooterWrapper>\n                )}\n            </Wrapper>\n        </>\n    );\n}\n\nexport default ValuesAdd;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport ValuesAdd from './ValuesAdd';\nexport default ValuesAdd;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {ICommonFieldsSettings} from '@leav/utils';\nimport {List, Popover} from 'antd';\nimport Paragraph from 'antd/lib/typography/Paragraph';\nimport Dimmer from 'components/shared/Dimmer';\nimport ErrorMessage from 'components/shared/ErrorMessage';\nimport {ITreeNodeWithRecord} from 'components/shared/SelectTreeNodeModal/SelectTreeNodeModal';\nimport {IRecordPropertyTree} from 'graphQL/queries/records/getRecordPropertiesQuery';\nimport React, {useEffect, useState} from 'react';\nimport styled from 'styled-components';\nimport themingVar from 'themingVar';\nimport {\n    RECORD_FORM_recordForm_elements_attribute_TreeAttribute,\n    RECORD_FORM_recordForm_elements_values_TreeValue\n} from '_gqlTypes/RECORD_FORM';\nimport {SAVE_VALUE_BATCH_saveValueBatch_values_TreeValue} from '_gqlTypes/SAVE_VALUE_BATCH';\nimport {useRecordEditionContext} from '../../hooks/useRecordEditionContext';\nimport AddValueBtn from '../../shared/AddValueBtn';\nimport NoValue from '../../shared/NoValue';\nimport {APICallStatus, IFormElementProps} from '../../_types';\nimport TreeFieldValue from './TreeFieldValue';\nimport ValuesAdd from './ValuesAdd';\n\nconst Wrapper = styled.div<{isValuesAddVisible: boolean}>`\n    position: relative;\n    border: 1px solid ${themingVar['@border-color-base']};\n    margin-bottom: 1.5em;\n    border-radius: ${themingVar['@border-radius-base']};\n    background: ${themingVar['@default-bg']};\n    z-index: ${p => (p.isValuesAddVisible ? 1 : 'auto')};\n\n    .ant-list-items {\n        max-height: 320px;\n        overflow-y: auto;\n    }\n\n    .ant-list-footer {\n        padding: 0;\n    }\n`;\n\nconst FieldLabel = styled(Paragraph)`\n    && {\n        top: calc(50% - 0.9em);\n        font-size: 0.9em;\n        padding: 0 0.5em;\n        color: ${themingVar['@leav-secondary-font-color']};\n        z-index: 1;\n        margin-bottom: 0;\n    }\n`;\n\nconst FooterWrapper = styled.div`\n    text-align: left;\n`;\n\nfunction TreeField({\n    element,\n    record,\n    onValueSubmit,\n    onValueDelete\n}: IFormElementProps<ICommonFieldsSettings>): JSX.Element {\n    const attribute = element.attribute as RECORD_FORM_recordForm_elements_attribute_TreeAttribute;\n    const {readOnly: isRecordReadOnly} = useRecordEditionContext();\n    const recordValues = (element.values as RECORD_FORM_recordForm_elements_values_TreeValue[]) ?? [];\n\n    const [fieldValues, setFieldValues] = useState<RECORD_FORM_recordForm_elements_values_TreeValue[]>(recordValues);\n\n    useEffect(() => {\n        if (record) {\n            // Update values only for existing record. On creation, we handle everything here\n            setFieldValues(recordValues ?? []);\n        }\n    }, [recordValues, element.settings.attribute, record]);\n\n    const [errorMessage, setErrorMessage] = useState<string | string[]>();\n    const [isValuesAddVisible, setIsValuesAddVisible] = useState<boolean>();\n    const isReadOnly = element.attribute?.system || isRecordReadOnly || !attribute.permissions.edit_value;\n\n    const data = fieldValues.map(val => ({\n        ...val,\n        key: val.id_value\n    }));\n\n    const renderItem = (value: IRecordPropertyTree) => {\n        const _handleDelete = async () => {\n            const deleteRes = await onValueDelete({id_value: value.id_value}, attribute.id);\n\n            if (deleteRes.status === APICallStatus.SUCCESS) {\n                setFieldValues(fieldValues.filter(val => val.id_value !== value.id_value));\n                return;\n            }\n        };\n\n        return <TreeFieldValue value={value} attribute={attribute} onDelete={_handleDelete} isReadOnly={isReadOnly} />;\n    };\n\n    const canAddValue = !isReadOnly && (attribute.multiple_values || !fieldValues.length);\n\n    const _handleAddValue = () => {\n        setIsValuesAddVisible(true);\n    };\n\n    const _handleSubmitSelectTreeNodeModal = async (treeNodes: ITreeNodeWithRecord[]) => {\n        const valuesToSave = treeNodes.map(node => ({\n            attribute,\n            idValue: null,\n            value: node\n        }));\n\n        const res = await onValueSubmit(valuesToSave);\n\n        if (res.status === APICallStatus.ERROR) {\n            setErrorMessage(res.error);\n        } else if (res.values) {\n            setFieldValues([...fieldValues, ...(res.values as SAVE_VALUE_BATCH_saveValueBatch_values_TreeValue[])]);\n        }\n\n        if (res?.errors?.length) {\n            const selectedNodesById = treeNodes.reduce((acc, cur) => ({...acc, [cur.id]: cur}), {});\n\n            const errorsMessage = res.errors.map(err => {\n                const linkedRecordLabel = selectedNodesById[err.input].title || selectedNodesById[err.input].id;\n\n                return `${linkedRecordLabel}: ${err.message}`;\n            });\n            setErrorMessage(errorsMessage);\n        } else {\n            setIsValuesAddVisible(false);\n        }\n    };\n\n    const ListFooter =\n        fieldValues.length && canAddValue ? (\n            <FooterWrapper>\n                <AddValueBtn onClick={_handleAddValue} disabled={isValuesAddVisible} />\n            </FooterWrapper>\n        ) : null;\n\n    const _handleCloseValuesAdd = () => setIsValuesAddVisible(false);\n\n    const _handleCloseError = () => {\n        setErrorMessage('');\n    };\n\n    return (\n        <>\n            {isValuesAddVisible && <Dimmer onClick={_handleCloseValuesAdd} />}\n            <Wrapper isValuesAddVisible={isValuesAddVisible}>\n                <FieldLabel ellipsis={{rows: 1, tooltip: true}}>{element.settings.label}</FieldLabel>\n                <List\n                    dataSource={data}\n                    renderItem={renderItem}\n                    split\n                    locale={{\n                        emptyText: <NoValue canAddValue={canAddValue} onAddValue={_handleAddValue} />\n                    }}\n                    footer={ListFooter}\n                />\n                {isValuesAddVisible && (\n                    <ValuesAdd\n                        attribute={attribute}\n                        onAdd={_handleSubmitSelectTreeNodeModal}\n                        onClose={_handleCloseValuesAdd}\n                    />\n                )}\n            </Wrapper>\n            {errorMessage && (\n                <Popover\n                    placement=\"bottomLeft\"\n                    visible={!!errorMessage}\n                    content={<ErrorMessage error={errorMessage} onClose={_handleCloseError} />}\n                ></Popover>\n            )}\n        </>\n    );\n}\n\nexport default TreeField;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport TreeField from './TreeField';\nexport default TreeField;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {FormFieldTypes, FormUIElementTypes} from '@leav/utils';\nimport {IFormElementProps} from '../_types';\nimport Container from './Container';\nimport FormDivider from './FormDivider';\nimport FormTabs from './FormTabs';\nimport LinkField from './LinkField';\nimport StandardField from './StandardField';\nimport TextBlock from './TextBlock';\nimport TreeField from './TreeField';\n\nexport const formComponents: {\n    [type in FormUIElementTypes & FormFieldTypes]: (props: IFormElementProps<any>) => JSX.Element;\n} = {\n    [FormUIElementTypes.FIELDS_CONTAINER]: Container,\n    [FormFieldTypes.TEXT_INPUT]: StandardField,\n    [FormFieldTypes.DATE]: StandardField,\n    [FormFieldTypes.CHECKBOX]: StandardField,\n    [FormFieldTypes.ENCRYPTED]: StandardField,\n    [FormFieldTypes.LINK]: LinkField,\n    [FormFieldTypes.TREE]: TreeField,\n    [FormUIElementTypes.TABS]: FormTabs,\n    [FormUIElementTypes.TEXT_BLOCK]: TextBlock,\n    [FormUIElementTypes.DIVIDER]: FormDivider\n};\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {extractFormElements} from './extractFormElements';\nexport default extractFormElements;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {RECORD_FORM_recordForm} from '_gqlTypes/RECORD_FORM';\nimport {formComponents} from '../../uiElements';\nimport {IFormElementsByContainer} from '../../_types';\n\nexport const extractFormElements = (form: RECORD_FORM_recordForm): IFormElementsByContainer =>\n    form.elements.reduce((allElements, element) => {\n        if (typeof allElements[element.containerId] === 'undefined') {\n            allElements[element.containerId] = [];\n        }\n\n        allElements[element.containerId].push({\n            ...element,\n            uiElement: formComponents[element.uiElementType],\n            settings: element.settings.reduce(\n                (allSettings, curSettings) => ({...allSettings, [curSettings.key]: curSettings.value}),\n                {}\n            )\n        });\n\n        return allElements;\n    }, {});\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {useQuery} from '@apollo/client';\nimport {FormUIElementTypes, FORM_ROOT_CONTAINER_ID} from '@leav/utils';\nimport ErrorDisplay from 'components/shared/ErrorDisplay';\nimport {getRecordFormQuery} from 'graphQL/queries/forms/getRecordFormQuery';\nimport useRecordsConsultationHistory from 'hooks/useRecordsConsultationHistory';\nimport React from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {FormElementTypes} from '_gqlTypes/globalTypes';\nimport {RECORD_FORM, RECORD_FORMVariables} from '_gqlTypes/RECORD_FORM';\nimport {IRecordIdentityWhoAmI} from '_types/types';\nimport EditRecordSkeleton from './EditRecordSkeleton';\nimport extractFormElements from './helpers/extractFormElements';\nimport {RecordEditionContext} from './hooks/useRecordEditionContext';\nimport {formComponents} from './uiElements';\nimport {DeleteValueFunc, FormElement, SubmitValueFunc} from './_types';\n\ninterface IEditRecordProps {\n    record: IRecordIdentityWhoAmI | null;\n    library: string;\n    onValueSubmit: SubmitValueFunc;\n    onValueDelete: DeleteValueFunc;\n    readonly: boolean;\n}\n\nfunction EditRecord({record, library, onValueSubmit, onValueDelete, readonly}: IEditRecordProps): JSX.Element {\n    const formId = record ? 'edition' : 'creation';\n    const {t} = useTranslation();\n\n    useRecordsConsultationHistory(record?.library?.id ?? null, record?.id ?? null);\n\n    const {loading, data, error} = useQuery<RECORD_FORM, RECORD_FORMVariables>(getRecordFormQuery, {\n        fetchPolicy: 'network-only',\n        variables: {\n            libraryId: library,\n            recordId: record?.id,\n            formId\n        }\n    });\n\n    if (loading) {\n        return <EditRecordSkeleton rows={5} />;\n    }\n\n    if (error) {\n        const message =\n            Object.values(error.graphQLErrors[0]?.extensions?.exception?.fields ?? {}).join('\\n') ?? error?.message;\n        return <ErrorDisplay message={message ?? t('record_edition.no_form_error')} />;\n    }\n\n    const form = data.recordForm;\n    const elementsByContainer = extractFormElements(form);\n\n    const rootElement: FormElement<{}> = {\n        id: FORM_ROOT_CONTAINER_ID,\n        containerId: null,\n        type: FormElementTypes.layout,\n        uiElementType: FormUIElementTypes.FIELDS_CONTAINER,\n        settings: {},\n        attribute: null,\n        values: null,\n        uiElement: formComponents[FormUIElementTypes.FIELDS_CONTAINER]\n    };\n\n    return (\n        <RecordEditionContext.Provider value={{elements: elementsByContainer, readOnly: readonly}}>\n            <rootElement.uiElement\n                element={rootElement}\n                record={record}\n                onValueSubmit={onValueSubmit}\n                onValueDelete={onValueDelete}\n            />\n        </RecordEditionContext.Provider>\n    );\n}\n\nexport default EditRecord;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport EditRecord from './EditRecord';\nexport default EditRecord;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {gql} from 'graphql-tag';\n\nexport const deleteValueMutation = gql`\n    mutation DELETE_VALUE($library: ID!, $recordId: ID!, $attribute: ID!, $value: ValueInput) {\n        deleteValue(library: $library, recordId: $recordId, attribute: $attribute, value: $value) {\n            id_value\n            attribute {\n                id\n                format\n                type\n                system\n            }\n        }\n    }\n`;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nexport default (attribute: string): string => `property({\"attribute\":\"${attribute}\"})`;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport gql from 'graphql-tag';\nimport recordIdentityFragment from 'graphQL/queries/records/recordIdentityFragment';\n\nexport const saveValueBatchMutation = gql`\n    ${recordIdentityFragment}\n    mutation SAVE_VALUE_BATCH(\n        $library: ID!\n        $recordId: ID!\n        $version: [ValueVersionInput!]\n        $values: [ValueBatchInput!]!\n    ) {\n        saveValueBatch(library: $library, recordId: $recordId, version: $version, values: $values) {\n            values {\n                id_value\n                modified_at\n                modified_by {\n                    ...RecordIdentity\n                }\n                created_at\n                created_by {\n                    ...RecordIdentity\n                }\n                version\n                attribute {\n                    id\n                    format\n                    type\n                    system\n                }\n\n                ... on Value {\n                    value\n                    raw_value\n                }\n\n                ... on LinkValue {\n                    linkValue: value {\n                        ...RecordIdentity\n                    }\n                }\n\n                ... on TreeValue {\n                    treeValue: value {\n                        record {\n                            ...RecordIdentity\n                        }\n\n                        ancestors {\n                            record {\n                                ...RecordIdentity\n                            }\n                        }\n                    }\n                }\n            }\n            errors {\n                type\n                attribute\n                input\n                message\n            }\n        }\n    }\n`;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport editRecordReducer from './editRecordReducer';\nexport default editRecordReducer;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {Descriptions, Divider} from 'antd';\nimport React from 'react';\n\nexport interface IPropertiesListItemValue {\n    title: string;\n    value: string;\n}\n\nexport interface IPropertiesListItemDivider {\n    divider: boolean;\n}\n\nexport type PropertiesListItem = IPropertiesListItemValue | IPropertiesListItemDivider;\n\ninterface IPropertiesListProps {\n    items: PropertiesListItem[];\n}\n\nfunction PropertiesList({items}: IPropertiesListProps): JSX.Element {\n    return (\n        <Descriptions layout=\"horizontal\" column={1}>\n            {items.map((item, index) => {\n                const {title, value} = item as IPropertiesListItemValue;\n\n                return (\n                    <Descriptions.Item\n                        key={index}\n                        label={title}\n                        style={{paddingBottom: '5px'}}\n                        labelStyle={{fontWeight: 'bold', width: '50%'}}\n                    >\n                        {(item as IPropertiesListItemDivider).divider ? (\n                            <Divider key={index} data-testid=\"divider\" />\n                        ) : (\n                            value\n                        )}\n                    </Descriptions.Item>\n                );\n            })}\n        </Descriptions>\n    );\n}\n\nexport default PropertiesList;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport PropertiesList from './PropertiesList';\nexport default PropertiesList;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport RecordPreview from 'components/shared/RecordPreview';\nimport {useLang} from 'hooks/LangHook/LangHook';\nimport React from 'react';\nimport {useTranslation} from 'react-i18next';\nimport styled from 'styled-components';\nimport themingVar from 'themingVar';\nimport {getFileUrl, localizedTranslation} from 'utils';\nimport {RecordIdentity_whoAmI} from '_gqlTypes/RecordIdentity';\nimport {PreviewSize} from '_types/types';\nimport PropertiesList from '../PropertiesList';\n\ninterface IRecordSummaryProps {\n    record: RecordIdentity_whoAmI;\n}\n\nexport const Wrapper = styled.div`\n    padding: 1em;\n`;\n\nfunction RecordSummary({record}: IRecordSummaryProps): JSX.Element {\n    const preview = record?.preview?.medium;\n    const {t} = useTranslation();\n    const [{lang}] = useLang();\n\n    const summaryContent = [\n        {\n            title: t('record_summary.label'),\n            value: record?.label\n        },\n        {\n            title: t('record_summary.id'),\n            value: record?.id\n        },\n        {\n            title: t('record_summary.library'),\n            value: localizedTranslation(record?.library.label, lang)\n        }\n    ];\n\n    return (\n        <Wrapper>\n            <RecordPreview\n                label={record?.label ?? record?.id}\n                color={record?.color}\n                image={preview && getFileUrl(preview)}\n                tile\n                size={PreviewSize.medium}\n                style={{borderRadius: themingVar['@border-radius-base'], marginBottom: '1rem'}}\n            />\n            <PropertiesList items={summaryContent} />\n        </Wrapper>\n    );\n}\n\nexport default RecordSummary;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport RecordSummary from './RecordSummary';\nexport default RecordSummary;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {Tree} from 'antd';\nimport {DataNode} from 'antd/lib/tree';\nimport {IRecordPropertyTree} from 'graphQL/queries/records/getRecordPropertiesQuery';\nimport {useLang} from 'hooks/LangHook/LangHook';\nimport React from 'react';\nimport styled from 'styled-components';\nimport {localizedTranslation} from 'utils';\nimport {RECORD_FORM_recordForm_elements_attribute_TreeAttribute} from '_gqlTypes/RECORD_FORM';\n\ninterface ITreeValuePathProps {\n    attribute: RECORD_FORM_recordForm_elements_attribute_TreeAttribute;\n    value: IRecordPropertyTree;\n}\n\nconst MyTree = styled(Tree)`\n    && {\n        background: none;\n    }\n`;\n\nfunction TreeValuePath({value, attribute}: ITreeValuePathProps): JSX.Element {\n    const [{lang}] = useLang();\n    const ancestorsPath = value.treeValue.ancestors ?? [];\n\n    const nodesProps: Partial<DataNode> = {\n        checkable: false,\n        selectable: false\n    };\n\n    const pathToValue = [...ancestorsPath].reverse().reduce((children: DataNode[], node): DataNode[] => {\n        return [\n            {\n                ...nodesProps,\n                title: node.record.whoAmI.label,\n                key: node.record.id,\n                children: children ?? []\n            }\n        ];\n    }, []);\n\n    const treeData = [\n        {\n            ...nodesProps,\n            title: localizedTranslation(attribute.linked_tree.label, lang),\n            key: attribute.linked_tree.id,\n            children: pathToValue\n        }\n    ];\n\n    return <MyTree key={value.id_value} showIcon={false} treeData={treeData} defaultExpandAll />;\n}\n\nexport default TreeValuePath;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport TreeValuePath from './TreeValuePath';\nexport default TreeValuePath;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {CloseOutlined} from '@ant-design/icons';\nimport {Collapse, Divider} from 'antd';\nimport {EditRecordReducerActionsTypes} from 'components/RecordEdition/editRecordReducer/editRecordReducer';\nimport {useEditRecordReducer} from 'components/RecordEdition/editRecordReducer/useEditRecordReducer';\nimport PropertiesList from 'components/shared/PropertiesList';\nimport {IRecordPropertyTree, RecordProperty} from 'graphQL/queries/records/getRecordPropertiesQuery';\nimport {useLang} from 'hooks/LangHook/LangHook';\nimport React from 'react';\nimport {useTranslation} from 'react-i18next';\nimport styled from 'styled-components';\nimport {localizedTranslation} from 'utils';\nimport {AttributeType} from '_gqlTypes/globalTypes';\nimport {\n    RECORD_FORM_recordForm_elements_attribute,\n    RECORD_FORM_recordForm_elements_attribute_TreeAttribute\n} from '_gqlTypes/RECORD_FORM';\nimport TreeValuePath from './TreeValuePath';\n\ninterface IValueDetailsProps {\n    attribute: RECORD_FORM_recordForm_elements_attribute;\n    value: RecordProperty;\n}\n\nconst AttributeTitle = styled.div`\n    font-weight: bold;\n    padding: 1em;\n`;\n\nconst AttributeDescription = styled.div`\n    color: rgba(0, 0, 0, 0.5);\n    padding: 0 1em;\n`;\n\nconst CloseButton = styled(CloseOutlined)`\n    cursor: pointer;\n    position: absolute;\n    right: 1em;\n    top: 1em;\n`;\n\nconst {Panel} = Collapse;\n\nfunction ValueDetails({attribute, value}: IValueDetailsProps): JSX.Element {\n    const [{lang}] = useLang();\n    const {t} = useTranslation();\n    const {state, dispatch} = useEditRecordReducer();\n\n    const _handleClose = () => dispatch({type: EditRecordReducerActionsTypes.SET_ACTIVE_VALUE, value: null});\n\n    const valueDetailsContent = value?.modified_at\n        ? [\n              {\n                  title: t('record_edition.modified_at'),\n                  value: `${new Date(value.modified_at * 1000).toLocaleString()} ${\n                      value?.modified_by ? ` ${t('record_edition.by')} ${value.modified_by.whoAmI.label}` : ''\n                  }`\n              }\n          ]\n        : [];\n\n    const attributeDetailsContent = [\n        {\n            title: t('record_edition.attribute.id'),\n            value: attribute.id\n        },\n        {\n            title: t('record_edition.attribute.type'),\n            value: t(`record_edition.attribute.type_${attribute.type}`)\n        },\n        {\n            title: t('record_edition.attribute.format'),\n            value: attribute.format ? t(`record_edition.attribute.format_${attribute.format}`) : null\n        }\n    ];\n\n    return (\n        <>\n            {!state.sidebarCollapsed && <CloseButton onClick={_handleClose} />}\n            <AttributeTitle>{localizedTranslation(attribute.label, lang)}</AttributeTitle>\n            <AttributeDescription>{localizedTranslation(attribute.description, lang)}</AttributeDescription>\n            <Divider style={{margin: '.5em 0'}} />\n            <Collapse\n                bordered={false}\n                defaultActiveKey={['attribute', 'value']}\n                style={{background: 'none'}}\n                destroyInactivePanel\n            >\n                {valueDetailsContent.length && (\n                    <Panel key=\"value\" header={t('record_edition.value_details_section')}>\n                        <PropertiesList items={valueDetailsContent} />\n                    </Panel>\n                )}\n                <Panel key=\"attribute\" header={t('record_edition.attribute_details_section')}>\n                    <PropertiesList items={attributeDetailsContent} />\n                </Panel>\n                {attribute.type === AttributeType.tree && (\n                    <Panel key=\"path\" header={t('record_edition.path_section')}>\n                        <TreeValuePath\n                            value={value as IRecordPropertyTree}\n                            attribute={attribute as RECORD_FORM_recordForm_elements_attribute_TreeAttribute}\n                        />\n                    </Panel>\n                )}\n            </Collapse>\n        </>\n    );\n}\n\nexport default ValueDetails;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport ValueDetails from './ValueDetails';\nexport default ValueDetails;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport RecordSummary from 'components/shared/RecordSummary';\nimport React from 'react';\nimport ValueDetails from '../EditRecord/shared/ValueDetails';\nimport {useEditRecordReducer} from '../editRecordReducer/useEditRecordReducer';\n\nfunction EditRecordSidebar(): JSX.Element {\n    const {state} = useEditRecordReducer();\n\n    return state.activeValue ? (\n        <ValueDetails value={state.activeValue.value} attribute={state.activeValue.attribute} />\n    ) : (\n        <RecordSummary record={state.record} />\n    );\n}\n\nexport default EditRecordSidebar;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport EditRecordSidebar from './EditRecordSidebar';\nexport default EditRecordSidebar;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {useMutation} from '@apollo/client';\nimport {Button} from 'antd';\nimport Modal from 'antd/lib/modal/Modal';\nimport {IconClosePanel} from 'assets/icons/IconClosePanel';\nimport {IconOpenPanel} from 'assets/icons/IconOpenPanel';\nimport {PrimaryBtn} from 'components/app/StyledComponent/PrimaryBtn';\nimport ErrorDisplay from 'components/shared/ErrorDisplay';\nimport {ErrorDisplayTypes} from 'components/shared/ErrorDisplay/ErrorDisplay';\nimport Loading from 'components/shared/Loading';\nimport RecordCard from 'components/shared/RecordCard';\nimport createRecordMutation from 'graphQL/mutations/records/createRecordMutation';\nimport {useCanEditRecord} from 'hooks/useCanEditRecord/useCanEditRecord';\nimport React, {useReducer, useState} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {addNotification} from 'redux/notifications';\nimport styled from 'styled-components';\nimport themingVar from 'themingVar';\nimport {CREATE_RECORD, CREATE_RECORDVariables, CREATE_RECORD_createRecord} from '_gqlTypes/CREATE_RECORD';\nimport {AttributeType} from '_gqlTypes/globalTypes';\nimport {RecordIdentity_whoAmI} from '_gqlTypes/RecordIdentity';\nimport {\n    SAVE_VALUE_BATCH_saveValueBatch_errors,\n    SAVE_VALUE_BATCH_saveValueBatch_values,\n    SAVE_VALUE_BATCH_saveValueBatch_values_LinkValue,\n    SAVE_VALUE_BATCH_saveValueBatch_values_TreeValue,\n    SAVE_VALUE_BATCH_saveValueBatch_values_Value\n} from '_gqlTypes/SAVE_VALUE_BATCH';\nimport {NotificationPriority, NotificationType, PreviewSize} from '_types/types';\nimport EditRecord from '../EditRecord';\nimport useDeleteValueMutation from '../EditRecord/hooks/useDeleteValueMutation';\nimport useSaveValueBatchMutation from '../EditRecord/hooks/useSaveValueBatchMutation';\nimport {\n    APICallStatus,\n    DeleteValueFunc,\n    ISubmittedValueLink,\n    ISubmittedValueStandard,\n    ISubmittedValueTree,\n    IValueToSubmit,\n    SubmitValueFunc\n} from '../EditRecord/_types';\nimport editRecordReducer from '../editRecordReducer';\nimport {EditRecordReducerActionsTypes} from '../editRecordReducer/editRecordReducer';\nimport {EditRecordReducerContext} from '../editRecordReducer/editRecordReducerContext';\nimport EditRecordSidebar from '../EditRecordSidebar';\nimport CreationErrorContext from './creationErrorContext';\n\ninterface IEditRecordModalProps {\n    open: boolean;\n    record: RecordIdentity_whoAmI | null;\n    library: string;\n    onClose: () => void;\n    afterCreate?: (newRecord: RecordIdentity_whoAmI) => void;\n}\n\ninterface IPendingValues {\n    [attributeId: string]: {[idValue: string]: SAVE_VALUE_BATCH_saveValueBatch_values};\n}\n\nconst Container = styled.div<{isSidebarCollapsed: boolean}>`\n    height: calc(100vh - 12rem);\n    display: grid;\n    grid-template-columns: auto ${p => (p.isSidebarCollapsed ? 0 : '300px')};\n    grid-template-rows: 5em auto;\n    grid-template-areas:\n        'title sidebar'\n        'content sidebar';\n    overflow: hidden;\n`;\n\nconst Title = styled.div`\n    grid-area: title;\n    align-self: center;\n    font-size: 1.2rem;\n    padding: 1rem;\n`;\n\nconst Content = styled.div`\n    height: calc(100vh - 16.5rem);\n    grid-area: content;\n    padding: 1em;\n    overflow-x: hidden;\n    overflow-y: scroll;\n`;\n\nconst Sidebar = styled.div`\n    position: relative;\n    grid-area: sidebar;\n    background: ${themingVar['@leav-secondary-bg']};\n    border-top-right-radius: 3px;\n    z-index: 1;\n`;\n\nconst ToggleExpand = styled.div`\n    position: absolute;\n    left: -25px;\n    padding: 5px;\n    background: ${themingVar['@leav-secondary-bg']};\n    border-top-left-radius: 3px;\n    border-bottom-left-radius: 3px;\n    cursor: pointer;\n`;\n\nfunction EditRecordModal({open, record, library, onClose, afterCreate: afterSave}: IEditRecordModalProps): JSX.Element {\n    const {t} = useTranslation();\n    const isCreationMode = !record;\n\n    const [state, dispatch] = useReducer(editRecordReducer, {\n        record,\n        activeValue: null,\n        sidebarCollapsed: false\n    });\n\n    const {loading: permissionsLoading, canEdit, isReadOnly} = useCanEditRecord(\n        {...record?.library, id: library},\n        record?.id\n    );\n\n    const {saveValues, loading: saveValuesLoading} = useSaveValueBatchMutation();\n    const {deleteValue} = useDeleteValueMutation(record);\n    const [createRecord] = useMutation<CREATE_RECORD, CREATE_RECORDVariables>(createRecordMutation, {\n        variables: {library}\n    });\n    const [creationErrors, setCreationErrors] = useState<{\n        [attributeId: string]: SAVE_VALUE_BATCH_saveValueBatch_errors;\n    }>({});\n\n    const [pendingValues, setPendingValues] = useState<IPendingValues>({});\n    const hasPendingValues = !!Object.keys(pendingValues).length;\n\n    const _handleValueSubmit: SubmitValueFunc = async values => {\n        if (!isCreationMode) {\n            // In Editon mode, submit values immediately and send result back to children\n            return saveValues(\n                record,\n                values.map(val => {\n                    const savableValue = {...val, attribute: val.attribute.id};\n\n                    switch (val.attribute.type) {\n                        case AttributeType.advanced_link:\n                        case AttributeType.simple_link:\n                            savableValue.value = (val as ISubmittedValueLink).value.id;\n                            break;\n                        case AttributeType.tree:\n                            savableValue.value = (val as ISubmittedValueTree).value.id;\n                            break;\n                        default:\n                            savableValue.value = (val as ISubmittedValueStandard).value;\n                            break;\n                    }\n\n                    return savableValue as IValueToSubmit;\n                })\n            );\n        }\n\n        // In creation mode, all values are stored until we submit the whole record\n        const newPendingValues = {...pendingValues};\n        const storedValues: SAVE_VALUE_BATCH_saveValueBatch_values[] = [];\n        for (const value of values) {\n            const attributeId = value.attribute.id;\n            if (!newPendingValues[attributeId]) {\n                newPendingValues[attributeId] = {};\n            }\n\n            // Each value is affected a fake id to handle updates\n            const valueToStore: Partial<SAVE_VALUE_BATCH_saveValueBatch_values> = {\n                id_value: value.idValue ?? `pending_${Object.keys(newPendingValues[attributeId]).length + 1}`,\n                modified_at: null,\n                modified_by: null,\n                created_at: null,\n                created_by: null,\n                version: null,\n                attribute: value.attribute\n            };\n\n            // Format value to get all props clean, based on attribute type\n            switch (value.attribute.type) {\n                case AttributeType.advanced_link:\n                case AttributeType.simple_link:\n                    (valueToStore as SAVE_VALUE_BATCH_saveValueBatch_values_LinkValue).linkValue = (value as ISubmittedValueLink).value;\n                    break;\n                case AttributeType.tree:\n                    const treeValue = (value as ISubmittedValueTree).value;\n                    const valueRecord = treeValue.record;\n                    (valueToStore as SAVE_VALUE_BATCH_saveValueBatch_values_TreeValue).treeValue = {\n                        record: valueRecord,\n                        ancestors: [{record: valueRecord}]\n                    };\n                    break;\n                default:\n                    (valueToStore as SAVE_VALUE_BATCH_saveValueBatch_values_Value).value = value.value;\n                    (valueToStore as SAVE_VALUE_BATCH_saveValueBatch_values_Value).raw_value = value.value;\n                    break;\n            }\n\n            newPendingValues[attributeId][valueToStore.id_value] = {\n                ...(valueToStore as SAVE_VALUE_BATCH_saveValueBatch_values)\n            };\n            storedValues.push(valueToStore as SAVE_VALUE_BATCH_saveValueBatch_values);\n        }\n        // Store values\n        setPendingValues(newPendingValues);\n\n        return {\n            status: APICallStatus.SUCCESS,\n            values: storedValues\n        };\n    };\n\n    /**\n     * Submit the whole record: create record and batch save all stored values\n     */\n    const _handleRecordSubmit = async () => {\n        if (!hasPendingValues) {\n            return;\n        }\n\n        // Create Record\n        let newRecord: CREATE_RECORD_createRecord;\n        try {\n            const createdRecord = await createRecord();\n\n            newRecord = createdRecord.data.createRecord;\n        } catch (err) {\n            addNotification({\n                type: NotificationType.error,\n                content: err.message,\n                priority: NotificationPriority.high\n            });\n            return;\n        }\n\n        try {\n            // Save values\n            const valuesToSave: IValueToSubmit[] = Object.values(pendingValues).reduce((allValues, valuesById) => {\n                const attributeValues = Object.values(valuesById).map(val => {\n                    let actualValue;\n                    switch (val.attribute.type) {\n                        case AttributeType.advanced_link:\n                        case AttributeType.simple_link:\n                            actualValue = (val as SAVE_VALUE_BATCH_saveValueBatch_values_LinkValue).linkValue.id;\n                            break;\n                        case AttributeType.tree:\n                            const treeValue = (val as SAVE_VALUE_BATCH_saveValueBatch_values_TreeValue).treeValue;\n                            actualValue = `${treeValue.record.whoAmI.library.id}/${treeValue.record.id}`;\n                            break;\n                        default:\n                            actualValue = (val as SAVE_VALUE_BATCH_saveValueBatch_values_Value).raw_value;\n                            break;\n                    }\n                    return {\n                        ...val,\n                        value: actualValue,\n                        id_value: null,\n                        attribute: val.attribute.id\n                    };\n                });\n\n                return [...allValues, ...attributeValues];\n            }, []);\n\n            const saveRes = await saveValues(newRecord.whoAmI, valuesToSave);\n\n            // All encountered errors are available for children, grouped by attribute ID\n            if (saveRes.status === APICallStatus.ERROR || saveRes.status === APICallStatus.PARTIAL) {\n                setCreationErrors(\n                    saveRes.errors.reduce((errors, error) => ({...errors, [error.attribute]: error}), {})\n                );\n                return;\n            } else {\n                if (afterSave) {\n                    await afterSave(newRecord.whoAmI);\n                }\n\n                onClose();\n            }\n        } catch (err) {\n            console.error(err);\n            return;\n        }\n    };\n\n    const _handleDeleteValue: DeleteValueFunc = async (value, attribute) => {\n        if (!isCreationMode) {\n            return deleteValue(value, attribute);\n        }\n\n        const newPendingValues = {...pendingValues};\n        delete newPendingValues[attribute][value.id_value];\n\n        setPendingValues(newPendingValues);\n\n        return {\n            status: APICallStatus.SUCCESS\n        };\n    };\n\n    const _handleToggleSidebar = () => dispatch({type: EditRecordReducerActionsTypes.TOGGLE_SIDEBAR});\n\n    const title = record ? (\n        <RecordCard record={record} size={PreviewSize.small} withLibrary={false} withPreview={false} />\n    ) : (\n        t('record_edition.new_record')\n    );\n\n    const footerButtons = [\n        <Button aria-label={t('global.close')} key=\"close\" onClick={onClose}>\n            {t('global.close')}\n        </Button>\n    ];\n\n    if (isCreationMode) {\n        footerButtons.push(\n            <PrimaryBtn\n                aria-label={t('global.submit')}\n                key=\"submit\"\n                onClick={_handleRecordSubmit}\n                disabled={!hasPendingValues || permissionsLoading}\n                loading={saveValuesLoading}\n            >\n                {t('global.submit')}\n            </PrimaryBtn>\n        );\n    }\n\n    return open ? (\n        <div onClick={e => e.stopPropagation()} onDoubleClick={e => e.stopPropagation()}>\n            <Modal\n                visible={open}\n                onCancel={onClose}\n                destroyOnClose\n                cancelText={t('global.cancel')}\n                closable={false}\n                maskClosable\n                width=\"90vw\"\n                centered\n                style={{padding: 0, maxWidth: '800px'}}\n                bodyStyle={{height: 'calc(100vh - 12rem)', overflowY: 'auto', padding: 0}}\n                footer={footerButtons}\n            >\n                {permissionsLoading ? (\n                    <Loading />\n                ) : (\n                    <EditRecordReducerContext.Provider value={{state, dispatch}}>\n                        <CreationErrorContext.Provider value={creationErrors}>\n                            <Container isSidebarCollapsed={state.sidebarCollapsed}>\n                                <Title>{title}</Title>\n                                <Content className=\"content\">\n                                    {canEdit ? (\n                                        <EditRecord\n                                            record={record}\n                                            library={library}\n                                            onValueSubmit={_handleValueSubmit}\n                                            onValueDelete={_handleDeleteValue}\n                                            readonly={isReadOnly}\n                                        />\n                                    ) : (\n                                        <ErrorDisplay\n                                            type={ErrorDisplayTypes.PERMISSION_ERROR}\n                                            showActionButton={false}\n                                        />\n                                    )}\n                                </Content>\n                                <Sidebar className=\"sidebar\">\n                                    {canEdit && (\n                                        <>\n                                            <ToggleExpand onClick={_handleToggleSidebar}>\n                                                {state.sidebarCollapsed ? <IconClosePanel /> : <IconOpenPanel />}\n                                            </ToggleExpand>\n                                            <EditRecordSidebar />{' '}\n                                        </>\n                                    )}\n                                </Sidebar>\n                            </Container>\n                        </CreationErrorContext.Provider>\n                    </EditRecordReducerContext.Provider>\n                )}\n            </Modal>\n        </div>\n    ) : (\n        <></>\n    );\n}\n\nexport default EditRecordModal;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {Button, ButtonProps} from 'antd';\nimport {SizeType} from 'antd/lib/config-provider/SizeContext';\nimport React from 'react';\nimport {resetSelection, setSelection, setSelectionToggleSelected} from 'redux/selection';\nimport {useAppDispatch} from 'redux/store';\nimport {IRecordIdentityWhoAmI, SharedStateSelectionType} from '_types/types';\n\ninterface ISelectCellsBtnProps extends ButtonProps {\n    record: IRecordIdentityWhoAmI;\n    size: SizeType;\n    text: string;\n    selectionType: SelectCellsBtnType;\n}\n\nexport enum SelectCellsBtnType {\n    ONLY = 'ONLY',\n    ALL = 'ALL'\n}\n\nfunction SelectCellsBtn({selectionType, record, size, text, ...btnProps}: ISelectCellsBtnProps): JSX.Element {\n    const dispatch = useAppDispatch();\n\n    const _handleClick = (e: React.SyntheticEvent) => {\n        e.stopPropagation();\n\n        const selectionData = {id: record.id, library: record.library.id, label: record.label};\n\n        if (selectionType === SelectCellsBtnType.ONLY) {\n            dispatch(resetSelection());\n\n            dispatch(\n                setSelectionToggleSelected({\n                    selectionType: SharedStateSelectionType.search,\n                    elementSelected: selectionData\n                })\n            );\n        } else if (selectionType === SelectCellsBtnType.ALL) {\n            dispatch(\n                setSelection({\n                    type: SharedStateSelectionType.search,\n                    selected: [],\n                    allSelected: true\n                })\n            );\n        }\n    };\n\n    return (\n        <Button {...btnProps} aria-label=\"select-records\" size={size} onClick={_handleClick}>\n            {text}\n        </Button>\n    );\n}\n\nexport default SelectCellsBtn;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport EditRecordModal from './EditRecordModal';\nexport default EditRecordModal;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {ApolloError, useApolloClient, useMutation} from '@apollo/client';\nimport {ErrorTypes} from '@leav/utils';\nimport {saveValueBatchMutation} from 'graphQL/mutations/values/saveValueBatchMutation';\nimport {useTranslation} from 'react-i18next';\nimport {\n    SAVE_VALUE_BATCH,\n    SAVE_VALUE_BATCHVariables,\n    SAVE_VALUE_BATCH_saveValueBatch_values\n} from '_gqlTypes/SAVE_VALUE_BATCH';\nimport {APICallStatus, FieldSubmitMultipleFunc} from '../_types';\nimport getPropertyCacheFieldName from './helpers/getPropertyCacheFieldName';\n\nexport interface ISaveValueBatchHook {\n    saveValues: FieldSubmitMultipleFunc;\n    loading: boolean;\n}\n\nexport default function useSaveValueBatchMutation(): ISaveValueBatchHook {\n    const {cache} = useApolloClient();\n    const [executeSaveValueBatch, {loading}] = useMutation<SAVE_VALUE_BATCH, SAVE_VALUE_BATCHVariables>(\n        saveValueBatchMutation\n    );\n    const {t} = useTranslation();\n\n    return {\n        saveValues: async (record, values) => {\n            try {\n                const saveRes = await executeSaveValueBatch({\n                    variables: {\n                        library: record.library.id,\n                        recordId: record.id,\n                        values: values.map(value => ({\n                            attribute: value.attribute,\n                            id_value: value.idValue,\n                            value: String(value.value)\n                        }))\n                    }\n                });\n                const {values: savedValues, errors} = saveRes.data.saveValueBatch;\n\n                // Update cache\n                const recordWithTypename = {...record, __typename: record.library.gqlNames.type};\n                for (const savedValue of savedValues) {\n                    cache.modify({\n                        id: cache.identify(recordWithTypename),\n                        fields: {\n                            [getPropertyCacheFieldName(savedValue.attribute.id)]: (\n                                cacheValue: SAVE_VALUE_BATCH_saveValueBatch_values[]\n                            ) => {\n                                const newCacheValue = [...cacheValue];\n\n                                // Update or add each saved value to the cache\n                                const cacheIndex = cacheValue.findIndex(val => val.id_value === savedValue.id_value);\n\n                                if (cacheIndex !== -1) {\n                                    newCacheValue[cacheIndex] = savedValue;\n                                } else {\n                                    newCacheValue.push(savedValue);\n                                }\n\n                                return newCacheValue;\n                            }\n                        }\n                    });\n                }\n\n                const status =\n                    errors?.length && savedValues.length\n                        ? APICallStatus.PARTIAL\n                        : errors?.length && !savedValues.length\n                        ? APICallStatus.ERROR\n                        : APICallStatus.SUCCESS;\n\n                return {\n                    status,\n                    ...saveRes.data.saveValueBatch\n                };\n            } catch (err) {\n                const gqlError = (err as ApolloError).graphQLErrors?.[0];\n\n                const message = gqlError?.extensions?.code\n                    ? gqlError.extensions.code === ErrorTypes.VALIDATION_ERROR\n                        ? Object.values(gqlError.extensions.fields).join('\\n')\n                        : t(`error.${gqlError.extensions.code}`)\n                    : err.message;\n\n                return {status: APICallStatus.ERROR, error: message};\n            }\n        },\n        loading\n    };\n}\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {ApolloError, useMutation} from '@apollo/client';\nimport {ErrorTypes} from '@leav/utils';\nimport {deleteValueMutation} from 'graphQL/mutations/values/deleteValueMutation';\nimport {useTranslation} from 'react-i18next';\nimport {DELETE_VALUE, DELETE_VALUEVariables} from '_gqlTypes/DELETE_VALUE';\nimport {IRecordIdentityWhoAmI} from '_types/types';\nimport {APICallStatus, DeleteValueFunc} from '../_types';\nimport getPropertyCacheFieldName from './helpers/getPropertyCacheFieldName';\n\nexport interface ISaveValueHook {\n    deleteValue: DeleteValueFunc;\n}\n\nexport default function useDeleteValueMutation(record: IRecordIdentityWhoAmI): ISaveValueHook {\n    const [executeDeleteValue] = useMutation<DELETE_VALUE, DELETE_VALUEVariables>(deleteValueMutation, {\n        update: (cache, {data: {deleteValue}}) => {\n            const recordWithTypename = {...record, __typename: record.library.gqlNames.type};\n            cache.modify({\n                id: cache.identify(recordWithTypename),\n                fields: {\n                    [getPropertyCacheFieldName(deleteValue.attribute.id)]: cacheValue => {\n                        return cacheValue.filter(val => val.id_value !== deleteValue.id_value);\n                    }\n                }\n            });\n        }\n    });\n    const {t} = useTranslation();\n\n    return {\n        deleteValue: async (value, attribute) => {\n            try {\n                await executeDeleteValue({\n                    variables: {\n                        library: record.library.id,\n                        attribute,\n                        recordId: record.id,\n                        value\n                    }\n                });\n                return {status: APICallStatus.SUCCESS};\n            } catch (err) {\n                const gqlError = (err as ApolloError).graphQLErrors[0];\n\n                const message = gqlError?.extensions?.code\n                    ? gqlError.extensions.code === ErrorTypes.VALIDATION_ERROR\n                        ? gqlError.extensions.fields[attribute]\n                        : t(`error.${gqlError.extensions.code}`)\n                    : err.message;\n\n                return {status: APICallStatus.ERROR, error: message};\n            }\n        }\n    };\n}\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {DeleteOutlined} from '@ant-design/icons';\nimport {message} from 'antd';\nimport {SizeType} from 'antd/lib/config-provider/SizeContext';\nimport SelectCellsBtn, {\n    SelectCellsBtnType\n} from 'components/LibraryItemsList/LibraryItemsListTable/BodyCell/SelectCellsBtn';\nimport EditRecordBtn from 'components/RecordEdition/EditRecordBtn';\nimport FloatingMenu from 'components/shared/FloatingMenu';\nimport {FloatingMenuAction} from 'components/shared/FloatingMenu/FloatingMenu';\nimport RecordCard from 'components/shared/RecordCard';\nimport {useActiveLibrary} from 'hooks/ActiveLibHook/ActiveLibHook';\nimport React from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {useAppSelector} from 'redux/store';\nimport styled from 'styled-components';\nimport themingVar from '../../../../../themingVar';\nimport {IRecordIdentityWhoAmI, ISharedStateSelectionSearch, PreviewSize} from '../../../../../_types/types';\n\nconst Info = styled.div`\n    border-left: 1px solid ${themingVar['@divider-color']};\n    min-width: 150px;\n`;\n\ninterface ICellInfosProps {\n    record: IRecordIdentityWhoAmI;\n    previewSize: PreviewSize;\n    lang?: string[];\n}\n\nfunction CellInfos({record, previewSize, lang}: ICellInfosProps): JSX.Element {\n    const {t} = useTranslation();\n    const [activeLibrary] = useActiveLibrary();\n    const canDeleteRecord = activeLibrary.permissions.delete_record;\n\n    const {selectionState} = useAppSelector(state => ({\n        selectionState: state.selection,\n        display: state.display\n    }));\n\n    const menuBtnSize: SizeType = 'middle';\n\n    const menuActions: FloatingMenuAction[] = [\n        {\n            title: t('global.edit'),\n            button: <EditRecordBtn shape={'circle'} record={record} size={menuBtnSize} />\n        }\n    ];\n\n    if (canDeleteRecord) {\n        menuActions.push({\n            title: t('items_list.table.actions-tooltips.remove'),\n            icon: <DeleteOutlined />,\n            size: menuBtnSize,\n            onClick: () => message.warn(t('global.feature_not_available'))\n        });\n    }\n\n    const selectActions: FloatingMenuAction[] = [\n        {\n            title: t('items-list-row.select-only'),\n            button: (\n                <SelectCellsBtn\n                    selectionType={SelectCellsBtnType.ONLY}\n                    text={t('items-list-row.select-only')}\n                    record={record}\n                    size={menuBtnSize}\n                />\n            )\n        },\n        {\n            title: t('items-list-row.select-all'),\n            button: (\n                <SelectCellsBtn\n                    selectionType={SelectCellsBtnType.ALL}\n                    text={t('items-list-row.select-all')}\n                    record={record}\n                    size={menuBtnSize}\n                />\n            )\n        }\n    ];\n\n    const selectMode =\n        selectionState.selection.selected.length ||\n        (selectionState.selection as ISharedStateSelectionSearch).allSelected;\n\n    return (\n        <>\n            <Info>\n                <RecordCard record={record} size={previewSize} lang={lang} />\n            </Info>\n            <FloatingMenu actions={selectMode ? selectActions : menuActions} size={menuBtnSize} />\n        </>\n    );\n}\n\nexport default CellInfos;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport CellInfos from './CellInfos';\nexport default CellInfos;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {FileTextOutlined} from '@ant-design/icons';\nimport {Tooltip} from 'antd';\nimport Paragraph from 'antd/lib/typography/Paragraph';\nimport RecordCard from 'components/shared/RecordCard';\nimport {infosCol} from 'constants/constants';\nimport useSearchReducer from 'hooks/useSearchReducer';\nimport React from 'react';\nimport {useTranslation} from 'react-i18next';\nimport styled from 'styled-components';\nimport themingVar from 'themingVar';\nimport {AttributeFormat, AttributeType} from '_gqlTypes/globalTypes';\nimport {useLang} from '../../../../hooks/LangHook/LangHook';\nimport {displayTypeToPreviewSize, stringifyDateRangeValue} from '../../../../utils';\nimport {IDateRangeValue, ITableCell, PreviewSize} from '../../../../_types/types';\nimport CellInfos from './CellInfos';\n\nconst SimpleCell = styled.div`\n    padding: 5px;\n`;\n\nconst RecordCardCellWrapper = styled.div`\n    display: flex;\n    align-items: center;\n`;\n\nconst MoreValuesCount = styled.span`\n    padding: 0 0.75em;\n    height: 1.75em;\n    margin: 0 1em;\n    border-radius: 2em;\n    background: ${themingVar['@primary-color']};\n    color: #fff;\n    font-weight: bold;\n`;\n\ninterface ICellProps {\n    columnName: string;\n    data: ITableCell;\n}\n\nconst Cell = ({columnName, data}: ICellProps) => {\n    const {value, type} = data;\n    const [{lang}] = useLang();\n    const {t} = useTranslation();\n\n    const {state: searchState} = useSearchReducer();\n    const previewSize: PreviewSize = displayTypeToPreviewSize(searchState.display.size);\n\n    const _getValueByFormat = (cellValue: any): string => {\n        switch (data.format) {\n            case AttributeFormat.date_range:\n                const rangeValue = cellValue as IDateRangeValue;\n                return stringifyDateRangeValue(rangeValue, t);\n            default:\n                return cellValue;\n        }\n    };\n\n    const valuesToDisplay = Array.isArray(value) ? value : [value];\n\n    if (!value || !valuesToDisplay.length) {\n        return <></>;\n    }\n\n    switch (type) {\n        case AttributeType.simple:\n        case AttributeType.advanced:\n            const displayedValues = valuesToDisplay.map(val => _getValueByFormat(val)).join(', ');\n\n            return (\n                <SimpleCell>\n                    {data.format === AttributeFormat.extended ? (\n                        <Tooltip overlay={displayedValues}>\n                            <FileTextOutlined size={256} style={{fontSize: '2em'}} />\n                        </Tooltip>\n                    ) : (\n                        <Paragraph\n                            ellipsis={{\n                                rows: 1,\n                                tooltip: displayedValues\n                            }}\n                        >\n                            {displayedValues}\n                        </Paragraph>\n                    )}\n                </SimpleCell>\n            );\n        case AttributeType.simple_link:\n        case AttributeType.advanced_link:\n        case AttributeType.tree:\n            const [firstValue, ...otherValues] = valuesToDisplay;\n\n            return (\n                <RecordCardCellWrapper>\n                    <RecordCard record={firstValue.whoAmI} size={previewSize} lang={lang} key={firstValue.whoAmI.id} />\n\n                    {otherValues.length ? (\n                        <Tooltip overlay={otherValues.map(val => val?.whoAmI?.label).join(', ')}>\n                            <MoreValuesCount>+ {otherValues.length}</MoreValuesCount>\n                        </Tooltip>\n                    ) : (\n                        <></>\n                    )}\n                </RecordCardCellWrapper>\n            );\n        default:\n            // selection and infos column has no type\n            if (columnName === infosCol) {\n                return <CellInfos record={value} previewSize={previewSize} lang={lang} />;\n            }\n\n            return <></>;\n    }\n};\n\nexport default Cell;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport Cell from './Cell';\nexport default Cell;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {CheckCircleFilled, CheckCircleOutlined} from '@ant-design/icons';\nimport React from 'react';\nimport styled from 'styled-components';\nimport themingVar from 'themingVar';\n\nconst Wrapper = styled.div`\n    display: grid;\n    place-items: center;\n    position: relative;\n    height: 100%;\n    width: 100%;\n`;\n\nconst CustomCheckbox = styled.span<{checked: boolean}>`\n    && {\n        display: ${p => (!p.checked ? 'none' : 'block')};\n        color: ${p => (p.checked ? `${themingVar['@primary-color']}` : themingVar['@default-text-color'])};\n        font-size: 1.5em;\n\n        .ant-checkbox-checked::after {\n            border: none;\n        }\n    }\n\n    [role='row']:hover & {\n        display: block;\n    }\n`;\n\ninterface ICellSelectionProps {\n    selected: boolean;\n}\n\nfunction CellSelection({selected}: ICellSelectionProps): JSX.Element {\n    return (\n        <Wrapper>\n            <CustomCheckbox checked={selected} role=\"checkbox\">\n                {selected ? <CheckCircleFilled /> : <CheckCircleOutlined />}\n            </CustomCheckbox>\n        </Wrapper>\n    );\n}\n\nexport default CellSelection;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport CellSelection from './CellSelection';\nexport default CellSelection;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport React from 'react';\nimport {Cell as ReactTableTypeCell} from 'react-table';\nimport styled from 'styled-components';\nimport {infosCol, selectionColumn} from '../../../../constants/constants';\nimport {ITableRow} from '../../../../_types/types';\nimport Cell from '../Cell';\nimport CellSelection from '../Cell/CellSelection';\nimport {INFOS_COLUMN_WIDTH} from '../Table';\n\nconst CustomBodyCell = styled.div<{id?: string | number; selected: boolean}>`\n    // Inherit background from row. If background is transparent, the sticky column won't behave properly\n    background-color: inherit;\n\n    max-width: ${p => (p.id === selectionColumn ? '35px' : 'auto')};\n\n    display: flex;\n    align-items: center;\n`;\n\ninterface IBodyCellProps {\n    cell: ReactTableTypeCell<ITableRow>;\n    selected: boolean;\n}\n\nfunction BodyCell({cell, selected}: IBodyCellProps): JSX.Element {\n    const props = cell.getCellProps();\n    if (cell.column.id === infosCol) {\n        // define info column row style\n        props.style = {\n            ...props.style,\n            flex: '1 0 auto',\n            maxWidth: INFOS_COLUMN_WIDTH,\n            minWidth: INFOS_COLUMN_WIDTH,\n            zIndex: 'auto'\n        };\n    }\n\n    const data = {\n        id: cell?.value?.id,\n        key: cell?.value?.id,\n        library: cell?.value?.library,\n        label: cell?.value?.label,\n        value: cell?.value?.value,\n        type: cell?.value?.type,\n        format: cell?.value?.format\n    };\n\n    if (!cell.value) {\n        return <CustomBodyCell selected={selected} {...props}></CustomBodyCell>;\n    }\n\n    return (\n        <CustomBodyCell {...props} id={cell.column.id} selected={selected} className=\"body-cell\">\n            {cell.column.id === selectionColumn ? (\n                <CellSelection selected={selected} />\n            ) : (\n                <Cell columnName={cell.column.id} data={data} />\n            )}\n        </CustomBodyCell>\n    );\n}\n\nexport default BodyCell;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport BodyCell from './BodyCell';\n\nexport default BodyCell;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {SelectionModeContext} from 'context';\nimport React, {useContext, useState} from 'react';\nimport {Row} from 'react-table';\nimport {setSelectionToggleSearchSelectionElement, setSelectionToggleSelected} from 'redux/selection';\nimport {useAppDispatch, useAppSelector} from 'redux/store';\nimport styled from 'styled-components';\nimport {RecordIdentity_whoAmI} from '_gqlTypes/RecordIdentity';\nimport themingVar from '../../../../themingVar';\nimport {IItem, SharedStateSelectionType} from '../../../../_types/types';\nimport EditRecordModal from '../../../RecordEdition/EditRecordModal';\nimport BodyCell from '../BodyCell';\nimport {isAllSelected, isSelected} from '../BodyCell/getSelectedCell';\n\nconst CustomBodyRow = styled.div<{selected: boolean}>`\n    position: relative;\n    border: 2px solid transparent;\n\n    // Must set background on row for the case where we just have the infos column (part of the row is empty)\n    background-color: ${p =>\n        p.selected ? themingVar['@leav-view-panel-label-background-active'] : themingVar['@default-bg']};\n\n    &:not(:hover) .floating-menu {\n        display: none;\n    }\n\n    &:hover {\n        border: 2px solid ${themingVar['@primary-color']};\n        background-color: ${p =>\n            p.selected\n                ? themingVar['@leav-view-panel-label-background-active']\n                : `${themingVar['@leav-background-active']}`};\n    }\n`;\n\ninterface IBodyRowProps {\n    row: Row<IItem | any>; // react-table typing fail\n}\n\nfunction BodyRow({row}: IBodyRowProps): JSX.Element {\n    const props = row.getRowProps();\n    const selectionMode = useContext(SelectionModeContext);\n    const {selectionState} = useAppSelector(state => ({\n        selectionState: state.selection,\n        display: state.display\n    }));\n    const [editRecordModal, setEditRecordModal] = useState<boolean>(false);\n    const dispatch = useAppDispatch();\n\n    const record = row.cells[0]?.row?.original?.record;\n\n    if (!row.cells.length || typeof record === 'undefined') {\n        return <></>;\n    }\n\n    const selected = isSelected(selectionState, selectionMode, record.id, record.library.id);\n    const allSelected = isAllSelected(selectionState, selectionMode);\n\n    const isRowSelected = allSelected || selected;\n\n    const _handleCellSelected = () => {\n        const selectionData = {id: record.id, library: record.library.id, label: record.label};\n\n        if (selectionMode) {\n            dispatch(setSelectionToggleSearchSelectionElement(selectionData));\n        } else {\n            dispatch(\n                setSelectionToggleSelected({\n                    selectionType: SharedStateSelectionType.search,\n                    elementSelected: selectionData\n                })\n            );\n        }\n    };\n\n    const _handleDoubleClick = () => {\n        setEditRecordModal(true);\n    };\n\n    const _handleClose = () => {\n        setEditRecordModal(false);\n    };\n\n    return (\n        <CustomBodyRow\n            {...props}\n            onClick={_handleCellSelected}\n            onDoubleClick={_handleDoubleClick}\n            selected={isRowSelected}\n        >\n            {editRecordModal && (\n                <EditRecordModal\n                    open={editRecordModal}\n                    library={record.library.id}\n                    record={record as RecordIdentity_whoAmI}\n                    onClose={_handleClose}\n                />\n            )}\n            {row.cells.map(cell => (\n                <BodyCell selected={isRowSelected} cell={cell as any} key={cell.column.id} />\n            ))}\n        </CustomBodyRow>\n    );\n}\n\nexport default BodyRow;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {reorder} from '../../../utils';\nimport {GET_ATTRIBUTES_BY_LIB_attributes_list} from '../../../_gqlTypes/GET_ATTRIBUTES_BY_LIB';\nimport {ISelectedAttribute} from '../../../_types/types';\n\nexport interface IAttributesSelectionListState {\n    library: string;\n    multiple: boolean;\n    canExpandExtendedAttributes: boolean;\n    expandedAttributePath: string;\n    attributes: GET_ATTRIBUTES_BY_LIB_attributes_list[];\n    selectedAttributes: ISelectedAttribute[];\n}\n\nexport enum AttributesSelectionListActionTypes {\n    SET_ATTRIBUTES = 'SET_ATTRIBUTES',\n    TOGGLE_ATTRIBUTE_SELECTION = 'TOGGLE_ATTRIBUTE_SELECTION',\n    TOGGLE_ATTRIBUTE_EXPAND = 'TOGGLE_ATTRIBUTE_EXPAND',\n    MOVE_SELECTED_ATTRIBUTE = 'MOVE_SELECTED_ATTRIBUTE'\n}\n\nexport type AttributesSelectionListAction =\n    | {\n          type: AttributesSelectionListActionTypes.SET_ATTRIBUTES;\n          attributes: GET_ATTRIBUTES_BY_LIB_attributes_list[];\n      }\n    | {\n          type: AttributesSelectionListActionTypes.TOGGLE_ATTRIBUTE_EXPAND;\n          attributePath: string;\n      }\n    | {\n          type: AttributesSelectionListActionTypes.TOGGLE_ATTRIBUTE_SELECTION;\n          attribute: ISelectedAttribute;\n      }\n    | {\n          type: AttributesSelectionListActionTypes.MOVE_SELECTED_ATTRIBUTE;\n          from: number;\n          to: number;\n      };\n\nexport const initialState: IAttributesSelectionListState = {\n    library: '',\n    multiple: true,\n    canExpandExtendedAttributes: true,\n    selectedAttributes: [],\n    expandedAttributePath: '',\n    attributes: []\n};\n\nconst attributeSelectionListReducer = (\n    state: IAttributesSelectionListState,\n    action: AttributesSelectionListAction\n): IAttributesSelectionListState => {\n    switch (action.type) {\n        case AttributesSelectionListActionTypes.SET_ATTRIBUTES: {\n            return {...state, attributes: action.attributes};\n        }\n        case AttributesSelectionListActionTypes.TOGGLE_ATTRIBUTE_EXPAND: {\n            const newState = {...state};\n\n            // If toggled attribute's path is in expanded attribute path, go back up to its parent.\n            // Otherwise, expand given attribute path\n            if (state.expandedAttributePath.indexOf(action.attributePath) === 0) {\n                newState.expandedAttributePath = action.attributePath.split('.').slice(0, -1).join('.');\n            } else {\n                newState.expandedAttributePath = action.attributePath;\n            }\n\n            return newState;\n        }\n        case AttributesSelectionListActionTypes.TOGGLE_ATTRIBUTE_SELECTION: {\n            let newSelection = [...state.selectedAttributes];\n            const existingIndex = state.selectedAttributes.findIndex(a => a.path === action.attribute.path);\n            if (state.multiple) {\n                if (existingIndex === -1) {\n                    newSelection = [...newSelection, action.attribute];\n                } else {\n                    newSelection = [...newSelection.slice(0, existingIndex), ...newSelection.slice(existingIndex + 1)];\n                }\n            } else {\n                newSelection = existingIndex === -1 ? [action.attribute] : [];\n            }\n\n            return {\n                ...state,\n                selectedAttributes: newSelection\n            };\n        }\n        case AttributesSelectionListActionTypes.MOVE_SELECTED_ATTRIBUTE: {\n            let newSelection = [...state.selectedAttributes];\n            let {from, to} = action;\n\n            if (!newSelection[from]) {\n                return state;\n            }\n\n            if (to > newSelection.length - 1) {\n                to = newSelection.length - 1;\n            }\n\n            if (from < 0) {\n                from = 0;\n            }\n\n            newSelection = reorder(newSelection, from, to);\n\n            return {\n                ...state,\n                selectedAttributes: newSelection\n            };\n        }\n    }\n};\n\nexport default attributeSelectionListReducer;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport BodyRow from './BodyRow';\nexport default BodyRow;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {ISelectionState} from 'redux/stateType';\nimport {SharedStateSelectionType} from '_types/types';\n\nexport function isAllSelected(selectionState: ISelectionState, selectionMode: boolean): boolean {\n    return selectionMode\n        ? selectionState.searchSelection.type === SharedStateSelectionType.search &&\n              selectionState.searchSelection.allSelected\n        : selectionState.selection.type === SharedStateSelectionType.search && selectionState.selection.allSelected;\n}\n\nexport function isSelected(\n    selectionState: ISelectionState,\n    selectionMode: boolean,\n    recordId: string,\n    libraryId: string\n): boolean {\n    const selectionToCheck = selectionMode ? selectionState.searchSelection : selectionState.selection;\n\n    return (\n        selectionToCheck.type === SharedStateSelectionType.search &&\n        !!selectionToCheck.selected.find(e => e.id === recordId && e.library === libraryId)\n    );\n}\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport React, {Dispatch, useContext} from 'react';\nimport {\n    AttributesSelectionListAction,\n    IAttributesSelectionListState,\n    initialState\n} from './attributesSelectionListReducer';\n\nexport const AttributesSelectionListStateContext = React.createContext<{\n    state: IAttributesSelectionListState;\n    dispatch: Dispatch<AttributesSelectionListAction>;\n}>({state: initialState, dispatch: () => initialState});\n\nexport const useAttributesSelectionListState = () => useContext(AttributesSelectionListStateContext);\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport styled from 'styled-components';\n\nexport const TextAttribute = styled.span`\n    color: hsl(0, 0%, 13%);\n    font-weight: 700;\n`;\n\nexport const SmallText = styled.span`\n    color: hsl(0, 0%, 45%);\n    font-weight: 400;\n`;\n\nexport const CustomForm = styled.form`\n    width: 100%;\n`;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {Checkbox, Radio, Space} from 'antd';\nimport {useLang} from 'hooks/LangHook/LangHook';\nimport React from 'react';\nimport styled from 'styled-components';\nimport themingVar from 'themingVar';\nimport {attributeToSelectedAttribute, isAttributeSelected, localizedTranslation} from 'utils';\nimport {AttributesSelectionListActionTypes} from '../reducer/attributesSelectionListReducer';\nimport {useAttributesSelectionListState} from '../reducer/attributesSelectionListStateContext';\nimport {SmallText, TextAttribute} from '../sharedComponents';\nimport {ICommonAttributeComponentProps} from '../_types';\n\nconst Item = styled.div`\n    padding: 0.5em;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    width: 100%;\n    cursor: pointer;\n    border: 2px solid transparent;\n\n    &:hover {\n        border-color: ${themingVar['@primary-color']};\n        background-color: ${themingVar['@leav-background-active']};\n    }\n`;\n\nconst CheckboxWrapper = styled.div`\n    margin-left: 1em;\n`;\n\nfunction Attribute({attribute, depth, path, library, parentAttribute}: ICommonAttributeComponentProps): JSX.Element {\n    const attributePath = [path, attribute.id].filter(p => !!p).join('.');\n    const [{lang}] = useLang();\n    const {state, dispatch} = useAttributesSelectionListState();\n\n    const _handleClick = () => {\n        dispatch({\n            type: AttributesSelectionListActionTypes.TOGGLE_ATTRIBUTE_SELECTION,\n            attribute: attributeToSelectedAttribute(attribute, {\n                path: attributePath,\n                library,\n                parentAttributeData: parentAttribute\n            })\n        });\n    };\n\n    const label = localizedTranslation(attribute.label, lang);\n    const isSelected = isAttributeSelected(attributePath, state.selectedAttributes);\n\n    return (\n        <Item onClick={_handleClick} data-testid=\"attribute-in-list\">\n            <Space>\n                <TextAttribute>{label ?? attribute.id}</TextAttribute>\n                {label && <SmallText>{attribute.id}</SmallText>}\n            </Space>\n            <CheckboxWrapper>\n                {state.multiple ? (\n                    <Checkbox checked={isSelected} onChange={_handleClick} />\n                ) : (\n                    <Radio checked={isSelected} onChange={_handleClick} />\n                )}\n            </CheckboxWrapper>\n        </Item>\n    );\n}\nexport default Attribute;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport Attribute from './Attribute';\nexport default Attribute;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {CloseOutlined, HolderOutlined} from '@ant-design/icons';\nimport {Button, Space} from 'antd';\nimport React from 'react';\nimport styled from 'styled-components';\nimport {useLang} from '../../../../hooks/LangHook/LangHook';\nimport {localizedTranslation} from '../../../../utils';\nimport {ISelectedAttribute} from '../../../../_types/types';\nimport {AttributesSelectionListActionTypes} from '../../reducer/attributesSelectionListReducer';\nimport {useAttributesSelectionListState} from '../../reducer/attributesSelectionListStateContext';\nimport {SmallText, TextAttribute} from '../../sharedComponents';\n\ninterface ISelectedAttributeProps {\n    selectedAttribute: ISelectedAttribute;\n    handleProps: any;\n}\n\nconst DragHandle = styled.div`\n    border-right: 1px solid #f0f0f0;\n    padding: 0.5em;\n    display: flex;\n    align-items: center;\n`;\n\nconst Content = styled(Space)`\n    padding: 0.5em;\n    flex-grow: 1;\n`;\n\nconst CloseWrapper = styled.div`\n    padding: 8px;\n`;\n\nconst SelectedAttribute = ({selectedAttribute, handleProps}: ISelectedAttributeProps) => {\n    const [{lang}] = useLang();\n    const {dispatch} = useAttributesSelectionListState();\n\n    const label = localizedTranslation(selectedAttribute.label, lang);\n\n    const _handleUnselectAttribute = () => {\n        dispatch({\n            type: AttributesSelectionListActionTypes.TOGGLE_ATTRIBUTE_SELECTION,\n            attribute: selectedAttribute\n        });\n    };\n\n    return (\n        <>\n            <DragHandle {...handleProps}>\n                <HolderOutlined />\n            </DragHandle>\n\n            <Content direction=\"vertical\">\n                <TextAttribute>{label ?? selectedAttribute.id}</TextAttribute>\n                {label && (\n                    <div>\n                        <SmallText>{selectedAttribute.id}</SmallText>\n                    </div>\n                )}\n            </Content>\n            <CloseWrapper>\n                <Button icon={<CloseOutlined />} size=\"small\" onClick={_handleUnselectAttribute} />\n            </CloseWrapper>\n        </>\n    );\n};\n\nexport default SelectedAttribute;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport React from 'react';\nimport {DragDropContext, Draggable, Droppable} from 'react-beautiful-dnd';\nimport styled from 'styled-components';\nimport {infosCol} from '../../../constants/constants';\nimport {AttributesSelectionListActionTypes} from '../reducer/attributesSelectionListReducer';\nimport {useAttributesSelectionListState} from '../reducer/attributesSelectionListStateContext';\nimport SelectedAttribute from './SelectedAttribute/SelectedAttribute';\n\nconst WrapperItemSelected = styled.div`\n    overflow-y: auto;\n    height: calc(100vh - 15rem);\n\n    &&& > *:first-child {\n        margin-top: 0;\n    }\n\n    &&& > *:last-child {\n        margin-bottom: 0;\n    }\n`;\n\nconst CustomCard = styled.div`\n    &&& {\n        padding: 0;\n        margin: 0 10px 10px 10px;\n        display: flex;\n        justify-content: space-between;\n        border: 1px solid #f0f0f0;\n        border-radius: 2px;\n        min-height: 3rem;\n        box-shadow: 0 2px 0 rgba(0, 0, 0, 0.015);\n        background: #fff;\n    }\n`;\n\nfunction SelectedAttributesList(): JSX.Element {\n    const {state, dispatch} = useAttributesSelectionListState();\n\n    const selection = state.selectedAttributes;\n\n    const _onDragEnd = result => {\n        if (!result.destination) {\n            return;\n        }\n\n        if (result.destination.index === result.source.index) {\n            return;\n        }\n\n        dispatch({\n            type: AttributesSelectionListActionTypes.MOVE_SELECTED_ATTRIBUTE,\n            from: result.source.index,\n            to: result.destination.index\n        });\n    };\n\n    return (\n        <WrapperItemSelected>\n            <DragDropContext onDragEnd={_onDragEnd}>\n                <Droppable droppableId=\"list-attributes-selected\">\n                    {provided => (\n                        <div ref={provided.innerRef} {...provided.droppableProps}>\n                            {selection.map(\n                                (selectedAttribute, index) =>\n                                    selectedAttribute.path !== infosCol && (\n                                        <Draggable\n                                            key={selectedAttribute.path}\n                                            index={index}\n                                            draggableId={selectedAttribute.path}\n                                        >\n                                            {dragProvided => (\n                                                <CustomCard\n                                                    ref={dragProvided.innerRef}\n                                                    {...dragProvided.draggableProps}\n                                                >\n                                                    <SelectedAttribute\n                                                        selectedAttribute={selectedAttribute}\n                                                        handleProps={dragProvided.dragHandleProps}\n                                                    />\n                                                </CustomCard>\n                                            )}\n                                        </Draggable>\n                                    )\n                            )}\n                            {provided.placeholder}\n                        </div>\n                    )}\n                </Droppable>\n            </DragDropContext>\n        </WrapperItemSelected>\n    );\n}\n\nexport default SelectedAttributesList;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport SelectedAttributesList from './SelectedAttributesList';\nexport default SelectedAttributesList;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {useQuery} from '@apollo/client';\nimport {Input, List, Spin} from 'antd';\nimport React, {useEffect, useReducer, useRef, useState} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport styled from 'styled-components';\nimport {getAttributesByLibQuery} from '../../graphQL/queries/attributes/getAttributesByLib';\nimport {useLang} from '../../hooks/LangHook/LangHook';\nimport {localizedTranslation} from '../../utils';\nimport {GET_ATTRIBUTES_BY_LIB, GET_ATTRIBUTES_BY_LIBVariables} from '../../_gqlTypes/GET_ATTRIBUTES_BY_LIB';\nimport {ISelectedAttribute} from '../../_types/types';\nimport ErrorDisplay from '../shared/ErrorDisplay';\nimport Attribute from './Attribute';\nimport attributeSelectionListReducer, {\n    AttributesSelectionListActionTypes,\n    initialState\n} from './reducer/attributesSelectionListReducer';\nimport {AttributesSelectionListStateContext} from './reducer/attributesSelectionListStateContext';\nimport SelectedAttributesList from './SelectedAttributesList';\nimport {CustomForm} from './sharedComponents';\n\nconst ListWrapper = styled.div`\n    padding: 0.3rem 1rem 0 1rem;\n    overflow-y: scroll;\n    height: calc(100vh - 15rem);\n`;\n\nconst Wrapper = styled.div<{multiple: boolean}>`\n    display: Grid;\n    grid-template-columns: repeat(${props => (props.multiple ? 2 : 1)}, 1fr);\n    grid-column-gap: 0.3rem;\n`;\n\ninterface IAttributesSelectionListProps {\n    library: string;\n    multiple?: boolean;\n    selectedAttributes?: ISelectedAttribute[];\n    canExpandExtendedAttributes?: boolean;\n    onSelectionChange: (selectedAttributes: ISelectedAttribute[]) => void;\n}\n\nfunction AttributesSelectionList({\n    library,\n    multiple = true,\n    selectedAttributes = [],\n    canExpandExtendedAttributes = true,\n    onSelectionChange\n}: IAttributesSelectionListProps): JSX.Element {\n    const {t} = useTranslation();\n    const searchRef = useRef<any>(null);\n    const [{lang}] = useLang();\n    const [searchValue, setSearchValue] = useState<string>('');\n\n    const [state, dispatch] = useReducer(attributeSelectionListReducer, {\n        ...initialState,\n        library,\n        multiple,\n        selectedAttributes,\n        canExpandExtendedAttributes\n    });\n\n    // Retrieve attributes list\n    const {loading, error} = useQuery<GET_ATTRIBUTES_BY_LIB, GET_ATTRIBUTES_BY_LIBVariables>(getAttributesByLibQuery, {\n        variables: {\n            library\n        },\n        onCompleted: data => {\n            dispatch({\n                type: AttributesSelectionListActionTypes.SET_ATTRIBUTES,\n                attributes: data.attributes?.list || []\n            });\n        }\n    });\n\n    useEffect(() => {\n        onSelectionChange(state.selectedAttributes);\n    }, [onSelectionChange, state.selectedAttributes]);\n\n    // Display list\n    if (loading) {\n        return <Spin />;\n    }\n\n    const _handleSearchChange = (search: string) => {\n        setSearchValue(search);\n    };\n\n    return (\n        <AttributesSelectionListStateContext.Provider value={{state, dispatch}}>\n            <Wrapper multiple={state.multiple}>\n                <ListWrapper data-testid=\"attributes-list\">\n                    <CustomForm>\n                        <Input.Search\n                            placeholder={t('attributes-list.search')}\n                            aria-label=\"search\"\n                            ref={searchRef}\n                            onChange={event => _handleSearchChange(event.target.value ?? '')}\n                        />\n                    </CustomForm>\n                    {error ? (\n                        <ErrorDisplay message={error.message} />\n                    ) : (\n                        <List>\n                            {state.attributes\n                                .filter(attribute => {\n                                    if (!searchValue) {\n                                        return true;\n                                    }\n\n                                    const attributeLabel = localizedTranslation(attribute.label, lang).toLowerCase();\n\n                                    return (\n                                        attributeLabel.indexOf(searchValue) !== -1 ||\n                                        attribute.id.indexOf(searchValue) !== -1\n                                    );\n                                })\n                                .map(attribute => (\n                                    <Attribute\n                                        key={attribute.id}\n                                        attribute={attribute}\n                                        depth={0}\n                                        library={library}\n                                        path=\"\"\n                                    />\n                                ))}\n                        </List>\n                    )}\n                </ListWrapper>\n                {multiple && <SelectedAttributesList data-testid=\"selected-attributes-list\" />}\n            </Wrapper>\n        </AttributesSelectionListStateContext.Provider>\n    );\n}\n\nexport default AttributesSelectionList;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport AttributesSelectionList from './AttributesSelectionList';\nexport default AttributesSelectionList;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {Button, Modal} from 'antd';\nimport {PrimaryBtn} from 'components/app/StyledComponent/PrimaryBtn';\nimport useSearchReducer from 'hooks/useSearchReducer';\nimport {SearchActionTypes} from 'hooks/useSearchReducer/searchReducer';\nimport React, {useState} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {AttributeFormat, AttributeType} from '_gqlTypes/globalTypes';\nimport {useLang} from '../../../../hooks/LangHook/LangHook';\nimport {getFieldsKeyFromAttribute, localizedTranslation} from '../../../../utils';\nimport {IAttribute, IField, ISelectedAttribute} from '../../../../_types/types';\nimport AttributesSelectionList from '../../../AttributesSelectionList';\n\ninterface IChooseTableColumnsProps {\n    visible: boolean;\n    onClose: () => void;\n}\n\nfunction ChooseTableColumns({visible, onClose}: IChooseTableColumnsProps): JSX.Element {\n    const {t} = useTranslation();\n    const [{lang}] = useLang();\n    const {state: searchState, dispatch: searchDispatch} = useSearchReducer();\n    const [selectedAttributes, setSelectedAttributes] = useState<ISelectedAttribute[]>(\n        (searchState?.fields ?? []).map(col => {\n            const currentAttribute = searchState.attributes.find(\n                attribute => attribute.id === col.id && attribute.library === col.library\n            );\n\n            return {\n                ...col,\n                path: col.key,\n                label: currentAttribute?.label ?? null,\n                multiple_values: !!col.multipleValues\n            };\n        })\n    );\n\n    const handleSubmit = () => {\n        const noDuplicateNewAttribute: IAttribute[] = selectedAttributes\n            .filter(\n                selectedAttribute =>\n                    !searchState.attributes.some(\n                        attribute =>\n                            attribute.id === selectedAttribute.id && attribute.library === selectedAttribute.library\n                    )\n            )\n            .map(a => ({\n                ...a,\n                isLink: a.type === AttributeType.tree,\n                isMultiple: a.multiple_values,\n                format: a.format ?? undefined\n            }));\n\n        const allAttributes = [...(searchState?.attributes ?? []), ...noDuplicateNewAttribute];\n\n        searchDispatch({type: SearchActionTypes.SET_ATTRIBUTES, attributes: allAttributes});\n\n        const newFields: IField[] = selectedAttributes.reduce((acc, selectedAttribute) => {\n            const attribute = allAttributes.find(\n                currentAttr =>\n                    currentAttr.id === selectedAttribute.id && currentAttr.library === selectedAttribute.library\n            );\n\n            if (!attribute) {\n                return acc;\n            }\n\n            const key = getFieldsKeyFromAttribute(selectedAttribute);\n\n            const label =\n                typeof attribute.label === 'string' ? attribute.label : localizedTranslation(attribute.label, lang);\n\n            const embeddedData = selectedAttribute.embeddedFieldData && {\n                format: selectedAttribute.embeddedFieldData?.format ?? AttributeFormat.text,\n                path: selectedAttribute.path\n            };\n\n            const field: IField = {\n                id: selectedAttribute.id,\n                library: selectedAttribute.library,\n                label,\n                key,\n                type: selectedAttribute.type,\n                format: attribute.format,\n                parentAttributeData: selectedAttribute?.parentAttributeData,\n                treeData: selectedAttribute.treeData,\n                embeddedData,\n                recordLibrary:\n                    selectedAttribute?.parentAttributeData?.type === AttributeType.tree\n                        ? selectedAttribute.path.split('.')[1]\n                        : null\n            };\n\n            return [...acc, field];\n        }, []);\n\n        searchDispatch({\n            type: SearchActionTypes.SET_FIELDS,\n            fields: newFields\n        });\n\n        onClose();\n    };\n\n    const _handleCancel = () => {\n        onClose();\n    };\n\n    // hack to disable warning \"Droppable: unsupported nested scroll container\" from react-beautiful-dnd,\n    // remove \"overflow: auto\" on class \"ant-modal-wrap\"\n    const elements: any = document.getElementsByClassName('ant-modal-wrap');\n    if (elements.length) {\n        elements[0].style.overflow = 'initial';\n    }\n\n    return (\n        <Modal\n            visible={visible}\n            onCancel={_handleCancel}\n            title={t('table-columns-selection.header')}\n            width=\"70rem\"\n            centered\n            footer={[\n                <Button key=\"Cancel\" onClick={_handleCancel}>\n                    {t('table-columns-selection.cancel')}\n                </Button>,\n                <PrimaryBtn key=\"Submit\" onClick={handleSubmit}>\n                    {t('table-columns-selection.submit')}\n                </PrimaryBtn>\n            ]}\n        >\n            <AttributesSelectionList\n                library={searchState.library.id}\n                selectedAttributes={selectedAttributes}\n                onSelectionChange={setSelectedAttributes}\n            />\n        </Modal>\n    );\n}\n\nexport default ChooseTableColumns;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport ChooseTableColumns from './ChooseTableColumns';\nexport default ChooseTableColumns;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {CaretDownOutlined, CaretUpOutlined} from '@ant-design/icons';\nimport {Dropdown, Menu} from 'antd';\nimport useSearchReducer from 'hooks/useSearchReducer';\nimport {SearchActionTypes} from 'hooks/useSearchReducer/searchReducer';\nimport React, {useState} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport styled from 'styled-components';\nimport {AttributeType, SortOrder} from '_gqlTypes/globalTypes';\nimport {infosCol} from '../../../../constants/constants';\nimport themingVar from '../../../../themingVar';\nimport {getSortFieldByAttributeType} from '../../../../utils';\nimport ChooseTableColumns from '../../LibraryItemsListTable/ChooseTableColumns';\n\ninterface IWrapperProps {\n    isHover: boolean;\n    isInfoColumn: boolean;\n}\n\nconst Wrapper = styled.div<IWrapperProps>`\n    border-left: solid 3px transparent;\n    border-right: solid 3px transparent;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100%;\n\n    ${({isHover}) =>\n        isHover &&\n        `\n        box-shadow: 0px 3px 6px #00000029;\n\n        .wrapper-arrow {\n            background: ${themingVar['@default-bg']};\n            box-shadow: 0px 3px 6px #00000029;\n            border: 1px solid ${themingVar['@leav-secondary-divider-color']};\n        }\n    `}\n\n    &:hover {\n        border-left: ${themingVar['@primary-color']} 3px solid;\n        border-right: ${themingVar['@primary-color']} 3px solid;\n        box-shadow: 0px 3px 6px #00000029;\n        transition: 200ms ease;\n\n        .wrapper-arrow {\n            background: ${themingVar['@default-bg']};\n            box-shadow: 0px 3px 6px #00000029;\n            border: 1px solid ${themingVar['@leav-secondary-divider-color']};\n        }\n    }\n`;\n\nconst DropdownContent = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 0.3rem 0.3rem;\n\n    word-break: 'keep-all';\n    user-select: 'none';\n`;\n\ninterface IWrapperArrowProps {\n    filterDirection?: SortOrder;\n    filterActive: boolean;\n}\n\nconst WrapperArrow = styled.div<IWrapperArrowProps>`\n    border-radius: 50%;\n    cursor: pointer;\n    border: 1px solid transparent;\n    height: 2rem;\n    width: 2rem;\n    display: grid;\n    grid-template-rows: 8px 8px;\n    place-items: center;\n    align-content: center;\n    margin: 0 8px;\n    flex-shrink: 0;\n\n    & > * {\n        transform: scale(0.7);\n    }\n\n    & > span:first-child {\n        opacity: ${({filterDirection, filterActive}) => (filterActive && filterDirection === SortOrder.asc ? 1 : 0.5)};\n    }\n\n    & > span:last-child {\n        opacity: ${({filterDirection, filterActive}) => (filterActive && filterDirection === SortOrder.desc ? 1 : 0.5)};\n    }\n`;\n\nWrapperArrow.displayName = 'WrapperArrow';\n\ninterface IHeaderProps {\n    children: React.ReactNode;\n    id: string;\n    type: AttributeType;\n}\n\nconst Header = ({id, children, type}: IHeaderProps) => {\n    const {t} = useTranslation();\n\n    const {state: searchState, dispatch: searchDispatch} = useSearchReducer();\n    const [openChangeColumns, setOpenChangeColumns] = useState(false);\n    const [isHover, setIsHover] = useState<boolean>(false);\n\n    id = infosCol === id ? 'id' : id;\n\n    const handleSort = (attId: string, order: SortOrder, attType: AttributeType) => {\n        const newSortField = getSortFieldByAttributeType(attId, attType);\n\n        searchDispatch({\n            type: SearchActionTypes.SET_SORT,\n            sort: {\n                field: newSortField,\n                order,\n                active: true\n            }\n        });\n\n        searchDispatch({type: SearchActionTypes.SET_LOADING, loading: true});\n    };\n\n    const handleDesc = (attId: string, attType: AttributeType) => {\n        handleSort(attId, SortOrder.desc, attType);\n    };\n\n    const handleAsc = (attId: string, attType: AttributeType) => {\n        handleSort(attId, SortOrder.asc, attType);\n    };\n\n    const cancelSort = () => {\n        searchDispatch({\n            type: SearchActionTypes.CANCEL_SORT\n        });\n    };\n\n    const handleHideColumn = (attId: string) => {\n        searchDispatch({\n            type: SearchActionTypes.SET_FIELDS,\n            fields: searchState.fields.filter(f => f.id !== attId)\n        });\n    };\n\n    const _handleCloseChooseTableColumns = () => setOpenChangeColumns(false);\n\n    return (\n        <Wrapper isHover={isHover} isInfoColumn={infosCol === id} id={id}>\n            {children}\n            <Dropdown\n                placement=\"bottomCenter\"\n                trigger={['click']}\n                overlay={\n                    <Menu\n                        style={{transform: 'translateY(-8px)'}} // move overlay to avoid trigger css transition\n                        onMouseEnter={() => setIsHover(true)}\n                        onMouseLeave={() => setIsHover(false)}\n                    >\n                        <Menu.Item onClick={() => handleAsc(id, type)}>\n                            {t('items_list.table.header-cell-menu.sort-ascend')}\n                        </Menu.Item>\n                        <Menu.Item onClick={() => handleDesc(id, type)}>\n                            {t('items_list.table.header-cell-menu.sort-descend')}\n                        </Menu.Item>\n                        <Menu.Item onClick={cancelSort}>{t('items_list.table.header-cell-menu.cancel-sort')}</Menu.Item>\n                        {infosCol !== id && (\n                            <Menu.Item onClick={() => handleHideColumn(id)}>\n                                {t('items_list.table.header-cell-menu.hide-column')}\n                            </Menu.Item>\n                        )}\n                        <Menu.Item onClick={() => setOpenChangeColumns(true)}>\n                            {t('items_list.table.header-cell-menu.choose-columns')}\n                        </Menu.Item>\n                    </Menu>\n                }\n            >\n                <DropdownContent>\n                    <WrapperArrow\n                        className=\"wrapper-arrow\"\n                        data-testid={`wrapper-arrow-${searchState.sort.order}`}\n                        filterDirection={searchState.sort?.order}\n                        filterActive={!!searchState.sort?.active && searchState.sort?.field === id}\n                        style={{fontSize: '130%'}}\n                    >\n                        <CaretUpOutlined />\n                        <CaretDownOutlined />\n                    </WrapperArrow>\n                </DropdownContent>\n            </Dropdown>\n            {openChangeColumns && (\n                <ChooseTableColumns visible={openChangeColumns} onClose={_handleCloseChooseTableColumns} />\n            )}\n        </Wrapper>\n    );\n};\n\nexport default Header;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport Header from './Header';\nexport default Header;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {Spin} from 'antd';\nimport Paragraph from 'antd/lib/typography/Paragraph';\nimport {useLang} from 'hooks/LangHook/LangHook';\nimport useSearchReducer from 'hooks/useSearchReducer';\nimport {isEqual} from 'lodash';\nimport get from 'lodash/get';\nimport React, {useEffect, useState} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {ColumnWithLooseAccessor, useFlexLayout, useTable, UseTableColumnOptions} from 'react-table';\nimport {useSticky} from 'react-table-sticky';\nimport styled from 'styled-components';\nimport {AttributeFormat, AttributeType} from '_gqlTypes/globalTypes';\nimport {infosCol, selectionColumn} from '../../../constants/constants';\nimport themingVar from '../../../themingVar';\nimport {ITableCell, ITableRow} from '../../../_types/types';\nimport LibraryItemsListPagination from '../LibraryItemsListPagination';\nimport BodyRow from './BodyRow';\nimport Header from './Header';\n\ninterface ITableColumn extends UseTableColumnOptions<ITableRow> {\n    accessor: string | ((row, rowIndex) => string);\n    key: string;\n    sticky?: 'left' | 'right';\n    type?: AttributeType;\n    format?: AttributeFormat;\n    embeddedPath?: string;\n}\n\ninterface ICustomTableProps {\n    scrollHorizontalActive: boolean;\n}\n\nexport const INFOS_COLUMN_WIDTH = '350px';\n\nconst CustomTable = styled.div<ICustomTableProps>`\n    grid-area: data;\n    height: 100%;\n    min-width: 0px;\n    width: 100%;\n    border: 1px solid ${themingVar['@divider-color']};\n    overflow-y: scroll;\n\n    &.sticky {\n        overflow: scroll;\n\n        .header {\n            position: sticky;\n            top: 0;\n            z-index: 1;\n        }\n\n        .body {\n            position: relative;\n            z-index: 0;\n        }\n\n        [data-sticky-td] {\n            position: sticky;\n        }\n    }\n`;\n\nCustomTable.displayName = 'CustomTable';\n\nconst TableHead = styled.div`\n    background: ${themingVar['@leav-secondary-action-bg']};\n    width: fit-content;\n    min-width: 100%;\n`;\n\nconst HeaderRow = styled.div`\n    margin-left: 3px; // For better alignment with rows\n`;\n\nconst HeaderCell = styled.div<{id: string}>`\n    background: ${themingVar['@leav-secondary-action-bg']};\n    border-right: 1px solid ${themingVar['@divider-color']};\n    min-width: 35px;\n    max-width: ${p => (p.id === selectionColumn ? '35px' : 'auto')};\n\n    &:last-child {\n        border-right: none;\n    }\n`;\n\nconst TableBody = styled.div`\n    width: fit-content;\n    min-width: 100%;\n`;\n\nconst Pagination = styled.div`\n    align-self: start;\n    grid-area: pagination;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border-top: 1px solid ${themingVar['@divider-color']};\n    padding-top: 8px;\n`;\n\nconst Table = () => {\n    const {t} = useTranslation();\n    const [{lang}] = useLang();\n\n    const {state: searchState} = useSearchReducer();\n    const [tableColumns, setTableColumns] = useState<ITableColumn[]>([]);\n    const [tableData, setTableData] = useState<ITableRow[]>([]);\n    const [scrollHorizontalActive, setScrollHorizontalActive] = useState(false);\n\n    //columns\n    useEffect(() => {\n        const startColumns: ITableColumn[] = [\n            {\n                Header: '',\n                accessor: selectionColumn,\n                key: selectionColumn,\n                sticky: 'left',\n                width: 35,\n                maxWidth: 35,\n                minWidth: 30\n            },\n            {\n                Header: t('items_list.table.infos'),\n                accessor: infosCol,\n                key: infosCol,\n                sticky: 'left'\n            }\n        ];\n\n        let columnsFromFields: ITableColumn[] = [];\n        if (searchState.attributes.length && searchState.fields.length) {\n            columnsFromFields = searchState.fields.map(field => {\n                const validAccessor = field.key.replaceAll('.', '');\n\n                return {\n                    Header: (\n                        <Paragraph\n                            ellipsis={{\n                                rows: 2,\n                                tooltip: field.label\n                            }}\n                            style={{marginBottom: 0, textAlign: 'center'}}\n                        >\n                            {field.label}\n                        </Paragraph>\n                    ),\n                    accessor: validAccessor,\n                    key: field.key,\n                    type: field.type,\n                    format: field.embeddedData?.format || field.format,\n                    embeddedPath: field.embeddedData?.path\n                };\n            });\n        }\n\n        const columns = [...startColumns, ...columnsFromFields];\n\n        setTableColumns(currentColumns => {\n            return !isEqual(currentColumns, columns) ? columns : currentColumns;\n        });\n    }, [searchState.fields, searchState.attributes, t]);\n\n    // data\n    useEffect(() => {\n        const data: ITableRow[] = searchState.records.reduce((allData, record, index) => {\n            if (index < searchState.pagination) {\n                const tableItem: ITableRow = tableColumns.reduce(\n                    (acc, column) => {\n                        // handle selection and infos column\n                        if (!column.type) {\n                            if (column.accessor === infosCol) {\n                                const value = record.whoAmI;\n\n                                const cellData: ITableCell = {value, type: column.type};\n                                acc[column.accessor] = cellData;\n\n                                return acc;\n                            }\n                        }\n\n                        const key = column.key;\n                        let value = record.fields[key];\n                        if (column.embeddedPath && column.embeddedPath.length) {\n                            const pathWithoutRoot = column.embeddedPath.split('.').slice(1).join('.');\n                            try {\n                                const content = JSON.parse(record.fields[key]);\n                                value = get(content, pathWithoutRoot);\n                            } catch (e) {\n                                value = 'error';\n                            }\n                        }\n\n                        acc[column.accessor as string] = {value, type: column.type, format: column.format};\n\n                        return acc;\n                    },\n                    {[selectionColumn]: null, record: record.whoAmI}\n                );\n\n                return [...allData, tableItem];\n            }\n            return allData;\n        }, []);\n\n        if (data) {\n            setTableData([...data]);\n        }\n    }, [searchState.records, searchState.pagination, tableColumns, lang]);\n\n    const handleScroll = (e: React.UIEvent<HTMLDivElement, UIEvent>) => {\n        const scrollValue = (e.target as HTMLDivElement).scrollLeft;\n\n        if (scrollValue > 0) {\n            setScrollHorizontalActive(true);\n        } else {\n            setScrollHorizontalActive(false);\n        }\n    };\n\n    const tableInstance = useTable<ITableRow>(\n        {\n            columns: tableColumns as Array<ColumnWithLooseAccessor<ITableRow>>,\n            data: tableData\n        },\n        useFlexLayout,\n        useSticky\n    );\n\n    const {getTableProps, getTableBodyProps, headerGroups, prepareRow, rows} = tableInstance;\n\n    if (searchState.loading) {\n        return (\n            <>\n                <Spin />\n            </>\n        );\n    }\n\n    return (\n        <>\n            <CustomTable\n                {...getTableProps()}\n                className=\"table sticky\"\n                data-testid=\"table\"\n                onScroll={handleScroll}\n                scrollHorizontalActive={scrollHorizontalActive}\n            >\n                <TableHead className=\"header sticky\">\n                    {headerGroups.map(headerGroup => (\n                        <HeaderRow {...headerGroup.getHeaderGroupProps()}>\n                            {headerGroup.headers.map(column => {\n                                const headerCellProps = column.getHeaderProps();\n\n                                if (column.id === infosCol) {\n                                    // define info column row style\n                                    headerCellProps.style = {\n                                        ...headerCellProps.style,\n                                        minWidth: INFOS_COLUMN_WIDTH,\n                                        maxWidth: INFOS_COLUMN_WIDTH\n                                    };\n                                }\n\n                                return (\n                                    <HeaderCell {...headerCellProps} id={column.id}>\n                                        {((column as unknown) as ITableColumn).key !== selectionColumn && (\n                                            <Header\n                                                id={((column as unknown) as ITableColumn).key}\n                                                type={AttributeType.simple}\n                                            >\n                                                {column.render('Header')}\n                                            </Header>\n                                        )}\n                                    </HeaderCell>\n                                );\n                            })}\n                        </HeaderRow>\n                    ))}\n                </TableHead>\n                <TableBody {...getTableBodyProps()} className=\"body sticky\">\n                    {rows.map(row => {\n                        // Prepare the row for display\n                        prepareRow(row);\n\n                        return <BodyRow key={row.id} row={row} />;\n                    })}\n                </TableBody>\n            </CustomTable>\n            <Pagination>\n                <LibraryItemsListPagination />\n            </Pagination>\n        </>\n    );\n};\n\nexport default Table;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport Table from './Table';\nexport default Table;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {CheckCircleFilled, CheckOutlined, DeleteOutlined} from '@ant-design/icons';\nimport {Button, Card, message, Space, Tooltip} from 'antd';\nimport Paragraph from 'antd/lib/typography/Paragraph';\nimport SelectCellsBtn, {\n    SelectCellsBtnType\n} from 'components/LibraryItemsList/LibraryItemsListTable/BodyCell/SelectCellsBtn';\nimport EditRecordBtn from 'components/RecordEdition/EditRecordBtn';\nimport {SelectionModeContext} from 'context';\nimport {useActiveLibrary} from 'hooks/ActiveLibHook/ActiveLibHook';\nimport {useLang} from 'hooks/LangHook/LangHook';\nimport useSearchReducer from 'hooks/useSearchReducer';\nimport React, {useContext, useEffect, useState} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {setSelectionToggleSearchSelectionElement, setSelectionToggleSelected} from 'redux/selection';\nimport {useAppDispatch, useAppSelector} from 'redux/store';\nimport styled from 'styled-components';\nimport {displayTypeToPreviewSize, getFileUrl, localizedTranslation} from 'utils';\nimport themingVar from '../../../../themingVar';\nimport {\n    IItem,\n    ISharedSelected,\n    ISharedStateSelectionSearch,\n    PreviewSize,\n    SharedStateSelectionType\n} from '../../../../_types/types';\nimport EditRecordModal from '../../../RecordEdition/EditRecordModal';\nimport RecordPreview from '../../../shared/RecordPreview';\n\nconst itemPreviewSize = {\n    [PreviewSize.small]: '100px',\n    [PreviewSize.medium]: '200px',\n    [PreviewSize.big]: '300px'\n};\n\nconst buttonsColor = '#333333';\n\n// Using 8 digit hexadecimal notation to add transparency\nconst hoverBackgroundColor = `${themingVar['@leav-background-active']}AA`;\nconst selectedBackgroundColor = `${themingVar['@leav-background-active']}DF`;\n\nconst Item = styled(Card)<{$previewSize: string}>`\n    && {\n        width: ${p => p.$previewSize};\n        margin: 0.5em;\n        outline: 2px solid transparent;\n\n        & .ant-card-cover {\n            width: ${p => p.$previewSize};\n            height: ${p => p.$previewSize};\n        }\n\n        &:hover {\n            outline-color: ${themingVar['@primary-color']};\n        }\n    }\n`;\n\nconst ImageWrapper = styled.div`\n    position: relative;\n    border-bottom: 1px solid ${themingVar['@divider-color']};\n`;\n\nconst ActionsWrapper = styled.div`\n    display: flex;\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n\n    justify-content: center;\n\n    &:hover {\n        .actions {\n            animation: show-actions 300ms ease;\n            opacity: 1;\n            background: ${hoverBackgroundColor};\n        }\n    }\n\n    @keyframes show-actions {\n        from {\n            opacity: 0;\n            background: none;\n        }\n        to {\n            opacity: 1;\n            background: ${hoverBackgroundColor};\n        }\n    }\n`;\n\nconst Selection = styled.div<{checked: boolean}>`\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    cursor: pointer;\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background: ${p => (p.checked ? selectedBackgroundColor : 'none')};\n\n    &:hover {\n        background: ${p => (p.checked ? selectedBackgroundColor : hoverBackgroundColor)};\n    }\n`;\n\nconst SelectionActions = styled(Space)`\n    && {\n        display: none;\n        position: absolute;\n        top: 1em;\n    }\n    ${Selection}:hover & {\n        display: inherit;\n    }\n    button {\n        color: ${buttonsColor};\n        border-color: ${buttonsColor};\n    }\n`;\n\nconst Actions = styled.div`\n    position: absolute;\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    opacity: 0;\n    width: 100%;\n    height: 100%;\n    grid-gap: 1rem;\n\n    justify-items: center;\n    align-items: center;\n    justify-content: center;\n\n    border-radius: 0.25rem 0.25rem 0 0;\n\n    button {\n        color: ${buttonsColor};\n        border-color: ${buttonsColor}66;\n\n        // Arrange buttons, depending on their position on the grid\n        &:nth-child(1) {\n            justify-self: end;\n            align-self: end;\n        }\n        &:nth-child(2) {\n            justify-self: start;\n            align-self: end;\n        }\n        &:nth-child(3) {\n            justify-self: end;\n            align-self: start;\n        }\n        &:nth-child(4) {\n            justify-self: start;\n            align-self: start;\n        }\n    }\n`;\n\nconst CheckedIconWrapper = styled.div`\n    font-size: 3em;\n    color: ${themingVar['@primary-color']};\n`;\n\ninterface IItemTileDisplayProps {\n    item: IItem;\n}\n\nfunction ItemTileDisplay({item}: IItemTileDisplayProps): JSX.Element {\n    const {t} = useTranslation();\n    const [activeLibrary] = useActiveLibrary();\n    const canDeleteRecord = activeLibrary.permissions.delete_record;\n\n    const {state: searchState} = useSearchReducer();\n    const selectionMode = useContext(SelectionModeContext);\n    const [editRecordModal, setEditRecordModal] = useState<boolean>(false);\n    const previewSize: PreviewSize = displayTypeToPreviewSize(searchState.display.size);\n\n    const {selectionState} = useAppSelector(state => ({\n        selectionState: state.selection\n    }));\n    const dispatch = useAppDispatch();\n\n    const [{lang}] = useLang();\n    const [isSelected, setIsSelect] = useState<boolean>(\n        !!selectionState.selection.selected.some(\n            elementSelected =>\n                elementSelected.id === item.whoAmI.id && elementSelected.library === item.whoAmI.library.id\n        )\n    );\n\n    const isAllSelected = selectionMode\n        ? selectionState.searchSelection.type === SharedStateSelectionType.search &&\n          selectionState.searchSelection.allSelected\n        : selectionState.selection.type === SharedStateSelectionType.search && selectionState.selection.allSelected;\n\n    const selectedToggle = () => {\n        setIsSelect(!isSelected);\n\n        const newSelected: ISharedSelected = {\n            id: item.whoAmI.id,\n            library: item.whoAmI.library.id,\n            label: localizedTranslation(item.whoAmI.label, lang)\n        };\n\n        if (selectionMode) {\n            dispatch(setSelectionToggleSearchSelectionElement(newSelected));\n        } else {\n            dispatch(\n                setSelectionToggleSelected({\n                    selectionType: SharedStateSelectionType.search,\n                    elementSelected: newSelected\n                })\n            );\n        }\n    };\n\n    useEffect(() => {\n        setIsSelect(\n            selectionState[selectionMode ? 'searchSelection' : 'selection'].selected.some(\n                elementSelected =>\n                    elementSelected.id === item.whoAmI.id && elementSelected.library === item.whoAmI.library.id\n            )\n        );\n    }, [selectionState.selection, selectionState.searchSelection, item, selectionState, selectionMode]);\n\n    const _handleClose = () => {\n        setEditRecordModal(false);\n    };\n\n    const _handleSelect = e => {\n        e.stopPropagation();\n        e.preventDefault();\n        selectedToggle();\n    };\n\n    const _handleDelete = e => {\n        e.stopPropagation();\n        e.preventDefault();\n\n        message.warn(t('global.feature_not_available'));\n    };\n\n    const isChecked = isSelected || isAllSelected;\n\n    const selectMode =\n        selectionState.selection.selected.length ||\n        (selectionState.selection as ISharedStateSelectionSearch).allSelected;\n\n    return (\n        <>\n            {editRecordModal && (\n                <EditRecordModal\n                    open={editRecordModal}\n                    record={item.whoAmI}\n                    library={item.whoAmI.library.id}\n                    onClose={_handleClose}\n                />\n            )}\n            <Item\n                $previewSize={itemPreviewSize[previewSize]}\n                size=\"small\"\n                onClick={selectedToggle}\n                onDoubleClick={() => setEditRecordModal(true)}\n                cover={\n                    <ImageWrapper>\n                        <RecordPreview\n                            label={item.whoAmI.label || item.whoAmI.id}\n                            image={\n                                item.whoAmI.preview?.[previewSize] ? getFileUrl(item.whoAmI.preview[previewSize]) : ''\n                            }\n                            tile={true}\n                            style={{\n                                width: itemPreviewSize[previewSize],\n                                height: itemPreviewSize[previewSize]\n                            }}\n                        />\n                        <ActionsWrapper>\n                            {isChecked || selectMode ? (\n                                <Selection checked={isChecked}>\n                                    <SelectionActions>\n                                        <SelectCellsBtn\n                                            selectionType={SelectCellsBtnType.ONLY}\n                                            text={t('items-list-row.select-only')}\n                                            record={item.whoAmI}\n                                            size=\"small\"\n                                        />\n                                        <SelectCellsBtn\n                                            selectionType={SelectCellsBtnType.ALL}\n                                            text={t('items-list-row.select-all')}\n                                            record={item.whoAmI}\n                                            size=\"small\"\n                                        />\n                                    </SelectionActions>\n                                    {isChecked && (\n                                        <CheckedIconWrapper className=\"checked-icon\">\n                                            <CheckCircleFilled />\n                                        </CheckedIconWrapper>\n                                    )}\n                                </Selection>\n                            ) : (\n                                <Actions className=\"actions\">\n                                    <Tooltip title={t('global.select')} key=\"select\">\n                                        <Button shape=\"circle\" icon={<CheckOutlined />} onClick={_handleSelect} />\n                                    </Tooltip>\n                                    <Tooltip title={t('global.edit')} key=\"edit\">\n                                        <EditRecordBtn shape={'circle'} record={item.whoAmI} />\n                                    </Tooltip>\n                                    {canDeleteRecord ? (\n                                        <Tooltip title={t('global.delete')} key=\"delete\">\n                                            <Button shape=\"circle\" icon={<DeleteOutlined />} onClick={_handleDelete} />\n                                        </Tooltip>\n                                    ) : (\n                                        // Keep this empty div for styling purpose\n                                        <div></div>\n                                    )}\n                                </Actions>\n                            )}\n                        </ActionsWrapper>\n                    </ImageWrapper>\n                }\n            >\n                <Card.Meta\n                    title={\n                        <Paragraph\n                            ellipsis={{rows: 1, tooltip: true}}\n                            style={{marginBottom: 0, fontSize: previewSize === PreviewSize.small ? '.8em' : '1em'}}\n                        >\n                            {item.whoAmI.label || item.whoAmI.id}\n                        </Paragraph>\n                    }\n                />\n            </Item>\n        </>\n    );\n}\n\nexport default ItemTileDisplay;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport ItemTileDisplay from './ItemTileDisplay';\nexport default ItemTileDisplay;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {Spin} from 'antd';\nimport useSearchReducer from 'hooks/useSearchReducer';\nimport React from 'react';\nimport styled from 'styled-components';\nimport themingVar from '../../../themingVar';\nimport LibraryItemsListPagination from '../LibraryItemsListPagination';\nimport ItemTileDisplay from './ItemTileDisplay';\n\nconst LoadingWrapper = styled.div`\n    height: 30rem;\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`;\n\nconst Wrapper = styled.div`\n    grid-area: data;\n    height: 100%;\n    overflow-y: scroll;\n    border-radius: 0.25rem 0.25rem 0 0;\n    border-bottom: none;\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    justify-content: space-evenly;\n    align-content: flex-start;\n`;\n\nconst Footer = styled.div`\n    grid-area: pagination;\n    display: flex;\n    justify-content: space-around;\n    border: 1px solid ${themingVar['@divider-color']};\n    padding: 0.5rem;\n`;\n\nfunction TileDisplay(): JSX.Element {\n    const {state: searchState} = useSearchReducer();\n    return (\n        <>\n            <Wrapper>\n                {searchState.loading ? (\n                    <LoadingWrapper>\n                        <Spin size=\"large\" />\n                    </LoadingWrapper>\n                ) : (\n                    <>\n                        {searchState.records.map(record => (\n                            <ItemTileDisplay key={record.whoAmI.id} item={record} />\n                        ))}\n                    </>\n                )}\n            </Wrapper>\n\n            <Footer>\n                <LibraryItemsListPagination />\n            </Footer>\n        </>\n    );\n}\n\nexport default TileDisplay;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport TileDisplay from './TileDisplay';\nexport default TileDisplay;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport React from 'react';\nimport {ViewTypes} from '_gqlTypes/globalTypes';\nimport Table from '../LibraryItemsListTable';\nimport TileDisplay from '../TileDisplay';\nimport useSearchReducer from 'hooks/useSearchReducer';\n\nfunction DisplayTypeSelector(): JSX.Element {\n    const {state: searchState} = useSearchReducer();\n\n    switch (searchState.display.type) {\n        case ViewTypes.list:\n            return <Table />;\n        case ViewTypes.timeline:\n            return <div>Not supported yet</div>;\n        case ViewTypes.cards:\n        default:\n            return <TileDisplay />;\n    }\n}\n\nexport default DisplayTypeSelector;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport DisplayTypeSelector from './DisplayTypeSelector';\nexport default DisplayTypeSelector;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {defaultLinkAttributeFilterFormat} from 'constants/constants';\nimport {checkTypeIsLink} from 'utils';\nimport {AttributeType} from '_gqlTypes/globalTypes';\nimport {\n    AttributeConditionFilter,\n    FilterType,\n    IAttribute,\n    IFilter,\n    IFilterAttribute,\n    IFilterLibrary,\n    IFilterTree,\n    IQueryFilter,\n    TreeConditionFilter\n} from '_types/types';\n\nexport const getFiltersFromRequest = (\n    queryFilters: IQueryFilter[],\n    library: string,\n    attributes: IAttribute[]\n): IFilter[] => {\n    let filters: IFilter[] = [];\n\n    for (const queryFilter of queryFilters) {\n        const isConditionWithNoValue = queryFilter.condition === 'IS_EMPTY' || queryFilter.condition === 'IS_NOT_EMPTY';\n        if (queryFilter.value || isConditionWithNoValue) {\n            const splitKey = queryFilter.field.split('.');\n\n            const filter: IFilter = {\n                type: queryFilter.condition in TreeConditionFilter ? FilterType.TREE : FilterType.ATTRIBUTE,\n                index: filters.length,\n                key: queryFilter.field,\n                value: !isConditionWithNoValue\n                    ? {\n                          value:\n                              queryFilter.condition === AttributeConditionFilter.BETWEEN\n                                  ? JSON.parse(queryFilter.value)\n                                  : queryFilter.value\n                      }\n                    : null,\n                active: true,\n                condition: AttributeConditionFilter[queryFilter.condition] || TreeConditionFilter[queryFilter.condition]\n            };\n\n            // Get root attribute by first key part\n            const rootAttribute = attributes.find(attr => attr.library === library && attr.id === splitKey[0]);\n\n            if (rootAttribute) {\n                if (rootAttribute.type === AttributeType.simple || rootAttribute.type === AttributeType.advanced) {\n                    (filter as IFilterAttribute).attribute = rootAttribute;\n                }\n\n                if (checkTypeIsLink(rootAttribute.type)) {\n                    const [, linkedAttributeId] = splitKey;\n                    if (linkedAttributeId) {\n                        const linkedAttribute = attributes.find(\n                            attr => attr.library === rootAttribute?.linkedLibrary?.id && attr.id === linkedAttributeId\n                        );\n\n                        (filter as IFilterAttribute).attribute = {\n                            ...linkedAttribute,\n                            parentAttribute: {...rootAttribute, format: defaultLinkAttributeFilterFormat}\n                        };\n                    } else {\n                        (filter as IFilterAttribute).attribute = rootAttribute;\n                    }\n                }\n\n                if (rootAttribute.type === AttributeType.tree) {\n                    const [, libraryId, linkedTreeAttribute] = splitKey;\n\n                    if (!libraryId && !linkedTreeAttribute) {\n                        // Only root attribute => search on tree\n                        (filter as IFilterAttribute).attribute = {\n                            ...rootAttribute,\n                            format: defaultLinkAttributeFilterFormat\n                        };\n                    } else if (libraryId && !linkedTreeAttribute) {\n                        // Search on tree library\n                        filter.type = FilterType.LIBRARY;\n                        (filter as IFilterLibrary).parentAttribute = {\n                            ...rootAttribute,\n                            format: defaultLinkAttributeFilterFormat\n                        };\n                        (filter as IFilterLibrary).library = {\n                            id: libraryId,\n                            label:\n                                rootAttribute.linkedTree.libraries.filter(l => l.library.id === libraryId)?.[0].library\n                                    .label ?? null\n                        };\n                    } else {\n                        // Search on linked attribute through tree attribute\n                        const linkedAttribute = attributes.find(\n                            attr => attr.library === libraryId && attr.id === linkedTreeAttribute\n                        );\n\n                        (filter as IFilterAttribute).attribute = linkedAttribute;\n                        (filter as IFilterAttribute).parentTreeLibrary = {\n                            ...filter,\n                            type: FilterType.LIBRARY,\n                            library: {\n                                id: libraryId,\n                                label:\n                                    rootAttribute.linkedTree.libraries.filter(l => l.library.id === libraryId)?.[0]\n                                        .library.label ?? null\n                            },\n                            parentAttribute: {...rootAttribute, format: defaultLinkAttributeFilterFormat}\n                        };\n                    }\n                }\n            } else if (queryFilter.condition in TreeConditionFilter) {\n                (filter as IFilterTree).tree = {id: queryFilter.treeId};\n            }\n\n            filters = [...filters, filter];\n        }\n    }\n\n    return filters;\n};\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {RecordFilterCondition, RecordFilterOperator} from '_gqlTypes/globalTypes';\nimport {\n    AttributeConditionFilter,\n    IFilter,\n    IFilterTree,\n    IQueryFilter,\n    ThroughConditionFilter\n} from '../../../_types/types';\n\nexport const getRequestFromFilters = (filters: IFilter[]): IQueryFilter[] => {\n    const queryFilters = filters\n        .filter(f => f.active)\n        .reduce((acc, filter) => {\n            let queryFilter: IQueryFilter[] = [];\n\n            if (filter.condition === ThroughConditionFilter.THROUGH) {\n                filter.condition = AttributeConditionFilter.EQUAL;\n            }\n\n            if (filter.value === null) {\n                queryFilter = [\n                    {\n                        field: filter.condition in AttributeConditionFilter ? filter.key : null,\n                        condition: RecordFilterCondition[filter.condition],\n                        treeId: (filter as IFilterTree).tree?.id\n                    }\n                ];\n            } else if (typeof filter.value.value === 'string' && filter.value.value.match(/\\n/g)) {\n                const values = filter.value.value.split('\\n').filter(Boolean);\n\n                queryFilter.push({operator: RecordFilterOperator.OPEN_BRACKET});\n\n                for (const v of values) {\n                    queryFilter.push({\n                        field: filter.condition in AttributeConditionFilter ? filter.key : null,\n                        value: v,\n                        condition: RecordFilterCondition[filter.condition]\n                    });\n\n                    queryFilter.push({operator: RecordFilterOperator.OR});\n                }\n\n                queryFilter.pop(); // delete last OR operator\n                queryFilter.push({operator: RecordFilterOperator.CLOSE_BRACKET});\n            } else {\n                queryFilter = [\n                    {\n                        field: filter.condition in AttributeConditionFilter ? filter.key : null,\n                        value:\n                            filter.condition === AttributeConditionFilter.BETWEEN\n                                ? JSON.stringify(filter.value.value)\n                                : filter?.value?.value.toString(),\n                        condition: RecordFilterCondition[filter.condition],\n                        treeId: (filter as IFilterTree).tree?.id\n                    }\n                ];\n            }\n\n            return acc.concat(...queryFilter, {operator: RecordFilterOperator.AND});\n        }, [] as IQueryFilter[]);\n\n    queryFilters.pop(); // delete last AND operator\n\n    return queryFilters;\n};\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {IGetRecordsFromLibraryQueryElement} from 'graphQL/queries/records/getRecordsFromLibraryQueryTypes';\nimport {isArray} from 'lodash';\nimport objectPath from 'object-path';\nimport {AttributeFormat, AttributeType} from '_gqlTypes/globalTypes';\nimport {IField, IItem} from '../../_types/types';\n\nconst _extractValueFromParent = (field: IField, linkValue: any) => {\n    const linkedElement = field.parentAttributeData.type === AttributeType.tree ? linkValue.record : linkValue;\n    return linkedElement[field.id];\n};\n\nconst manageFields = (fields: IField[], item: IGetRecordsFromLibraryQueryElement) => {\n    return fields.reduce((acc, field) => {\n        const key: string = field.key;\n\n        if (field.format === AttributeFormat.extended) {\n            const [attributeId, ...path] = key.split('.');\n\n            try {\n                // If we ask for the whole extended attribute, just return the json\n                if (!path.length) {\n                    acc[key] = item[attributeId];\n                    return acc;\n                }\n\n                // If we ask for a specific field, parse json and return value\n                const attributeExtendedContent = JSON.parse(item[attributeId]);\n                if (attributeExtendedContent) {\n                    acc[key] = objectPath.get(attributeExtendedContent, path);\n                    return acc;\n                }\n            } catch (e) {\n                console.error(e);\n\n                acc[key] = 'error';\n                return acc;\n            }\n        }\n\n        switch (field.type) {\n            case AttributeType.simple_link:\n            case AttributeType.advanced_link:\n                if (field?.parentAttributeData && item[field.parentAttributeData.id]) {\n                    let value = item[field.parentAttributeData.id][field.id];\n\n                    if (isArray(item[field.parentAttributeData.id])) {\n                        value = item[field.parentAttributeData.id].map(tree => tree.record[field.id]);\n                    }\n\n                    if (Array.isArray(value)) {\n                        value = value.shift();\n                    }\n\n                    acc[key] = value;\n                } else {\n                    acc[key] = item[field.id];\n                }\n                return acc;\n            case AttributeType.tree:\n                if (field?.parentAttributeData && item[field.parentAttributeData.id]) {\n                    acc[key] = item[field.parentAttributeData.id][field.id];\n                } else {\n                    acc[key] = item[field.id];\n                }\n\n                return acc;\n            case AttributeType.simple:\n            case AttributeType.advanced:\n            default:\n                // Simple field, not via link or tree attribute\n                if (!field?.parentAttributeData) {\n                    acc[key] = item[field.id];\n                    return acc;\n                }\n\n                // Attribute via link or tree, but no value\n                if (!item[field.parentAttributeData.id]) {\n                    acc[key] = null;\n                    return acc;\n                }\n\n                // Parent attribute has multiple values, value is an array\n                if (isArray(item[field.parentAttributeData.id])) {\n                    acc[key] = item[field.parentAttributeData.id].map(linkValue => {\n                        return _extractValueFromParent(field, linkValue);\n                    });\n                    return acc;\n                }\n\n                // Parent attribute has not multiple values, value is not an array\n                const linkValue = item[field.parentAttributeData.id];\n                acc[key] = _extractValueFromParent(field, linkValue);\n\n                return acc;\n        }\n    }, {});\n};\n\ninterface IManageItemsProps {\n    items: IGetRecordsFromLibraryQueryElement[];\n    fields: IField[];\n}\n\n/**\n * Convert search result to a list of items usable by LibraryItemsList\n */\nexport const manageItems = ({items, fields}: IManageItemsProps): IItem[] => {\n    const resultItems: IItem[] = items.map((item, index) => {\n        const itemFields = manageFields(fields, item);\n\n        const resultItem: IItem = {\n            index: index + 1,\n            whoAmI: {...item.whoAmI},\n            fields: itemFields\n        };\n\n        return resultItem;\n    });\n\n    return resultItems;\n};\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {AppstoreFilled, CalendarOutlined, MenuOutlined} from '@ant-design/icons';\nimport React from 'react';\nimport {ViewTypes} from '_gqlTypes/globalTypes';\n\ninterface IIconViewTypeProps {\n    style?: React.CSSProperties;\n    type: ViewTypes;\n}\n\nconst IconViewType = ({type, style}: IIconViewTypeProps) => {\n    switch (type) {\n        case ViewTypes.list:\n            return <MenuOutlined style={style} />;\n        case ViewTypes.cards:\n            return <AppstoreFilled style={style} />;\n        case ViewTypes.timeline:\n            return <CalendarOutlined style={style} />;\n    }\n};\n\nexport default IconViewType;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {AppstoreFilled, DownOutlined, MenuOutlined} from '@ant-design/icons';\nimport {Button, Dropdown, Menu} from 'antd';\nimport useSearchReducer from 'hooks/useSearchReducer';\nimport {SearchActionTypes} from 'hooks/useSearchReducer/searchReducer';\nimport React, {useState} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport styled from 'styled-components';\nimport {ViewSizes, ViewTypes} from '_gqlTypes/globalTypes';\nimport IconViewType from '../../IconViewType/IconViewType';\n\nconst MenuWrapper = styled(Menu)`\n    min-width: 11em;\n`;\n\nconst DisplaySizeWrapper = styled(Menu.Item)`\n    display: flex;\n    justify-content: space-between;\n`;\n\nfunction DisplayOptions(): JSX.Element {\n    const {t} = useTranslation();\n\n    const {state: searchState, dispatch: searchDispatch} = useSearchReducer();\n    const [visible, setVisible] = useState<boolean>(false);\n    const sizes = {\n        [ViewSizes.SMALL]: t('items_list.display.small'),\n        [ViewSizes.MEDIUM]: t('items_list.display.medium'),\n        [ViewSizes.BIG]: t('items_list.display.big')\n    };\n\n    enum SizeAction {\n        LESS = 'LESS',\n        MORE = 'MORE'\n    }\n\n    const _handleChangeType = (type: ViewTypes) => {\n        searchDispatch({\n            type: SearchActionTypes.SET_DISPLAY,\n            display: {type, size: searchState.display.size}\n        });\n    };\n\n    const _handleChangeSize = (action: SizeAction) => {\n        let idx = Object.keys(sizes).indexOf(searchState.display.size);\n        idx = action === SizeAction.LESS ? idx - 1 : idx + 1;\n        idx = idx < 0 ? 0 : idx > 2 ? 2 : idx;\n\n        searchDispatch({\n            type: SearchActionTypes.SET_DISPLAY,\n            display: {type: searchState.display.type, size: ViewSizes[Object.keys(sizes)[idx]]}\n        });\n    };\n\n    const _handleVisibleChange = () => setVisible(!visible);\n\n    return (\n        <Dropdown\n            visible={visible}\n            onVisibleChange={_handleVisibleChange}\n            trigger={['click']}\n            placement=\"bottomRight\"\n            overlay={\n                <MenuWrapper>\n                    <DisplaySizeWrapper>\n                        <Button\n                            shape=\"circle\"\n                            disabled={searchState.display.size === ViewSizes.SMALL}\n                            onClick={() => _handleChangeSize(SizeAction.LESS)}\n                            size=\"small\"\n                        >\n                            -\n                        </Button>\n                        {` ${sizes[searchState.display.size]} `}\n                        <Button\n                            shape=\"circle\"\n                            disabled={searchState.display.size === ViewSizes.BIG}\n                            onClick={() => _handleChangeSize(SizeAction.MORE)}\n                            size=\"small\"\n                        >\n                            +\n                        </Button>\n                    </DisplaySizeWrapper>\n                    <Menu.Divider />\n                    <Menu.Item onClick={() => _handleChangeType(ViewTypes.list)} icon={<MenuOutlined />}>\n                        {t('view.type-list')}\n                    </Menu.Item>\n                    <Menu.Item onClick={() => _handleChangeType(ViewTypes.cards)} icon={<AppstoreFilled />}>\n                        {t('view.type-cards')}\n                    </Menu.Item>\n                </MenuWrapper>\n            }\n        >\n            <Button>\n                <IconViewType type={searchState.display.type} />\n                <DownOutlined />\n            </Button>\n        </Dropdown>\n    );\n}\n\nexport default DisplayOptions;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport DisplayOptions from './DisplayOptions';\nexport default DisplayOptions;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {SettingOutlined} from '@ant-design/icons';\nimport {Button, Dropdown, Menu} from 'antd';\nimport AvailableSoon from 'components/shared/AvailableSoon';\nimport React, {useState} from 'react';\nimport {useTranslation} from 'react-i18next';\n\nfunction MenuItemActions(): JSX.Element {\n    const {t} = useTranslation();\n\n    const [visible, setVisible] = useState<boolean>(false);\n\n    const menu = (\n        <Menu>\n            <Menu.Item disabled>\n                {t('items_list.table.header-cell-menu.sort-advance')}\n                <AvailableSoon />\n            </Menu.Item>\n            <Menu.Item disabled>\n                {t('items_list.table.header-cell-menu.regroup')}\n                <AvailableSoon />\n            </Menu.Item>\n        </Menu>\n    );\n\n    const _handleVisibleChange = () => setVisible(!visible);\n\n    return (\n        <>\n            <Dropdown visible={visible} onVisibleChange={_handleVisibleChange} trigger={['click']} overlay={menu}>\n                <Button>\n                    <SettingOutlined />\n                </Button>\n            </Dropdown>\n        </>\n    );\n}\n\nexport default MenuItemActions;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport MenuItemActions from './MenuItemActions';\nexport default MenuItemActions;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {DownOutlined} from '@ant-design/icons';\nimport {Dropdown, Menu, Button} from 'antd';\nimport {SelectionModeContext} from 'context';\nimport {useLang} from 'hooks/LangHook/LangHook';\nimport useSearchReducer from 'hooks/useSearchReducer';\nimport React, {useContext} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {setSearchSelection, setSelection} from 'redux/selection';\nimport {useAppDispatch, useAppSelector} from 'redux/store';\nimport {localizedTranslation} from 'utils';\nimport {SharedStateSelectionType} from '_types/types';\n\nfunction MenuSelection(): JSX.Element {\n    const {t} = useTranslation();\n\n    const selectionMode = useContext(SelectionModeContext);\n\n    const {state: searchState} = useSearchReducer();\n    const {selectionState} = useAppSelector(state => ({\n        selectionState: state.selection,\n        display: state.display\n    }));\n    const dispatch = useAppDispatch();\n    const [{lang}] = useLang();\n\n    const selectAll = () => {\n        if (!selectionMode) {\n            dispatch(\n                setSelection({\n                    type: SharedStateSelectionType.search,\n                    selected: [],\n                    allSelected: true\n                })\n            );\n        }\n    };\n\n    const selectVisible = () => {\n        let selected = [...selectionState.selection.selected];\n\n        if (searchState.records) {\n            for (const record of searchState.records) {\n                selected = [\n                    ...selected,\n                    {\n                        id: record.whoAmI.id,\n                        library: record.whoAmI.library.id,\n                        label: localizedTranslation(record.whoAmI.label, lang)\n                    }\n                ];\n            }\n        }\n\n        if (selectionMode) {\n            dispatch(\n                setSearchSelection({\n                    type: SharedStateSelectionType.search,\n                    selected,\n                    allSelected: false\n                })\n            );\n        } else {\n            dispatch(\n                setSelection({\n                    type: SharedStateSelectionType.search,\n                    selected,\n                    allSelected: false\n                })\n            );\n        }\n    };\n\n    return (\n        <span data-testid=\"dropdown-menu-selection\">\n            <Dropdown\n                overlay={\n                    <Menu>\n                        {!selectionMode && (\n                            <Menu.Item onClick={selectAll}>\n                                {t('items-menu-dropdown.select-all', {nb: searchState.totalCount})}\n                            </Menu.Item>\n                        )}\n                        <Menu.Item onClick={selectVisible}>\n                            {t('items-menu-dropdown.select-visible', {nb: searchState.records.length})}\n                        </Menu.Item>\n                    </Menu>\n                }\n            >\n                <Button type={'text'} icon={<DownOutlined />}>\n                    {t('items-list-row.nb-elements', {\n                        nbItems: searchState.totalCount\n                    })}\n                </Button>\n            </Dropdown>\n        </span>\n    );\n}\n\nexport default MenuSelection;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport MenuSelection from './MenuSelection';\nexport default MenuSelection;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport gql from 'graphql-tag';\nimport {IGetViewListElement, IGetViewListSort} from 'graphQL/queries/views/getViewsListQuery';\nimport {RecordFilterCondition, RecordFilterOperator, ViewSizes, ViewTypes} from '_gqlTypes/globalTypes';\nimport {ISystemTranslation} from '../../../_types/types';\n\nexport interface IAddViewMutation {\n    saveView: IGetViewListElement;\n}\n\nexport interface IAddViewMutationVariablesFilter {\n    field?: string;\n    value?: string;\n    condition?: RecordFilterCondition;\n    operator?: RecordFilterOperator;\n    treeId?: string;\n}\n\nexport interface IAddViewMutationVariablesSetting {\n    name: string;\n    value: any;\n}\n\nexport interface IAddViewMutationVariablesView {\n    id?: string;\n    library: string;\n    label: ISystemTranslation;\n    display: {size: ViewSizes; type: ViewTypes};\n    shared: boolean;\n    description?: ISystemTranslation;\n    color?: string;\n    filters?: IAddViewMutationVariablesFilter[];\n    sort?: IGetViewListSort;\n    settings?: IAddViewMutationVariablesSetting[];\n}\n\nexport interface IAddViewMutationVariables {\n    view: IAddViewMutationVariablesView;\n}\n\nconst addViewMutation = gql`\n    mutation ADD_VIEW($view: ViewInput!) {\n        saveView(view: $view) {\n            id\n        }\n    }\n`;\n\nexport default addViewMutation;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport DateBetweenFilter from './DateBetweenFilter';\nexport default DateBetweenFilter;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {DatePicker} from 'antd';\nimport moment from 'moment';\nimport React from 'react';\nimport themingVar from '../../../../../themingVar';\nimport {IDateRangeValue, IFilter} from '../../../../../_types/types';\n\ninterface IDateBetweenFilterProps {\n    filter: IFilter;\n    updateFilterValue: (newFilterValue: IFilter['value']) => void;\n}\n\nconst DateBetweenFilter = ({filter, updateFilterValue}: IDateBetweenFilterProps) => {\n    const dateRangeValue: IDateRangeValue =\n        (filter?.value?.value as IDateRangeValue)?.from && (filter?.value?.value as IDateRangeValue)?.to\n            ? (filter.value.value as IDateRangeValue)\n            : null;\n    const _handleChange = (value: [moment.Moment, moment.Moment] | null) => {\n        if (!value) {\n            updateFilterValue(null);\n            return;\n        }\n\n        // Force time to 00:00:00\n        const [dateFrom, dateTo] = value;\n        dateFrom.utcOffset(0).startOf('day');\n        dateTo.utcOffset(0).startOf('day');\n\n        updateFilterValue({...filter.value, value: {from: String(dateFrom.unix()), to: String(dateTo.unix())}});\n    };\n\n    const momentValue: [moment.Moment, moment.Moment] = dateRangeValue\n        ? [moment(Number(dateRangeValue.from) * 1000), moment(Number(dateRangeValue.to) * 1000)]\n        : null;\n\n    return (\n        <DatePicker.RangePicker\n            popupStyle={{background: themingVar['@default-bg']}}\n            disabled={!filter.active}\n            onChange={_handleChange}\n            value={momentValue}\n        />\n    );\n};\n\nexport default DateBetweenFilter;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {Button, Modal} from 'antd';\nimport {PrimaryBtn} from 'components/app/StyledComponent/PrimaryBtn';\nimport React, {ReactNode, useState} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {RecordIdentity} from '_gqlTypes/RecordIdentity';\nimport {ISystemTranslation} from '../../../_types/types';\nimport SelectTreeNode from '../SelectTreeNode';\n\ninterface ISelectTreeNodeModalProps {\n    tree: {id: string; label?: ISystemTranslation | null};\n    selectedNodeKey?: string;\n    visible: boolean;\n    onSubmit: (treeNode: ITreeNode) => void;\n    onClose: () => void;\n}\n\nexport interface ITreeNode {\n    title: string | ReactNode;\n    id: string;\n    key: string | null;\n    children: ITreeNode[];\n}\nexport interface ITreeNodeWithRecord extends ITreeNode {\n    record: RecordIdentity;\n    children: ITreeNodeWithRecord[];\n}\n\nexport default function SelectTreeNodeModal({\n    tree,\n    selectedNodeKey,\n    onSubmit,\n    visible,\n    onClose\n}: ISelectTreeNodeModalProps): JSX.Element {\n    const {t} = useTranslation();\n    const [selectedNode, setSelectedNode] = useState<ITreeNode>({\n        id: selectedNodeKey,\n        key: selectedNodeKey,\n        title: '',\n        children: []\n    });\n\n    const handleCancel = () => {\n        onClose();\n    };\n\n    const handleApply = () => {\n        onSubmit(selectedNode);\n        onClose();\n    };\n\n    const onSelect = (node: ITreeNodeWithRecord, selected: boolean) => {\n        setSelectedNode(!selected ? undefined : node);\n    };\n\n    return (\n        <Modal\n            visible={visible}\n            onCancel={handleCancel}\n            title={t('tree-node-selection.title')}\n            width=\"70rem\"\n            bodyStyle={{maxHeight: '80vh', overflowY: 'auto'}}\n            centered\n            footer={[\n                <Button key=\"cancel\" onClick={handleCancel}>\n                    {t('global.cancel')}\n                </Button>,\n                <PrimaryBtn key=\"add\" onClick={handleApply}>\n                    {t('global.apply')}\n                </PrimaryBtn>\n            ]}\n            destroyOnClose\n        >\n            <SelectTreeNode tree={tree} onSelect={onSelect} selectedNode={selectedNode.key} />\n        </Modal>\n    );\n}\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {DatePicker} from 'antd';\nimport moment from 'moment';\nimport React from 'react';\nimport themingVar from '../../../../../themingVar';\nimport {IFilter} from '../../../../../_types/types';\n\ninterface IDateFilterProps {\n    filter: IFilter;\n    updateFilterValue: (newFilterValue: IFilter['value']) => void;\n}\n\nconst DateFilter = ({filter, updateFilterValue}: IDateFilterProps) => {\n    const _handleChange = (value: moment.Moment | null) => {\n        if (!value) {\n            updateFilterValue(null);\n            return;\n        }\n\n        // Force time to 00:00:00\n        value.utcOffset(0).startOf('day');\n\n        updateFilterValue({...filter.value, value: value.unix()});\n    };\n\n    const momentValue = filter?.value?.value ? moment(Number(filter.value.value) * 1000) : null;\n\n    return (\n        <DatePicker\n            popupStyle={{background: themingVar['@default-bg']}}\n            disabled={!filter.active}\n            onOk={_handleChange}\n            onChange={_handleChange}\n            value={momentValue}\n        />\n    );\n};\n\nexport default DateFilter;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport DateFilter from './DateFilter';\nexport default DateFilter;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport NumericFilter from './NumericFilter';\nexport default NumericFilter;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {Input} from 'antd';\nimport React from 'react';\nimport {IFilter} from '../../../../../_types/types';\n\ninterface INumericFilterProps {\n    filter: IFilter;\n    updateFilterValue: (newFilterValue: IFilter['value']) => void;\n}\n\nconst NumericFilter = ({filter, updateFilterValue}: INumericFilterProps) => {\n    const _handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const newValue = Number(event.target.value ?? 0);\n        updateFilterValue({...filter.value, value: newValue});\n    };\n\n    return (\n        <Input type=\"number\" disabled={!filter.active} value={Number(filter.value.value)} onChange={_handleChange} />\n    );\n};\n\nexport default NumericFilter;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {Input} from 'antd';\nimport React from 'react';\nimport styled from 'styled-components';\nimport themingVar from 'themingVar';\nimport {IFilter} from '../../../../../_types/types';\n\nconst Text = styled(Input.TextArea)`\n    background: ${themingVar['@default-bg']} 0% 0% no-repeat padding-box;\n    box-shadow: ${themingVar['@leav-small-shadow']};\n    border: ${themingVar['@leav-border']};\n    border-radius: 3px;\n`;\n\ninterface ITextFilterProps {\n    filter: IFilter;\n    updateFilterValue: (newFilterValue: IFilter['value']) => void;\n}\n\nconst MAX_INPUT_ROWS = 5;\n\nconst TextFilter = ({filter, updateFilterValue}: ITextFilterProps) => {\n    const handleChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n        const newValue = (event.target.value ?? '').toString();\n\n        updateFilterValue({...filter.value, value: newValue});\n    };\n\n    const value = filter.value.value ? String(filter.value.value) : null;\n    const textRows = value ? value.split('\\n').length : 1;\n    const inputRows = textRows <= MAX_INPUT_ROWS ? textRows : MAX_INPUT_ROWS;\n\n    return (\n        <Text\n            disabled={!filter.active}\n            rows={inputRows}\n            value={value}\n            onChange={handleChange}\n            data-testid=\"filter-textarea\"\n        />\n    );\n};\n\nexport default TextFilter;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport TextFilter from './TextFilter';\nexport default TextFilter;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {DownOutlined} from '@ant-design/icons';\nimport {Button, ButtonProps, Typography} from 'antd';\nimport React, {ReactNode} from 'react';\n\ninterface IFilterDropdownButtonProps extends ButtonProps {\n    children?: ReactNode;\n    secondary?: boolean;\n}\n\nfunction FilterDropdownButton({children, secondary = false, ...buttonProps}: IFilterDropdownButtonProps): JSX.Element {\n    return (\n        <Button icon={<DownOutlined />} type=\"text\" style={{minWidth: '50%', padding: '0 .5em'}} {...buttonProps}>\n            <Typography.Text\n                ellipsis={{tooltip: true}}\n                type={secondary ? 'secondary' : null}\n                style={{width: 'calc(100% - 1em)'}}\n            >\n                {children}\n            </Typography.Text>\n        </Button>\n    );\n}\n\nexport default FilterDropdownButton;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport FilterDropdownButton from './FilterDropdownButton';\nexport default FilterDropdownButton;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {TFunction} from 'i18next';\nimport {AttributeFormat, RecordFilterCondition} from '_gqlTypes/globalTypes';\nimport {\n    AttributeConditionFilter,\n    AttributeConditionType,\n    FilterType,\n    IFilter,\n    IFilterAttribute,\n    OperatorFilter,\n    TreeConditionFilter\n} from '../../../_types/types';\n\nexport interface IFilterConditionOption<T> {\n    text: string;\n    value: T;\n    textByFormat?: {[key in AttributeFormat]?: string};\n}\n\nconst allowedConditionByFormat: {[format in AttributeFormat]: AttributeConditionType[]} = {\n    [AttributeFormat.text]: [\n        AttributeConditionFilter.CONTAINS,\n        AttributeConditionFilter.NOT_CONTAINS,\n        AttributeConditionFilter.EQUAL,\n        AttributeConditionFilter.NOT_EQUAL,\n        AttributeConditionFilter.BEGIN_WITH,\n        AttributeConditionFilter.END_WITH,\n        AttributeConditionFilter.IS_EMPTY,\n        AttributeConditionFilter.IS_NOT_EMPTY\n    ],\n    [AttributeFormat.extended]: [\n        AttributeConditionFilter.CONTAINS,\n        AttributeConditionFilter.NOT_CONTAINS,\n        AttributeConditionFilter.EQUAL,\n        AttributeConditionFilter.NOT_EQUAL,\n        AttributeConditionFilter.BEGIN_WITH,\n        AttributeConditionFilter.END_WITH,\n        AttributeConditionFilter.IS_EMPTY,\n        AttributeConditionFilter.IS_NOT_EMPTY\n    ],\n    [AttributeFormat.encrypted]: [AttributeConditionFilter.IS_EMPTY, AttributeConditionFilter.IS_NOT_EMPTY],\n    [AttributeFormat.numeric]: [\n        AttributeConditionFilter.EQUAL,\n        AttributeConditionFilter.NOT_EQUAL,\n        AttributeConditionFilter.GREATER_THAN,\n        AttributeConditionFilter.LESS_THAN,\n        AttributeConditionFilter.IS_EMPTY,\n        AttributeConditionFilter.IS_NOT_EMPTY\n    ],\n    [AttributeFormat.boolean]: [AttributeConditionFilter.EQUAL, AttributeConditionFilter.NOT_EQUAL],\n    [AttributeFormat.date]: [\n        AttributeConditionFilter.EQUAL,\n        AttributeConditionFilter.NOT_EQUAL,\n        AttributeConditionFilter.GREATER_THAN,\n        AttributeConditionFilter.LESS_THAN,\n        AttributeConditionFilter.IS_EMPTY,\n        AttributeConditionFilter.IS_NOT_EMPTY,\n        AttributeConditionFilter.TODAY,\n        AttributeConditionFilter.TOMORROW,\n        AttributeConditionFilter.YESTERDAY,\n        AttributeConditionFilter.LAST_MONTH,\n        AttributeConditionFilter.NEXT_MONTH,\n        AttributeConditionFilter.BETWEEN\n    ],\n    [AttributeFormat.date_range]: [\n        AttributeConditionFilter.CONTAINS,\n        AttributeConditionFilter.START_ON,\n        AttributeConditionFilter.START_AFTER,\n        AttributeConditionFilter.START_BEFORE,\n        AttributeConditionFilter.END_ON,\n        AttributeConditionFilter.END_AFTER,\n        AttributeConditionFilter.END_BEFORE,\n        AttributeConditionFilter.IS_EMPTY,\n        AttributeConditionFilter.IS_NOT_EMPTY\n    ]\n};\n\nexport function getAttributeConditionOptions(t: TFunction): Array<IFilterConditionOption<AttributeConditionType>> {\n    return [\n        {text: t('filters.contains'), value: AttributeConditionFilter.CONTAINS},\n        {text: t('filters.not-contains'), value: AttributeConditionFilter.NOT_CONTAINS},\n        {text: t('filters.equal'), value: AttributeConditionFilter.EQUAL},\n        {text: t('filters.not-equal'), value: AttributeConditionFilter.NOT_EQUAL},\n        {text: t('filters.begin-with'), value: AttributeConditionFilter.BEGIN_WITH},\n        {text: t('filters.end-with'), value: AttributeConditionFilter.END_WITH},\n        {\n            text: t('filters.greater-than'),\n            textByFormat: {[AttributeFormat.date]: t('filters.before')},\n            value: AttributeConditionFilter.GREATER_THAN\n        },\n        {\n            text: t('filters.less-than'),\n            textByFormat: {[AttributeFormat.date]: t('filters.after')},\n            value: AttributeConditionFilter.LESS_THAN\n        },\n        {text: t('filters.today'), value: AttributeConditionFilter.TODAY},\n        {text: t('filters.tomorrow'), value: AttributeConditionFilter.TOMORROW},\n        {text: t('filters.yesterday'), value: AttributeConditionFilter.YESTERDAY},\n        {text: t('filters.last-month'), value: AttributeConditionFilter.LAST_MONTH},\n        {text: t('filters.next-month'), value: AttributeConditionFilter.NEXT_MONTH},\n        {text: t('filters.between'), value: AttributeConditionFilter.BETWEEN},\n        {text: t('filters.start-on'), value: AttributeConditionFilter.START_ON},\n        {text: t('filters.start-after'), value: AttributeConditionFilter.START_AFTER},\n        {text: t('filters.start-before'), value: AttributeConditionFilter.START_BEFORE},\n        {text: t('filters.end-on'), value: AttributeConditionFilter.END_ON},\n        {text: t('filters.end-after'), value: AttributeConditionFilter.END_AFTER},\n        {text: t('filters.end-before'), value: AttributeConditionFilter.END_BEFORE},\n        {text: t('filters.is-empty'), value: AttributeConditionFilter.IS_EMPTY},\n        {text: t('filters.is-not-empty'), value: AttributeConditionFilter.IS_NOT_EMPTY},\n        {text: t('filters.values-count-equal'), value: AttributeConditionFilter.VALUES_COUNT_EQUAL},\n        {text: t('filters.values-count-greater-than'), value: AttributeConditionFilter.VALUES_COUNT_GREATER_THAN},\n        {text: t('filters.values-count-lower-than'), value: AttributeConditionFilter.VALUES_COUNT_LOWER_THAN},\n        {text: t('filters.through'), value: AttributeConditionFilter.THROUGH}\n    ];\n}\n\nexport function getTreeConditionOptions(t: TFunction): Array<IFilterConditionOption<TreeConditionFilter>> {\n    return [\n        {text: t('filters.classified-in'), value: TreeConditionFilter.CLASSIFIED_IN},\n        {text: t('filters.not-classified-in'), value: TreeConditionFilter.NOT_CLASSIFIED_IN}\n    ];\n}\n\nexport function getOperatorOptions(t: TFunction): Array<IFilterConditionOption<OperatorFilter>> {\n    return [\n        {text: t('filters.and'), value: OperatorFilter.AND},\n        {text: t('filters.or'), value: OperatorFilter.OR}\n    ];\n}\n\nexport const getConditionOptionsByType = (\n    filter: IFilter,\n    showThroughCondition: boolean,\n    t: TFunction\n): Array<IFilterConditionOption<AttributeConditionType>> => {\n    const _isValuesCountCondition = (condition: AttributeConditionType): boolean => {\n        return [\n            AttributeConditionFilter.VALUES_COUNT_EQUAL,\n            AttributeConditionFilter.VALUES_COUNT_GREATER_THAN,\n            AttributeConditionFilter.VALUES_COUNT_LOWER_THAN\n        ].includes(condition as RecordFilterCondition);\n    };\n\n    const attributeConditionOptions = getAttributeConditionOptions(t);\n\n    const conditionOptionsByType = attributeConditionOptions.filter(conditionOption => {\n        // \"Through\" condition\n        if (conditionOption.value === AttributeConditionFilter.THROUGH && showThroughCondition) {\n            return true;\n        }\n\n        // Filter on library (applied to tree attribute only) => show condition for text attribute\n        if (\n            filter.type === FilterType.LIBRARY &&\n            allowedConditionByFormat[AttributeFormat.text].includes(conditionOption.value)\n        ) {\n            return true;\n        }\n\n        // Regular attribute filter => show condition based on format + values count if multiple values is allowed\n        if (filter.type === FilterType.ATTRIBUTE) {\n            const attributeFilter = filter as IFilterAttribute;\n            if (\n                ((filter as IFilterAttribute).attribute?.format &&\n                    allowedConditionByFormat[attributeFilter.attribute.format]?.includes(conditionOption.value)) ||\n                (attributeFilter.attribute.isMultiple && _isValuesCountCondition(conditionOption.value))\n            ) {\n                return true;\n            }\n        }\n\n        return false;\n    });\n\n    return conditionOptionsByType;\n};\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport FilterTreeCondition from './FilterTreeCondition';\nexport default FilterTreeCondition;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {Dropdown, Menu} from 'antd';\nimport React from 'react';\nimport {useTranslation} from 'react-i18next';\nimport useSearchReducer from 'hooks/useSearchReducer';\nimport {TreeConditionFilter, IFilterTree} from '../../../../_types/types';\nimport {getTreeConditionOptions} from '../FiltersOptions';\nimport {SearchActionTypes} from 'hooks/useSearchReducer/searchReducer';\nimport FilterDropdownButton from '../FilterDropdownButton';\n\ninterface IFilterTreeConditionProps {\n    filter: IFilterTree;\n}\n\nconst FilterTreeCondition = ({filter}: IFilterTreeConditionProps) => {\n    const {t} = useTranslation();\n    const {state: searchState, dispatch: searchDispatch} = useSearchReducer();\n\n    const conditionOptions = getTreeConditionOptions(t);\n\n    const handleOperatorChange = (e: any) => {\n        const newFilters = searchState.filters.map(f => {\n            if (f.index === filter.index) {\n                return {\n                    ...filter,\n                    condition: TreeConditionFilter[e]\n                };\n            }\n\n            return f;\n        });\n\n        searchDispatch({type: SearchActionTypes.SET_FILTERS, filters: newFilters});\n    };\n\n    const menu = (\n        <Menu>\n            {conditionOptions.map(condition => (\n                <Menu.Item key={condition.value} onClick={() => handleOperatorChange(condition.value)}>\n                    {condition.text}\n                </Menu.Item>\n            ))}\n        </Menu>\n    );\n\n    return (\n        <Dropdown disabled={!filter.active} overlay={menu} trigger={['click']}>\n            <FilterDropdownButton data-testid=\"filter-condition-dropdown\">\n                {conditionOptions.filter(c => c.value === filter.condition)[0].text}\n            </FilterDropdownButton>\n        </Dropdown>\n    );\n};\n\nexport default FilterTreeCondition;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {AttributeConditionFilter, AttributeConditionType} from '_types/types';\n\nexport default (condition: AttributeConditionType): boolean => {\n    const noValueConditions: AttributeConditionType[] = [\n        AttributeConditionFilter.IS_EMPTY,\n        AttributeConditionFilter.IS_NOT_EMPTY,\n        AttributeConditionFilter.TODAY,\n        AttributeConditionFilter.TOMORROW,\n        AttributeConditionFilter.YESTERDAY,\n        AttributeConditionFilter.LAST_MONTH,\n        AttributeConditionFilter.NEXT_MONTH\n    ];\n\n    return noValueConditions.includes(condition);\n};\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {Switch} from 'antd';\nimport React from 'react';\nimport {IFilter} from '../../../../../_types/types';\n\ninterface IBooleanFilterProps {\n    filter: IFilter;\n    updateFilterValue: (newFilterValue: IFilter['value']) => void;\n}\n\nfunction BooleanFilter({filter, updateFilterValue}: IBooleanFilterProps): JSX.Element {\n    const _handleChange = (value: boolean) => {\n        updateFilterValue({...filter.value, value});\n    };\n\n    return (\n        <Switch\n            disabled={!filter.active}\n            data-test-id=\"filter-input-boolean\"\n            checked={!!filter.value.value}\n            onChange={_handleChange}\n        />\n    );\n}\n\nexport default BooleanFilter;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport BooleanFilter from './BooleanFilter';\nexport default BooleanFilter;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {Dropdown, Menu} from 'antd';\nimport BooleanFilter from 'components/LibraryItemsList/DisplayTypeSelector/FilterInput/BooleanFilter';\nimport {formatNotUsingCondition} from 'constants/constants';\nimport useSearchReducer from 'hooks/useSearchReducer';\nimport {SearchActionTypes} from 'hooks/useSearchReducer/searchReducer';\nimport React, {Fragment} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport styled from 'styled-components';\nimport {checkTypeIsLink} from 'utils';\nimport {AttributeFormat, AttributeType} from '_gqlTypes/globalTypes';\nimport {\n    AttributeConditionFilter,\n    AttributeConditionType,\n    FilterType,\n    IFilterAttribute,\n    IFilterLibrary\n} from '../../../../../_types/types';\nimport FilterDropdownButton from '../../FilterDropdownButton';\nimport {getConditionOptionsByType} from '../../FiltersOptions';\nimport mustHideValue from '../../mustHideValue';\nimport {getDefaultFilterValueByFormat} from '../Filter';\n\nconst BooleanWrapper = styled.span`\n    padding: 0 1rem;\n    height: 100%;\n    display: grid;\n    place-items: center;\n`;\n\ninterface IFilterAttributeConditionProps {\n    filter: IFilterAttribute | IFilterLibrary;\n    updateFilterValue: (newValue: any) => void;\n}\n\nconst FilterAttributeCondition = ({filter, updateFilterValue}: IFilterAttributeConditionProps) => {\n    const {t} = useTranslation();\n\n    const {state: searchState, dispatch: searchDispatch} = useSearchReducer();\n\n    const showthroughCondition =\n        ((filter as IFilterAttribute).attribute?.format === AttributeFormat.extended ||\n            filter.type === FilterType.LIBRARY ||\n            checkTypeIsLink((filter as IFilterAttribute).attribute?.type) ||\n            (filter as IFilterAttribute).attribute?.type === AttributeType.tree) &&\n        typeof (filter as IFilterAttribute).attribute?.parentAttribute === 'undefined' &&\n        typeof (filter as IFilterAttribute).parentTreeLibrary === 'undefined' &&\n        filter.condition !== AttributeConditionFilter.THROUGH;\n\n    const conditionOptionsByType = getConditionOptionsByType(filter, showthroughCondition, t);\n\n    const _handleConditionChange = (condition: AttributeConditionType) => {\n        const newFilters = searchState.filters.map(f => {\n            if (f.index === filter.index) {\n                let newValue = {...filter.value};\n\n                if (mustHideValue(condition)) {\n                    newValue = null;\n                } else if (\n                    newValue === null ||\n                    (typeof newValue?.value === 'object' && condition !== AttributeConditionFilter.BETWEEN)\n                ) {\n                    newValue.value = getDefaultFilterValueByFormat((filter as IFilterAttribute).attribute.format);\n                }\n\n                return {\n                    ...filter,\n                    value: newValue,\n                    condition: AttributeConditionFilter[condition]\n                };\n            }\n\n            return f;\n        });\n\n        searchDispatch({type: SearchActionTypes.SET_FILTERS, filters: newFilters});\n    };\n\n    const showStandardCondition = !formatNotUsingCondition.find(\n        format =>\n            (filter.type === FilterType.LIBRARY && format === AttributeFormat.text) ||\n            (filter.type === FilterType.ATTRIBUTE && format === (filter as IFilterAttribute).attribute.format)\n    );\n\n    const menu = (\n        <Menu>\n            {conditionOptionsByType\n                .filter(c => c.value !== AttributeConditionFilter.THROUGH || showthroughCondition)\n                .map(condition => (\n                    <Fragment key={condition.value}>\n                        {condition.value === AttributeConditionFilter.THROUGH && <Menu.Divider />}\n                        <Menu.Item onClick={() => _handleConditionChange(condition.value)}>\n                            {condition.textByFormat?.[(filter as IFilterAttribute)?.attribute?.format] ??\n                                condition?.text}\n                        </Menu.Item>\n                    </Fragment>\n                ))}\n        </Menu>\n    );\n\n    if (showStandardCondition) {\n        const conditionOption = conditionOptionsByType.filter(c => c.value === filter.condition)[0];\n        return (\n            <Dropdown\n                disabled={!filter.active || filter.condition === AttributeConditionFilter.THROUGH}\n                overlay={menu}\n                trigger={['click']}\n            >\n                <FilterDropdownButton aria-label=\"filter-condition\">\n                    {conditionOption?.textByFormat?.[(filter as IFilterAttribute)?.attribute?.format] ??\n                        conditionOption?.text}\n                </FilterDropdownButton>\n            </Dropdown>\n        );\n    } else {\n        switch ((filter as IFilterAttribute).attribute.format) {\n            case AttributeFormat.boolean:\n                return (\n                    <BooleanWrapper>\n                        <BooleanFilter filter={filter} updateFilterValue={updateFilterValue} />\n                    </BooleanWrapper>\n                );\n            default:\n                return <></>;\n        }\n    }\n};\n\nexport default FilterAttributeCondition;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport FilterAttributeCondition from './FilterAttributeCondition';\nexport default FilterAttributeCondition;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {CloseCircleFilled, MoreOutlined} from '@ant-design/icons';\nimport {Button, Dropdown, Menu} from 'antd';\nimport DateBetweenFilter from 'components/LibraryItemsList/DisplayTypeSelector/FilterInput/DateBetweenFilter';\nimport {formatNotUsingCondition} from 'constants/constants';\nimport {ILibraryDetailExtendedAttributeParentLinkedTree} from 'graphQL/queries/libraries/getLibraryDetailExtendQuery';\nimport {useActiveLibrary} from 'hooks/ActiveLibHook/ActiveLibHook';\nimport useSearchReducer from 'hooks/useSearchReducer';\nimport {SearchActionTypes} from 'hooks/useSearchReducer/searchReducer';\nimport moment from 'moment';\nimport React, {useCallback, useState} from 'react';\nimport {DraggableProvidedDragHandleProps} from 'react-beautiful-dnd';\nimport {useTranslation} from 'react-i18next';\nimport styled from 'styled-components';\nimport {defaultFilterConditionByAttributeFormat, localizedTranslation} from 'utils';\nimport {GET_ATTRIBUTES_BY_LIB_attributes_list_StandardAttribute_embedded_fields} from '_gqlTypes/GET_ATTRIBUTES_BY_LIB';\nimport {\n    GET_LIBRARY_DETAIL_EXTENDED_libraries_list_attributes,\n    GET_LIBRARY_DETAIL_EXTENDED_libraries_list_linkedTrees\n} from '_gqlTypes/GET_LIBRARY_DETAIL_EXTENDED';\nimport {AttributeFormat, AttributeType, RecordFilterCondition} from '_gqlTypes/globalTypes';\nimport {useLang} from '../../../../hooks/LangHook/LangHook';\nimport themingVar from '../../../../themingVar';\nimport {\n    AttributeConditionFilter,\n    AttributeConditionType,\n    FilterType,\n    IAttribute,\n    IFilter,\n    IFilterAttribute,\n    IFilterLibrary,\n    IFilterTree,\n    ThroughConditionFilter,\n    TreeConditionFilter\n} from '../../../../_types/types';\nimport SelectTreeNodeModal, {ITreeNode} from '../../../shared/SelectTreeNodeModal/SelectTreeNodeModal';\nimport DateFilter from '../../DisplayTypeSelector/FilterInput/DateFilter';\nimport NumericFilter from '../../DisplayTypeSelector/FilterInput/NumericFilter';\nimport TextFilter from '../../DisplayTypeSelector/FilterInput/TextFilter';\nimport FiltersDropdown from '../../FiltersDropdown';\nimport FilterDropdownButton from '../FilterDropdownButton';\nimport FilterTreeCondition from '../FilterTreeCondition';\nimport mustHideValue from '../mustHideValue';\nimport FilterAttributeCondition from './FilterAttributeCondition';\n\ninterface IWrapperProps {\n    active: boolean;\n}\n\nconst Wrapper = styled.div<IWrapperProps>`\n    background: ${themingVar['@leav-secondary-item-background']};\n    padding: 8px 8px 8px 0px;\n    border-radius: 3px;\n    display: grid;\n    grid-template-columns: 1.375rem 1fr;\n    margin-bottom: 8px;\n    border: 2px solid transparent;\n\n    ${({active}) =>\n        active\n            ? `\n        :hover,\n        :active {\n            border: 2px solid ${themingVar['@primary-color']};\n\n            &&& .filter-handle {\n                color: ${themingVar['@primary-color']};\n            }\n        }\n    `\n            : 'opacity: .5;'}\n`;\n\nconst Handle = styled.div`\n    content: '....';\n    width: 20px;\n    height: 30px;\n    display: inline-block;\n    overflow: hidden;\n    line-height: 5px;\n    padding: 3px 4px;\n    vertical-align: middle;\n    margin: auto;\n    font-size: 12px;\n    font-family: sans-serif;\n    letter-spacing: 2px;\n    color: ${themingVar['@divider-color']};\n    text-shadow: 1px 0 1px black;\n\n    &::after {\n        content: '.. .. .. ..';\n    }\n`;\n\nconst Content = styled.div<{hasParent: boolean}>`\n    display: grid;\n    grid-template-rows: ${p => (p.hasParent ? 'auto auto 1fr' : 'auto 1fr')};\n    row-gap: 8px;\n`;\n\nconst Head = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1.5rem;\n    align-items: center;\n    column-gap: 8px;\n    min-width: 0;\n`;\n\nconst HeadInfos = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    justify-items: space-around;\n    align-items: center;\n    justify-content: center;\n\n    background: ${themingVar['@default-bg']} 0% 0% no-repeat padding-box;\n    box-shadow: ${themingVar['@leav-small-shadow']};\n    border: ${themingVar['@leav-border']};\n    border-radius: 3px;\n\n    min-width: 0;\n`;\n\nconst HeadOptions = styled.div`\n    display: grid;\n    place-items: center;\n    height: 32px;\n\n    background: ${themingVar['@default-bg']} 0% 0% no-repeat padding-box;\n    box-shadow: ${themingVar['@leav-small-shadow']};\n    border: ${themingVar['@leav-border']};\n    border-radius: 3px;\n`;\n\nconst ParentLabel = styled.div`\n    display: flex;\n    align-content: flex-start;\n`;\n\nconst ClearParentButton = styled(Button)`\n    && {\n        border: none;\n        color: ${themingVar['@leav-secondary-font-color']};\n\n        :hover {\n            border: none;\n            color: ${themingVar['@leav-secondary-font-color']};\n        }\n    }\n`;\n\ninterface IFilterProps {\n    filter: IFilter;\n    handleProps: DraggableProvidedDragHandleProps;\n}\n\ninterface ISwitchFormType {\n    filter: IFilter;\n    updateFilterValue: (newFilterValue: IFilter['value']) => void;\n}\n\nexport const getDefaultFilterValueByFormat = (format: AttributeFormat): boolean | string | number => {\n    switch (format) {\n        case AttributeFormat.boolean:\n            return true;\n        case AttributeFormat.date:\n            return moment().utcOffset(0).startOf('day').unix();\n        case AttributeFormat.numeric:\n            return 0;\n        default:\n            return '';\n    }\n};\n\nfunction Filter({filter, handleProps}: IFilterProps): JSX.Element {\n    const {t} = useTranslation();\n    const [{lang}] = useLang();\n    const {state: searchState, dispatch: searchDispatch} = useSearchReducer();\n    const [showSelectTreeNodeModal, setShowSelectTreeNodeModal] = useState(false);\n    const [activeLibrary] = useActiveLibrary();\n\n    const handleDelete = () => {\n        searchDispatch({\n            type: SearchActionTypes.SET_FILTERS,\n            filters: searchState.filters.filter(f => f.index !== filter.index)\n        });\n    };\n\n    const updateFilterValue = (newFilterValue: IFilter['value']) => {\n        const newFilters: IFilter[] = searchState.filters.map(f => {\n            if (f.index === filter.index) {\n                return {...f, value: newFilterValue};\n            }\n\n            return f;\n        });\n\n        searchDispatch({\n            type: SearchActionTypes.SET_FILTERS,\n            filters: newFilters\n        });\n    };\n\n    const _getValueFromNode = (node: ITreeNode): IFilter['value'] => {\n        return typeof node === 'undefined' || node.id === (filter as IFilterTree).tree.id\n            ? {value: null}\n            : {value: node.id, label: String(node.title)};\n    };\n\n    const toggleActiveStatus = () => {\n        const newFilters = searchState.filters.map(f => {\n            if (f.index === filter.index) {\n                return {...f, active: !f.active};\n            }\n\n            return f;\n        });\n\n        searchDispatch({\n            type: SearchActionTypes.SET_FILTERS,\n            filters: newFilters\n        });\n    };\n\n    const filterOptions = (\n        <Menu>\n            <Menu.Item onClick={toggleActiveStatus}>\n                {filter.active ? t('filters.deactivate') : t('filters.activate')}\n            </Menu.Item>\n            <Menu.Item onClick={handleDelete}>{t('global.delete')}</Menu.Item>\n        </Menu>\n    );\n\n    const InputByFormat = useCallback(\n        (props: ISwitchFormType) => {\n            const showStandardCondition =\n                props.filter.condition in AttributeConditionFilter &&\n                !(props.filter.condition in TreeConditionFilter) &&\n                !formatNotUsingCondition.find(\n                    format => format === (props.filter as IFilterAttribute).attribute?.format\n                );\n\n            const showTreeCondition = props.filter.condition in TreeConditionFilter;\n\n            if (showStandardCondition) {\n                if (mustHideValue(props.filter.condition as AttributeConditionType)) {\n                    return <></>;\n                }\n\n                switch ((props.filter as IFilterAttribute).attribute?.format) {\n                    case AttributeFormat.date:\n                        return props.filter.condition === AttributeConditionFilter.BETWEEN ? (\n                            <DateBetweenFilter {...props} />\n                        ) : (\n                            <DateFilter {...props} />\n                        );\n                    case AttributeFormat.date_range:\n                        return <DateFilter {...props} />;\n                    case AttributeFormat.numeric:\n                        return <NumericFilter {...props} />;\n                    case AttributeFormat.text:\n                    default:\n                        return <TextFilter {...props} />;\n                }\n            } else if (showTreeCondition) {\n                return (\n                    <Button disabled={!props.filter.active} onClick={() => setShowSelectTreeNodeModal(true)}>\n                        {props.filter.value.label || t('global.select')}\n                    </Button>\n                );\n            }\n\n            return <></>;\n        },\n        [t]\n    );\n\n    const embeddedFieldsToAttribute = (\n        embeddedFields: GET_ATTRIBUTES_BY_LIB_attributes_list_StandardAttribute_embedded_fields[]\n    ): GET_LIBRARY_DETAIL_EXTENDED_libraries_list_attributes[] => {\n        return embeddedFields\n            ? embeddedFields.map(f => ({\n                  ...f,\n                  type: AttributeType.simple,\n                  multiple_values: undefined,\n                  linked_tree: undefined\n              }))\n            : [];\n    };\n\n    const getAttributes = (): GET_LIBRARY_DETAIL_EXTENDED_libraries_list_attributes[] => {\n        if (filter.type === FilterType.ATTRIBUTE) {\n            if (\n                filter.condition === ThroughConditionFilter.THROUGH &&\n                (filter as IFilterAttribute).attribute?.format === AttributeFormat.extended\n            ) {\n                return embeddedFieldsToAttribute((filter as IFilterAttribute).attribute.embedded_fields);\n            }\n\n            if (\n                filter.condition === ThroughConditionFilter.THROUGH &&\n                typeof (filter as IFilterAttribute).attribute.linkedTree === 'undefined'\n            ) {\n                return (filter as IFilterAttribute).attribute.linkedLibrary?.attributes;\n            }\n\n            if (typeof (filter as IFilterAttribute).attribute.parentAttribute !== 'undefined') {\n                return (\n                    (filter as IFilterAttribute).attribute.parentAttribute?.linkedLibrary?.attributes ||\n                    embeddedFieldsToAttribute((filter as IFilterAttribute).attribute.parentAttribute?.embedded_fields)\n                );\n            }\n\n            if (typeof (filter as IFilterAttribute).parentTreeLibrary !== 'undefined') {\n                const lib = (filter as IFilterAttribute).parentTreeLibrary.parentAttribute.linkedTree.libraries.find(\n                    l => l.library.id === (filter as IFilterAttribute).parentTreeLibrary.library.id\n                );\n\n                return lib.library.attributes;\n            }\n\n            if (\n                typeof (filter as IFilterAttribute).attribute.linkedTree !== 'undefined' &&\n                filter.condition === ThroughConditionFilter.THROUGH\n            ) {\n                return [];\n            }\n        }\n\n        if (filter.type === FilterType.LIBRARY) {\n            if (filter.condition !== ThroughConditionFilter.THROUGH) {\n                return [];\n            }\n\n            if (filter.condition === ThroughConditionFilter.THROUGH) {\n                const lib = (filter as IFilterLibrary).parentAttribute.linkedTree?.libraries.find(\n                    l => l.library.id === (filter as IFilterLibrary).library.id\n                );\n\n                return lib.library.attributes;\n            }\n        }\n\n        return activeLibrary.attributes;\n    };\n\n    // on tree attribute type with linkedTree\n    const getLibraries = (): ILibraryDetailExtendedAttributeParentLinkedTree['libraries'] => {\n        if (filter.type === FilterType.LIBRARY) {\n            return (filter as IFilterLibrary).parentAttribute.linkedTree?.libraries;\n        }\n\n        if (\n            filter.type === FilterType.ATTRIBUTE &&\n            typeof (filter as IFilterAttribute).attribute.linkedTree !== 'undefined' &&\n            filter.condition === ThroughConditionFilter.THROUGH\n        ) {\n            return (filter as IFilterAttribute).attribute.linkedTree?.libraries;\n        }\n\n        return [];\n    };\n\n    const getTrees = (): GET_LIBRARY_DETAIL_EXTENDED_libraries_list_linkedTrees[] => {\n        if (\n            filter.type === FilterType.TREE ||\n            (filter.condition !== ThroughConditionFilter.THROUGH &&\n                filter.type === FilterType.ATTRIBUTE &&\n                !(filter as IFilterAttribute).parentTreeLibrary &&\n                !(filter as IFilterAttribute).attribute.parentAttribute)\n        ) {\n            return activeLibrary.trees;\n        }\n\n        return [];\n    };\n\n    const _handleResetClick = () => {\n        const filters = [...searchState.filters];\n\n        const parentAttribute: IAttribute =\n            filter.type === FilterType.ATTRIBUTE &&\n            typeof (filter as IFilterAttribute).parentTreeLibrary !== 'undefined'\n                ? (filter as IFilterAttribute).parentTreeLibrary.parentAttribute\n                : filter.type === FilterType.ATTRIBUTE\n                ? (filter as IFilterAttribute).attribute.parentAttribute ?? (filter as IFilterAttribute).attribute\n                : (filter as IFilterLibrary).parentAttribute;\n\n        const newFilter: IFilterAttribute = {\n            type: FilterType.ATTRIBUTE,\n            index: filter.index,\n            key: parentAttribute?.id,\n            value: {\n                value: getDefaultFilterValueByFormat(parentAttribute.format)\n            },\n            active: true,\n            condition: RecordFilterCondition[defaultFilterConditionByAttributeFormat(parentAttribute.format)],\n            attribute: parentAttribute\n        };\n\n        const filterPos = searchState.filters.findIndex(f => f.index === filter.index);\n        filters.splice(filterPos, 1, newFilter);\n\n        searchDispatch({\n            type: SearchActionTypes.SET_FILTERS,\n            filters\n        });\n    };\n\n    const getDropdownLabel = (): string => {\n        if (filter.condition === ThroughConditionFilter.THROUGH) {\n            return `${t('global.select')}...`;\n        }\n\n        if (filter.type === FilterType.ATTRIBUTE) {\n            return (\n                localizedTranslation((filter as IFilterAttribute).attribute?.label, lang) ||\n                (filter as IFilterAttribute).attribute?.id\n            );\n        } else if (filter.type === FilterType.TREE) {\n            return localizedTranslation((filter as IFilterTree).tree.label, lang) || (filter as IFilterTree).tree.id;\n        }\n\n        return (\n            localizedTranslation((filter as IFilterLibrary).library.label, lang) ||\n            (filter as IFilterLibrary).library.id\n        );\n    };\n\n    const getParentLabel = () => {\n        return (\n            localizedTranslation(\n                filter.condition === ThroughConditionFilter.THROUGH\n                    ? (filter as IFilterAttribute).attribute?.label\n                    : (filter as IFilterAttribute).attribute?.parentAttribute?.label ||\n                          (filter as IFilterLibrary).parentAttribute?.label,\n                lang\n            ) ||\n            `${localizedTranslation(\n                filter.condition === ThroughConditionFilter.THROUGH\n                    ? (filter as IFilterLibrary).parentAttribute?.label\n                    : (filter as IFilterAttribute).parentTreeLibrary?.parentAttribute?.label,\n                lang\n            )} > ${localizedTranslation(\n                filter.condition === ThroughConditionFilter.THROUGH\n                    ? (filter as IFilterLibrary)?.library.label\n                    : (filter as IFilterAttribute).parentTreeLibrary?.library.label,\n                lang\n            )} `\n        );\n    };\n\n    const hasParent = !!(\n        filter.condition === ThroughConditionFilter.THROUGH ||\n        !!(filter as IFilterAttribute).attribute?.parentAttribute ||\n        (filter as IFilterAttribute).parentTreeLibrary ||\n        filter.type === FilterType.LIBRARY\n    );\n\n    return (\n        <>\n            {showSelectTreeNodeModal && (\n                <SelectTreeNodeModal\n                    selectedNodeKey={(filter.value.value as string) || (filter as IFilterTree).tree.id}\n                    tree={(filter as IFilterTree).tree}\n                    onSubmit={node => updateFilterValue(_getValueFromNode(node))}\n                    onClose={() => setShowSelectTreeNodeModal(false)}\n                    visible={showSelectTreeNodeModal}\n                />\n            )}\n            <Wrapper data-testid=\"filter\" active={filter.active}>\n                <Handle className=\"filter-handle\" {...handleProps} />\n                <Content hasParent={hasParent}>\n                    {hasParent && (\n                        <ParentLabel>\n                            <span>{t('filters.through')}:&nbsp;</span>\n                            <span>{getParentLabel()}</span>\n                            <ClearParentButton\n                                disabled={!filter.active}\n                                size=\"small\"\n                                onClick={_handleResetClick}\n                                shape=\"circle\"\n                                icon={<CloseCircleFilled />}\n                            />\n                        </ParentLabel>\n                    )}\n                    <Head>\n                        <HeadInfos>\n                            <FiltersDropdown\n                                libraryId={activeLibrary.id}\n                                button={\n                                    <FilterDropdownButton\n                                        secondary={filter.condition === ThroughConditionFilter.THROUGH}\n                                    >\n                                        {getDropdownLabel()}\n                                    </FilterDropdownButton>\n                                }\n                                filter={filter}\n                                attributes={getAttributes()}\n                                libraries={getLibraries()}\n                                trees={getTrees()}\n                            />\n                            {(filter.type === FilterType.ATTRIBUTE || filter.type === FilterType.LIBRARY) && (\n                                <FilterAttributeCondition\n                                    filter={filter as IFilterAttribute | IFilterLibrary}\n                                    updateFilterValue={updateFilterValue}\n                                />\n                            )}\n                            {filter.type === FilterType.TREE && <FilterTreeCondition filter={filter as IFilterTree} />}\n                        </HeadInfos>\n                        <Dropdown overlay={filterOptions} placement=\"bottomRight\">\n                            <HeadOptions>\n                                <MoreOutlined />\n                            </HeadOptions>\n                        </Dropdown>\n                    </Head>\n                    <InputByFormat filter={filter} updateFilterValue={updateFilterValue} />\n                </Content>\n            </Wrapper>\n        </>\n    );\n}\n\nexport default Filter;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {BranchesOutlined, DatabaseOutlined, NumberOutlined} from '@ant-design/icons';\nimport {Badge, Dropdown, Input, Menu} from 'antd';\nimport {defaultLinkAttributeFilterFormat} from 'constants/constants';\nimport {\n    ILibraryDetailExtendedAttributeChild,\n    ILibraryDetailExtendedAttributeParentLinkedTree,\n    ILibraryDetailExtendedAttributeParentLinkedTreeLibrary\n} from 'graphQL/queries/libraries/getLibraryDetailExtendQuery';\nimport useSearchReducer from 'hooks/useSearchReducer';\nimport {SearchActionTypes} from 'hooks/useSearchReducer/searchReducer';\nimport React, {useState} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {setDisplaySide} from 'redux/display';\nimport {useAppDispatch} from 'redux/store';\nimport styled from 'styled-components';\nimport {checkTypeIsLink, defaultFilterConditionByAttributeFormat, localizedTranslation} from 'utils';\nimport {GET_ATTRIBUTES_BY_LIB_attributes_list_StandardAttribute} from '_gqlTypes/GET_ATTRIBUTES_BY_LIB';\nimport {\n    GET_LIBRARY_DETAIL_EXTENDED_libraries_list_attributes,\n    GET_LIBRARY_DETAIL_EXTENDED_libraries_list_attributes_LinkAttribute,\n    GET_LIBRARY_DETAIL_EXTENDED_libraries_list_attributes_TreeAttribute,\n    GET_LIBRARY_DETAIL_EXTENDED_libraries_list_linkedTrees\n} from '_gqlTypes/GET_LIBRARY_DETAIL_EXTENDED';\nimport {AttributeType} from '_gqlTypes/globalTypes';\nimport {\n    AttributeConditionFilter,\n    FilterType,\n    IFilter,\n    IFilterAttribute,\n    IFilterLibrary,\n    IFilterTree,\n    ISystemTranslation,\n    ThroughConditionFilter,\n    TreeConditionFilter,\n    TypeSideItem\n} from '_types/types';\nimport {useLang} from '../../../hooks/LangHook/LangHook';\nimport {getDefaultFilterValueByFormat} from '../FiltersPanel/Filter/Filter';\n\nconst ElementsListWrapper = styled(Menu.ItemGroup)`\n    max-height: 75vh;\n    overflow-y: auto;\n\n    .ant-dropdown-menu-item-group-title {\n        display: none;\n    }\n`;\n\ninterface IFiltersDropdownProps {\n    libraryId: string;\n    button: JSX.Element;\n    attributes: GET_LIBRARY_DETAIL_EXTENDED_libraries_list_attributes[];\n    libraries: ILibraryDetailExtendedAttributeParentLinkedTree['libraries'];\n    trees: GET_LIBRARY_DETAIL_EXTENDED_libraries_list_linkedTrees[];\n    disabled?: boolean;\n    filter?: IFilter; // if replace filter\n}\n\nfunction FiltersDropdown({\n    libraryId,\n    button,\n    attributes,\n    libraries,\n    trees,\n    filter\n}: IFiltersDropdownProps): JSX.Element {\n    const {t} = useTranslation();\n    const {state: searchState, dispatch: searchDispatch} = useSearchReducer();\n    const [{lang}] = useLang();\n    const [visible, setVisible] = useState<boolean>(false);\n    const [search, setSearch] = useState<string>();\n\n    const dispatch = useAppDispatch();\n\n    const getAttributeFilter = (attribute: GET_LIBRARY_DETAIL_EXTENDED_libraries_list_attributes): IFilterAttribute => {\n        // we set the new filter key with the attribute id by default\n        let key = attribute.id;\n\n        // If we replace a current filter, the filter key depends on filter type and whether it goes through parent attributes or not\n        // The key is a concatenation of parents attribute's id\n        if (typeof (filter as IFilterAttribute)?.parentTreeLibrary !== 'undefined') {\n            key = `${(filter as IFilterAttribute)?.parentTreeLibrary.key}.${attribute.id}`;\n        } else if (filter?.condition === ThroughConditionFilter.THROUGH && filter.type === FilterType.LIBRARY) {\n            key = `${(filter as IFilterLibrary).key}.${attribute.id}`;\n        } else if (filter?.condition === ThroughConditionFilter.THROUGH) {\n            key = `${(filter as IFilterAttribute)?.attribute?.id}.${attribute.id}`;\n        } else if ((filter as IFilterAttribute)?.attribute?.parentAttribute) {\n            key = `${(filter as IFilterAttribute)?.attribute?.parentAttribute.id}.${attribute.id}`;\n        }\n\n        const filterAttribute: IFilterAttribute = {\n            type: FilterType.ATTRIBUTE,\n            index: Date.now(),\n            active: true,\n            key,\n            condition: AttributeConditionFilter[defaultFilterConditionByAttributeFormat(attribute.format)],\n            attribute: {\n                id: attribute.id,\n                type: attribute.type,\n                format:\n                    checkTypeIsLink(attribute.type) || attribute.type === AttributeType.tree\n                        ? defaultLinkAttributeFilterFormat\n                        : attribute.format,\n                label: attribute.label,\n                isLink: checkTypeIsLink(attribute.type),\n                isMultiple: attribute.multiple_values,\n                linkedLibrary: (attribute as GET_LIBRARY_DETAIL_EXTENDED_libraries_list_attributes_LinkAttribute)\n                    .linked_library,\n                linkedTree: (attribute as GET_LIBRARY_DETAIL_EXTENDED_libraries_list_attributes_TreeAttribute)\n                    .linked_tree,\n                library:\n                    (attribute as GET_LIBRARY_DETAIL_EXTENDED_libraries_list_attributes_LinkAttribute).linked_library\n                        ?.id || libraryId,\n                embedded_fields: (attribute as GET_ATTRIBUTES_BY_LIB_attributes_list_StandardAttribute).embedded_fields\n            },\n            value: {value: getDefaultFilterValueByFormat(attribute.format)}\n        };\n\n        // If filter's condition is a through condition it means current filter is a parent\n        // so we set the parentAttribute field to current filter's attribute, otherwise it means\n        // that the current filter is just a \"brother\" so we get the parent attribute of the current filter instead\n        if (filter?.condition === ThroughConditionFilter.THROUGH) {\n            filterAttribute.attribute.parentAttribute = (filter as IFilterAttribute)?.attribute;\n        } else if ((filter as IFilterAttribute)?.attribute?.parentAttribute) {\n            filterAttribute.attribute.parentAttribute = (filter as IFilterAttribute)?.attribute?.parentAttribute;\n        }\n\n        // When we chose an attribute through a tree attribute and a child library we have to set the parent tree library of the new filter\n        // If current filter type is not library it means we just change the current filter attribute by another at the same level,\n        // so the parent tree library is not as the first time, the filter itself, but the parentTreeLibrary of this one\n        if (filter?.type === FilterType.LIBRARY) {\n            filterAttribute.parentTreeLibrary = filter as IFilterLibrary;\n        } else if (typeof (filter as IFilterAttribute)?.parentTreeLibrary !== 'undefined') {\n            filterAttribute.parentTreeLibrary = (filter as IFilterAttribute)?.parentTreeLibrary;\n        }\n\n        return filterAttribute;\n    };\n\n    const getTreeFilter = (tree: GET_LIBRARY_DETAIL_EXTENDED_libraries_list_linkedTrees): IFilterTree => ({\n        type: FilterType.TREE,\n        index: Date.now(),\n        active: true,\n        key: tree.id,\n        condition: TreeConditionFilter[TreeConditionFilter.CLASSIFIED_IN],\n        tree,\n        value: {value: null}\n    });\n\n    const getLibraryFilter = (library: {\n        id: string;\n        label: ISystemTranslation;\n        attributes: ILibraryDetailExtendedAttributeChild[];\n    }): IFilterLibrary => {\n        // If current filter's type is a LIBRARY type it means we just changed the child library\n        // and not the parent attribute so we copy the current filter parent attribute\n        // The key is a concatenation of parent attributes' and libraries' id\n        const key =\n            filter?.type !== FilterType.LIBRARY\n                ? `${(filter as IFilterAttribute).attribute?.id}.${library.id}`\n                : `${(filter as IFilterLibrary).parentAttribute?.id}.${library.id}`;\n\n        return {\n            type: FilterType.LIBRARY,\n            index: Date.now(),\n            active: true,\n            key,\n            condition:\n                AttributeConditionFilter[defaultFilterConditionByAttributeFormat(defaultLinkAttributeFilterFormat)],\n            library: {id: library.id, label: library.label},\n            value: {value: getDefaultFilterValueByFormat(defaultLinkAttributeFilterFormat)},\n            parentAttribute:\n                filter?.condition === ThroughConditionFilter.THROUGH\n                    ? (filter as IFilterAttribute).attribute ?? (filter as IFilterLibrary).parentAttribute\n                    : (filter as IFilterLibrary).parentAttribute\n        };\n    };\n\n    const addFilter = (newFilter: IFilter) => {\n        const filters = [...searchState.filters];\n\n        if (typeof filter !== 'undefined') {\n            // we replace current filter\n            const filterPos = searchState.filters.findIndex(f => f.index === filter.index);\n            filters.splice(filterPos, 1, {...newFilter, index: filter.index});\n        } else {\n            filters.push(newFilter);\n        }\n\n        searchDispatch({\n            type: SearchActionTypes.SET_FILTERS,\n            filters\n        });\n\n        dispatch(\n            setDisplaySide({\n                visible: true,\n                type: TypeSideItem.filters\n            })\n        );\n    };\n\n    const _handleVisibleChange = () => setVisible(!visible);\n\n    const _handleSearchChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        setSearch(e.target.value);\n    };\n\n    const _translateLabel = function <\n        T extends\n            | GET_LIBRARY_DETAIL_EXTENDED_libraries_list_attributes\n            | GET_LIBRARY_DETAIL_EXTENDED_libraries_list_linkedTrees\n            | ILibraryDetailExtendedAttributeParentLinkedTreeLibrary\n    >(el: T) {\n        return {\n            ...el,\n            localizedLabel: localizedTranslation(el.label, lang) || el.id\n        };\n    };\n\n    const _filterBySearch = function (el: {id: string; localizedLabel: string}): boolean {\n        const searchRegEx = new RegExp(`${search}`, 'i');\n        return !search || !!el.id.match(searchRegEx) || !!el.localizedLabel.match(searchRegEx);\n    };\n\n    const filteredTrees = trees.map(_translateLabel).filter(_filterBySearch);\n    const filteredAttributes = attributes.map(_translateLabel).filter(_filterBySearch);\n    const filteredLibraries = libraries\n        .map(lib => ({...lib, library: _translateLabel(lib.library)}))\n        .filter(lib => _filterBySearch(lib.library));\n\n    // to verify if a filter is used, we have to get the filter attribute/tree base id\n    // and check if one of those is used in the list of filters depending on the filter type\n    const isFilterUsed = (id: string) => {\n        return searchState.filters.some(f => {\n            return (\n                (f as IFilterTree)?.key === id ||\n                (f as IFilterAttribute).attribute?.parentAttribute?.id === id ||\n                (f as IFilterLibrary).parentAttribute?.id === id ||\n                (f as IFilterAttribute).parentTreeLibrary?.parentAttribute?.id === id\n            );\n        });\n    };\n\n    const menu = (\n        <Menu>\n            <Menu.Item>\n                <Input.Search placeholder={t('global.search')} onChange={_handleSearchChange} />\n            </Menu.Item>\n            <Menu.Divider />\n            <ElementsListWrapper>\n                {filteredTrees.length && (\n                    <Menu.ItemGroup title={t('filters.trees-group')}>\n                        {filteredTrees.map(tree => (\n                            <Menu.Item\n                                icon={<BranchesOutlined />}\n                                key={tree.id}\n                                onClick={() => addFilter(getTreeFilter(tree))}\n                            >\n                                {isFilterUsed(tree.id) ? (\n                                    <Badge color={'blue'} text={tree.localizedLabel} />\n                                ) : (\n                                    tree.localizedLabel\n                                )}\n                            </Menu.Item>\n                        ))}\n                    </Menu.ItemGroup>\n                )}\n                {filteredAttributes.length && (\n                    <Menu.ItemGroup title={t('filters.attributes-group')}>\n                        {filteredAttributes.map(attribute => (\n                            <Menu.Item\n                                icon={<NumberOutlined />}\n                                key={attribute.id}\n                                onClick={() => addFilter(getAttributeFilter(attribute))}\n                            >\n                                {isFilterUsed(attribute.id) ? (\n                                    <Badge color={'blue'} text={attribute.localizedLabel} />\n                                ) : (\n                                    attribute.localizedLabel\n                                )}\n                            </Menu.Item>\n                        ))}\n                    </Menu.ItemGroup>\n                )}\n                {filteredLibraries.length && (\n                    <Menu.ItemGroup title={t('filters.libraries-group')}>\n                        {filteredLibraries.map(l => (\n                            <Menu.Item\n                                icon={<DatabaseOutlined />}\n                                key={l.library.id}\n                                onClick={() => addFilter(getLibraryFilter(l.library))}\n                            >\n                                {l.library.localizedLabel}\n                            </Menu.Item>\n                        ))}\n                    </Menu.ItemGroup>\n                )}\n            </ElementsListWrapper>\n        </Menu>\n    );\n\n    return (\n        <Dropdown\n            disabled={!!filter && !filter.active}\n            visible={visible}\n            onVisibleChange={_handleVisibleChange}\n            overlay={menu}\n            trigger={['click']}\n        >\n            {button}\n        </Dropdown>\n    );\n}\n\nexport default FiltersDropdown;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport FiltersDropdown from './FiltersDropdown';\nexport default FiltersDropdown;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {\n    AppstoreFilled,\n    FilterOutlined,\n    MenuOutlined,\n    MoreOutlined,\n    PlusOutlined,\n    RollbackOutlined,\n    SaveFilled\n} from '@ant-design/icons';\nimport {useMutation} from '@apollo/client';\nimport {Badge, Button, Dropdown, Menu, Space, Tooltip} from 'antd';\nimport {IActiveLibrary} from 'graphQL/queries/cache/activeLibrary/getActiveLibraryQuery';\nimport useSearchReducer from 'hooks/useSearchReducer';\nimport {SearchActionTypes} from 'hooks/useSearchReducer/searchReducer';\nimport _ from 'lodash';\nimport React from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {setDisplaySide} from 'redux/display';\nimport {useAppDispatch, useAppSelector} from 'redux/store';\nimport {ViewSizes, ViewTypes} from '_gqlTypes/globalTypes';\nimport {defaultView, viewSettingsField} from '../../../constants/constants';\nimport addViewMutation, {\n    IAddViewMutation,\n    IAddViewMutationVariables,\n    IAddViewMutationVariablesView\n} from '../../../graphQL/mutations/views/addViewMutation';\nimport {useLang} from '../../../hooks/LangHook/LangHook';\nimport {localizedTranslation} from '../../../utils';\nimport {TypeSideItem} from '../../../_types/types';\nimport IconViewType from '../../IconViewType/IconViewType';\nimport FiltersDropdown from '../FiltersDropdown';\nimport {getRequestFromFilters} from '../FiltersPanel/getRequestFromFilter';\n\ninterface IMenuViewProps {\n    activeLibrary: IActiveLibrary;\n}\n\nfunction MenuView({activeLibrary}: IMenuViewProps): JSX.Element {\n    const {t} = useTranslation();\n\n    const [{lang, defaultLang}] = useLang();\n    const dispatch = useAppDispatch();\n    const {display} = useAppSelector(state => state);\n    const {state: searchState, dispatch: searchDispatch} = useSearchReducer();\n\n    const [addView] = useMutation<IAddViewMutation, IAddViewMutationVariables>(addViewMutation);\n\n    const _toggleShowView = () => {\n        const visible = !display.side.visible || display.side.type !== TypeSideItem.view;\n\n        dispatch(\n            setDisplaySide({\n                visible,\n                type: TypeSideItem.view\n            })\n        );\n    };\n\n    const _saveView = async () => {\n        if (searchState.view.current.id !== defaultView.id) {\n            try {\n                // Fields\n                let viewFields: string[] = [];\n\n                if (searchState.view.current.display.type === ViewTypes.list) {\n                    viewFields = searchState.fields.map(f => f.key);\n                }\n\n                // save view in backend\n                await addView({\n                    variables: {\n                        view: {\n                            ..._.omit(searchState.view.current, 'owner'),\n                            library: activeLibrary.id,\n                            sort: searchState.sort.active\n                                ? {field: searchState.sort.field, order: searchState.sort.order}\n                                : undefined,\n                            display: searchState.display,\n                            filters: getRequestFromFilters(searchState.filters),\n                            settings: [\n                                {\n                                    name: viewSettingsField,\n                                    value: viewFields\n                                }\n                            ]\n                        }\n                    }\n                });\n\n                searchDispatch({\n                    type: SearchActionTypes.SET_VIEW,\n                    view: {\n                        current: {\n                            ...searchState.view.current,\n                            sort: searchState.sort.active\n                                ? {field: searchState.sort.field, order: searchState.sort.order}\n                                : undefined,\n                            display: searchState.display,\n                            filters: searchState.filters,\n                            settings: [\n                                {\n                                    name: viewSettingsField,\n                                    value: viewFields\n                                }\n                            ]\n                        },\n                        reload: true,\n                        sync: false\n                    }\n                });\n            } catch (e) {\n                console.error(e);\n            }\n        }\n    };\n\n    const _setView = () => {\n        searchDispatch({\n            type: SearchActionTypes.SET_VIEW,\n            view: {current: searchState.view.current, reload: true, sync: false}\n        });\n    };\n\n    const _handleAddView = async (viewType: ViewTypes) => {\n        const newView: IAddViewMutationVariablesView = {\n            ..._.omit(defaultView, ['id', 'owner']),\n            label: {[defaultLang]: t('view.add-view.title')},\n            library: activeLibrary.id,\n            display: {type: viewType, size: ViewSizes.MEDIUM},\n            filters: []\n        };\n\n        // save view in backend\n        const newViewRes = await addView({\n            variables: {\n                view: newView\n            }\n        });\n\n        searchDispatch({\n            type: SearchActionTypes.SET_VIEW,\n            view: {\n                current: {\n                    ...newView,\n                    owner: true,\n                    id: newViewRes.data.saveView.id,\n                    filters: []\n                },\n                reload: true,\n                sync: false\n            }\n        });\n\n        searchDispatch({\n            type: SearchActionTypes.SET_USER_VIEWS_ORDER,\n            userViewsOrder: [...searchState.userViewsOrder, newViewRes.data.saveView.id]\n        });\n    };\n\n    const menu = (\n        <Menu>\n            <Menu.ItemGroup title={t('view.add-view.title')}>\n                <Menu.Item onClick={() => _handleAddView(ViewTypes.list)} icon={<MenuOutlined />}>\n                    {t('view.type-list')}\n                </Menu.Item>\n                <Menu.Item onClick={() => _handleAddView(ViewTypes.cards)} icon={<AppstoreFilled />}>\n                    {t('view.type-cards')}\n                </Menu.Item>\n            </Menu.ItemGroup>\n        </Menu>\n    );\n\n    const _toggleShowFilters = () => {\n        dispatch(\n            setDisplaySide({\n                visible: !display.side.visible || display.side.type !== TypeSideItem.filters,\n                type: TypeSideItem.filters\n            })\n        );\n    };\n\n    return (\n        <Space size=\"large\">\n            <Button.Group>\n                <Tooltip\n                    title={localizedTranslation(searchState.view.current?.label, lang) || t('select-view.default-view')}\n                >\n                    <Button\n                        icon={\n                            <IconViewType style={{marginRight: '8px'}} type={searchState.view.current.display.type} />\n                        }\n                        data-testid=\"dropdown-view-options\"\n                        onClick={_toggleShowView}\n                        color={searchState.view.current?.color}\n                        style={{width: '200px', overflow: 'hidden', textOverflow: 'ellipsis', whiteSpace: 'nowrap'}}\n                    >\n                        <>\n                            {localizedTranslation(searchState.view.current?.label, lang) ||\n                                t('select-view.default-view')}\n                        </>\n                    </Button>\n                </Tooltip>\n                <Button disabled={searchState.view.sync} icon={<RollbackOutlined />} onClick={_setView} />\n                <Button\n                    icon={<SaveFilled />}\n                    onClick={_saveView}\n                    disabled={\n                        searchState.view.sync ||\n                        searchState.view.current?.id === defaultView.id ||\n                        !searchState.view.current.owner\n                    }\n                />\n                <Dropdown overlay={menu} trigger={['click']}>\n                    <Button icon={<MoreOutlined />}></Button>\n                </Dropdown>\n            </Button.Group>\n            <Badge dot={!!searchState.filters.length}>\n                <Button.Group>\n                    <Button onClick={_toggleShowFilters} icon={<FilterOutlined />}>\n                        {t('filters.filters')}\n                    </Button>\n                    <FiltersDropdown\n                        libraryId={activeLibrary.id}\n                        button={<Button icon={<PlusOutlined />} type={'default'} />}\n                        attributes={activeLibrary.attributes}\n                        trees={activeLibrary.trees}\n                        libraries={[]}\n                    />\n                </Button.Group>\n            </Badge>\n        </Space>\n    );\n}\n\nexport default MenuView;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport MenuView from './MenuView';\nexport default MenuView;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {Input} from 'antd';\nimport useSearchReducer from 'hooks/useSearchReducer';\nimport {SearchActionTypes} from 'hooks/useSearchReducer/searchReducer';\nimport React from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {getRequestFromFilters} from '../FiltersPanel/getRequestFromFilter';\n\nfunction SearchItems(): JSX.Element {\n    const {state: searchState, dispatch: searchDispatch} = useSearchReducer();\n\n    const {t} = useTranslation();\n\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        searchDispatch({type: SearchActionTypes.SET_FULLTEXT, fullText: event.target.value});\n    };\n\n    const handleEnter = e => {\n        searchDispatch({\n            type: SearchActionTypes.SET_QUERY_FILTERS,\n            queryFilters: getRequestFromFilters(searchState.filters)\n        });\n\n        searchDispatch({type: SearchActionTypes.SET_LOADING, loading: true});\n    };\n\n    return (\n        <Input.Search\n            style={{maxWidth: 500, minWidth: 250}}\n            placeholder={t('search.placeholder')}\n            value={searchState.fullText}\n            onChange={handleChange}\n            onPressEnter={handleEnter}\n            onSearch={handleEnter}\n            loading={searchState.loading}\n            allowClear\n        />\n    );\n}\n\nexport default SearchItems;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport SearchItems from './SearchItems';\nexport default SearchItems;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {PlusOutlined, RedoOutlined} from '@ant-design/icons';\nimport {Button, Space} from 'antd';\nimport EditRecordModal from 'components/RecordEdition/EditRecordModal';\nimport {SelectionModeContext} from 'context';\nimport React, {useContext, useState} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport styled from 'styled-components';\nimport {useActiveLibrary} from '../../../hooks/ActiveLibHook/ActiveLibHook';\nimport {PrimaryBtn} from '../../app/StyledComponent/PrimaryBtn';\nimport DisplayOptions from '../DisplayOptions';\nimport MenuItemActions from '../MenuItemActions';\nimport MenuSelection from '../MenuSelection';\nimport MenuView from '../MenuView';\nimport SearchItems from '../SearchItems';\n\ninterface IMenuItemListProps {\n    refetch?: () => void;\n}\n\nconst Wrapper = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    width: 100%;\n`;\n\nfunction MenuItemList({refetch}: IMenuItemListProps): JSX.Element {\n    const {t} = useTranslation();\n    const [activeLibrary] = useActiveLibrary();\n    const [isRecordCreationVisible, setIsRecordCreationVisible] = useState<boolean>(false);\n    const canCreateRecord = activeLibrary.permissions.create_record;\n\n    const selectionMode = useContext(SelectionModeContext);\n\n    const _handleCreateRecord = () => {\n        setIsRecordCreationVisible(true);\n    };\n\n    const _handleRecordCreationClose = () => {\n        setIsRecordCreationVisible(false);\n    };\n\n    return (\n        <Wrapper>\n            {activeLibrary?.id && <MenuView activeLibrary={activeLibrary} />}\n\n            <Space size=\"large\">\n                <MenuSelection />\n                <SearchItems />\n            </Space>\n\n            <Space size=\"large\">\n                {!selectionMode && canCreateRecord && (\n                    <PrimaryBtn icon={<PlusOutlined />} className=\"primary-btn\" onClick={_handleCreateRecord}>\n                        {t('items_list.new')}\n                    </PrimaryBtn>\n                )}\n\n                <Space size=\"small\">\n                    <MenuItemActions />\n                    <DisplayOptions />\n                    <Button icon={<RedoOutlined />} onClick={() => refetch && refetch()} />\n                </Space>\n            </Space>\n\n            {isRecordCreationVisible && (\n                <EditRecordModal\n                    record={null}\n                    library={activeLibrary.id}\n                    open={isRecordCreationVisible}\n                    onClose={_handleRecordCreationClose}\n                />\n            )}\n        </Wrapper>\n    );\n}\n\nexport default MenuItemList;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {DownloadOutlined, LoadingOutlined} from '@ant-design/icons';\nimport {useLazyQuery} from '@apollo/client';\nimport {Button, Result, Steps} from 'antd';\nimport Modal from 'antd/lib/modal/Modal';\nimport AttributesSelectionList from 'components/AttributesSelectionList';\nimport useSearchReducer from 'hooks/useSearchReducer';\nimport React, {useState} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {addNotification} from 'redux/notifications';\nimport {useAppDispatch, useAppSelector} from 'redux/store';\nimport styled from 'styled-components';\nimport {exportQuery} from '../../../../../graphQL/queries/export/exportQuery';\nimport {useActiveLibrary} from '../../../../../hooks/ActiveLibHook/ActiveLibHook';\nimport {getFileUrl} from '../../../../../utils';\nimport {EXPORT, EXPORTVariables} from '../../../../../_gqlTypes/EXPORT';\nimport {\n    AttributeType,\n    RecordFilterCondition,\n    RecordFilterInput,\n    RecordFilterOperator\n} from '../../../../../_gqlTypes/globalTypes';\nimport {\n    INotification,\n    ISelectedAttribute,\n    NotificationChannel,\n    NotificationPriority,\n    NotificationType,\n    SharedStateSelectionType\n} from '../../../../../_types/types';\nimport ErrorDisplay from '../../../../shared/ErrorDisplay';\n\nconst {Step} = Steps;\n\nexport interface IExportModalProps {\n    open: boolean;\n    onClose: () => void;\n}\n\nenum ExportSteps {\n    ATTRIBUTE_SELECTION = 0,\n    PROCESSING = 1,\n    DONE = 2\n}\n\nconst Content = styled.div`\n    margin-top: 2em;\n`;\n\nconst CenteredWrapper = styled.div`\n    text-align: center;\n`;\n\nfunction ExportModal({onClose, open}: IExportModalProps): JSX.Element {\n    const {t} = useTranslation();\n\n    const {selectionState} = useAppSelector(state => ({selectionState: state.selection}));\n\n    const {state: searchState} = useSearchReducer();\n    const dispatch = useAppDispatch();\n\n    const [activeLibrary] = useActiveLibrary();\n\n    const [selectedAttributes, setSelectedAttributes] = useState<ISelectedAttribute[]>([]);\n    const [currentStep, setCurrentStep] = useState<ExportSteps>(ExportSteps.ATTRIBUTE_SELECTION);\n    const [filepath, setFilepath] = useState<string>('');\n\n    const [runExport, {error: exportError}] = useLazyQuery<EXPORT, EXPORTVariables>(exportQuery, {\n        fetchPolicy: 'no-cache',\n        onCompleted: data => {\n            setCurrentStep(ExportSteps.DONE);\n            setFilepath(data.export);\n        },\n        onError: error => {\n            const notification: INotification = {\n                type: NotificationType.error,\n                priority: NotificationPriority.high,\n                channel: NotificationChannel.passive,\n                content: `${t('error.error_occurred')}: ${error.message}`\n            };\n\n            dispatch(addNotification(notification));\n\n            setCurrentStep(ExportSteps.DONE);\n        }\n    });\n\n    const _runExport = () => {\n        setCurrentStep(ExportSteps.PROCESSING);\n\n        let queryFilters: RecordFilterInput[];\n        if (selectionState.selection.type === SharedStateSelectionType.search && selectionState.selection.allSelected) {\n            queryFilters = (searchState.queryFilters as unknown) as RecordFilterInput[];\n        } else {\n            const selectedIds = selectionState.selection.selected.map(elementSelected => elementSelected.id);\n\n            // Convert selected IDs to a search query with OR between each ID\n            queryFilters = selectedIds.length\n                ? [\n                      {\n                          operator: RecordFilterOperator.OPEN_BRACKET\n                      },\n                      ...selectedIds.reduce(\n                          (allFilters: RecordFilterInput[], id: string, index: number): RecordFilterInput[] => {\n                              allFilters.push({\n                                  field: 'id',\n                                  condition: RecordFilterCondition.EQUAL,\n                                  value: id\n                              });\n\n                              if (index < selectedIds.length - 1) {\n                                  allFilters.push({\n                                      operator: RecordFilterOperator.OR\n                                  });\n                              }\n\n                              return allFilters;\n                          },\n                          []\n                      ),\n                      {\n                          operator: RecordFilterOperator.CLOSE_BRACKET\n                      }\n                  ]\n                : [];\n        }\n\n        // For tree attribute, attribute path is [parent id].[library id].[attribute id].\n        // We don't want the library ID\n        const attributesToExport = selectedAttributes.length\n            ? selectedAttributes.map(selectedAttribute =>\n                  selectedAttribute?.parentAttributeData?.type === AttributeType.tree\n                      ? `${selectedAttribute?.parentAttributeData.id}.${selectedAttribute.id}`\n                      : selectedAttribute.path\n              )\n            : ['id'];\n\n        runExport({\n            variables: {\n                library: activeLibrary?.id || '',\n                attributes: attributesToExport,\n                filters: queryFilters\n            }\n        });\n    };\n\n    const _handleOk = () => {\n        if (currentStep === ExportSteps.DONE) {\n            onClose();\n            return;\n        }\n\n        _runExport();\n    };\n    const validateButtonLabel = t(currentStep === ExportSteps.DONE ? 'global.close' : 'export.start');\n\n    return (\n        <Modal\n            title={t('export.title')}\n            okText={validateButtonLabel}\n            cancelText={t('global.cancel')}\n            onOk={_handleOk}\n            onCancel={onClose}\n            visible={open}\n            closable\n            width=\"90vw\"\n            centered\n            confirmLoading={currentStep === ExportSteps.PROCESSING}\n            bodyStyle={{height: 'calc(100vh - 10rem)'}}\n            okButtonProps={{className: 'submit-btn'}}\n            destroyOnClose\n        >\n            <Steps current={currentStep} style={{marginBottom: '2em'}}>\n                <Step title={t('export.attributes_selection')}></Step>\n                <Step\n                    title={t('export.export_generation')}\n                    icon={currentStep === ExportSteps.PROCESSING ? <LoadingOutlined /> : null}\n                ></Step>\n                <Step title={t('export.export_done')} status={exportError ? 'error' : undefined}></Step>\n            </Steps>\n            <Content>\n                {currentStep === ExportSteps.ATTRIBUTE_SELECTION && (\n                    <AttributesSelectionList\n                        library={activeLibrary!.id}\n                        multiple\n                        onSelectionChange={setSelectedAttributes}\n                        selectedAttributes={selectedAttributes}\n                        canExpandExtendedAttributes={false}\n                    />\n                )}\n                {currentStep === ExportSteps.PROCESSING && (\n                    <CenteredWrapper data-test-id=\"processing\">{t('global.processing') + '...'}</CenteredWrapper>\n                )}\n                {currentStep === ExportSteps.DONE && (\n                    <CenteredWrapper data-test-id=\"done\">\n                        {!exportError ? (\n                            <Result\n                                status=\"success\"\n                                title={t('export.export_done')}\n                                extra={[\n                                    <Button\n                                        key=\"download-file\"\n                                        type=\"primary\"\n                                        icon={<DownloadOutlined />}\n                                        href={getFileUrl(filepath)}\n                                    >\n                                        {t('export.download_file')}\n                                    </Button>\n                                ]}\n                            />\n                        ) : (\n                            <ErrorDisplay message={exportError.message} />\n                        )}\n                    </CenteredWrapper>\n                )}\n            </Content>\n        </Modal>\n    );\n}\n\nexport default ExportModal;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport MenuItemList from './MenuItemList';\nexport default MenuItemList;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {gql} from '@apollo/client';\n\nexport const exportQuery = gql`\n    query EXPORT($library: ID!, $attributes: [ID!], $filters: [RecordFilterInput!]) {\n        export(library: $library, attributes: $attributes, filters: $filters)\n    }\n`;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport ExportModal from './ExportModal';\nexport default ExportModal;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {DownOutlined, ExportOutlined} from '@ant-design/icons';\nimport {Button, Dropdown, Menu} from 'antd';\nimport React, {ReactNode, useState} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport ExportModal from './ExportModal';\n\ninterface IMenuAction {\n    key: string;\n    icon: ReactNode;\n    title: string;\n    modalComp: (props: any) => JSX.Element;\n}\n\nfunction ActionsMenu(): JSX.Element {\n    const {t} = useTranslation();\n    const [activeAction, setActiveAction] = useState<string>();\n\n    const actions: IMenuAction[] = [\n        {\n            key: 'export',\n            icon: <ExportOutlined rotate={270} />,\n            title: t('export.title'),\n            modalComp: ExportModal\n        }\n    ];\n\n    const _handleClick = (actionKey: string) => () => {\n        setActiveAction(actionKey);\n    };\n\n    const _handleCloseModal = () => setActiveAction('');\n\n    return (\n        <>\n            <Dropdown\n                overlay={\n                    <Menu>\n                        {actions.map(a => (\n                            <Menu.Item icon={a.icon} key={a.key} title={a.title} onClick={_handleClick(a.key)}>\n                                {a.title}\n                            </Menu.Item>\n                        ))}\n                    </Menu>\n                }\n            >\n                <Button>\n                    {t('menu-selection.actions')} <DownOutlined />\n                </Button>\n            </Dropdown>\n            {actions\n                .filter(a => activeAction === a.key)\n                .map(a => (\n                    <a.modalComp key={a.key} open={activeAction === a.key} onClose={_handleCloseModal} />\n                ))}\n        </>\n    );\n}\n\nexport default ActionsMenu;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport ActionsMenu from './ActionsMenu';\nexport default ActionsMenu;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {CloseCircleOutlined, DeleteOutlined, DownOutlined} from '@ant-design/icons';\nimport {Button, Dropdown, Menu, message} from 'antd';\nimport {SelectionModeContext} from 'context';\nimport {useLang} from 'hooks/LangHook/LangHook';\nimport useSearchReducer from 'hooks/useSearchReducer';\nimport uniqBy from 'lodash/uniqBy';\nimport React, {useContext, useEffect, useState} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {resetSearchSelection, resetSelection, setSearchSelection, setSelection} from 'redux/selection';\nimport {useAppDispatch, useAppSelector} from 'redux/store';\nimport styled from 'styled-components';\nimport {localizedTranslation} from 'utils';\nimport {SharedStateSelectionType} from '_types/types';\nimport themingVars from '../../../themingVar';\nimport ActionsMenu from './ActionsMenu';\n\ninterface IMenuItemListSelectedProps {\n    active: boolean;\n}\n\ninterface IWrapperProps {\n    active: boolean;\n}\n\nconst Wrapper = styled.div<IWrapperProps>`\n    display: ${({active}) => (active ? 'grid' : 'none')};\n    place-items: center;\n\n    position: absolute;\n    top: 0;\n\n    width: 100%;\n    background: ${themingVars['@default-bg']};\n    height: 4rem;\n    z-index: 11;\n\n    animation: ${({active}) => (active ? 'moveToBottom .3s ease' : 'none')};\n\n    & > div {\n        display: grid;\n        place-items: center;\n        grid-template-columns: repeat(4, auto);\n        column-gap: 1rem;\n    }\n\n    @keyframes moveToBottom {\n        from {\n            top: -100px;\n        }\n        to {\n            top: 0;\n        }\n    }\n`;\n\nconst DropdownButton = styled.div`\n    && {\n        display: flex;\n        padding: 0;\n    }\n`;\n\nconst SelectionSummary = styled(Button)`\n    && {\n        padding: 0 1em;\n        display: flex;\n        align-items: center;\n        border-right-color: transparent;\n        border-top-right-radius: 0;\n        border-bottom-right-radius: 0;\n    }\n`;\n\nconst ClearSelection = styled(Button)`\n    && {\n        border-top-left-radius: 0;\n        border-bottom-left-radius: 0;\n        display: flex;\n        padding: 0 1em;\n        align-items: center;\n    }\n`;\n\nfunction MenuItemListSelected({active}: IMenuItemListSelectedProps): JSX.Element {\n    const {t} = useTranslation();\n\n    const selectionMode = useContext(SelectionModeContext);\n    const {selectionState} = useAppSelector(state => ({\n        selectionState: state.selection,\n        display: state.display\n    }));\n    const dispatch = useAppDispatch();\n    const {state: searchState} = useSearchReducer();\n\n    const [{lang}] = useLang();\n\n    const [countItemsSelected, setCountItemsSelected] = useState(0);\n\n    const disableModeSelection = () => {\n        if (selectionMode) {\n            dispatch(resetSearchSelection());\n        } else {\n            dispatch(resetSelection());\n        }\n    };\n\n    useEffect(() => {\n        if (selectionMode) {\n            setCountItemsSelected(selectionState.searchSelection.selected.length);\n        } else {\n            setCountItemsSelected(selectionState.selection.selected.length);\n        }\n    }, [selectionState.selection, selectionState.searchSelection, selectionMode, setCountItemsSelected]);\n\n    const selectVisible = () => {\n        let selected = [...selectionState.selection.selected];\n\n        if (searchState.records) {\n            for (const record of searchState.records) {\n                selected = [\n                    ...selected,\n                    {\n                        id: record.whoAmI.id,\n                        library: record.whoAmI.library.id,\n                        label: localizedTranslation(record.whoAmI.label, lang)\n                    }\n                ];\n            }\n        }\n        selected = uniqBy(selected, item => `${item.id}_${item.library}`);\n\n        if (selectionMode) {\n            dispatch(\n                setSearchSelection({\n                    type: SharedStateSelectionType.search,\n                    selected,\n                    allSelected: false\n                })\n            );\n        } else {\n            dispatch(\n                setSelection({\n                    type: SharedStateSelectionType.search,\n                    selected,\n                    allSelected: false\n                })\n            );\n        }\n    };\n\n    const selectAll = () => {\n        if (!selectionMode) {\n            dispatch(\n                setSelection({\n                    type: SharedStateSelectionType.search,\n                    selected: [],\n                    allSelected: true\n                })\n            );\n        }\n    };\n\n    const unselectAll = () => {\n        if (selectionMode) {\n            dispatch(resetSearchSelection());\n        } else {\n            dispatch(resetSelection());\n        }\n    };\n\n    const allSelectActive = selectionMode\n        ? selectionState.searchSelection.type === SharedStateSelectionType.search &&\n          selectionState.searchSelection.allSelected\n        : selectionState.selection.type === SharedStateSelectionType.search && selectionState.selection.allSelected;\n\n    const _handleClickDelete = () => {\n        message.warn(t('global.feature_not_available'));\n    };\n\n    return (\n        <Wrapper active={active}>\n            <div>\n                <Dropdown\n                    overlay={\n                        <Menu>\n                            <Menu.Item onClick={selectVisible}>\n                                {t('items-menu-dropdown.select-visible', {nb: searchState.records.length})}\n                            </Menu.Item>\n                            {!selectionMode && (\n                                <Menu.Item onClick={selectAll}>\n                                    {t('items-menu-dropdown.select-all', {nb: searchState.totalCount})}\n                                </Menu.Item>\n                            )}\n                            <Menu.Item onClick={unselectAll}>{t('menu-selection.unselect-all')}</Menu.Item>\n                        </Menu>\n                    }\n                >\n                    <DropdownButton>\n                        <SelectionSummary>\n                            {t('menu-selection.nb-selected', {\n                                nbSelected: !allSelectActive ? countItemsSelected : searchState.totalCount,\n                                total: searchState.totalCount\n                            })}\n                            <DownOutlined style={{paddingLeft: 12}} />\n                        </SelectionSummary>\n                        <ClearSelection onClick={disableModeSelection}>\n                            <CloseCircleOutlined />\n                        </ClearSelection>\n                    </DropdownButton>\n                </Dropdown>\n\n                {!selectionMode && (\n                    <>\n                        <ActionsMenu />\n\n                        <div>\n                            <Button icon={<DeleteOutlined />} onClick={_handleClickDelete}>\n                                {t('global.delete')}\n                            </Button>\n                        </div>\n                    </>\n                )}\n            </div>\n        </Wrapper>\n    );\n}\n\nexport default MenuItemListSelected;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport MenuItemListSelected from './MenuItemListSelected';\nexport default MenuItemListSelected;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {DownOutlined} from '@ant-design/icons';\nimport {Button, Dropdown, Menu} from 'antd';\nimport useSearchReducer from 'hooks/useSearchReducer';\nimport {SearchActionTypes} from 'hooks/useSearchReducer/searchReducer';\nimport React from 'react';\nimport {useAppDispatch} from 'redux/store';\nimport {DragDropContext, Draggable, Droppable, DropResult, ResponderProvided} from 'react-beautiful-dnd';\nimport {useTranslation} from 'react-i18next';\nimport styled from 'styled-components';\nimport themingVar from '../../../themingVar';\nimport Filter from './Filter/Filter';\nimport {setDisplaySide} from 'redux/display';\nimport {TypeSideItem} from '_types/types';\nimport {IconClosePanel} from '../../../assets/icons/IconClosePanel';\nimport {getRequestFromFilters} from './getRequestFromFilter';\nimport AvailableSoon from 'components/shared/AvailableSoon';\n\nimport './Filters.css';\n\nconst Wrapper = styled.div`\n    width: 100%;\n    display: flex;\n    flex-flow: column nowrap;\n    border-right: ${themingVar['@divider-color']} 1px solid;\n    overflow-y: auto;\n    width: 1000px;\n`;\n\nconst Header = styled.div`\n    width: 100%;\n    background-color: ${themingVar['@leav-view-panel-background-title']};\n    display: grid;\n    grid-template-columns: repeat(2, auto);\n    justify-content: space-between;\n    padding: 0.3rem 0.3rem 0.3rem 1rem;\n    font-weight: 700;\n    border-bottom: 1px solid ${themingVar['@divider-color']};\n\n    & > * {\n        :first-of-type {\n            display: grid;\n            column-gap: 8px;\n            grid-template-columns: repeat(3, auto);\n            align-items: center;\n            justify-items: center;\n        }\n\n        :last-of-type {\n            display: flex;\n            align-items: center;\n            justify-content: flex-end;\n            column-gap: 8px;\n            grid-template-columns: repeat(2, auto);\n        }\n    }\n`;\n\nconst FiltersWrapper = styled.div`\n    height: calc(100% - 7rem);\n    overflow: auto;\n`;\n\nconst ListFilters = styled.div`\n    display: grid;\n`;\n\nfunction FiltersPanel(): JSX.Element {\n    const {t} = useTranslation();\n\n    const {state: searchState, dispatch: searchDispatch} = useSearchReducer();\n    const dispatch = useAppDispatch();\n\n    const resetFilters = () => {\n        searchDispatch({\n            type: SearchActionTypes.SET_FILTERS,\n            filters: []\n        });\n\n        searchDispatch({\n            type: SearchActionTypes.SET_QUERY_FILTERS,\n            queryFilters: []\n        });\n    };\n\n    const disableFilters = () => {\n        searchDispatch({\n            type: SearchActionTypes.SET_FILTERS,\n            filters: searchState.filters.map(f => ({...f, active: false}))\n        });\n    };\n\n    const handleHide = () => {\n        dispatch(\n            setDisplaySide({\n                visible: false,\n                type: TypeSideItem.filters\n            })\n        );\n    };\n\n    const onDragEnd = (result: DropResult, provided: ResponderProvided) => {\n        if (!result.destination) {\n            return;\n        }\n\n        const newFilter = searchState.filters\n            .map(filter => {\n                return {\n                    ...filter,\n                    index:\n                        result.source.index === filter.index\n                            ? result.destination.index\n                            : result.destination.index === filter.index\n                            ? result.source.index\n                            : filter.index\n                };\n            })\n            .sort((a, b) => a.index - b.index);\n\n        searchDispatch({\n            type: SearchActionTypes.SET_FILTERS,\n            filters: newFilter\n        });\n    };\n\n    const filtersSorted = searchState.filters.sort((a, b) => a.index - b.index);\n\n    const _handleApplyFilters = () => {\n        searchDispatch({\n            type: SearchActionTypes.SET_QUERY_FILTERS,\n            queryFilters: getRequestFromFilters(searchState.filters)\n        });\n\n        searchDispatch({type: SearchActionTypes.SET_LOADING, loading: true});\n    };\n\n    const allFiltersDisabled = searchState.filters.every(f => f.active === false);\n\n    return (\n        <Wrapper>\n            <Header>\n                <Dropdown\n                    overlay={\n                        <Menu>\n                            <Menu.Item disabled={allFiltersDisabled} onClick={disableFilters}>\n                                {t('filters.disable-filters')}\n                            </Menu.Item>\n                            <Menu.Item disabled={!searchState.filters.length} onClick={resetFilters}>\n                                {t('filters.remove-filters')}\n                            </Menu.Item>\n                            <Menu.Item disabled={true}>\n                                {t('filters.add-condition')} <AvailableSoon />\n                            </Menu.Item>\n                        </Menu>\n                    }\n                >\n                    <Button type={'text'}>\n                        {t('filters.filters')}\n                        <DownOutlined style={{marginTop: '5px', marginLeft: '-3px'}} />\n                    </Button>\n                </Dropdown>\n                <div>\n                    <Button disabled={!searchState.filters.length} onClick={_handleApplyFilters}>\n                        {t('filters.apply')}\n                    </Button>\n\n                    <Button onClick={handleHide} icon={<IconClosePanel />}></Button>\n                </div>\n            </Header>\n\n            <FiltersWrapper>\n                <DragDropContext onDragEnd={onDragEnd}>\n                    <Droppable droppableId={'droppable'}>\n                        {providedDroppable => (\n                            <ListFilters {...providedDroppable.droppableProps} ref={providedDroppable.innerRef}>\n                                {filtersSorted.map(filter => (\n                                    <Draggable\n                                        key={filter.index}\n                                        draggableId={filter.index.toString()}\n                                        index={filter.index}\n                                    >\n                                        {provided => (\n                                            <div ref={provided.innerRef} {...provided.draggableProps}>\n                                                <Filter\n                                                    key={filter.index}\n                                                    filter={filter}\n                                                    handleProps={provided.dragHandleProps}\n                                                />\n                                            </div>\n                                        )}\n                                    </Draggable>\n                                ))}\n                                {providedDroppable.placeholder}\n                            </ListFilters>\n                        )}\n                    </Droppable>\n                </DragDropContext>\n            </FiltersWrapper>\n        </Wrapper>\n    );\n}\n\nexport default FiltersPanel;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport FiltersPanel from './FiltersPanel';\nexport default FiltersPanel;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport gql from 'graphql-tag';\nimport {RecordFilterCondition, RecordFilterOperator, SortOrder, ViewSizes, ViewTypes} from '_gqlTypes/globalTypes';\nimport {ISystemTranslation} from '../../../_types/types';\n\nexport interface IGetViewListFilter {\n    field?: string;\n    value: any;\n    condition: RecordFilterCondition;\n    operator: RecordFilterOperator;\n    tree?: string;\n}\n\nexport interface IGetViewListSort {\n    field: string;\n    order: SortOrder;\n}\n\nexport interface IGetViewListSettings {\n    name: string;\n    value: any;\n}\n\nexport interface IGetViewListDisplay {\n    size: ViewSizes;\n    type: ViewTypes;\n}\n\nexport interface IGetViewListElement {\n    __typename: string; // FIXME: ??\n    id: string;\n    display: IGetViewListDisplay;\n    shared: boolean;\n    created_by: {\n        id: string;\n        whoAmI: {\n            id: string;\n            label: ISystemTranslation;\n            library: {\n                id: string;\n                gqlNames: {\n                    query: string;\n                    type: string;\n                };\n            };\n        };\n    };\n    label: ISystemTranslation;\n    description?: ISystemTranslation;\n    color?: string;\n    filters?: IGetViewListFilter[] | null;\n    sort?: IGetViewListSort | null;\n    settings?: IGetViewListSettings[];\n}\n\nexport interface IGetViewListQuery {\n    views: {totalCount: number; list: IGetViewListElement[]};\n}\n\nexport interface IGetViewListVariables {\n    libraryId: string;\n}\n\nexport const getViewsListQuery = gql`\n    query GET_VIEWS_LIST($libraryId: String!) {\n        views(library: $libraryId) {\n            totalCount\n            list {\n                id\n                display {\n                    size\n                    type\n                }\n                shared\n                created_by {\n                    id\n                    whoAmI {\n                        id\n                        label\n                        library {\n                            id\n                            gqlNames {\n                                query\n                                type\n                            }\n                        }\n                    }\n                }\n                label\n                description\n                color\n                filters {\n                    field\n                    value\n                    tree {\n                        id\n                        label\n                    }\n                    condition\n                    operator\n                }\n                sort {\n                    field\n                    order\n                }\n                settings {\n                    name\n                    value\n                }\n            }\n        }\n    }\n`;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {useMutation} from '@apollo/client';\nimport {Checkbox, Divider, Form, Input, Modal, Select} from 'antd';\nimport useSearchReducer from 'hooks/useSearchReducer';\nimport {SearchActionTypes} from 'hooks/useSearchReducer/searchReducer';\nimport React, {useState} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {ViewTypes} from '_gqlTypes/globalTypes';\nimport addViewMutation, {\n    IAddViewMutation,\n    IAddViewMutationVariables,\n    IAddViewMutationVariablesView\n} from '../../../../graphQL/mutations/views/addViewMutation';\nimport {useActiveLibrary} from '../../../../hooks/ActiveLibHook/ActiveLibHook';\nimport {useLang} from '../../../../hooks/LangHook/LangHook';\nimport {getRequestFromFilters} from '../../FiltersPanel/getRequestFromFilter';\nimport {ISystemTranslation, IView} from '../../../../_types/types';\n\ninterface IFormValues {\n    label: ISystemTranslation;\n    description: ISystemTranslation | null;\n    type: ViewTypes;\n    shared: boolean;\n}\n\ninterface IEditViewProps {\n    view: IView;\n    onClose: () => void;\n    visible: boolean;\n}\n\nfunction EditView({visible, onClose, view}: IEditViewProps): JSX.Element {\n    const {t} = useTranslation();\n\n    const {state: searchState, dispatch: searchDispatch} = useSearchReducer();\n\n    const [activeLibrary] = useActiveLibrary();\n    const [{availableLangs, defaultLang}] = useLang();\n    const [form] = Form.useForm();\n    const [confirmLoading, setConfirmLoading] = useState<boolean>(false);\n\n    const [addView] = useMutation<IAddViewMutation, IAddViewMutationVariables>(addViewMutation);\n\n    const _handleOk = async () => {\n        form.submit();\n    };\n\n    const _handleCancel = () => {\n        form.resetFields();\n        onClose();\n    };\n\n    const _handleSubmit = async (values: IFormValues) => {\n        setConfirmLoading(true);\n\n        const upView: IAddViewMutationVariablesView = {\n            id: view.id,\n            library: activeLibrary.id,\n            display: {type: values.type, size: view.display.size},\n            shared: values.shared,\n            label: values.label,\n            description: !Object.values(values.description).every(x => x === '') ? values.description : null,\n            settings: view.settings,\n            filters: getRequestFromFilters(view.filters),\n            sort: view.sort\n        };\n\n        try {\n            // save view in backend\n            await addView({variables: {view: upView}});\n        } catch (e) {\n            console.error(e);\n        }\n\n        if (view.shared !== values.shared) {\n            searchDispatch({\n                type: SearchActionTypes.SET_USER_VIEWS_ORDER,\n                userViewsOrder: !values.shared\n                    ? [...searchState.userViewsOrder, view.id]\n                    : searchState.userViewsOrder.filter(id => id !== view.id)\n            });\n\n            searchDispatch({\n                type: SearchActionTypes.SET_SHARED_VIEWS_ORDER,\n                sharedViewsOrder: !values.shared\n                    ? searchState.sharedViewsOrder.filter(id => id !== view.id)\n                    : [...searchState.sharedViewsOrder, view.id]\n            });\n        }\n\n        searchDispatch({\n            type: SearchActionTypes.SET_VIEW,\n            view: {\n                current:\n                    view.id === searchState.view.current.id\n                        ? {\n                              ...searchState.view.current,\n                              label: values.label,\n                              description: !Object.values(values.description).every(x => x === '')\n                                  ? values.description\n                                  : null,\n                              display: {type: values.type, size: view.display.size},\n                              shared: values.shared\n                          }\n                        : searchState.view.current,\n                reload: true,\n                sync: false\n            }\n        });\n\n        setConfirmLoading(false);\n        onClose();\n    };\n\n    return (\n        <Modal\n            forceRender\n            title={t('view.edit-view.title')}\n            visible={visible}\n            onCancel={_handleCancel}\n            onOk={_handleOk}\n            confirmLoading={confirmLoading}\n        >\n            <Form labelCol={{span: 8}} wrapperCol={{span: 16}} form={form} onFinish={_handleSubmit}>\n                {availableLangs.map(availableLang => (\n                    <div key={availableLang}>\n                        <h2>{t(`language.${availableLang}`)}</h2>\n\n                        <Form.Item\n                            label={t('view.edit-view.label')}\n                            name={['label', availableLang]}\n                            initialValue={view.label[availableLang]}\n                            rules={defaultLang === availableLang ? [{required: true}] : []}\n                            data-testid={`viewName-input-${availableLang}`}\n                        >\n                            <Input />\n                        </Form.Item>\n\n                        <Form.Item\n                            label={t('view.edit-view.description')}\n                            initialValue={!!view.description ? view.description[availableLang] || '' : ''}\n                            name={['description', availableLang]}\n                            data-testid={`description-input-${availableLang}`}\n                        >\n                            <Input />\n                        </Form.Item>\n\n                        <Divider />\n                    </div>\n                ))}\n\n                <Form.Item\n                    label={t('view.edit-view.type')}\n                    name=\"type\"\n                    data-testid=\"input-type\"\n                    initialValue={view.display.type}\n                >\n                    <Select>\n                        <Select.Option value={ViewTypes.list}>{t('view.type-list')}</Select.Option>\n                        <Select.Option value={ViewTypes.cards}>{t('view.type-cards')}</Select.Option>\n                    </Select>\n                </Form.Item>\n\n                <Form.Item\n                    name=\"shared\"\n                    initialValue={view.shared}\n                    valuePropName=\"checked\"\n                    data-testid=\"input-shared\"\n                    wrapperCol={{offset: 8, span: 16}}\n                >\n                    <Checkbox>{t('view.edit-view.shared')}</Checkbox>\n                </Form.Item>\n            </Form>\n        </Modal>\n    );\n}\n\nexport default EditView;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport EditView from './EditView';\nexport default EditView;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport gql from 'graphql-tag';\n\nexport interface IDeleteViewMutation {\n    id: string;\n}\n\nexport interface IDeleteViewMutationVariables {\n    viewId: string;\n}\n\nconst deleteViewMutation = gql`\n    mutation DELETE_VIEW($viewId: String!) {\n        deleteView(viewId: $viewId) {\n            id\n        }\n    }\n`;\n\nexport default deleteViewMutation;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport IconViewType from './IconViewType';\nexport default IconViewType;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {EllipsisOutlined} from '@ant-design/icons';\nimport {useMutation} from '@apollo/client';\nimport {Button, Dropdown, Menu, Typography} from 'antd';\nimport useSearchReducer from 'hooks/useSearchReducer';\nimport {SearchActionTypes} from 'hooks/useSearchReducer/searchReducer';\nimport _ from 'lodash';\nimport React, {useState} from 'react';\nimport {DraggableProvidedDragHandleProps} from 'react-beautiful-dnd';\nimport {useTranslation} from 'react-i18next';\nimport styled from 'styled-components';\nimport {defaultView} from '../../../../constants/constants';\nimport addViewMutation, {\n    IAddViewMutation,\n    IAddViewMutationVariables\n} from '../../../../graphQL/mutations/views/addViewMutation';\nimport deleteViewMutation, {\n    IDeleteViewMutation,\n    IDeleteViewMutationVariables\n} from '../../../../graphQL/mutations/views/deleteViewMutation';\nimport {useActiveLibrary} from '../../../../hooks/ActiveLibHook/ActiveLibHook';\nimport {useLang} from '../../../../hooks/LangHook/LangHook';\nimport themingVar from '../../../../themingVar';\nimport {localizedTranslation} from '../../../../utils';\nimport {IView} from '../../../../_types/types';\nimport IconViewType from '../../../IconViewType';\nimport {getRequestFromFilters} from '../../FiltersPanel/getRequestFromFilter';\n\ninterface IWrapperProps {\n    selected: boolean;\n}\n\nconst Infos = styled.div`\n    width: 100%;\n`;\n\nconst Wrapper = styled.div<IWrapperProps>`\n    background: ${({selected}) => (selected ? `${themingVar['@leav-background-active']} ` : 'none')};\n    padding: 0.5rem;\n    display: flex;\n    align-items: center;\n`;\n\nconst Handle = styled.div`\n    content: '....';\n    width: 20px;\n    height: 30px;\n    display: inline-block;\n    line-height: 5px;\n    padding: 3px 4px;\n    vertical-align: middle;\n    font-size: 12px;\n    font-family: sans-serif;\n    letter-spacing: 2px;\n    color: ${themingVar['@divider-color']};\n    text-shadow: 1px 0 1px black;\n\n    &::after {\n        content: '.. .. .. ..';\n    }\n`;\n\nconst Title = styled.div`\n    display: flex;\n    align-items: center;\n    margin-left: 10px;\n`;\n\nconst Description = styled.div`\n    opacity: 0.8;\n    margin-left: 10px;\n    overflow: hidden;\n`;\n\nconst CustomButton = styled(Button)`\n    background-color: ${themingVar['@default-bg']};\n    transform: scale(0.8);\n    &:hover {\n        background-color: ${themingVar['@default-bg']};\n    }\n`;\n\ninterface IViewProps {\n    view: IView;\n    onEdit: (viewId: string) => void;\n    handleProps?: DraggableProvidedDragHandleProps;\n}\n\nfunction View({view, onEdit, handleProps}: IViewProps): JSX.Element {\n    const {t} = useTranslation();\n    const [{lang, defaultLang}] = useLang();\n\n    const [activeLibrary] = useActiveLibrary();\n    const {state: searchState, dispatch: searchDispatch} = useSearchReducer();\n    const [description, setDescription] = useState<{expand: boolean; key: number}>({expand: false, key: 0});\n\n    const [addView] = useMutation<IAddViewMutation, IAddViewMutationVariables>(addViewMutation);\n    const [deleteView] = useMutation<IDeleteViewMutation, IDeleteViewMutationVariables>(deleteViewMutation);\n\n    const _changeView = () => {\n        searchDispatch({type: SearchActionTypes.SET_VIEW, view: {current: view, reload: true, sync: false}});\n    };\n\n    const ROWS_DESCRIPTION = 3;\n\n    const _handleDelete = async (event: any) => {\n        // cancel click view selection\n        event.domEvent.stopPropagation();\n\n        await deleteView({variables: {viewId: view.id}});\n\n        // set flag to refetch views\n        searchDispatch({\n            type: SearchActionTypes.SET_VIEW,\n            view: {\n                current: view.id === searchState.view.current.id ? defaultView : searchState.view.current,\n                reload: true,\n                sync: false\n            }\n        });\n\n        searchDispatch(\n            !view.shared\n                ? {\n                      type: SearchActionTypes.SET_USER_VIEWS_ORDER,\n                      userViewsOrder: searchState.userViewsOrder.filter(id => id !== view.id)\n                  }\n                : {\n                      type: SearchActionTypes.SET_SHARED_VIEWS_ORDER,\n                      sharedViewsOrder: searchState.sharedViewsOrder.filter(id => id !== view.id)\n                  }\n        );\n    };\n\n    const _handleDuplicate = async (event: any) => {\n        // cancel click view selection\n        event.domEvent.stopPropagation();\n\n        try {\n            const newViewRes = await addView({\n                variables: {\n                    view: {\n                        ..._.omit(view, 'owner'),\n                        label: {\n                            [defaultLang]: `${localizedTranslation(view.label, lang)} (${t('global.copy')})`\n                        },\n                        filters: getRequestFromFilters(view.filters),\n                        id: undefined,\n                        library: activeLibrary.id,\n                        shared: false\n                    }\n                }\n            });\n\n            // set flag to refetch views\n            searchDispatch({\n                type: SearchActionTypes.SET_VIEW,\n                view: {\n                    current: searchState.view.current,\n                    reload: true,\n                    sync: false\n                }\n            });\n\n            searchDispatch({\n                type: SearchActionTypes.SET_USER_VIEWS_ORDER,\n                userViewsOrder: [...searchState.userViewsOrder, newViewRes.data.saveView.id]\n            });\n        } catch (e) {\n            console.error(e);\n        }\n    };\n\n    const _handleEdit = (event: any) => {\n        // cancel click view selection\n        event.domEvent.stopPropagation();\n\n        onEdit(view.id);\n    };\n\n    const _onExpand = () => {\n        setDescription({expand: true, key: description.key});\n    };\n\n    const _onClose = () => {\n        setDescription({expand: false, key: description.key + 1});\n    };\n\n    const selected = view.id === searchState.view.current?.id;\n\n    const viewLabel = localizedTranslation(view.label, lang);\n    return (\n        <Wrapper key={view.id} selected={selected} onClick={_changeView} color={view.color}>\n            <Handle className=\"view-handle\" {...handleProps} />\n            <Infos>\n                <Title data-testid=\"view-title\">\n                    <IconViewType type={view.display.type} />\n                    <Typography.Text ellipsis={{tooltip: true}} style={{padding: '0 .5em', width: 'calc(100% - 1em)'}}>\n                        {viewLabel}\n                    </Typography.Text>\n                </Title>\n                {view.description && (\n                    <Description>\n                        <Typography.Paragraph\n                            key={description.key}\n                            ellipsis={{\n                                rows: ROWS_DESCRIPTION,\n                                expandable: true,\n                                onExpand: _onExpand,\n                                symbol: t('view.see-more')\n                            }}\n                            style={{marginBottom: 0}}\n                        >\n                            {localizedTranslation(view.description, lang)}\n                        </Typography.Paragraph>\n                        {description.expand && (\n                            <a\n                                href=\"!#\"\n                                onClick={ev => {\n                                    ev.preventDefault();\n                                    _onClose();\n                                }}\n                            >\n                                {t('global.close')}\n                            </a>\n                        )}\n                    </Description>\n                )}\n            </Infos>\n\n            <Dropdown\n                overlay={\n                    <Menu>\n                        <Menu.Item disabled={!view.owner} onClick={_handleEdit}>\n                            {t('global.edit')}\n                        </Menu.Item>\n                        <Menu.Item onClick={_handleDuplicate}>{t('global.duplicate')}</Menu.Item>\n                        <Menu.Item disabled={!view.owner} onClick={_handleDelete}>\n                            {t('view.delete')}\n                        </Menu.Item>\n                    </Menu>\n                }\n            >\n                <CustomButton onClick={e => e.stopPropagation()} icon={<EllipsisOutlined />} />\n            </Dropdown>\n        </Wrapper>\n    );\n}\n\nexport default View;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport View from './View';\nexport default View;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {useMutation, useQuery} from '@apollo/client';\nimport {Badge, Button, Input, Spin} from 'antd';\nimport ErrorDisplay from 'components/shared/ErrorDisplay';\nimport {saveUserData} from 'graphQL/mutations/userData/saveUserData';\nimport {getUserDataQuery} from 'graphQL/queries/userData/getUserData';\nimport useSearchReducer from 'hooks/useSearchReducer';\nimport {SearchActionTypes} from 'hooks/useSearchReducer/searchReducer';\nimport _ from 'lodash';\nimport React, {useEffect, useState} from 'react';\nimport {DragDropContext, Draggable, Droppable, DropResult, ResponderProvided} from 'react-beautiful-dnd';\nimport {useTranslation} from 'react-i18next';\nimport {setDisplaySide} from 'redux/display';\nimport {useAppDispatch} from 'redux/store';\nimport styled from 'styled-components';\nimport {GET_USER_DATA, GET_USER_DATAVariables} from '_gqlTypes/GET_USER_DATA';\nimport {GET_VIEWS_LIST, GET_VIEWS_LISTVariables, GET_VIEWS_LIST_views_list} from '_gqlTypes/GET_VIEWS_LIST';\nimport {SAVE_USER_DATA, SAVE_USER_DATAVariables} from '_gqlTypes/SAVE_USER_DATA';\nimport {IQueryFilter, TypeSideItem} from '_types/types';\nimport {IconClosePanel} from '../../../assets/icons/IconClosePanel';\nimport {\n    getViewsListQuery,\n    IGetViewListDisplay,\n    IGetViewListSort\n} from '../../../graphQL/queries/views/getViewsListQuery';\nimport {useLang} from '../../../hooks/LangHook/LangHook';\nimport {useUser} from '../../../hooks/UserHook/UserHook';\nimport themingVar from '../../../themingVar';\nimport {localizedTranslation} from '../../../utils';\nimport {IView} from '../../../_types/types';\nimport {getFiltersFromRequest} from '../FiltersPanel/getFiltersFromRequest';\nimport EditView from './EditView';\nimport View from './View';\n\nconst Wrapper = styled.div`\n    width: 100%;\n    display: flex;\n    flex-flow: column nowrap;\n    border-right: ${themingVar['@divider-color']} 1px solid;\n    overflow-y: auto;\n`;\n\nconst Header = styled.div`\n    width: 100%;\n    background-color: ${themingVar['@leav-view-panel-background-title']};\n    display: grid;\n    grid-template-columns: repeat(2, auto);\n    justify-content: space-between;\n    padding: 0.3rem 0.3rem 0.3rem 1rem;\n    font-weight: 700;\n    border-bottom: 1px solid ${themingVar['@divider-color']};\n\n    & > * {\n        :first-of-type {\n            display: grid;\n            column-gap: 8px;\n            grid-template-columns: repeat(3, auto);\n            align-items: center;\n            justify-items: center;\n        }\n\n        :last-of-type {\n            display: grid;\n            align-items: center;\n            justify-content: flex-end;\n            column-gap: 8px;\n            grid-template-columns: repeat(2, auto);\n        }\n    }\n`;\n\nconst SubHeader = styled.div`\n    width: 100%;\n    border-top: ${themingVar['@item-active-bg']} 1px solid;\n    border-bottom: ${themingVar['@item-active-bg']} 1px solid;\n    padding: 0.3rem;\n    padding-left: 1rem;\n    font-weight: 700;\n    font-size: 14px;\n`;\n\nconst Views = styled.div`\n    width: 100%;\n`;\n\nconst SearchWrapper = styled.div`\n    margin: 1rem;\n`;\n\nconst CustomBadge = styled(Badge)`\n    margin-left: 8px;\n    && > * {\n        background-color: ${themingVar['@divider-color']};\n        color: ${themingVar['@default-text-color']};\n    }\n`;\n\nconst _sortViewFunction = (referenceOrder: string[]) => (viewA: IView, viewB: IView) => {\n    const orderA = referenceOrder.indexOf(viewA.id);\n    const orderB = referenceOrder.indexOf(viewB.id);\n    const isAOrdered = orderA !== -1;\n    const isBOrdered = orderB !== -1;\n\n    if (isAOrdered && isBOrdered) {\n        return orderA - orderB;\n    } else if (isAOrdered && !isBOrdered) {\n        return -1;\n    } else if (!isAOrdered && isBOrdered) {\n        return 1;\n    } else {\n        return Number(viewA.id) - Number(viewB.id);\n    }\n};\n\nfunction ViewPanel(): JSX.Element {\n    const {t} = useTranslation();\n\n    const [user] = useUser();\n    const [{lang}] = useLang();\n    const [search, setSearch] = useState('');\n    const {state: searchState, dispatch: searchDispatch} = useSearchReducer();\n    const [editView, setEditView] = useState<IView | false>(false);\n    const dispatch = useAppDispatch();\n\n    const USER_VIEWS_ORDER_KEY = 'user_views_order_' + searchState.library.id;\n    const SHARED_VIEWS_ORDER_KEY = 'shared_views_order_' + searchState.library.id;\n\n    const {data, loading, error, refetch} = useQuery<GET_VIEWS_LIST, GET_VIEWS_LISTVariables>(getViewsListQuery, {\n        variables: {\n            libraryId: searchState.library.id || ''\n        }\n    });\n\n    const orderDataQuery = useQuery<GET_USER_DATA, GET_USER_DATAVariables>(getUserDataQuery, {\n        variables: {keys: [USER_VIEWS_ORDER_KEY, SHARED_VIEWS_ORDER_KEY]},\n        onCompleted: d => {\n            searchDispatch({\n                type: SearchActionTypes.SET_USER_VIEWS_ORDER,\n                userViewsOrder: d.userData?.data[USER_VIEWS_ORDER_KEY] || []\n            });\n            searchDispatch({\n                type: SearchActionTypes.SET_SHARED_VIEWS_ORDER,\n                sharedViewsOrder: d.userData?.data[SHARED_VIEWS_ORDER_KEY] || []\n            });\n        }\n    });\n\n    const [updateViewsOrderMutation] = useMutation<SAVE_USER_DATA, SAVE_USER_DATAVariables>(saveUserData);\n\n    useEffect(() => {\n        if (searchState.view.reload) {\n            refetch();\n        }\n    }, [searchState.view, refetch, searchDispatch]);\n\n    if (loading) {\n        return (\n            <div>\n                <Spin />\n            </div>\n        );\n    }\n\n    const _handleSearchSubmit = (value: string) => {\n        setSearch(value);\n    };\n\n    const {sharedViews, userViews}: {sharedViews: IView[]; userViews: IView[]} = data?.views.list.reduce(\n        (acc, view) => {\n            const viewFilters: IQueryFilter[] = view.filters.map(f => ({\n                ...f,\n                treeId: f.tree?.id\n            }));\n\n            const v: IView = {\n                ...(_.omit(view, ['created_by', '__typename']) as GET_VIEWS_LIST_views_list),\n                owner: view.created_by.id === user?.userId,\n                filters: Array.isArray(viewFilters)\n                    ? getFiltersFromRequest(viewFilters, searchState.library.id, searchState.attributes)\n                    : [],\n                sort: _.omit(view.sort, ['__typename']) as IGetViewListSort,\n                display: _.omit(view.display, ['__typename']) as IGetViewListDisplay,\n                settings: view.settings?.map(s => _.omit(s, '__typename'))\n            };\n\n            if (search && !localizedTranslation(v.label, lang).toUpperCase().includes(search.toUpperCase())) {\n                return acc;\n            }\n\n            if (v.shared) {\n                return {...acc, sharedViews: [...acc.sharedViews, v]};\n            }\n\n            return {...acc, userViews: [...acc.userViews, v]};\n        },\n        {sharedViews: [], userViews: []}\n    ) ?? {sharedViews: [], userViews: []};\n\n    if (error || orderDataQuery.error) {\n        return <ErrorDisplay message={(error || orderDataQuery.error).message} />;\n    }\n\n    if (!sharedViews || !userViews) {\n        return <ErrorDisplay message={t('error.error_occurred')} />;\n    }\n\n    const _showModal = (view: IView) => {\n        setEditView(view);\n    };\n\n    const _closeModal = () => {\n        setEditView(false);\n    };\n\n    const onDragEnd = async (result: DropResult, provided: ResponderProvided) => {\n        if (!result.destination) {\n            return;\n        }\n\n        const isOrderingUserViews = result.source.droppableId === 'user';\n\n        const viewsListBefore = isOrderingUserViews ? sortedUserViews : sortedSharedViews;\n        const orderedViews = viewsListBefore.map(v => v.id);\n\n        const element = orderedViews[result.source.index];\n        orderedViews.splice(result.source.index, 1);\n        orderedViews.splice(result.destination.index, 0, element);\n\n        searchDispatch(\n            isOrderingUserViews\n                ? {type: SearchActionTypes.SET_USER_VIEWS_ORDER, userViewsOrder: orderedViews}\n                : {type: SearchActionTypes.SET_SHARED_VIEWS_ORDER, sharedViewsOrder: orderedViews}\n        );\n\n        const keyToUpdate = isOrderingUserViews ? USER_VIEWS_ORDER_KEY : SHARED_VIEWS_ORDER_KEY;\n        updateViewsOrderMutation({\n            variables: {\n                key: keyToUpdate,\n                value: orderedViews,\n                global: false\n            },\n            update: (cache, mutationResult) => {\n                const queryToUpdate = {\n                    query: getUserDataQuery,\n                    variables: {\n                        keys: [USER_VIEWS_ORDER_KEY, SHARED_VIEWS_ORDER_KEY]\n                    }\n                };\n                const cacheData = cache.readQuery<GET_USER_DATA, GET_USER_DATAVariables>(queryToUpdate);\n                cache.writeQuery<GET_USER_DATA, GET_USER_DATAVariables>({\n                    ...queryToUpdate,\n                    data: {\n                        userData: {\n                            global: cacheData.userData.global,\n                            data: {\n                                ...cacheData.userData.data,\n                                [keyToUpdate]: mutationResult.data.saveUserData\n                            }\n                        }\n                    }\n                });\n            }\n        });\n    };\n\n    const sortedUserViews = userViews.sort(_sortViewFunction(searchState.userViewsOrder));\n    const sortedSharedViews = sharedViews.sort(_sortViewFunction(searchState.sharedViewsOrder));\n\n    const handleHide = () => {\n        dispatch(\n            setDisplaySide({\n                visible: false,\n                type: TypeSideItem.view\n            })\n        );\n    };\n\n    return (\n        <Wrapper>\n            {editView && <EditView view={editView} visible={!!editView} onClose={_closeModal} />}\n            <Header>\n                <span>{t('view.views')}</span>\n                <Button onClick={handleHide} icon={<IconClosePanel />}></Button>\n            </Header>\n            <SearchWrapper>\n                <Input.Search placeholder={t('view.search')} onSearch={_handleSearchSubmit} />\n            </SearchWrapper>\n\n            <SubHeader>{t('view.shared-views')}</SubHeader>\n\n            <DragDropContext onDragEnd={onDragEnd}>\n                <Droppable droppableId={'shared'}>\n                    {providedDroppable => (\n                        <Views {...providedDroppable.droppableProps} ref={providedDroppable.innerRef}>\n                            {sortedSharedViews.map((view, idx) => (\n                                <Draggable key={idx} draggableId={idx.toString()} index={idx}>\n                                    {provided => (\n                                        <div\n                                            ref={provided.innerRef}\n                                            {...provided.draggableProps}\n                                            {...provided.dragHandleProps}\n                                        >\n                                            <View\n                                                key={view.id}\n                                                view={view}\n                                                onEdit={() => _showModal(view)}\n                                                handleProps={provided.dragHandleProps}\n                                            />\n                                        </div>\n                                    )}\n                                </Draggable>\n                            ))}\n                            {providedDroppable.placeholder}\n                        </Views>\n                    )}\n                </Droppable>\n            </DragDropContext>\n\n            <SubHeader>\n                {t('view.my-views')}\n                <CustomBadge count={userViews.length} />\n            </SubHeader>\n            <DragDropContext onDragEnd={onDragEnd}>\n                <Droppable droppableId={'user'}>\n                    {providedDroppable => (\n                        <Views {...providedDroppable.droppableProps} ref={providedDroppable.innerRef}>\n                            {sortedUserViews.map((view, idx) => (\n                                <Draggable key={idx} draggableId={idx.toString()} index={idx}>\n                                    {provided => (\n                                        <div\n                                            ref={provided.innerRef}\n                                            {...provided.draggableProps}\n                                            {...provided.dragHandleProps}\n                                        >\n                                            <View\n                                                key={view.id}\n                                                view={view}\n                                                onEdit={() => _showModal(view)}\n                                                handleProps={provided.dragHandleProps}\n                                            />\n                                        </div>\n                                    )}\n                                </Draggable>\n                            ))}\n                            {providedDroppable.placeholder}\n                        </Views>\n                    )}\n                </Droppable>\n            </DragDropContext>\n        </Wrapper>\n    );\n}\n\nexport default ViewPanel;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport ViewPanel from './ViewPanel';\nexport default ViewPanel;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport React from 'react';\nimport {useAppSelector} from 'redux/store';\nimport styled, {CSSObject} from 'styled-components';\nimport {TypeSideItem} from '../../../_types/types';\nimport FiltersPanel from '../FiltersPanel';\nimport ViewPanel from '../ViewPanel';\n\ninterface IWrapperProps {\n    visible: boolean;\n    style?: CSSObject;\n}\n\nconst Wrapper = styled.div<IWrapperProps>`\n    grid-area: side;\n    display: ${({visible}) => (visible ? 'flex' : 'none')};\n    position: relative;\n    height: calc(100vh - 7rem);\n    overflow: hidden;\n`;\n\nfunction SideItems(): JSX.Element {\n    const {visible, type} = useAppSelector(state => state.display.side);\n\n    return (\n        <Wrapper visible={visible} className={visible ? 'wrapped-filter-open' : 'wrapped-filter-close'}>\n            {visible && type === TypeSideItem.filters && <FiltersPanel />}\n            {visible && type === TypeSideItem.view && <ViewPanel />}\n        </Wrapper>\n    );\n}\n\nexport default SideItems;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport SideItems from './SideItems';\nexport default SideItems;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {useLazyQuery, useMutation, useQuery} from '@apollo/client';\nimport ErrorDisplay from 'components/shared/ErrorDisplay';\nimport {ErrorDisplayTypes} from 'components/shared/ErrorDisplay/ErrorDisplay';\nimport {SelectionModeContext} from 'context';\nimport {saveUserData} from 'graphQL/mutations/userData/saveUserData';\nimport {getUserDataQuery} from 'graphQL/queries/userData/getUserData';\nimport {SearchContext} from 'hooks/useSearchReducer/searchContext';\nimport searchReducer, {initialSearchState, SearchActionTypes} from 'hooks/useSearchReducer/searchReducer';\nimport {ISearchRecord} from 'hooks/useSearchReducer/_types';\nimport _ from 'lodash';\nimport React, {useEffect, useReducer} from 'react';\nimport {useAppSelector} from 'redux/store';\nimport styled, {CSSObject} from 'styled-components';\nimport {checkTypeIsLink, getAttributeFromKey, localizedTranslation} from 'utils';\nimport {GET_ATTRIBUTES_BY_LIB_attributes_list_StandardAttribute} from '_gqlTypes/GET_ATTRIBUTES_BY_LIB';\nimport {\n    GET_LIBRARY_DETAIL_EXTENDED_libraries_list,\n    GET_LIBRARY_DETAIL_EXTENDED_libraries_list_attributes_LinkAttribute,\n    GET_LIBRARY_DETAIL_EXTENDED_libraries_list_attributes_TreeAttribute\n} from '_gqlTypes/GET_LIBRARY_DETAIL_EXTENDED';\nimport {GET_USER_DATA, GET_USER_DATAVariables} from '_gqlTypes/GET_USER_DATA';\nimport {\n    GET_VIEW,\n    GET_VIEWVariables,\n    GET_VIEW_view,\n    GET_VIEW_view_display,\n    GET_VIEW_view_sort\n} from '_gqlTypes/GET_VIEW';\nimport {AttributeFormat, AttributeType} from '_gqlTypes/globalTypes';\nimport {SAVE_USER_DATA, SAVE_USER_DATAVariables} from '_gqlTypes/SAVE_USER_DATA';\nimport {defaultSort, defaultView, panelSize, viewSettingsField} from '../../constants/constants';\nimport {getRecordsFromLibraryQuery} from '../../graphQL/queries/records/getRecordsFromLibraryQuery';\nimport {\n    IGetRecordsFromLibraryQuery,\n    IGetRecordsFromLibraryQueryVariables\n} from '../../graphQL/queries/records/getRecordsFromLibraryQueryTypes';\nimport {getViewByIdQuery} from '../../graphQL/queries/views/getViewById';\nimport {useLang} from '../../hooks/LangHook/LangHook';\nimport {useUser} from '../../hooks/UserHook/UserHook';\nimport {\n    IAttribute,\n    IField,\n    IParentAttributeData,\n    IQueryFilter,\n    IView,\n    SharedStateSelectionType\n} from '../../_types/types';\nimport DisplayTypeSelector from './DisplayTypeSelector';\nimport {getFiltersFromRequest} from './FiltersPanel/getFiltersFromRequest';\nimport {getRequestFromFilters} from './FiltersPanel/getRequestFromFilter';\nimport {manageItems} from './manageItems';\nimport MenuItemList from './MenuItemList';\nimport MenuItemListSelected from './MenuItemListSelected';\nimport SideItems from './SideItems';\n\ninterface IWrapperProps {\n    showSide: boolean;\n    style?: CSSObject;\n}\n\nconst Wrapper = styled.div<IWrapperProps>`\n    display: grid;\n\n    ${({showSide}) =>\n        showSide\n            ? `\n            grid-template-columns: ${panelSize} calc(100% - ${panelSize});\n            grid-template-rows: 92% auto;\n            grid-template-areas:\n                'side data'\n                'side pagination';`\n            : `\n            grid-template-columns: auto;\n            grid-template-rows: 92% auto;\n            grid-template-areas:\n                'data'\n                'pagination';`}\n\n    height: calc(100vh - 7rem);\n    position: relative;\n    overflow: auto;\n`;\n\nconst MenuWrapper = styled.div`\n    border-bottom: 1px solid rgb(235, 237, 240);\n    padding: 0 1rem;\n    height: 4rem;\n\n    display: flex;\n    align-content: center;\n    justify-content: space-around;\n`;\n\ninterface ILibraryItemsListProps {\n    selectionMode?: boolean;\n    library: GET_LIBRARY_DETAIL_EXTENDED_libraries_list;\n}\n\nfunction LibraryItemsList({selectionMode, library}: ILibraryItemsListProps): JSX.Element {\n    const [{lang}] = useLang();\n    const [user] = useUser();\n\n    const {display, selection: selectionState} = useAppSelector(state => state); // keep selection\n    const [searchState, searchDispatch] = useReducer(searchReducer, {...initialSearchState, library});\n    const [updateSelectedViewMutation] = useMutation<SAVE_USER_DATA, SAVE_USER_DATAVariables>(saveUserData);\n    const SELECTED_VIEW_KEY = 'selected_view_' + library.id;\n\n    const hasAccess = library.permissions.access_library;\n    const attributesFromQuery: IAttribute[] = library.attributes.reduce((acc: IAttribute[], attribute) => {\n        if (\n            (attribute.format === null ||\n                (attribute.format && Object.values(AttributeFormat).includes(attribute.format))) &&\n            attribute.type &&\n            Object.values(AttributeType).includes(attribute.type)\n        ) {\n            const newAttributes: IAttribute[] = [\n                {\n                    id: attribute.id,\n                    type: attribute.type,\n                    format: attribute.format,\n                    label: attribute.label,\n                    isLink: checkTypeIsLink(attribute.type),\n                    isMultiple: attribute.multiple_values,\n                    linkedLibrary: (attribute as GET_LIBRARY_DETAIL_EXTENDED_libraries_list_attributes_LinkAttribute)\n                        .linked_library,\n                    linkedTree: (attribute as GET_LIBRARY_DETAIL_EXTENDED_libraries_list_attributes_TreeAttribute)\n                        .linked_tree,\n                    library: library.id,\n                    embedded_fields: (attribute as GET_ATTRIBUTES_BY_LIB_attributes_list_StandardAttribute)\n                        .embedded_fields\n                }\n            ];\n\n            // case attribute is a linked attribute\n            if (\n                (attribute.type === AttributeType.simple_link || attribute.type === AttributeType.advanced_link) &&\n                (attribute as GET_LIBRARY_DETAIL_EXTENDED_libraries_list_attributes_LinkAttribute).linked_library\n            ) {\n                const linkedLibraryId = (attribute as GET_LIBRARY_DETAIL_EXTENDED_libraries_list_attributes_LinkAttribute)\n                    .linked_library.id;\n                const newLinkedAttributes: IAttribute[] = (attribute as GET_LIBRARY_DETAIL_EXTENDED_libraries_list_attributes_LinkAttribute).linked_library.attributes.map(\n                    linkedAttribute => ({\n                        id: linkedAttribute.id,\n                        type: linkedAttribute.type,\n                        format: linkedAttribute.format,\n                        label: linkedAttribute.label,\n                        isLink: checkTypeIsLink(linkedAttribute.type),\n                        isMultiple: linkedAttribute.multiple_values,\n                        linkedLibrary: (attribute as GET_LIBRARY_DETAIL_EXTENDED_libraries_list_attributes_LinkAttribute)\n                            .linked_library,\n                        linkedTree: (attribute as GET_LIBRARY_DETAIL_EXTENDED_libraries_list_attributes_TreeAttribute)\n                            .linked_tree,\n                        library: linkedLibraryId\n                    })\n                );\n\n                newAttributes.push(...newLinkedAttributes);\n            }\n\n            if (\n                attribute.type === AttributeType.tree &&\n                (attribute as GET_LIBRARY_DETAIL_EXTENDED_libraries_list_attributes_TreeAttribute).linked_tree\n            ) {\n                const newLinkedAttributes: IAttribute[] = (attribute as GET_LIBRARY_DETAIL_EXTENDED_libraries_list_attributes_TreeAttribute).linked_tree.libraries\n                    .map(linkedTreeLibrary => {\n                        const linkedLibraryId = linkedTreeLibrary.library.id;\n                        return linkedTreeLibrary.library.attributes.map(linkedAttribute => ({\n                            id: linkedAttribute.id,\n                            type: linkedAttribute.type,\n                            format: linkedAttribute.format,\n                            label: linkedAttribute.label,\n                            isLink: checkTypeIsLink(linkedAttribute.type),\n                            isMultiple: linkedAttribute.multiple_values,\n                            library: linkedLibraryId\n                        }));\n                    })\n                    .flat();\n\n                newAttributes.push(...newLinkedAttributes);\n            }\n\n            return [...acc, ...newAttributes];\n        }\n\n        return acc;\n    }, []);\n\n    const libraryDefaultView = library.defaultView\n        ? {\n              id: library.defaultView.id,\n              owner: true,\n              library: library.id,\n              label: library.defaultView.label,\n              description: library.defaultView.description,\n              display: library.defaultView.display,\n              color: library.defaultView.color,\n              shared: library.defaultView.shared,\n              filters: getFiltersFromRequest(library.defaultView.filters ?? [], library.id, attributesFromQuery),\n              sort: library.defaultView.sort,\n              settings: library.defaultView.settings\n          }\n        : {...defaultView, label: defaultView.label};\n\n    useQuery<GET_USER_DATA, GET_USER_DATAVariables>(getUserDataQuery, {\n        fetchPolicy: 'no-cache',\n        variables: {keys: [SELECTED_VIEW_KEY]},\n        skip: !hasAccess,\n        onCompleted: d => {\n            const viewId = d.userData?.data[SELECTED_VIEW_KEY] || libraryDefaultView.id;\n\n            searchDispatch({type: SearchActionTypes.SET_ATTRIBUTES, attributes: attributesFromQuery});\n\n            if (viewId === libraryDefaultView.id) {\n                searchDispatch({\n                    type: SearchActionTypes.SET_VIEW,\n                    view: {current: libraryDefaultView, reload: true, sync: false}\n                });\n            } else {\n                getSelectedView({\n                    variables: {\n                        viewId\n                    }\n                });\n            }\n        }\n    });\n\n    const [getSelectedView] = useLazyQuery<GET_VIEW, GET_VIEWVariables>(getViewByIdQuery, {\n        onCompleted: data => {\n            const viewFilters: IQueryFilter[] = data.view.filters.map(f => ({\n                ...f,\n                treeId: f.tree?.id\n            }));\n            const v: IView = {\n                ...(_.omit(data.view, ['created_by', '__typename']) as GET_VIEW_view),\n                owner: data.view.created_by.id === user?.userId,\n                filters: Array.isArray(data.view.filters)\n                    ? getFiltersFromRequest(viewFilters, searchState.library.id, searchState.attributes)\n                    : [],\n                sort: _.omit(data.view.sort, ['__typename']) as GET_VIEW_view_sort,\n                display: _.omit(data.view.display, ['__typename']) as GET_VIEW_view_display,\n                settings: data.view.settings?.map(s => _.omit(s, '__typename'))\n            };\n\n            searchDispatch({type: SearchActionTypes.SET_VIEW, view: {current: v, reload: true, sync: false}});\n        },\n        onError: () =>\n            // Error when fetching view, just load default view\n            searchDispatch({\n                type: SearchActionTypes.SET_VIEW,\n                view: {current: libraryDefaultView, reload: true, sync: false}\n            })\n    });\n\n    // Get data\n    const [getRecords, {error: getRecordsError, refetch}] = useLazyQuery<\n        IGetRecordsFromLibraryQuery,\n        IGetRecordsFromLibraryQueryVariables\n    >(getRecordsFromLibraryQuery(library.gqlNames.query, searchState.fields), {\n        fetchPolicy: 'network-only',\n        onCompleted: data => {\n            const itemsFromQuery = data ? data[library.gqlNames.query || ''].list : [];\n\n            const newRecords: ISearchRecord[] = manageItems({\n                items: itemsFromQuery,\n                fields: searchState.fields\n            });\n\n            searchDispatch({\n                type: SearchActionTypes.SET_TOTAL_COUNT,\n                totalCount: data[library.gqlNames.query]?.totalCount\n            });\n\n            searchDispatch({type: SearchActionTypes.SET_RECORDS, records: newRecords});\n            searchDispatch({type: SearchActionTypes.SET_LOADING, loading: false});\n        }\n    });\n\n    useEffect(() => {\n        if (!searchState.view.reload || !hasAccess) {\n            return;\n        }\n\n        const getFieldFromKey = (fieldKey: string): IField => {\n            let parentAttributeData: IParentAttributeData | undefined;\n            const splitKey = fieldKey.split('.');\n            const attribute = getAttributeFromKey(fieldKey, library.id, searchState.attributes);\n            let recordLibrary = null;\n\n            // For attributes through tree attribute, key is [parent attribute].[record library].[attribute]\n            if (splitKey.length === 3) {\n                const parentAttributeId = splitKey[0];\n                const parentAttribute = searchState.attributes.find(\n                    att => parentAttributeId === att.id && library.id === att.library\n                );\n\n                if (parentAttribute) {\n                    parentAttributeData = {\n                        id: parentAttribute.id,\n                        type: parentAttribute.type\n                    };\n\n                    recordLibrary = splitKey[1];\n                }\n            }\n\n            if (!attribute) {\n                return null;\n            }\n\n            const label =\n                typeof attribute.label === 'string' ? attribute.label : localizedTranslation(attribute.label, lang);\n\n            const field: IField = {\n                key: fieldKey,\n                id: attribute.id,\n                library: attribute.library,\n                label,\n                format: attribute.format,\n                type: attribute.type,\n                parentAttributeData,\n                recordLibrary\n            };\n\n            return field;\n        };\n\n        // Load initials fields from view fields\n        const newFields: IField[] = !!searchState.view.current.settings?.find(s => s.name === viewSettingsField)\n            ? searchState.view.current?.settings\n                  .find(s => s.name === viewSettingsField)\n                  .value.reduce((acc, fieldKey) => {\n                      const field = getFieldFromKey(fieldKey);\n                      return field ? [...acc, field] : acc;\n                  }, [])\n            : [];\n\n        searchDispatch({type: SearchActionTypes.SET_FIELDS, fields: newFields});\n\n        const queryFilters = getRequestFromFilters(searchState.view.current.filters);\n\n        searchDispatch({\n            type: SearchActionTypes.SET_FILTERS,\n            filters: searchState.view.current.filters\n        });\n\n        searchDispatch({\n            type: SearchActionTypes.SET_QUERY_FILTERS,\n            queryFilters\n        });\n\n        // update sort\n        const field = searchState.view.current.sort?.field || defaultSort.field;\n        const order = searchState.view.current.sort?.order || defaultSort.order;\n\n        getRecords({\n            variables: {\n                limit: searchState.pagination,\n                offset: searchState.offset,\n                filters: queryFilters,\n                sortField: field,\n                sortOrder: order,\n                fullText: searchState.fullText\n            }\n        });\n\n        updateSelectedViewMutation({\n            variables: {\n                key: SELECTED_VIEW_KEY,\n                value: searchState.view.current.id,\n                global: false\n            }\n        });\n\n        searchDispatch({type: SearchActionTypes.SET_SORT, sort: {field, order, active: true}});\n        searchDispatch({type: SearchActionTypes.SET_DISPLAY, display: searchState.view.current.display});\n        searchDispatch({\n            type: SearchActionTypes.SET_VIEW,\n            view: {current: searchState.view.current, reload: false, sync: true}\n        });\n    }, [\n        SELECTED_VIEW_KEY,\n        updateSelectedViewMutation,\n        getRecords,\n        searchState.view,\n        searchState.attributes,\n        searchState.library.id,\n        searchState.fullText,\n        searchState.offset,\n        searchState.pagination,\n        searchState.queryFilters,\n        searchState.sort,\n        lang,\n        searchDispatch,\n        library,\n        hasAccess\n    ]);\n\n    useEffect(() => {\n        if (!hasAccess) {\n            return;\n        }\n\n        if (searchState.loading) {\n            getRecords({\n                variables: {\n                    limit: searchState.pagination,\n                    offset: searchState.offset,\n                    filters: searchState.queryFilters,\n                    sortField: searchState.sort?.field ?? defaultSort.field,\n                    sortOrder: searchState.sort?.order ?? defaultSort.order,\n                    fullText: searchState.fullText\n                }\n            });\n        }\n    }, [\n        searchState.fullText,\n        searchState.offset,\n        searchState.pagination,\n        searchState.queryFilters,\n        searchState.sort,\n        searchState.loading,\n        library.gqlNames.query,\n        getRecords,\n        hasAccess\n    ]);\n\n    if (getRecordsError) {\n        return <ErrorDisplay message={getRecordsError.message} />;\n    }\n\n    if (!hasAccess) {\n        return <ErrorDisplay type={ErrorDisplayTypes.PERMISSION_ERROR} />;\n    }\n\n    // if some elements are selected and the selection type is search, show the selection Menu\n    const menuSelectedActive = selectionMode\n        ? !!selectionState.searchSelection.selected.length ||\n          (selectionState.searchSelection.type === SharedStateSelectionType.search &&\n              selectionState.searchSelection.allSelected)\n        : !!selectionState.selection.selected.length ||\n          (selectionState.selection.type === SharedStateSelectionType.search && selectionState.selection.allSelected);\n\n    return (\n        <SearchContext.Provider value={{state: searchState, dispatch: searchDispatch}}>\n            <SelectionModeContext.Provider value={selectionMode}>\n                <MenuWrapper>\n                    <MenuItemList refetch={refetch} />\n                    <MenuItemListSelected active={menuSelectedActive} />\n                </MenuWrapper>\n\n                <Wrapper\n                    showSide={display.side.visible}\n                    className={display.side.visible ? 'wrapper-open' : 'wrapper-close'}\n                >\n                    <SideItems />\n                    <DisplayTypeSelector />\n                </Wrapper>\n            </SelectionModeContext.Provider>\n        </SearchContext.Provider>\n    );\n}\n\nexport default LibraryItemsList;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport LibraryItemsList from './LibraryItemsList';\nexport default LibraryItemsList;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport LibraryItemsList from 'components/LibraryItemsList';\nimport ErrorDisplay from 'components/shared/ErrorDisplay';\nimport {ErrorDisplayTypes} from 'components/shared/ErrorDisplay/ErrorDisplay';\nimport Loading from 'components/shared/Loading';\nimport {useActiveLibrary} from 'hooks/ActiveLibHook/ActiveLibHook';\nimport {useLang} from 'hooks/LangHook/LangHook';\nimport useGetLibraryDetailExtendedQuery from 'hooks/useGetLibraryDetailExtendedQuery/useGetLibraryDetailExtendedQuery';\nimport React, {useEffect} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {setNotificationBase} from 'redux/notifications';\nimport {useAppDispatch, useAppSelector} from 'redux/store';\nimport {localizedTranslation} from 'utils';\nimport {IBaseNotification, NotificationType, WorkspacePanels} from '_types/types';\n\nexport interface ILibraryHomeProps {\n    library?: string;\n}\n\nfunction LibraryHome({library}: ILibraryHomeProps): JSX.Element {\n    const [{lang}] = useLang();\n    const {t} = useTranslation();\n    const dispatch = useAppDispatch();\n    const [activeLibrary, updateActiveLibrary] = useActiveLibrary();\n    const {activePanel} = useAppSelector(state => state);\n\n    const {loading, data, error} = useGetLibraryDetailExtendedQuery({library});\n\n    const hasAccess = data?.libraries?.list[0]?.permissions.access_library;\n\n    useEffect(() => {\n        // Update infos about current lib (active library, notification message)\n        if (\n            loading ||\n            error ||\n            !data?.libraries?.list.length ||\n            activePanel !== WorkspacePanels.LIBRARY ||\n            !hasAccess\n        ) {\n            return;\n        }\n\n        const currentLibrary = data.libraries.list[0];\n        const currentLibLabel = localizedTranslation(currentLibrary.label, lang);\n\n        if (library !== activeLibrary?.id) {\n            const {query, type, filter, searchableFields} = currentLibrary.gqlNames;\n            const {attributes} = currentLibrary;\n\n            updateActiveLibrary({\n                id: library,\n                name: currentLibLabel,\n                filter,\n                attributes,\n                gql: {\n                    searchableFields,\n                    query,\n                    type\n                },\n                trees: currentLibrary.linkedTrees,\n                permissions: currentLibrary.permissions\n            });\n        }\n\n        // Base Notification\n        const baseNotification: IBaseNotification = {\n            content: t('notification.active-lib', {lib: currentLibLabel}),\n            type: NotificationType.basic\n        };\n\n        dispatch(setNotificationBase(baseNotification));\n    }, [activeLibrary, data, dispatch, error, lang, library, loading, t, updateActiveLibrary, activePanel, hasAccess]);\n\n    if (loading) {\n        return <Loading />;\n    }\n\n    if (error) {\n        return <ErrorDisplay message={error.message} />;\n    }\n\n    if (!data?.libraries?.list.length) {\n        return <ErrorDisplay message={t('lib_detail.not_found')} />;\n    }\n\n    if (!hasAccess) {\n        return <ErrorDisplay type={ErrorDisplayTypes.PERMISSION_ERROR} />;\n    }\n\n    return <LibraryItemsList selectionMode={false} library={data.libraries.list[0]} key={library} />;\n}\n\nexport default LibraryHome;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport LibraryHome from './LibraryHome';\nexport default LibraryHome;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport React from 'react';\nimport {useTranslation} from 'react-i18next';\nimport styled from 'styled-components';\nimport {GET_TREE_CONTENT_treeContent} from '_gqlTypes/GET_TREE_CONTENT';\nimport themingVar from '../../../../../themingVar';\nimport {getFileUrl} from '../../../../../utils';\nimport RecordPreview from '../../../../shared/RecordPreview';\n\nconst Detail = styled.div`\n    min-width: ${themingVar['@leav-navigation-column-details-width']};\n    max-width: ${themingVar['@leav-navigation-column-details-width']};\n\n    display: grid;\n    grid-template-columns: 1fr;\n    justify-items: center;\n    grid-template-rows: 25rem auto;\n    word-break: break-all;\n\n    background: ${themingVar['@default-bg']};\n    border-right: 1px solid ${themingVar['@divider-color']};\n\n    .header-detail {\n        width: 100%;\n    }\n`;\n\nconst Content = styled.div`\n    display: flex;\n    flex-flow: column nowrap;\n    justify-content: start;\n\n    & > * {\n        margin: 1rem;\n    }\n`;\n\nconst DetailElement = styled.div`\n    span {\n        font-weight: 600;\n    }\n`;\n\nconst PreviewWrapper = styled.div`\n    padding: 2rem;\n    height: 25rem;\n    width: 100%;\n`;\n\ninterface IDetailNavigationProps {\n    treeElement: GET_TREE_CONTENT_treeContent;\n}\n\nconst DetailNavigation = ({treeElement}: IDetailNavigationProps): JSX.Element => {\n    const {t} = useTranslation();\n\n    const recordData = treeElement.record;\n\n    const label = recordData.whoAmI.label ? recordData.whoAmI.label : t('navigation.list.info.no-label');\n\n    const img = recordData.whoAmI.preview?.big;\n\n    return (\n        <Detail data-testid=\"details-column\">\n            <PreviewWrapper>\n                <RecordPreview\n                    key={recordData.id}\n                    label={recordData.whoAmI.label ? label : recordData.id}\n                    color={recordData.whoAmI.color}\n                    image={img && getFileUrl(img)}\n                    tile\n                    style={{maxHeight: '20rem', maxWidth: '100%', height: '100%'}}\n                />\n            </PreviewWrapper>\n            <Content>\n                <DetailElement>\n                    <span>{t('navigation.list.info.id')}:</span> {recordData.id}\n                </DetailElement>\n                <DetailElement>\n                    <span>{t('navigation.list.info.label')}:</span> {label}\n                </DetailElement>\n            </Content>\n        </Detail>\n    );\n};\n\nexport default DetailNavigation;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport DetailNavigation from './DetailNavigation';\nexport default DetailNavigation;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport React from 'react';\nimport styled from 'styled-components';\nimport IconSvg from '../svg/svgEllipsis.svg';\n\nconst CustomImg = styled.img`\n    transform: translate(0px, -1px) rotate(90deg);\n`;\n\nexport const IconEllipsisVertical = () => {\n    return (\n        <div>\n            <CustomImg src={IconSvg} alt=\"icon ellipsis vertical\" />\n        </div>\n    );\n};\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport Button, {ButtonProps} from 'antd/lib/button';\nimport React from 'react';\nimport styled from 'styled-components';\nimport themingVar from '../../../themingVar';\n\ntype IStandardBtnStyledProps = ButtonProps;\n\nconst StandardBtnStyled = styled(Button)`\n    &&& {\n        background: ${themingVar['@default-bg']};\n        font-weight: 600;\n\n        &&&&:hover,\n        &&&&:active,\n        &&&&:focus {\n            background: ${themingVar['@default-bg']};\n        }\n    }\n`;\nexport const StandardBtn = (props: IStandardBtnStyledProps) => (\n    <StandardBtnStyled {...props}>{props.children}</StandardBtnStyled>\n);\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport gql from 'graphql-tag';\n\nexport const addTreeElementMutation = gql`\n    mutation ADD_TREE_ELEMENT($treeId: ID!, $element: TreeElementInput!, $parent: ID, $order: Int) {\n        treeAddElement(treeId: $treeId, element: $element, parent: $parent, order: $order) {\n            id\n        }\n    }\n`;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport gql from 'graphql-tag';\n\nexport const removeTreeElementMutation = gql`\n    mutation REMOVE_TREE_ELEMENT($treeId: ID!, $nodeId: ID!, $deleteChildren: Boolean) {\n        treeDeleteElement(treeId: $treeId, nodeId: $nodeId, deleteChildren: $deleteChildren)\n    }\n`;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport gql from 'graphql-tag';\n\nexport const getTreeLibraries = gql`\n    query GET_TREE_LIBRARIES($treeId: ID!) {\n        trees(filters: {id: $treeId}) {\n            totalCount\n            list {\n                id\n                libraries {\n                    library {\n                        id\n                        label\n                    }\n                }\n            }\n        }\n    }\n`;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport useRefreshTreeContent from './useRefreshTreeContent';\nexport default useRefreshTreeContent;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {useApolloClient} from '@apollo/client';\n\nconst useRefreshTreeContent = (treeId: string) => {\n    const client = useApolloClient();\n    return {\n        refreshTreeContent() {\n            client.refetchQueries({\n                updateCache: cache => {\n                    const cacheContent = cache.extract() as {\n                        ROOT_QUERY: Record<string, any>;\n                        [key: string]: any;\n                    };\n                    Object.keys(cacheContent.ROOT_QUERY)\n                        .filter(key => key.match(new RegExp(`treeNodeChildren(.*)${treeId}`)))\n                        .forEach(key => cache.evict({fieldName: key}));\n\n                    // Collect the garbage\n                    cache.gc();\n                }\n            });\n        }\n    };\n};\nexport default useRefreshTreeContent;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {\n    DeleteOutlined,\n    ExpandAltOutlined,\n    InfoCircleOutlined,\n    OrderedListOutlined,\n    PlusCircleOutlined,\n    PlusOutlined,\n    SearchOutlined\n} from '@ant-design/icons';\nimport {useApolloClient, useMutation, useQuery} from '@apollo/client';\nimport {Dropdown, Menu, message} from 'antd';\nimport {IconEllipsisVertical} from 'assets/icons/IconEllipsisVertical';\nimport {StandardBtn} from 'components/app/StyledComponent/StandardBtn';\nimport EditRecordModal from 'components/RecordEdition/EditRecordModal';\nimport SearchModal from 'components/SearchModal';\nimport {addTreeElementMutation} from 'graphQL/mutations/trees/addTreeElementMutation';\nimport {removeTreeElementMutation} from 'graphQL/mutations/trees/removeTreeElementMutation';\nimport {IActiveTree} from 'graphQL/queries/cache/activeTree/getActiveTreeQuery';\nimport {getTreeLibraries} from 'graphQL/queries/trees/getTreeLibraries';\nimport {useLang} from 'hooks/LangHook/LangHook';\nimport useRefreshTreeContent from 'hooks/useRefreshTreeContent';\nimport React, {useState} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {setNavigationPath} from 'redux/navigation';\nimport {addNotification} from 'redux/notifications';\nimport {useAppDispatch, useAppSelector} from 'redux/store';\nimport {localizedTranslation} from 'utils';\nimport {ADD_TREE_ELEMENT, ADD_TREE_ELEMENTVariables} from '_gqlTypes/ADD_TREE_ELEMENT';\nimport {GET_TREE_CONTENT_treeContent} from '_gqlTypes/GET_TREE_CONTENT';\nimport {GET_TREE_LIBRARIES, GET_TREE_LIBRARIESVariables} from '_gqlTypes/GET_TREE_LIBRARIES';\nimport {TreeElementInput} from '_gqlTypes/globalTypes';\nimport {RecordIdentity_whoAmI} from '_gqlTypes/RecordIdentity';\nimport {REMOVE_TREE_ELEMENT, REMOVE_TREE_ELEMENTVariables} from '_gqlTypes/REMOVE_TREE_ELEMENT';\nimport {INotification, ISharedStateSelectionSearch, NotificationChannel, NotificationType} from '_types/types';\n\ninterface IDefaultActionsProps {\n    isDetail: boolean;\n    parent?: GET_TREE_CONTENT_treeContent;\n    activeTree: IActiveTree;\n}\n\nfunction DefaultActions({activeTree, isDetail, parent}: IDefaultActionsProps): JSX.Element {\n    const {t} = useTranslation();\n    const {selectionState: selectionStat, navigation} = useAppSelector(state => ({\n        selectionState: state.selection,\n        navigation: state.navigation\n    }));\n    const dispatch = useAppDispatch();\n    const apolloClient = useApolloClient();\n\n    const [{lang}] = useLang();\n\n    const [searchModalVisible, setSearchModalVisible] = useState(false);\n    const [editRecordModalVisible, setEditRecordModalVisible] = useState(false);\n    const [createRecordLibrary, setCreateRecordLibrary] = useState('');\n    const [createRecordModalVisible, setCreateRecordModalVisible] = useState(false);\n    const [libId, setLibId] = useState('');\n\n    const {data: treeLibraries} = useQuery<GET_TREE_LIBRARIES, GET_TREE_LIBRARIESVariables>(getTreeLibraries, {\n        variables: {\n            treeId: activeTree.id\n        }\n    });\n    const [addToTree] = useMutation<ADD_TREE_ELEMENT, ADD_TREE_ELEMENTVariables>(addTreeElementMutation);\n    const [removeFromTree] = useMutation<REMOVE_TREE_ELEMENT, REMOVE_TREE_ELEMENTVariables>(removeTreeElementMutation);\n    const {refreshTreeContent} = useRefreshTreeContent(activeTree.id);\n\n    const showSearch = (selectedLibId: string) => {\n        setLibId(selectedLibId);\n        setSearchModalVisible(true);\n    };\n\n    const _handleSubmitAddBySearch = async (selection: ISharedStateSelectionSearch) => {\n        if (selection.selected.length) {\n            let messages: {\n                countValid: number;\n                errors: {[x: string]: string[]};\n            } = {\n                countValid: 0,\n                errors: {}\n            };\n\n            for (const elementSelected of selection.selected) {\n                const treeElement: TreeElementInput = {\n                    id: elementSelected.id,\n                    library: elementSelected.library\n                };\n                try {\n                    await addToTree({\n                        variables: {\n                            treeId: activeTree.id,\n                            element: treeElement,\n                            parent: parent.id ?? null\n                        }\n                    });\n                    messages = {...messages, countValid: messages.countValid + 1};\n                } catch (e) {\n                    if (e.graphQLErrors && e.graphQLErrors.length) {\n                        const errorMessageParent = e.graphQLErrors[0].extensions.fields?.parent;\n                        const errorMessageElement = e.graphQLErrors[0].extensions.fields?.element;\n\n                        if (errorMessageParent) {\n                            messages.errors[errorMessageParent] = [\n                                ...(messages.errors[errorMessageParent] ?? []),\n                                elementSelected.id\n                            ];\n                        }\n                        if (errorMessageElement) {\n                            messages.errors[errorMessageElement] = [\n                                ...(messages.errors[errorMessageElement] ?? []),\n                                elementSelected.label || elementSelected.id\n                            ];\n                        }\n                    }\n                }\n            }\n\n            if (messages.countValid) {\n                const notification: INotification = {\n                    channel: NotificationChannel.trigger,\n                    type: NotificationType.success,\n                    content: t('navigation.notifications.success-add', {\n                        nb: messages.countValid\n                    })\n                };\n                dispatch(addNotification(notification));\n            }\n\n            delete messages.countValid;\n            const errors = Object.keys(messages.errors);\n\n            for (const error of errors) {\n                const notification = {\n                    channel: NotificationChannel.trigger,\n                    type: NotificationType.warning,\n                    content: t('navigation.notifications.error-add', {\n                        elements: (messages.errors[error] as string[]).reduce(\n                            (acc, elementLabel) => (acc ? `${acc}, ${elementLabel}` : `${elementLabel}`),\n                            ''\n                        ),\n                        errorMessage: error\n                    })\n                };\n                dispatch(addNotification(notification));\n            }\n\n            refreshTreeContent();\n        }\n    };\n\n    const _handleClickDetails = () => {\n        const newPath = [...navigation.path, {...parent, showDetails: true}];\n\n        dispatch(setNavigationPath(newPath));\n    };\n\n    const _handleAfterCreateRecord = async (newRecord: RecordIdentity_whoAmI) => {\n        let notification: INotification;\n        try {\n            await addToTree({\n                variables: {\n                    treeId: activeTree.id,\n                    element: {\n                        id: newRecord.id,\n                        library: newRecord.library.id\n                    },\n                    parent: parent.id ?? null\n                }\n            });\n\n            notification = {\n                channel: NotificationChannel.trigger,\n                type: NotificationType.success,\n                content: t('navigation.notifications.success-add', {nb: 1})\n            };\n        } catch (err) {\n            if (err.graphQLErrors && err.graphQLErrors.length) {\n                const errorMessageParent = err.graphQLErrors[0].extensions.fields?.parent;\n                const errorMessageElement = err.graphQLErrors[0].extensions.fields?.element;\n\n                notification = {\n                    channel: NotificationChannel.trigger,\n                    type: NotificationType.error,\n                    content: t('navigation.notifications.error-add', {\n                        elements: newRecord.label ?? newRecord.id,\n                        errorMessage: errorMessageParent || errorMessageElement || ''\n                    })\n                };\n            } else {\n                notification = {\n                    channel: NotificationChannel.trigger,\n                    type: NotificationType.error,\n                    content: err.message\n                };\n            }\n        }\n        dispatch(addNotification(notification));\n        refreshTreeContent();\n    };\n\n    const _handleOpenEditRecordModal = () => setEditRecordModalVisible(true);\n    const _handleCloseEditRecordModal = () => setEditRecordModalVisible(false);\n\n    const _handleOpenCreateRecordModal = (library: string) => () => {\n        setCreateRecordModalVisible(true);\n        setCreateRecordLibrary(library);\n    };\n    const _handleCloseCreateRecordModal = () => setCreateRecordModalVisible(false);\n\n    const _handleClickDetach = async () => {\n        const label = parent.record.whoAmI.label;\n\n        let notification: INotification;\n        try {\n            await removeFromTree({\n                variables: {\n                    treeId: activeTree.id,\n                    nodeId: parent.id\n                }\n            });\n\n            notification = {\n                channel: NotificationChannel.trigger,\n                type: NotificationType.success,\n                content: t('navigation.notifications.success-detach', {nb: 1})\n            };\n        } catch (e) {\n            notification = {\n                channel: NotificationChannel.trigger,\n                type: NotificationType.error,\n                content: t('navigation.notifications.error-detach', {\n                    elementName: label ?? parent.record.id,\n                    errorMessage: e.message\n                })\n            };\n        }\n\n        dispatch(addNotification(notification));\n        refreshTreeContent();\n    };\n\n    const _handleClickClassifiedIn = () => message.warn(t('global.feature_not_available'));\n    const _handleClickOrder = () => message.warn(t('global.feature_not_available'));\n\n    const availableLibraries = treeLibraries?.trees.list[0].libraries ?? [];\n\n    const canEditChildren = parent ? parent.permissions.edit_children : activeTree.permissions.edit_children;\n    const canDetach = !!parent && parent.permissions.detach;\n\n    return (\n        <>\n            {searchModalVisible && (\n                <SearchModal\n                    visible={searchModalVisible}\n                    setVisible={setSearchModalVisible}\n                    submitAction={_handleSubmitAddBySearch}\n                    libId={libId}\n                />\n            )}\n            {editRecordModalVisible && (\n                <EditRecordModal\n                    open={editRecordModalVisible}\n                    library={parent.record.whoAmI.library.id}\n                    record={parent.record.whoAmI}\n                    onClose={_handleCloseEditRecordModal}\n                />\n            )}\n            {createRecordModalVisible && (\n                <EditRecordModal\n                    open={createRecordModalVisible}\n                    library={createRecordLibrary}\n                    record={null}\n                    onClose={_handleCloseCreateRecordModal}\n                    afterCreate={_handleAfterCreateRecord}\n                />\n            )}\n            {!selectionStat.selection.selected.length && (\n                <>\n                    {canEditChildren && (\n                        <>\n                            {availableLibraries.length > 1 ? (\n                                <>\n                                    <Dropdown // Add by search\n                                        overlay={\n                                            <Menu>\n                                                {treeLibraries?.trees.list[0].libraries.map(library => (\n                                                    <Menu.Item\n                                                        key={library.library.id}\n                                                        onClick={() => showSearch(library.library.id)}\n                                                    >\n                                                        {localizedTranslation(library.library.label, lang)}\n                                                    </Menu.Item>\n                                                ))}\n                                            </Menu>\n                                        }\n                                    >\n                                        <StandardBtn icon={<PlusCircleOutlined />} />\n                                    </Dropdown>\n                                    <Dropdown // Add by creation\n                                        overlay={\n                                            <Menu>\n                                                {treeLibraries?.trees.list[0].libraries.map(library => (\n                                                    <Menu.Item\n                                                        key={library.library.id}\n                                                        onClick={_handleOpenCreateRecordModal(library.library.id)}\n                                                    >\n                                                        {localizedTranslation(library.library.label, lang)}\n                                                    </Menu.Item>\n                                                ))}\n                                            </Menu>\n                                        }\n                                    >\n                                        <StandardBtn icon={<PlusOutlined />} />\n                                    </Dropdown>\n                                </>\n                            ) : (\n                                <>\n                                    <StandardBtn\n                                        icon={<PlusCircleOutlined />}\n                                        aria-label=\"add-by-search\"\n                                        onClick={() => showSearch(availableLibraries[0]?.library.id ?? null)}\n                                    />\n                                    <StandardBtn\n                                        icon={<PlusOutlined />}\n                                        aria-label=\"add-by-creation\"\n                                        onClick={_handleOpenCreateRecordModal(\n                                            availableLibraries[0]?.library.id ?? null\n                                        )}\n                                    />\n                                </>\n                            )}\n                        </>\n                    )}\n\n                    <span data-testid=\"dropdown-tree-actions\">\n                        <Dropdown\n                            placement=\"bottomRight\"\n                            overlay={\n                                <Menu>\n                                    {!!parent && (\n                                        <>\n                                            {!isDetail && (\n                                                <Menu.Item icon={<InfoCircleOutlined />} onClick={_handleClickDetails}>\n                                                    {t('navigation.actions.details')}\n                                                </Menu.Item>\n                                            )}\n                                            <Menu.Item\n                                                icon={<ExpandAltOutlined />}\n                                                onClick={_handleOpenEditRecordModal}\n                                            >\n                                                {t('navigation.actions.edit')}\n                                            </Menu.Item>\n                                        </>\n                                    )}\n                                    <Menu.Item icon={<SearchOutlined />} onClick={_handleClickClassifiedIn}>\n                                        {t('navigation.actions.classified_in')}\n                                    </Menu.Item>\n                                    {canEditChildren && (\n                                        <>\n                                            <Menu.Divider />\n                                            <Menu.Item icon={<OrderedListOutlined />} onClick={_handleClickOrder}>\n                                                {t('navigation.actions.order')}\n                                            </Menu.Item>\n                                            {canDetach && (\n                                                <Menu.Item icon={<DeleteOutlined />} onClick={_handleClickDetach}>\n                                                    {t('navigation.actions.detach')}\n                                                </Menu.Item>\n                                            )}\n                                        </>\n                                    )}\n                                </Menu>\n                            }\n                        >\n                            <StandardBtn icon={<IconEllipsisVertical />} />\n                        </Dropdown>\n                    </span>\n                </>\n            )}\n        </>\n    );\n}\n\nexport default DefaultActions;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport DefaultActions from './DefaultActions';\nexport default DefaultActions;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport gql from 'graphql-tag';\n\nexport const moveTreeElementMutation = gql`\n    mutation MOVE_TREE_ELEMENT($treeId: ID!, $nodeId: ID!, $parentTo: ID, $order: Int) {\n        treeMoveElement(treeId: $treeId, nodeId: $nodeId, parentTo: $parentTo, order: $order) {\n            id\n        }\n    }\n`;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {ArrowDownOutlined, DeleteOutlined, PlusOutlined} from '@ant-design/icons';\nimport {useMutation} from '@apollo/client';\nimport {StandardBtn} from 'components/app/StyledComponent/StandardBtn';\nimport {addTreeElementMutation} from 'graphQL/mutations/trees/addTreeElementMutation';\nimport {moveTreeElementMutation} from 'graphQL/mutations/trees/moveTreeElementMutation';\nimport {removeTreeElementMutation} from 'graphQL/mutations/trees/removeTreeElementMutation';\nimport {useActiveTree} from 'hooks/ActiveTreeHook/ActiveTreeHook';\nimport useRefreshTreeContent from 'hooks/useRefreshTreeContent';\nimport React from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {setNavigationPath} from 'redux/navigation';\nimport {addNotification} from 'redux/notifications';\nimport {resetSelection} from 'redux/selection';\nimport {useAppDispatch, useAppSelector} from 'redux/store';\nimport {ADD_TREE_ELEMENT, ADD_TREE_ELEMENTVariables} from '_gqlTypes/ADD_TREE_ELEMENT';\nimport {TreeElementInput} from '_gqlTypes/globalTypes';\nimport {MOVE_TREE_ELEMENT, MOVE_TREE_ELEMENTVariables} from '_gqlTypes/MOVE_TREE_ELEMENT';\nimport {REMOVE_TREE_ELEMENT, REMOVE_TREE_ELEMENTVariables} from '_gqlTypes/REMOVE_TREE_ELEMENT';\nimport {\n    INotification,\n    ITreeContentRecordAndChildren,\n    NotificationChannel,\n    NotificationType,\n    SharedStateSelectionType\n} from '_types/types';\n\ninterface IMessages {\n    countValid: number;\n    errors: {[x: string]: string[]};\n}\n\ninterface ISelectionActionsProps {\n    parent: ITreeContentRecordAndChildren;\n    depth: number;\n}\n\nfunction SelectionActions({parent, depth}: ISelectionActionsProps): JSX.Element {\n    const {t} = useTranslation();\n\n    const {selectionState, navigation} = useAppSelector(state => ({\n        selectionState: state.selection,\n        navigation: state.navigation\n    }));\n    const dispatch = useAppDispatch();\n\n    const [activeTree] = useActiveTree();\n\n    const [detachFromTree] = useMutation<REMOVE_TREE_ELEMENT, REMOVE_TREE_ELEMENTVariables>(removeTreeElementMutation);\n    const [addToTree] = useMutation<ADD_TREE_ELEMENT, ADD_TREE_ELEMENTVariables>(addTreeElementMutation);\n    const [moveInTree] = useMutation<MOVE_TREE_ELEMENT, MOVE_TREE_ELEMENTVariables>(moveTreeElementMutation);\n    const {refreshTreeContent} = useRefreshTreeContent(activeTree.id);\n\n    const displayMessages = (tMessageSuccess: string, tMessageFail: string, messages: IMessages) => {\n        if (messages.countValid) {\n            const notification: INotification = {\n                channel: NotificationChannel.trigger,\n                type: NotificationType.success,\n                content: t(tMessageSuccess, {\n                    nb: messages.countValid\n                })\n            };\n\n            dispatch(addNotification(notification));\n        }\n\n        delete messages.countValid;\n        const errors = Object.keys(messages.errors);\n\n        for (const error of errors) {\n            const notification: INotification = {\n                channel: NotificationChannel.trigger,\n                type: NotificationType.warning,\n                content: t(tMessageFail, {\n                    elements: (messages.errors[error] as string[]).reduce(\n                        (acc, elementLabel) => (acc ? `${acc}, ${elementLabel}` : `${elementLabel}`),\n                        ''\n                    ),\n                    errorMessage: error\n                })\n            };\n\n            dispatch(addNotification(notification));\n        }\n    };\n\n    const _handleAddElements = async () => {\n        if (selectionState.selection.selected.length) {\n            let messages: IMessages = {\n                countValid: 0,\n                errors: {}\n            };\n\n            const parentElement = parent.id ?? null;\n\n            for (const elementSelected of selectionState.selection.selected) {\n                const treeElement: TreeElementInput = {\n                    id: elementSelected.id,\n                    library: elementSelected.library\n                };\n                try {\n                    await addToTree({\n                        variables: {\n                            treeId: activeTree.id,\n                            element: treeElement,\n                            parent: parentElement\n                        }\n                    });\n                    messages = {...messages, countValid: messages.countValid + 1};\n                } catch (e) {\n                    if (e.graphQLErrors && e.graphQLErrors.length) {\n                        const errorMessageParent = e.graphQLErrors[0].extensions.fields?.parent;\n                        const errorMessageElement = e.graphQLErrors[0].extensions.fields?.element;\n\n                        if (errorMessageParent) {\n                            messages.errors[errorMessageParent] = [\n                                ...(messages.errors[errorMessageParent] ?? []),\n                                elementSelected.id\n                            ];\n                        }\n                        if (errorMessageElement) {\n                            messages.errors[errorMessageElement] = [\n                                ...(messages.errors[errorMessageElement] ?? []),\n                                elementSelected.label || elementSelected.id\n                            ];\n                        }\n                    }\n                }\n            }\n\n            displayMessages('navigation.notifications.success-add', 'navigation.notifications.error-add', messages);\n            refreshTreeContent();\n        } else {\n            const notification: INotification = {\n                channel: NotificationChannel.trigger,\n                type: NotificationType.warning,\n                content: t('navigation.notifications.warning-add-no-selection')\n            };\n\n            dispatch(addNotification(notification));\n        }\n\n        dispatch(resetSelection());\n    };\n\n    const _handleMoveEnd = async () => {\n        const messages: IMessages = {\n            countValid: 0,\n            errors: {}\n        };\n\n        const parentTo = parent?.id ?? null;\n\n        for (const elementSelected of selectionState.selection.selected) {\n            try {\n                await moveInTree({\n                    variables: {\n                        treeId: activeTree.id,\n                        nodeId: elementSelected.nodeId,\n                        parentTo\n                    }\n                });\n                messages.countValid++;\n            } catch (e) {\n                if (e.graphQLErrors && e.graphQLErrors.length) {\n                    const errorMessageParent = e.graphQLErrors[0].extensions.fields?.parent;\n                    const errorMessageElement = e.graphQLErrors[0].extensions.fields?.element;\n\n                    if (errorMessageParent) {\n                        messages.errors[errorMessageParent] = [\n                            ...(messages.errors[errorMessageParent] ?? []),\n                            elementSelected.id\n                        ];\n                    }\n                    if (errorMessageElement) {\n                        messages.errors[errorMessageElement] = [\n                            ...(messages.errors[errorMessageElement] ?? []),\n                            elementSelected.label || elementSelected.id\n                        ];\n                    }\n                }\n            }\n        }\n\n        refreshTreeContent();\n        displayMessages('navigation.notifications.success-move', 'navigation.notifications.error-move', messages);\n        dispatch(resetSelection());\n    };\n\n    const _handleDetachElements = async () => {\n        if (selectionState.selection.type === SharedStateSelectionType.navigation) {\n            const messages: IMessages = {\n                countValid: 0,\n                errors: {}\n            };\n            const deletedNodes = [];\n\n            for (const elementSelected of selectionState.selection.selected) {\n                try {\n                    await detachFromTree({\n                        variables: {\n                            treeId: activeTree.id,\n                            nodeId: elementSelected.nodeId\n                        }\n                    });\n\n                    messages.countValid++;\n                    deletedNodes.push(elementSelected.nodeId);\n                } catch (e) {\n                    if (e.graphQLErrors && e.graphQLErrors.length) {\n                        const errorMessageParent = e.graphQLErrors[0].extensions.fields?.parent;\n                        const errorMessageElement = e.graphQLErrors[0].extensions.fields?.element;\n\n                        if (errorMessageParent) {\n                            messages.errors[errorMessageParent] = [\n                                ...(messages.errors[errorMessageParent] ?? []),\n                                elementSelected.id\n                            ];\n                        }\n                        if (errorMessageElement) {\n                            messages.errors[errorMessageElement] = [\n                                ...(messages.errors[errorMessageElement] ?? []),\n                                elementSelected.label || elementSelected.id\n                            ];\n                        }\n                    }\n                }\n            }\n\n            refreshTreeContent();\n            displayMessages(\n                'navigation.notifications.success-detach',\n                'navigation.notifications.error-detach',\n                messages\n            );\n\n            dispatch(resetSelection());\n            const newPath = navigation.path.filter(p => !deletedNodes.includes(p.id));\n            dispatch(setNavigationPath(newPath));\n        }\n    };\n\n    const searchIsNavigation = selectionState.selection.type === SharedStateSelectionType.navigation;\n\n    const columnIsParent =\n        selectionState.selection.type === SharedStateSelectionType.navigation &&\n        selectionState.selection.parent === parent?.id;\n\n    const canEditChildren = parent ? parent.permissions.edit_children : activeTree.permissions.edit_children;\n\n    if (selectionState.selection.selected.length) {\n        return (\n            <>\n                {!columnIsParent && canEditChildren && (\n                    <StandardBtn\n                        icon={<PlusOutlined />}\n                        onClick={_handleAddElements}\n                        aria-label=\"add-selection\"\n                        title={t('navigation.actions.add-selected')}\n                    />\n                )}\n\n                {searchIsNavigation && canEditChildren && !columnIsParent && (\n                    <StandardBtn\n                        onClick={_handleMoveEnd}\n                        icon={<ArrowDownOutlined />}\n                        aria-label=\"move-selection\"\n                        title={t('navigation.actions.move-selected')}\n                    />\n                )}\n\n                {searchIsNavigation && (\n                    <StandardBtn\n                        onClick={_handleDetachElements}\n                        aria-label=\"detach-selection\"\n                        icon={<DeleteOutlined />}\n                        title={t('navigation.actions.detach-selected')}\n                    />\n                )}\n            </>\n        );\n    }\n    return <></>;\n}\n\nexport default SelectionActions;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport SelectionActions from './SelectionActions';\nexport default SelectionActions;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {Button} from 'antd';\nimport {useActiveTree} from 'hooks/ActiveTreeHook/ActiveTreeHook';\nimport React from 'react';\nimport {useAppSelector} from 'redux/store';\nimport DefaultActions from './DefaultActions';\nimport SelectionActions from './SelectionActions';\n\ninterface IActiveHeaderCellNavigationProps {\n    depth: number;\n    isDetail?: boolean;\n}\n\nfunction HeaderColumnNavigationActions({depth, isDetail}: IActiveHeaderCellNavigationProps): JSX.Element {\n    const currentPositionInPath = depth;\n\n    const navigation = useAppSelector(state => state.navigation);\n    const [activeTree] = useActiveTree();\n\n    const parent = navigation.path[currentPositionInPath - 1];\n\n    return activeTree ? (\n        <Button.Group style={{height: '30px'}}>\n            <SelectionActions parent={parent} depth={depth} />\n            <DefaultActions activeTree={activeTree} parent={parent} isDetail={isDetail} />\n        </Button.Group>\n    ) : (\n        <></>\n    );\n}\n\nexport default HeaderColumnNavigationActions;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport HeaderCellNavigation from './HeaderColumnNavigationActions';\nexport default HeaderCellNavigation;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {CloseSquareOutlined} from '@ant-design/icons';\nimport {Button, Checkbox, Tooltip} from 'antd';\nimport Paragraph from 'antd/lib/typography/Paragraph';\nimport React from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {setNavigationPath} from 'redux/navigation';\nimport {resetSelection, setSelection} from 'redux/selection';\nimport {useAppDispatch, useAppSelector} from 'redux/store';\nimport styled from 'styled-components';\nimport {GET_TREE_CONTENT_treeContent} from '_gqlTypes/GET_TREE_CONTENT';\nimport {ISharedSelected, SharedStateSelectionType} from '_types/types';\nimport {useActiveTree} from '../../../../../hooks/ActiveTreeHook/ActiveTreeHook';\nimport themingVar from '../../../../../themingVar';\nimport HeaderColumnNavigationActions from './HeaderColumnNavigationActions';\n\ninterface IHeaderColumnProps {\n    isActive: boolean;\n}\n\nconst HeaderColumn = styled.header<IHeaderColumnProps>`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 1rem;\n    background: ${themingVar['@item-active-bg']};\n    height: 4rem;\n    flex-shrink: 0;\n    cursor: pointer;\n    max-width: ${themingVar['@leav-navigation-column-details-width']};\n\n    &:not(:hover) .select-all-checkbox {\n        visibility: hidden;\n    }\n`;\n\ninterface IHeaderColumnNavigationProps {\n    depth: number;\n    isDetail?: boolean;\n    isActive?: boolean;\n    treeElement?: GET_TREE_CONTENT_treeContent;\n    children?: GET_TREE_CONTENT_treeContent[];\n}\n\nfunction HeaderColumnNavigation({\n    depth,\n    isDetail,\n    isActive,\n    treeElement,\n    children\n}: IHeaderColumnNavigationProps): JSX.Element {\n    const {t} = useTranslation();\n    const {navigation, selectionState} = useAppSelector(state => ({\n        navigation: state.navigation,\n        selectionState: state.selection\n    }));\n\n    const dispatch = useAppDispatch();\n    const currentPositionInPath = depth;\n\n    const [activeTree] = useActiveTree();\n    const selectionCount = selectionState.selection.selected.length;\n\n    const parent = navigation.path[currentPositionInPath - 1];\n\n    const resetPath = () => {\n        dispatch(setNavigationPath([]));\n    };\n\n    const goToPath = () => {\n        dispatch(setNavigationPath(navigation.path.slice(0, currentPositionInPath)));\n    };\n\n    const headerClickFn = () => {\n        if (!isActive) {\n            if (parent) {\n                goToPath();\n            } else {\n                resetPath();\n            }\n        }\n    };\n\n    const label = treeElement?.record\n        ? treeElement.record.whoAmI.label || treeElement.record.id\n        : activeTree?.label || activeTree?.id;\n\n    const _handleClearSelection = () => {\n        dispatch(resetSelection());\n    };\n\n    const _handleClickCheckbox = () => {\n        // Select all elements from current column\n        const columnSelection: ISharedSelected[] = children\n            .filter(child => child.permissions.access_tree)\n            .map(child => ({\n                id: child.record.whoAmI.id,\n                nodeId: child.id,\n                library: child.record.whoAmI.library.id,\n                label: child.record.whoAmI.label\n            }));\n\n        dispatch(\n            setSelection({\n                type: SharedStateSelectionType.navigation,\n                selected: columnSelection,\n                parent: treeElement?.id ?? null\n            })\n        );\n    };\n\n    return (\n        <HeaderColumn onClick={headerClickFn} isActive={isActive}>\n            {!!selectionCount && isActive ? (\n                <Tooltip\n                    title={t('navigation.header.nb-selection', {\n                        nb: selectionCount,\n                        selectionType: t(`search.type.${SharedStateSelectionType[selectionState.selection.type]}`)\n                    })}\n                    placement=\"right\"\n                >\n                    {selectionCount}\n                    <Button\n                        icon={<CloseSquareOutlined />}\n                        aria-label=\"clear-selection\"\n                        onClick={_handleClearSelection}\n                        style={{border: 'none', color: '#000'}}\n                        ghost\n                    />\n                </Tooltip>\n            ) : (\n                <>\n                    {isActive && !isDetail && (\n                        <Checkbox className=\"select-all-checkbox\" onClick={_handleClickCheckbox} />\n                    )}\n                    <Paragraph ellipsis={{tooltip: label, rows: 1}} style={{marginBottom: 0, marginRight: '.5em'}}>\n                        {label}\n                    </Paragraph>\n                </>\n            )}\n            {isActive && <HeaderColumnNavigationActions depth={depth} isDetail={isDetail} />}\n        </HeaderColumn>\n    );\n}\n\nexport default HeaderColumnNavigation;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport HeaderColumnNavigation from './HeaderColumnNavigation';\nexport default HeaderColumnNavigation;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {LockFilled, RightOutlined} from '@ant-design/icons';\nimport {Badge, Tooltip} from 'antd';\nimport Checkbox from 'antd/lib/checkbox/Checkbox';\nimport {useLang} from 'hooks/LangHook/LangHook';\nimport React from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {setNavigationPath} from 'redux/navigation';\nimport {setSelection} from 'redux/selection';\nimport {useAppDispatch, useAppSelector} from 'redux/store';\nimport styled, {CSSObject} from 'styled-components';\nimport {localizedTranslation} from 'utils';\nimport {GET_TREE_CONTENT_treeContent} from '_gqlTypes/GET_TREE_CONTENT';\nimport themingVar from '../../../../../themingVar';\nimport {\n    IRecordIdentityWhoAmI,\n    ISharedSelected,\n    ISharedStateSelectionNavigation,\n    PreviewSize,\n    SharedStateSelectionType\n} from '../../../../../_types/types';\nimport RecordCard from '../../../../shared/RecordCard';\n\ninterface IRowProps {\n    style?: CSSObject;\n    isInPath: boolean;\n    isActive: boolean;\n}\n\nconst RowWrapper = styled.div<IRowProps>`\n    position: relative;\n    display: grid;\n\n    place-items: flex-start;\n    align-items: center;\n    max-width: ${themingVar['@leav-navigation-column-width']};\n\n    grid-template-columns: ${props => (props.isActive ? '1rem auto auto 1rem' : 'auto auto 1rem')};\n    padding: 1rem;\n    background: ${props => {\n        if (props.isInPath) {\n            return themingVar['@leav-background-active'];\n        }\n        return 'none';\n    }};\n\n    &:hover {\n        ${props => (props.isInPath ? '' : `background: ${themingVar['@item-hover-bg']}`)};\n\n        .checkbox-wrapper {\n            opacity: 1;\n        }\n    }\n\n    .counter {\n        justify-self: flex-end;\n    }\n`;\n\nconst RecordCardWrapper = styled.div`\n    & > * > * {\n        justify-content: space-around;\n    }\n`;\n\ninterface ICheckboxWrapperProps {\n    selectionActive: boolean;\n}\n\nconst CheckboxWrapper = styled.div<ICheckboxWrapperProps>`\n    opacity: ${({selectionActive}) => (selectionActive ? 1 : 0)};\n    transition: 100ms ease;\n\n    :hover {\n        opacity: 1;\n    }\n`;\n\ninterface IActiveRowNavigationProps {\n    isActive: boolean;\n    treeElement: GET_TREE_CONTENT_treeContent;\n    depth: number;\n}\n\nfunction Row({isActive, treeElement, depth}: IActiveRowNavigationProps): JSX.Element {\n    const [{lang}] = useLang();\n\n    const {t} = useTranslation();\n    const {selectionState, navigation} = useAppSelector(state => ({\n        selectionState: state.selection,\n        navigation: state.navigation\n    }));\n    const dispatch = useAppDispatch();\n    const parentElement = navigation.path[depth - 1];\n    const recordLabel = treeElement.record.whoAmI.label;\n    const isAccessible = treeElement.permissions.access_tree;\n\n    const addPath = () => {\n        if (!isAccessible) {\n            return;\n        }\n\n        const newPath = [...navigation.path.slice(0, depth), {...treeElement}];\n\n        dispatch(setNavigationPath(newPath));\n    };\n\n    const handleCheckboxOnClick = (e: any) => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const current = selectionState.selection.selected.find(element => element.nodeId === treeElement.id);\n\n        if (current) {\n            // remove from selected\n            const newSelected = selectionState.selection.selected.filter(element => element.nodeId !== treeElement.id);\n\n            const selection: ISharedStateSelectionNavigation = {\n                type: SharedStateSelectionType.navigation,\n                selected: newSelected,\n                parent: parentElement?.id\n            };\n\n            dispatch(setSelection(selection));\n        } else {\n            // add to selected\n            const label = localizedTranslation(treeElement.record.whoAmI.label, lang);\n            const newElementSelected: ISharedSelected = {\n                id: treeElement.record.whoAmI.id,\n                nodeId: treeElement.id,\n                library: treeElement.record.whoAmI.library.id,\n                label\n            };\n\n            // reset selection if previous selection is not navigation or if the parent change\n            let newSelected: ISharedSelected[] = [newElementSelected];\n            if (\n                selectionState.selection.type === SharedStateSelectionType.navigation &&\n                parentElement?.id === selectionState.selection.parent\n            ) {\n                // keep selection if parent is the same\n                newSelected = [...selectionState.selection.selected, newElementSelected];\n            }\n\n            const selection: ISharedStateSelectionNavigation = {\n                type: SharedStateSelectionType.navigation,\n                selected: newSelected,\n                parent: parentElement?.id\n            };\n\n            dispatch(setSelection(selection));\n        }\n    };\n\n    const record: IRecordIdentityWhoAmI = {\n        ...treeElement.record.whoAmI,\n        label: recordLabel ?? ''\n    };\n\n    const isInPath = navigation.path.some(\n        pathPart =>\n            pathPart.record.id === treeElement.record.id &&\n            pathPart.record.whoAmI.library.id === treeElement.record.whoAmI.library.id\n    );\n\n    const isChecked = selectionState.selection.selected.some(element => element.nodeId === treeElement.id);\n\n    return (\n        <RowWrapper onClick={addPath} isInPath={isInPath} isActive={isActive}>\n            {!isAccessible && (\n                <Tooltip title={t('navigation.access_denied')}>\n                    <LockFilled />\n                </Tooltip>\n            )}\n            {isActive && isAccessible && (\n                <CheckboxWrapper\n                    onClick={e => {\n                        // checkbox onclick doesn't allow to do that\n                        e.preventDefault();\n                        e.stopPropagation();\n                    }}\n                    className=\"checkbox-wrapper\"\n                    selectionActive={!!selectionState.selection.selected.length}\n                >\n                    <Checkbox onClick={handleCheckboxOnClick} checked={isChecked} />\n                </CheckboxWrapper>\n            )}\n            <Tooltip title={treeElement.record.whoAmI.label}>\n                <RecordCardWrapper>\n                    <RecordCard record={record} size={PreviewSize.small} />\n                </RecordCardWrapper>\n            </Tooltip>\n\n            {!!treeElement.childrenCount && (\n                <>\n                    <div className=\"counter\">\n                        <Badge count={treeElement.childrenCount} overflowCount={1000} />\n                    </div>\n                    <div>{isAccessible && <RightOutlined />}</div>\n                </>\n            )}\n        </RowWrapper>\n    );\n}\n\nexport default Row;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport Row from './Row';\nexport default Row;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {useQuery} from '@apollo/client';\nimport {Pagination} from 'antd';\nimport ErrorDisplay from 'components/shared/ErrorDisplay';\nimport Loading from 'components/shared/Loading';\nimport {treeNavigationPageSize} from 'constants/constants';\nimport {treeNodeChildrenQuery} from 'graphQL/queries/trees/getTreeNodeChildren';\nimport {useActiveTree} from 'hooks/ActiveTreeHook/ActiveTreeHook';\nimport React, {createRef, useEffect, useState} from 'react';\nimport {INavigationElement} from 'redux/stateType';\nimport styled from 'styled-components';\nimport {TREE_NODE_CHILDREN, TREE_NODE_CHILDRENVariables} from '_gqlTypes/TREE_NODE_CHILDREN';\nimport themingVar from '../../../../themingVar';\nimport DetailNavigation from './DetailNavigation';\nimport HeaderColumnNavigation from './HeaderColumnNavigation';\nimport Row from './Row';\n\nconst ColumnWrapper = styled.div<{showDetails: boolean}>`\n    border-right: 1px solid ${themingVar['@divider-color']};\n    width: ${p =>\n        p.showDetails\n            ? themingVar['@leav-navigation-column-details-width']\n            : themingVar['@leav-navigation-column-width']};\n    height: 100%;\n    display: flex;\n    flex-flow: column nowrap;\n    flex-shrink: 0;\n\n    background: ${themingVar['@default-bg']};\n`;\n\nconst ColumnContent = styled.div`\n    overflow-y: auto;\n    height: 100%;\n`;\n\nconst ColumnPagination = styled(Pagination)`\n    && {\n        text-align: center;\n        padding: 0.5em 0;\n        border-bottom: 1px solid ${themingVar['@border-color-base']};\n    }\n`;\n\ninterface IColumnProps {\n    treeElement?: INavigationElement;\n    depth: number;\n    isActive: boolean;\n}\n\nconst Column = ({treeElement, depth, isActive: columnActive}: IColumnProps) => {\n    const [activeTree] = useActiveTree();\n    const [currentPage, setCurrentPage] = useState<number>(1);\n    const [totalCount, setTotalCount] = useState<number>(0);\n\n    const queryVariables = {\n        treeId: activeTree?.id,\n        node: treeElement?.id ?? null,\n        pagination: {\n            limit: treeNavigationPageSize,\n            offset: (currentPage - 1) * treeNavigationPageSize\n        }\n    };\n    const {loading, error, data, refetch, called} = useQuery<TREE_NODE_CHILDREN, TREE_NODE_CHILDRENVariables>(\n        treeNodeChildrenQuery,\n        {\n            variables: queryVariables,\n            onCompleted: res => {\n                setTotalCount(res.treeNodeChildren.totalCount);\n            },\n            skip: !activeTree\n        }\n    );\n\n    const ref = createRef<HTMLDivElement>();\n\n    useEffect(() => {\n        if (ref?.current?.scrollIntoView && columnActive) {\n            ref.current?.scrollIntoView({\n                behavior: 'smooth',\n                block: 'end'\n            });\n        }\n    }, [ref, columnActive]);\n\n    useEffect(() => {\n        if (!activeTree || !called) {\n            return;\n        }\n\n        refetch(queryVariables);\n    }, [currentPage]);\n\n    const children = data?.treeNodeChildren.list ?? [];\n    const canDisplayContent = !error;\n    const showDetails = treeElement && ((!loading && !totalCount) || treeElement.showDetails);\n\n    const _handlePageChange = (page: number) => {\n        setCurrentPage(page);\n    };\n\n    return (\n        <ColumnWrapper\n            ref={ref}\n            data-testid={`navigation-column${showDetails ? '-with-details' : ''}`}\n            showDetails={showDetails}\n        >\n            <HeaderColumnNavigation\n                depth={depth}\n                treeElement={treeElement}\n                isActive={columnActive}\n                isDetail={showDetails}\n                children={children}\n            />\n            {error && <ErrorDisplay message={error.message} />}\n            {canDisplayContent && !showDetails && (\n                <>\n                    {totalCount > treeNavigationPageSize && columnActive && (\n                        <ColumnPagination\n                            simple\n                            current={currentPage}\n                            total={totalCount}\n                            onChange={_handlePageChange}\n                            pageSize={treeNavigationPageSize}\n                        />\n                    )}\n                    {loading ? (\n                        <Loading />\n                    ) : (\n                        <ColumnContent>\n                            {children.map(child => (\n                                <Row key={child.id} treeElement={child} depth={depth} isActive={columnActive} />\n                            ))}\n                        </ColumnContent>\n                    )}\n                </>\n            )}\n            {canDisplayContent && showDetails && <DetailNavigation treeElement={treeElement} />}\n        </ColumnWrapper>\n    );\n};\n\nexport default Column;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport Column from './Column';\nexport default Column;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport React, {useEffect} from 'react';\nimport {setNavigationActiveTree} from 'redux/navigation';\nimport {useAppDispatch, useAppSelector} from 'redux/store';\nimport styled from 'styled-components';\nimport Column from './Column';\n\nconst Page = styled.div`\n    width: auto;\n    height: calc(100vh - 6rem);\n    display: flex;\n    flex-flow: row nowrap;\n    overflow-x: scroll;\n    overflow-y: hidden;\n`;\n\ninterface INavigationViewProps {\n    tree: string;\n}\n\nfunction NavigationView({tree: treeId}: INavigationViewProps): JSX.Element {\n    const navigation = useAppSelector(state => state.navigation);\n    const dispatch = useAppDispatch();\n\n    useEffect(() => {\n        dispatch(setNavigationActiveTree(treeId));\n    }, [treeId, dispatch]);\n\n    const currentColumnActive = navigation.path.length === 0;\n\n    return (\n        <Page>\n            <Column treeElement={null} depth={0} isActive={currentColumnActive} key=\"__root__\" />\n            {navigation.path.map((pathPart, index) => (\n                <Column\n                    key={`${pathPart.record.id}_${pathPart.showDetails ?? false}`}\n                    treeElement={pathPart}\n                    depth={index + 1}\n                    isActive={index === navigation.path.length - 1}\n                />\n            ))}\n        </Page>\n    );\n}\n\nexport default NavigationView;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport NavigationView from './NavigationView';\nexport default NavigationView;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport ErrorDisplay from 'components/shared/ErrorDisplay';\nimport {ErrorDisplayTypes} from 'components/shared/ErrorDisplay/ErrorDisplay';\nimport Loading from 'components/shared/Loading';\nimport useGetTreesListQuery from 'hooks/useGetTreesListQuery/useGetTreesListQuery';\nimport React, {useEffect} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {setNotificationBase} from 'redux/notifications';\nimport {useAppDispatch, useAppSelector} from 'redux/store';\nimport {useActiveTree} from '../../hooks/ActiveTreeHook/ActiveTreeHook';\nimport {useLang} from '../../hooks/LangHook/LangHook';\nimport {localizedTranslation} from '../../utils';\nimport {IBaseNotification, NotificationType, WorkspacePanels} from '../../_types/types';\nimport NavigationView from './NavigationView';\n\ninterface INavigationProps {\n    tree?: string;\n}\n\nfunction Navigation({tree}: INavigationProps): JSX.Element {\n    const {t} = useTranslation();\n\n    const dispatch = useAppDispatch();\n    const {activePanel} = useAppSelector(state => state);\n\n    const [{lang}] = useLang();\n    const [activeTree, updateActiveTree] = useActiveTree();\n\n    const {data, loading, error} = useGetTreesListQuery({onlyAllowed: false, treeId: tree, skip: !tree});\n\n    const hasAccess = data?.trees?.list[0]?.permissions.access_tree;\n\n    useEffect(() => {\n        if (activePanel !== WorkspacePanels.TREE || !hasAccess) {\n            return;\n        }\n\n        const currentTree = data?.trees?.list[0];\n        if (!loading && currentTree) {\n            const treeName = localizedTranslation(currentTree.label, lang);\n            // set Active Tree Data\n            updateActiveTree({\n                id: currentTree.id,\n                label: treeName,\n                libraries: currentTree.libraries.map(lib => ({id: lib.library.id})),\n                permissions: currentTree.permissions\n            });\n\n            const baseNotification: IBaseNotification = {\n                content: t('notification.active-tree', {tree: treeName}),\n                type: NotificationType.basic\n            };\n\n            dispatch(setNotificationBase(baseNotification));\n        }\n    }, [data, loading, lang, updateActiveTree, t, dispatch, activePanel, activeTree, tree, hasAccess]);\n\n    if (loading) {\n        return <Loading />;\n    }\n\n    if (error) {\n        return <ErrorDisplay message={error.message} />;\n    }\n\n    if (!hasAccess) {\n        return <ErrorDisplay type={ErrorDisplayTypes.PERMISSION_ERROR} />;\n    }\n\n    return <NavigationView tree={tree} />;\n}\n\nexport default Navigation;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport Navigation from './Navigation';\nexport default Navigation;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport Home from 'components/Home';\nimport LibraryHome from 'components/LibraryHome';\nimport Navigation from 'components/Navigation';\nimport {useActiveLibrary} from 'hooks/ActiveLibHook/ActiveLibHook';\nimport {useActiveTree} from 'hooks/ActiveTreeHook/ActiveTreeHook';\nimport React, {useEffect} from 'react';\nimport {useParams} from 'react-router-dom';\nimport {setActivePanel} from 'redux/activePanel';\nimport {useAppDispatch} from 'redux/store';\nimport styled from 'styled-components';\nimport {WorkspacePanels} from '_types/types';\n\nconst VisibilityHandler = styled.div<{isActive: boolean}>`\n    display: ${p => (p.isActive ? 'block' : 'none')};\n`;\n\nfunction Workspace(): JSX.Element {\n    const dispatch = useAppDispatch();\n    const {panel, entityId} = useParams<{panel: WorkspacePanels; entityId?: string}>();\n    let activePanel = panel?.toLowerCase() as WorkspacePanels;\n\n    if (!Object.values(WorkspacePanels).includes(activePanel)) {\n        activePanel = WorkspacePanels.HOME;\n    }\n\n    const [activeLibrary] = useActiveLibrary();\n    const [activeTree] = useActiveTree();\n\n    const isHomeActive = activePanel === WorkspacePanels.HOME;\n    const isLibraryActive = activePanel === WorkspacePanels.LIBRARY;\n    const isTreeActive = activePanel === WorkspacePanels.TREE;\n\n    const libraryId = isLibraryActive ? entityId : activeLibrary?.id;\n    const treeId = isTreeActive ? entityId : activeTree?.id;\n\n    useEffect(() => {\n        dispatch(setActivePanel(activePanel));\n    }, [activePanel, dispatch]);\n\n    return (\n        <>\n            <VisibilityHandler isActive={isHomeActive} className={WorkspacePanels.HOME}>\n                <Home />\n            </VisibilityHandler>\n            <VisibilityHandler isActive={isLibraryActive} className={WorkspacePanels.LIBRARY}>\n                <LibraryHome library={libraryId} key={libraryId} />\n            </VisibilityHandler>\n            <VisibilityHandler isActive={isTreeActive} className={WorkspacePanels.TREE}>\n                <Navigation tree={treeId} key={treeId} />\n            </VisibilityHandler>\n        </>\n    );\n}\n\nexport default Workspace;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport Workspace from './Workspace';\nexport default Workspace;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport React from 'react';\n\nfunction RouteNotFound(): JSX.Element {\n    return <h1>404</h1>;\n}\n\nexport default RouteNotFound;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport RouteNotFound from './RouteNotFound';\nexport default RouteNotFound;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {IActiveLibrary} from '../../../graphQL/queries/cache/activeLibrary/getActiveLibraryQuery';\nimport {IActiveTree} from '../../../graphQL/queries/cache/activeTree/getActiveTreeQuery';\n\nexport const routes = {\n    root: '/',\n    home: '/:panel(home)',\n    workspace: '/:panel(tree|library)/:entityId',\n    navigation: {\n        listTree: '/tree/list',\n        tree: '/:panel(tree)/:treeId'\n    },\n    library: {\n        list: '/library/list/',\n        items: '/:panel(library)/:libId'\n    },\n    settings: '/settings'\n};\n\nexport const makeActiveLibraryRoute = (activeLibrary: IActiveLibrary) => {\n    return `/library/${activeLibrary.id}`;\n};\n\nexport const makeActiveTreeRoute = (activeTree: IActiveTree) => {\n    return `/tree/${activeTree.id}`;\n};\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport Workspace from 'components/Workspace';\nimport React from 'react';\nimport {Route, Switch} from 'react-router-dom';\nimport RouteNotFound from '../RouteNotFound';\nimport {routes} from './ListRoutes';\n\nfunction Routes(): JSX.Element {\n    return (\n        <Switch>\n            <Route exact path={routes.root}>\n                <Workspace />\n            </Route>\n\n            <Route exact path={routes.home}>\n                <Workspace />\n            </Route>\n\n            <Route exact path={routes.workspace}>\n                <Workspace />\n            </Route>\n\n            <Route>\n                <RouteNotFound />\n            </Route>\n        </Switch>\n    );\n}\n\nexport default Routes;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport Routes from './Routes';\nexport default Routes;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {Layout} from 'antd';\nimport Sidebar from 'components/Sidebar';\nimport TopBar from 'components/TopBar';\nimport React, {useState} from 'react';\nimport {BrowserRouter} from 'react-router-dom';\nimport themingVar from 'themingVar';\nimport UserPanel from '../UserPanel';\nimport Routes from './Routes';\n\nconst {Header, Content, Sider} = Layout;\n\nfunction Router(): JSX.Element {\n    const [userPanelVisible, setUserPanelVisible] = useState<boolean>(false);\n\n    const toggleUserPanelVisible = () => {\n        setUserPanelVisible(visible => !visible);\n    };\n\n    const hideUserPanel = () => setUserPanelVisible(false);\n\n    return (\n        <>\n            <BrowserRouter>\n                <Layout style={{height: '100vh'}}>\n                    <Sider\n                        theme=\"light\"\n                        collapsible\n                        defaultCollapsed\n                        collapsedWidth={60}\n                        width={250}\n                        style={{borderRight: '1px solid #DDD'}}\n                    >\n                        <Sidebar />\n                    </Sider>\n                    <Layout>\n                        <Header style={{height: themingVar['@leav-header-height'], padding: 0}}>\n                            <TopBar\n                                userPanelVisible={userPanelVisible}\n                                toggleUserPanelVisible={toggleUserPanelVisible}\n                            />\n                        </Header>\n                        <Layout style={{overflow: 'hidden', position: 'relative'}}>\n                            <Content style={{background: themingVar['@default-bg'], overflow: 'hidden'}}>\n                                <UserPanel userPanelVisible={userPanelVisible} hideUserPanel={hideUserPanel} />\n                                <Routes />\n                            </Content>\n                        </Layout>\n                    </Layout>\n                </Layout>\n            </BrowserRouter>\n        </>\n    );\n}\n\nexport default Router;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport Router from './Router';\nexport default Router;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {useQuery} from '@apollo/client';\nimport ErrorDisplay from 'components/shared/ErrorDisplay';\nimport React, {useEffect} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {getMe} from '../../../graphQL/queries/userData/me';\nimport {initialActiveLibrary, useActiveLibrary} from '../../../hooks/ActiveLibHook/ActiveLibHook';\nimport {useLang} from '../../../hooks/LangHook/LangHook';\nimport {useUser} from '../../../hooks/UserHook/UserHook';\nimport {getSysTranslationQueryLanguage} from '../../../utils';\nimport {ME} from '../../../_gqlTypes/ME';\nimport {AvailableLanguage} from '../../../_types/types';\nimport Router from '../../Router';\n\nfunction AppHandler(): JSX.Element {\n    const {i18n} = useTranslation();\n\n    // Add lang infos to the cache\n    const lang = getSysTranslationQueryLanguage(i18n);\n    const availableLangs = process.env.REACT_APP_AVAILABLE_LANG\n        ? process.env.REACT_APP_AVAILABLE_LANG.split(',').map(l => AvailableLanguage[l as AvailableLanguage])\n        : [];\n\n    // Depending on browser, user language might be \"fr\" or \"fr-FR\".\n    // We don't handle sub-language, thus extract first part only (eg. 'fr')\n    const defaultLang = AvailableLanguage?.[i18n.language.split('-')[0]] ?? AvailableLanguage.en;\n\n    const [langInfo, updateLang] = useLang();\n    const [activeLibrary, updateActiveLibrary] = useActiveLibrary();\n    const [user, updateUser] = useUser();\n    const {data: userData, loading: meLoading, error: meError} = useQuery<ME>(getMe);\n\n    useEffect(() => {\n        if (!langInfo.lang.length) {\n            updateLang({lang, availableLangs, defaultLang});\n        }\n    }, [updateLang, langInfo.lang, lang, availableLangs, defaultLang]);\n\n    useEffect(() => {\n        if (!activeLibrary) {\n            updateActiveLibrary(initialActiveLibrary);\n        }\n    }, [updateActiveLibrary, activeLibrary]);\n\n    useEffect(() => {\n        if (!user && userData && !meLoading) {\n            updateUser({\n                userId: userData.me.id,\n                userName: userData.me.whoAmI.label || userData.me.login,\n                userPermissions: {}\n            }); // FIXME: permissions ??\n        }\n    }, [updateUser, user, meLoading, userData]);\n\n    if (meError) {\n        return <ErrorDisplay message={meError.message} />;\n    }\n\n    return <Router />;\n}\n\nexport default AppHandler;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport AppHandler from './AppHandler';\nexport default AppHandler;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport React from 'react';\nimport {ThemeSwitcherProvider} from 'react-css-theme-switcher';\nimport AppHandler from '../AppHandler';\n\nconst themes = {\n    dark: `${process.env.PUBLIC_URL}/dark-theme.css`,\n    light: `${process.env.PUBLIC_URL}/light-theme.css`\n};\n\nfunction ThemeHandler(): JSX.Element {\n    return (\n        <ThemeSwitcherProvider themeMap={themes} defaultTheme=\"light\">\n            <AppHandler />\n        </ThemeSwitcherProvider>\n    );\n}\n\nexport default ThemeHandler;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport ThemeHandler from './ThemeHandler';\nexport default ThemeHandler;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport React from 'react';\nimport {Provider} from 'react-redux';\nimport store from 'redux/store';\nimport ApolloHandler from './ApolloHandler';\nimport './App.css';\nimport ThemeHandler from './ThemeHandler';\n\ninterface IAppProps {\n    token: string;\n    onTokenInvalid: (message?: string) => void;\n}\n\nfunction App({token, onTokenInvalid}: IAppProps) {\n    return (\n        <Provider store={store}>\n            <ApolloHandler token={token} onTokenInvalid={onTokenInvalid}>\n                <ThemeHandler />\n            </ApolloHandler>\n        </Provider>\n    );\n}\n\nexport default App;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport useAuthToken from 'hooks/useAuthToken';\nimport React, {Suspense, useState} from 'react';\nimport Login from '../../shared/Login';\nimport App from '../App';\n\ninterface IAuthHandlerProps {\n    url: string;\n}\n\nfunction AuthHandler({url}: IAuthHandlerProps): JSX.Element {\n    const {getToken, saveToken, deleteToken: removeToken} = useAuthToken();\n    const [token, setToken] = useState(getToken());\n    const [internalMessage, setInternalMessage] = useState('');\n\n    // to be passed to Login\n    const recordToken = (tokenStr: string) => {\n        saveToken(tokenStr);\n        setToken(tokenStr);\n    };\n\n    // to be passed to App, allowing to handle the expiration of the token\n    // and error handling\n    const deleteToken = (message?: string) => {\n        removeToken();\n        setToken('');\n        if (message) {\n            setInternalMessage(message);\n        }\n\n        return <Login onSuccess={recordToken} message={internalMessage} url={url} />;\n    };\n\n    if (token) {\n        return (\n            <Suspense fallback={'Loader'}>\n                <App token={token} onTokenInvalid={deleteToken} />\n            </Suspense>\n        );\n    } else {\n        return (\n            <Suspense fallback={'Loader'}>\n                <Login onSuccess={recordToken} message={internalMessage} url={url} />\n            </Suspense>\n        );\n    }\n}\n\nexport default AuthHandler;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport AuthHandler from './AuthHandler';\nexport default AuthHandler;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport i18n from 'i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport Backend from 'i18next-xhr-backend';\nimport {initReactI18next} from 'react-i18next';\n\ni18n.use(initReactI18next)\n    .use(Backend)\n    .use(LanguageDetector)\n    .init({\n        fallbackLng: process.env.REACT_APP_DEFAULT_LANG,\n        ns: ['translations'],\n        defaultNS: 'translations',\n        react: {\n            useSuspense: true\n        }\n    });\n\nexport default i18n;\n","export default __webpack_public_path__ + \"static/media/index.0a15f437.less\";","/* eslint-disable no-restricted-syntax */\n// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.0/8 are considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ninterface IConfig {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\n}\n\nexport function register(config?: IConfig) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: IConfig) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker === null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: IConfig) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (response.status === 404 || (contentType !== null && contentType.indexOf('javascript') === -1)) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.');\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister();\n            })\n            .catch(error => {\n                console.error(error.message);\n            });\n    }\n}\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport React from 'react';\nimport {ThemeSwitcherProvider} from 'react-css-theme-switcher';\nimport ReactDOM from 'react-dom';\nimport AuthHandler from './components/app/AuthHandler';\nimport './i18n';\nimport './index.less';\nimport * as serviceWorker from './serviceWorker';\n\nconst themes = {\n    dark: `${process.env.PUBLIC_URL}/dark-theme.css`,\n    light: `${process.env.PUBLIC_URL}/light-theme.css`\n};\n\nReactDOM.render(\n    <ThemeSwitcherProvider themeMap={themes} defaultTheme=\"light\">\n        <AuthHandler url={process.env.REACT_APP_AUTH_URL || ''} />\n    </ThemeSwitcherProvider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}