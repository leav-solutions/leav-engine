{"version":3,"file":"static/js/47.b05396ed.chunk.js","mappings":"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","sources":["context/EditApplicationContext/EditApplicationContext.ts","context/EditApplicationContext/index.ts","queries/applications/getApplicationByIdQuery.ts","components/shared/GridTab/GridTab.tsx","components/shared/GridTab/index.ts","queries/applications/saveApplicationMutation.ts","queries/applications/getApplicationsModulesQuery.ts","components/applications/EditApplication/EditApplicationTabs/InfosTab/InfosForm/ModuleSelector/ModuleSelectorField/index.ts","components/applications/EditApplication/EditApplicationTabs/InfosTab/InfosForm/ModuleSelector/ModuleSelectorField/ModuleSelectorField.tsx","components/applications/EditApplication/EditApplicationTabs/InfosTab/InfosForm/ModuleSelector/ModuleSelector.tsx","components/applications/EditApplication/EditApplicationTabs/InfosTab/InfosForm/ModuleSelector/index.ts","components/applications/EditApplication/EditApplicationTabs/InfosTab/InfosForm/InfosForm.tsx","components/applications/EditApplication/EditApplicationTabs/InfosTab/InfosForm/index.ts","components/applications/EditApplication/EditApplicationTabs/InfosTab/InfosTab.tsx","components/applications/EditApplication/EditApplicationTabs/InfosTab/index.ts","queries/applications/getApplicationsEventsSubscription.ts","hooks/useApplicationEventsSubscription/useApplicationEventsSubscription.ts","queries/applications/installApplicationMutation.ts","components/applications/EditApplication/EditApplicationTabs/InstallTab/InstallView/InstallView.tsx","components/applications/EditApplication/EditApplicationTabs/InstallTab/InstallView/index.ts","components/applications/EditApplication/EditApplicationTabs/InstallTab/InstallTab.tsx","components/applications/EditApplication/EditApplicationTabs/InstallTab/index.ts","components/applications/EditApplication/EditApplicationTabs/PermissionsTab/PermissionsTab.tsx","components/applications/EditApplication/EditApplicationTabs/PermissionsTab/index.ts","components/applications/EditApplication/EditApplicationTabs/SettingsTab/SettingsTab.tsx","components/applications/EditApplication/EditApplicationTabs/SettingsTab/index.ts","components/applications/EditApplication/EditApplicationTabs/EditApplicationTabs.tsx","components/applications/EditApplication/EditApplicationTabs/index.ts","components/applications/EditApplication/EditApplication.tsx","components/applications/EditApplication/index.ts","components/libraries/LibrariesSelectorField/LibrariesSelectorField.tsx","components/libraries/LibrariesSelectorField/index.ts","components/libraries/LibrariesSelector/LibrariesSelector.tsx","components/libraries/LibrariesSelector/index.ts","components/shared/FileSelector/FileSelector.tsx","components/shared/FileSelector/index.ts","components/shared/RecordSelector/RecordSelector.tsx","components/shared/RecordSelector/index.ts","components/trees/TreesSelectorField/index.ts","components/trees/TreesSelectorField/TreesSelectorField.tsx","components/trees/TreesSelector/TreesSelector.tsx","components/trees/TreesSelector/index.ts","queries/trees/getTreesQuery.ts"],"sourcesContent":["// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport React, {useContext} from 'react';\nimport {GET_APPLICATION_BY_ID_applications_list} from '_gqlTypes/GET_APPLICATION_BY_ID';\n\nexport interface IEditApplicationContextData {\n    application: GET_APPLICATION_BY_ID_applications_list;\n    readonly: boolean;\n}\n\nconst EditApplicationContext = React.createContext<IEditApplicationContextData>(null);\n\nexport const useEditApplicationContext = () => useContext(EditApplicationContext);\n\nexport default EditApplicationContext;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport EditApplicationContext from './EditApplicationContext';\nexport default EditApplicationContext;\nexport {useEditApplicationContext} from './EditApplicationContext';\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {gql} from '@apollo/client';\nimport {recordIdentityFragment} from 'queries/records/recordIdentityFragment';\nimport {applicationDetailsFragment} from './applicationDetailsFragment';\n\nexport const getApplicationByIdQuery = gql`\n    ${recordIdentityFragment}\n    ${applicationDetailsFragment}\n    query GET_APPLICATION_BY_ID($id: ID!) {\n        applications(filters: {id: $id}) {\n            list {\n                ...ApplicationDetails\n            }\n        }\n    }\n`;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport React from 'react';\nimport {Tab, TabProps} from 'semantic-ui-react';\nimport styled from 'styled-components';\n\nconst GridTabElem = styled(Tab)`\n    display: grid;\n    grid-template-rows: 4rem minmax(500px, 1fr);\n`;\nGridTabElem.displayName = 'Tab';\n\nfunction GridTab(props: TabProps): JSX.Element {\n    return <GridTabElem {...props} />;\n}\n\nexport default GridTab;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport GridTab from './GridTab';\nexport default GridTab;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {gql} from '@apollo/client';\nimport {recordIdentityFragment} from 'queries/records/recordIdentityFragment';\n\nexport const saveApplicationMutation = gql`\n    ${recordIdentityFragment}\n    mutation SAVE_APPLICATION($application: ApplicationInput!) {\n        saveApplication(application: $application) {\n            id\n            color\n            module\n            description\n            endpoint\n            label\n            system\n            icon {\n                ...RecordIdentity\n            }\n        }\n    }\n`;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {gql} from '@apollo/client';\n\nexport const getApplicationModulesQuery = gql`\n    query GET_APPLICATION_MODULES {\n        applicationsModules {\n            id\n            description\n            version\n        }\n    }\n`;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport ModuleSelectorField from './ModuleSelectorField';\nexport default ModuleSelectorField;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport React from 'react';\nimport {Dropdown, DropdownProps, Form, Header} from 'semantic-ui-react';\nimport {GET_APPLICATION_COMPONENTS_applicationsComponents} from '_gqlTypes/GET_APPLICATION_COMPONENTS';\n\ninterface IModuleSelectorFieldProps extends DropdownProps {\n    modules: GET_APPLICATION_COMPONENTS_applicationsComponents[];\n}\n\nconst ModuleSelectorField = ({modules, ...fieldProps}: IModuleSelectorFieldProps): JSX.Element => {\n    const options = (modules ?? []).map(comp => ({\n        key: comp.id,\n        value: comp.id,\n        text: comp.id,\n        content: <Header size=\"small\" content={comp.id} subheader={comp.description} />\n    }));\n\n    return (\n        <Form.Dropdown\n            {...fieldProps}\n            search\n            options={options}\n            // To avoid some formik warnings because the name property is not defined in the Form.Dropdown default input\n            searchInput={<Dropdown.SearchInput name={fieldProps.name ?? 'component'} />}\n        />\n    );\n};\n\nexport default ModuleSelectorField;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {useQuery} from '@apollo/client';\nimport {getApplicationModulesQuery} from 'queries/applications/getApplicationsModulesQuery';\nimport React from 'react';\nimport {FormDropdownProps} from 'semantic-ui-react';\nimport {GET_APPLICATION_MODULES} from '_gqlTypes/GET_APPLICATION_MODULES';\nimport ModuleSelectorField from './ModuleSelectorField';\n\nfunction ModuleSelector(fieldProps: FormDropdownProps): JSX.Element {\n    const {loading, data} = useQuery<GET_APPLICATION_MODULES>(getApplicationModulesQuery);\n\n    return (\n        <ModuleSelectorField\n            {...fieldProps}\n            aria-label=\"select-module\"\n            loading={loading}\n            modules={data?.applicationsModules ?? []}\n        />\n    );\n}\n\nexport default ModuleSelector;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport ModuleSelector from './ModuleSelector';\nexport default ModuleSelector;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {Override} from '@leav/utils';\nimport LibrariesSelector from 'components/libraries/LibrariesSelector';\nimport TreesSelector from 'components/trees/TreesSelector';\nimport {useEditApplicationContext} from 'context/EditApplicationContext';\nimport {Formik, FormikProps} from 'formik';\nimport React from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {Checkbox, Form, FormProps, Icon, Message} from 'semantic-ui-react';\nimport styled from 'styled-components';\nimport * as yup from 'yup';\nimport {ApplicationType} from '_gqlTypes/globalTypes';\nimport {RecordIdentity_whoAmI} from '_gqlTypes/RecordIdentity';\nimport useLang from '../../../../../../hooks/useLang';\nimport {formatIDString, getFieldError} from '../../../../../../utils';\nimport {ErrorTypes, IFormError} from '../../../../../../_types/errors';\nimport FileSelector from '../../../../../shared/FileSelector';\nimport FormFieldWrapper from '../../../../../shared/FormFieldWrapper';\nimport {ApplicationInfosFormValues} from '../_types';\nimport ModuleSelector from './ModuleSelector';\n\ninterface IInfosFormProps {\n    onSubmitInfos: (dataToSave: ApplicationInfosFormValues) => void;\n    loading: boolean;\n    errors?: IFormError;\n    onCheckIdIsUnique: (value: string) => Promise<boolean>;\n}\n\nconst FormWrapper = styled(({isNewApp, ...props}: {isNewApp: boolean} & FormProps) => <Form {...props} />)`\n    && {\n        position: unset;\n        display: grid;\n        grid-template-rows: ${props => (props.isNewApp ? 'auto 6rem' : 'auto')};\n    }\n`;\n\nconst FormBody = styled.div`\n    overflow-y: auto;\n`;\n\nconst FormFooter = styled.div`\n    border-top: 1px solid #dddddd;\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    padding: 1em;\n    text-align: right;\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n`;\n\nconst InstallMessage = styled.div`\n    margin-right 1em;\n    color: #999;\n`;\n\nfunction InfosForm({onSubmitInfos, errors, onCheckIdIsUnique, loading}: IInfosFormProps): JSX.Element {\n    const {t} = useTranslation();\n    const {application, readonly} = useEditApplicationContext();\n    const {availableLangs, defaultLang} = useLang();\n    const isReadOnly = readonly || loading;\n\n    const defaultApplicationData: ApplicationInfosFormValues = {\n        id: '',\n        type: ApplicationType.internal,\n        color: '',\n        icon: null,\n        module: '',\n        label: availableLangs.reduce((acc, cur) => {\n            acc[cur] = '';\n            return acc;\n        }, {}),\n        description: availableLangs.reduce((acc, cur) => {\n            acc[cur] = '';\n            return acc;\n        }, {}),\n        endpoint: '',\n        libraries: [],\n        trees: []\n    };\n\n    const isNewApp = !application;\n    const initialValues: ApplicationInfosFormValues = {\n        ...defaultApplicationData,\n        ...application,\n        libraries: application?.libraries !== null ? (application?.libraries ?? []).map(lib => lib.id) : null,\n        trees: application?.trees !== null ? (application?.trees ?? []).map(tree => tree.id) : null\n    };\n\n    const _handleSubmit = (values: ApplicationInfosFormValues) => {\n        onSubmitInfos(values);\n    };\n\n    const serverValidationErrors =\n        errors && errors.extensions.code === ErrorTypes.VALIDATION_ERROR ? errors.extensions.fields : {};\n\n    let idValidator = yup\n        .string()\n        .required()\n        .matches(/^[a-z0-9_]+$/);\n\n    if (isNewApp) {\n        // TODO: ID unicity validation is not debounced. As it's not trivial to implement, check future implementation\n        // in formik (https://github.com/jaredpalmer/formik/pull/1597)\n        idValidator = idValidator.test('isIdUnique', t('admin.validation_errors.id_exists'), onCheckIdIsUnique);\n    }\n\n    // @ts-ignore\n    const validationSchema: yup.ObjectSchema<Override<ApplicationInfosFormValues, {type: string}>> = yup\n        .object()\n        .shape({\n            id: idValidator,\n            type: yup.string().oneOf(Object.values(ApplicationType)),\n            color: yup.string().nullable(),\n            icon: yup\n                .object()\n                .shape({\n                    whoAmI: yup\n                        .object({\n                            id: yup.string(),\n                            label: yup.string().nullable(),\n                            color: yup.string().nullable(),\n                            library: yup.object().shape({id: yup.string(), label: yup.object()}),\n                            preview: yup.object().nullable()\n                        })\n                        .nullable()\n                })\n                .nullable(),\n            module: yup.string(),\n            label: yup.object().shape({\n                [defaultLang]: yup.string().required()\n            }),\n            description: yup\n                .object()\n                .shape({\n                    [defaultLang]: yup.string()\n                })\n                .nullable(),\n            endpoint: yup.string().required(),\n            libraries: yup.array(yup.string()).nullable(),\n            trees: yup.array(yup.string()).nullable()\n        });\n\n    const _renderForm = ({\n        handleSubmit,\n        handleBlur,\n        setFieldValue,\n        errors: inputErrors,\n        values,\n        touched,\n        submitForm\n    }: FormikProps<ApplicationInfosFormValues>) => {\n        const _handleLabelChange = (e, data) => {\n            _handleChange(e, data);\n\n            const {name, value} = data;\n            const [field, subfield] = name.split('.');\n\n            // On new attribute, automatically generate an ID based on label\n            if (isNewApp && field === 'label' && subfield === defaultLang) {\n                setFieldValue('id', formatIDString(value));\n            }\n        };\n\n        const _handleChange = async (e, data) => {\n            const isCheckbox = data.type === 'checkbox';\n            const value = isCheckbox ? data.checked : data.value;\n            const name: string = data.name;\n\n            await setFieldValue(name, value);\n        };\n\n        const _handleChangeNoLibraries = async (e, data) => {\n            const value = data.checked;\n\n            await setFieldValue('libraries', value ? null : []);\n\n            if (!isNewApp) {\n                submitForm();\n            }\n        };\n\n        const _handleChangeNoTrees = async (e, data) => {\n            const value = data.checked;\n\n            await setFieldValue('trees', value ? null : []);\n\n            if (!isNewApp) {\n                submitForm();\n            }\n        };\n\n        const _handleChangeWithSubmit = async (e, data) => {\n            await _handleChange(e, data);\n\n            if (!isNewApp) {\n                submitForm();\n            }\n        };\n\n        const _handleIconChange = async (selectedIcon: RecordIdentity_whoAmI) => {\n            _handleChangeWithSubmit(null, {\n                name: 'icon',\n                value: {whoAmI: selectedIcon}\n            });\n        };\n\n        const _getErrorByField = (fieldName: string): string =>\n            getFieldError<ApplicationInfosFormValues>(fieldName, touched, serverValidationErrors || {}, inputErrors);\n\n        const _handleBlur = (e: React.FocusEvent) => {\n            if (isNewApp) {\n                handleBlur(e);\n            } else {\n                submitForm();\n            }\n        };\n\n        const _handleKeyPress = (e: React.KeyboardEvent) => {\n            if (e.key === 'Enter') {\n                submitForm();\n            }\n        };\n\n        const _onSubmit = () => {\n            return handleSubmit();\n        };\n\n        return (\n            <FormWrapper onSubmit={_onSubmit} aria-label=\"infos-form\" isNewApp={isNewApp}>\n                <FormBody>\n                    <Form.Group grouped>\n                        <label>{t('admin.label')}</label>\n                        {availableLangs.map(lang => (\n                            <FormFieldWrapper key={lang} error={_getErrorByField(`label.${lang}`)}>\n                                <Form.Input\n                                    required={lang === defaultLang}\n                                    label={lang}\n                                    width=\"4\"\n                                    name={`label.${lang}`}\n                                    aria-label={`label.${lang}`}\n                                    disabled={isReadOnly}\n                                    onChange={_handleLabelChange}\n                                    onBlur={_handleBlur}\n                                    onKeyPress={_handleKeyPress}\n                                    value={values.label?.[lang] ?? ''}\n                                />\n                            </FormFieldWrapper>\n                        ))}\n                    </Form.Group>\n                    <Form.Group grouped>\n                        <label>{t('admin.description')}</label>\n                        {availableLangs.map(lang => (\n                            <FormFieldWrapper key={lang} error={_getErrorByField(`description.${lang}`)}>\n                                <Form.Input\n                                    label={lang}\n                                    value={values.description?.[lang] ?? ''}\n                                    width=\"4\"\n                                    name={`description.${lang}`}\n                                    aria-label={`description.${lang}`}\n                                    disabled={isReadOnly}\n                                    onChange={_handleChange}\n                                    onBlur={_handleBlur}\n                                    onKeyPress={_handleKeyPress}\n                                />\n                            </FormFieldWrapper>\n                        ))}\n                    </Form.Group>\n                    <FormFieldWrapper error={_getErrorByField('id')}>\n                        <Form.Input\n                            required\n                            label={t('admin.id')}\n                            width=\"4\"\n                            disabled={!isNewApp || isReadOnly}\n                            name=\"id\"\n                            aria-label=\"id\"\n                            onChange={_handleChange}\n                            onBlur={_handleBlur}\n                            value={values.id}\n                        />\n                    </FormFieldWrapper>\n                    <FormFieldWrapper error={_getErrorByField('type')}>\n                        <Form.Select\n                            required\n                            label={t('applications.type')}\n                            width=\"4\"\n                            disabled={!isNewApp || isReadOnly}\n                            name=\"type\"\n                            aria-label=\"type\"\n                            onChange={_handleChangeWithSubmit}\n                            options={Object.keys(ApplicationType).map(appType => {\n                                return {\n                                    text: t('applications.types.' + appType),\n                                    value: appType\n                                };\n                            })}\n                            value={values.type}\n                        />\n                    </FormFieldWrapper>\n                    {values.type === ApplicationType.internal && (\n                        <FormFieldWrapper error={_getErrorByField('module')}>\n                            <ModuleSelector\n                                required\n                                label={t('applications.module')}\n                                placeholder={t('applications.select_module')}\n                                fluid\n                                selection\n                                width=\"4\"\n                                disabled={isReadOnly}\n                                name=\"module\"\n                                aria-label=\"id\"\n                                onChange={_handleChangeWithSubmit}\n                                onBlur={_handleBlur}\n                                value={values.module}\n                            />\n                        </FormFieldWrapper>\n                    )}\n                    <FormFieldWrapper error={_getErrorByField('endpoint')}>\n                        <Form.Input\n                            required\n                            label={t('applications.endpoint')}\n                            width=\"4\"\n                            disabled={isReadOnly}\n                            name=\"endpoint\"\n                            aria-label=\"endpoint\"\n                            onChange={_handleChangeWithSubmit}\n                            onBlur={_handleBlur}\n                            value={values.endpoint}\n                        />\n                    </FormFieldWrapper>\n                    {values.type === ApplicationType.internal && (\n                        <>\n                            <div className=\"field\">\n                                <label>{t('applications.libraries')}</label>\n                                <FormFieldWrapper error={_getErrorByField('libraries')}>\n                                    <LibrariesSelector\n                                        placeholder={t('applications.all_libraries')}\n                                        fluid\n                                        selection\n                                        multiple\n                                        width=\"4\"\n                                        disabled={isReadOnly || values.libraries === null}\n                                        name=\"libraries\"\n                                        aria-label=\"id\"\n                                        onChange={_handleChangeWithSubmit}\n                                        onBlur={_handleBlur}\n                                        value={values.libraries ?? []}\n                                    />\n                                </FormFieldWrapper>\n                                <Checkbox\n                                    toggle\n                                    label={t('applications.no_library')}\n                                    name=\"no_libraries\"\n                                    onChange={_handleChangeNoLibraries}\n                                    checked={values.libraries === null}\n                                    disabled={isReadOnly}\n                                    aria-label=\"no_libraries\"\n                                />\n                            </div>\n                            <div className=\"field\">\n                                <label>{t('applications.trees')}</label>\n                                <FormFieldWrapper error={_getErrorByField('trees')}>\n                                    <TreesSelector\n                                        placeholder={t('applications.all_trees')}\n                                        fluid\n                                        selection\n                                        multiple\n                                        width=\"4\"\n                                        disabled={isReadOnly || values.trees === null}\n                                        name=\"trees\"\n                                        aria-label=\"id\"\n                                        onChange={_handleChangeWithSubmit}\n                                        onBlur={_handleBlur}\n                                        value={values.trees ?? []}\n                                    />\n                                </FormFieldWrapper>\n                                <Checkbox\n                                    toggle\n                                    label={t('applications.no_tree')}\n                                    name=\"no_libraries\"\n                                    onChange={_handleChangeNoTrees}\n                                    checked={values.trees === null}\n                                    disabled={isReadOnly}\n                                    aria-label=\"no_trees\"\n                                />\n                            </div>\n                            <FormFieldWrapper error={_getErrorByField('icon.whoAmI')}>\n                                <FileSelector\n                                    onChange={_handleIconChange}\n                                    value={values.icon?.whoAmI ?? null}\n                                    label={t('applications.icon')}\n                                />\n                            </FormFieldWrapper>\n                        </>\n                    )}\n                </FormBody>\n                {!readonly && isNewApp && (\n                    <FormFooter>\n                        {isNewApp && loading && <InstallMessage>{t('applications.install_pending')}</InstallMessage>}\n                        <Form.Button\n                            type=\"submit\"\n                            primary\n                            icon\n                            loading={loading}\n                            data-test-id=\"attribute-infos-submit-btn\"\n                            style={{float: 'right'}}\n                            labelPosition=\"left\"\n                        >\n                            <Icon name=\"save outline\" />\n                            {t('admin.submit')}\n                        </Form.Button>\n                    </FormFooter>\n                )}\n            </FormWrapper>\n        );\n    };\n\n    return (\n        <>\n            {errors?.extensions.code === ErrorTypes.PERMISSION_ERROR && (\n                <Message negative>\n                    <Message.Header>\n                        <Icon name=\"ban\" /> {errors.message}\n                        <Icon aria-label=\"ban\" /> {errors.message}\n                    </Message.Header>\n                </Message>\n            )}\n            <Formik\n                initialValues={initialValues}\n                onSubmit={_handleSubmit}\n                validateOnChange\n                validationSchema={validationSchema}\n            >\n                {_renderForm}\n            </Formik>\n        </>\n    );\n}\n\nexport default InfosForm;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport InfosForm from './InfosForm';\nexport default InfosForm;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {useApolloClient, useMutation} from '@apollo/client';\nimport {useEditApplicationContext} from 'context/EditApplicationContext';\nimport {getApplicationByIdQuery} from 'queries/applications/getApplicationByIdQuery';\nimport {saveApplicationMutation} from 'queries/applications/saveApplicationMutation';\nimport React from 'react';\nimport {useHistory} from 'react-router';\nimport {GET_APPLICATION_BY_ID, GET_APPLICATION_BY_IDVariables} from '_gqlTypes/GET_APPLICATION_BY_ID';\nimport {SAVE_APPLICATION, SAVE_APPLICATIONVariables} from '_gqlTypes/SAVE_APPLICATION';\nimport {IFormError} from '_types/errors';\nimport InfosForm from './InfosForm';\nimport {ApplicationInfosFormValues} from './_types';\n\nfunction InfosTab(): JSX.Element {\n    const apolloClient = useApolloClient();\n    const {application} = useEditApplicationContext();\n    const history = useHistory();\n    const isNewApp = !application;\n\n    const [saveApplication, {error, loading}] = useMutation<SAVE_APPLICATION, SAVE_APPLICATIONVariables>(\n        saveApplicationMutation,\n        {\n            // Prevents Apollo from throwing an exception on error state. Errors are managed with the error variable\n            onError: () => undefined,\n            onCompleted: res => {\n                if (isNewApp) {\n                    // Redirect to new app editing\n                    history.push(`/applications/edit/${res.saveApplication.id}`);\n                }\n            },\n            update: cache => {\n                // We created a new application, invalidate all applications list cache\n                if (isNewApp) {\n                    cache.evict({fieldName: 'applications'});\n                }\n            }\n        }\n    );\n\n    const _handleSubmit = async (submitData: ApplicationInfosFormValues) => {\n        // We specify each field individually to make sure\n        // we don't have unwanted values sneaking in (eg. __typename or permissions)\n        const dataToSave = {\n            application: {\n                id: submitData.id,\n                label: submitData.label,\n                description: submitData.description,\n                module: submitData.module,\n                endpoint: submitData.endpoint,\n                libraries: submitData.libraries,\n                trees: submitData.trees,\n                icon: submitData.icon?.whoAmI\n                    ? {\n                          libraryId: submitData.icon.whoAmI.library.id,\n                          recordId: submitData.icon.whoAmI.id\n                      }\n                    : null\n            }\n        };\n\n        await saveApplication({\n            variables: dataToSave\n        });\n    };\n\n    const _handleCheckIdIsUnique = async (value: string): Promise<boolean> => {\n        if (!value) {\n            return true;\n        }\n\n        try {\n            // Using apolloClient.query to be able to await query result\n            const res = await apolloClient.query<GET_APPLICATION_BY_ID, GET_APPLICATION_BY_IDVariables>({\n                query: getApplicationByIdQuery,\n                fetchPolicy: 'no-cache',\n                variables: {id: value}\n            });\n\n            // No result means id is unique\n            return !res?.data?.applications?.list?.length;\n        } catch (err) {\n            return true;\n        }\n    };\n\n    const formErrors = error?.graphQLErrors?.length ? error.graphQLErrors[0] : null;\n\n    return (\n        <InfosForm\n            onSubmitInfos={_handleSubmit}\n            onCheckIdIsUnique={_handleCheckIdIsUnique}\n            loading={loading}\n            errors={(formErrors as unknown) as IFormError}\n        />\n    );\n}\n\nexport default InfosTab;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport InfosTab from './InfosTab';\nexport default InfosTab;","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {gql} from '@apollo/client';\nimport {applicationDetailsFragment} from './applicationDetailsFragment';\n\nexport const getApplicationsEventsSubscription = gql`\n    ${applicationDetailsFragment}\n    subscription APPLICATION_EVENTS($filters: ApplicationEventFiltersInput) {\n        applicationEvent(filters: $filters) {\n            type\n            application {\n                ...ApplicationDetails\n            }\n        }\n    }\n`;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {useSubscription} from '@apollo/client';\nimport {applicationDetailsFragment} from 'queries/applications/applicationDetailsFragment';\nimport {getApplicationsEventsSubscription} from 'queries/applications/getApplicationsEventsSubscription';\nimport {APPLICATION_EVENTS, APPLICATION_EVENTSVariables} from '_gqlTypes/APPLICATION_EVENTS';\nimport {GET_APPLICATIONS_applications_list} from '_gqlTypes/GET_APPLICATIONS';\nimport {ApplicationEventTypes} from '_gqlTypes/globalTypes';\nimport {WithTypename} from '../../../../../libs/utils/src/types/helpers';\n\nconst useApplicationEventsSubscription = (applicationId: string) => {\n    return useSubscription<APPLICATION_EVENTS, APPLICATION_EVENTSVariables>(getApplicationsEventsSubscription, {\n        variables: {\n            filters: {\n                applicationId\n            }\n        },\n        onSubscriptionData: ({client, subscriptionData}) => {\n            // Update install status of saved app\n            if (\n                subscriptionData?.data?.applicationEvent?.type !== ApplicationEventTypes.SAVE ||\n                !subscriptionData?.data?.applicationEvent?.application\n            ) {\n                return;\n            }\n\n            const appCacheId = client.cache.identify(\n                subscriptionData.data.applicationEvent.application as WithTypename<GET_APPLICATIONS_applications_list>\n            );\n            const currentAppData = client.readFragment({\n                id: appCacheId,\n                fragment: applicationDetailsFragment\n            });\n\n            const newAppData = {\n                ...currentAppData,\n                install: subscriptionData.data.applicationEvent.application.install\n            };\n\n            client.writeFragment({\n                id: appCacheId,\n                data: newAppData,\n                fragment: applicationDetailsFragment\n            });\n        }\n    });\n};\n\nexport default useApplicationEventsSubscription;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {gql} from '@apollo/client';\n\nexport const installApplicationMutation = gql`\n    mutation INSTALL_APPLICATION($id: ID!) {\n        installApplication(id: $id)\n    }\n`;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {useEditApplicationContext} from 'context/EditApplicationContext';\nimport React, {ReactNode} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {Button, Header, Icon, Segment} from 'semantic-ui-react';\nimport styled from 'styled-components';\nimport {ApplicationInstallStatus} from '_gqlTypes/globalTypes';\n\nconst Result = styled(Segment)`\n    font-family: Monaco, Menlo, Ubuntu Mono, Consolas, source-code-pro, monospace;\n    white-space: pre-wrap;\n`;\n\ninterface IInstallViewProps {\n    onInstall: () => void;\n    loading: boolean;\n}\n\nconst InstallHeader = styled(Header)`\n    display: flex;\n    justify-content: space-between;\n    align-content: center;\n    align-items: center;\n`;\n\nfunction InstallView({onInstall, loading}: IInstallViewProps): JSX.Element {\n    const {application} = useEditApplicationContext();\n    const {t} = useTranslation();\n\n    const iconByStatus: {[key in ApplicationInstallStatus]: ReactNode} = {\n        [ApplicationInstallStatus.NONE]: <Icon name=\"question circle outline\" color=\"grey\" />,\n        [ApplicationInstallStatus.RUNNING]: <Icon name=\"play circle outline\" color=\"orange\" />,\n        [ApplicationInstallStatus.SUCCESS]: <Icon name=\"check circle outline\" color=\"green\" />,\n        [ApplicationInstallStatus.ERROR]: <Icon name=\"times circle outline\" color=\"red\" />\n    };\n\n    const _handleClick = () => onInstall();\n    const installStatus = application?.install?.status ?? ApplicationInstallStatus.NONE;\n\n    return (\n        <>\n            <InstallHeader size=\"small\">\n                <div>\n                    {t('applications.status_label')}: {t(`applications.statuses.${installStatus}`)}{' '}\n                    {iconByStatus[installStatus]}\n                </div>\n                <Button primary icon loading={loading} labelPosition=\"left\" onClick={_handleClick}>\n                    <Icon name=\"redo alternate\" />\n                    {t('applications.reinstall')}\n                </Button>\n            </InstallHeader>\n            {!loading && <Result inverted>{application?.install?.lastCallResult}</Result>}\n        </>\n    );\n}\n\nexport default InstallView;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport InstallView from './InstallView';\nexport default InstallView;","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {useMutation} from '@apollo/client';\nimport {useEditApplicationContext} from 'context/EditApplicationContext';\nimport {useApplicationEventsSubscription} from 'hooks/useApplicationEventsSubscription';\nimport {installApplicationMutation} from 'queries/applications/installApplicationMutation';\nimport React from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {useDispatch} from 'react-redux';\nimport {addMessage, MessagesTypes} from 'redux/messages/messages';\nimport {INSTALL_APPLICATION, INSTALL_APPLICATIONVariables} from '_gqlTypes/INSTALL_APPLICATION';\nimport InstallView from './InstallView';\n\nfunction InstallTab(): JSX.Element {\n    const {t} = useTranslation();\n    const {application} = useEditApplicationContext();\n    const dispatch = useDispatch();\n\n    useApplicationEventsSubscription(application.id);\n\n    const [runInstall, {loading}] = useMutation<INSTALL_APPLICATION, INSTALL_APPLICATIONVariables>(\n        installApplicationMutation,\n        {\n            variables: {id: application.id},\n            onCompleted: () => {\n                dispatch(\n                    addMessage({\n                        type: MessagesTypes.SUCCESS,\n                        title: t('applications.install_request_success'),\n                        icon: 'clock'\n                    })\n                );\n            }\n        }\n    );\n\n    const _handleInstall = () => {\n        runInstall();\n    };\n\n    return <InstallView onInstall={_handleInstall} loading={loading} />;\n}\n\nexport default InstallTab;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport InstallTab from './InstallTab';\nexport default InstallTab;","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport DefinePermByUserGroupView from 'components/permissions/DefinePermByUserGroupView';\nimport {useEditApplicationContext} from 'context/EditApplicationContext';\nimport React from 'react';\nimport styled from 'styled-components';\nimport {PermissionTypes} from '_gqlTypes/globalTypes';\n\nconst Wrapper = styled.div`\n    display: grid;\n    grid-template-rows: auto;\n`;\n\nfunction PermissionsTab(): JSX.Element {\n    const {application, readonly} = useEditApplicationContext();\n\n    return (\n        <Wrapper>\n            <DefinePermByUserGroupView\n                type={PermissionTypes.application}\n                applyTo={application.id}\n                readOnly={readonly}\n            />\n        </Wrapper>\n    );\n}\n\nexport default PermissionsTab;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport PermissionsTab from './PermissionsTab';\nexport default PermissionsTab;","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {useMutation} from '@apollo/client';\nimport {useEditApplicationContext} from 'context/EditApplicationContext';\nimport {JsonEditor} from 'jsoneditor-react';\nimport 'jsoneditor-react/es/editor.min.css';\nimport {saveApplicationMutation} from 'queries/applications/saveApplicationMutation';\nimport React from 'react';\nimport styled from 'styled-components';\nimport {SAVE_APPLICATION, SAVE_APPLICATIONVariables} from '_gqlTypes/SAVE_APPLICATION';\n\nconst Wrapper = styled.div`\n    .jsoneditor {\n        border: none;\n    }\n\n    .jsoneditor-menu {\n        background-color: #ddd;\n        border-color: #ddd;\n\n        > button {\n            background-color: #000;\n            filter: invert(100%);\n            opacity: 0.5;\n        }\n\n        .jsoneditor-modes {\n            color: #000;\n        }\n\n        .jsoneditor-search {\n            .jsoneditor-results {\n                color: #000;\n            }\n\n            .jsoneditor-frame {\n                background: none;\n\n                input {\n                    margin: 0 0.5em;\n                    border-radius: 3px;\n                    height: 100%;\n                }\n\n                button {\n                    filter: invert(100%);\n                    opacity: 0.5;\n                }\n            }\n        }\n    }\n`;\n\nfunction SettingsTab(): JSX.Element {\n    const {application, readonly} = useEditApplicationContext();\n\n    const [saveApplication, {error, loading}] = useMutation<SAVE_APPLICATION, SAVE_APPLICATIONVariables>(\n        saveApplicationMutation,\n        {\n            // Prevents Apollo from throwing an exception on error state. Errors are managed with the error variable\n            onError: () => undefined\n        }\n    );\n\n    const _handleChange = (value: Record<string, any>) => {\n        const dataToSave = {\n            application: {\n                id: application.id,\n                settings: value\n            }\n        };\n\n        saveApplication({\n            variables: dataToSave\n        });\n    };\n\n    return (\n        <Wrapper>\n            <JsonEditor\n                mode={readonly ? 'view' : 'tree'}\n                value={application?.settings ?? ''}\n                navigationBar={false}\n                statusBar={false}\n                onChange={_handleChange}\n                allowedModes={readonly ? [] : ['code', 'tree']}\n            />\n        </Wrapper>\n    );\n}\n\nexport default SettingsTab;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport SettingsTab from './SettingsTab';\nexport default SettingsTab;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {localizedTranslation} from '@leav/utils';\nimport GridTab from 'components/shared/GridTab';\nimport {useEditApplicationContext} from 'context/EditApplicationContext';\nimport useLang from 'hooks/useLang';\nimport React, {useState} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {useHistory, useLocation} from 'react-router';\nimport {Header, Icon, Tab, TabProps} from 'semantic-ui-react';\nimport {ApplicationInstallStatus, ApplicationType} from '_gqlTypes/globalTypes';\nimport InfosTab from './InfosTab';\nimport InstallTab from './InstallTab';\nimport PermissionsTab from './PermissionsTab';\nimport SettingsTab from './SettingsTab';\n\nfunction EditApplicationTabs(): JSX.Element {\n    const {t} = useTranslation();\n    const {application} = useEditApplicationContext();\n    const {lang} = useLang();\n    const isNewApp = !application;\n    const location = useLocation();\n    const history = useHistory();\n\n    // Retrieve active tab from URL\n    const tabName = location.hash.replace('#', '');\n\n    const panes = [\n        {\n            key: 'infos',\n            menuItem: t('applications.information'),\n            displayCondition: true,\n            render: () => (\n                <Tab.Pane key=\"info\" className=\"grow\">\n                    <InfosTab />\n                </Tab.Pane>\n            )\n        },\n        {\n            key: 'permissions',\n            menuItem: t('admin.permissions'),\n            displayCondition: !isNewApp,\n            render: () => (\n                <Tab.Pane key=\"permissions\" className=\"\" style={{display: 'grid'}}>\n                    <PermissionsTab />\n                </Tab.Pane>\n            )\n        },\n        {\n            key: 'settings',\n            menuItem: t('applications.settings'),\n            displayCondition: !isNewApp,\n            render: () => (\n                <Tab.Pane key=\"settings\" style={{padding: 0}}>\n                    <SettingsTab />\n                </Tab.Pane>\n            )\n        },\n        {\n            key: 'install',\n            menuItem: t('applications.install'),\n            displayCondition: !isNewApp && application.type === ApplicationType.internal,\n            render: () => (\n                <Tab.Pane key=\"install\" className=\"\">\n                    <InstallTab />\n                </Tab.Pane>\n            )\n        }\n    ].filter(p => p.displayCondition);\n\n    const [activeIndex, setActiveIndex] = useState<number>(tabName ? panes.findIndex(p => tabName === p.key) : 0);\n\n    const _handleTabChange = (_, data: TabProps) => {\n        if (data.panes && data.activeIndex !== undefined) {\n            setActiveIndex(Number(data.activeIndex.toString()));\n            history.replace(`#${data.panes[data.activeIndex].key}`);\n        }\n    };\n\n    const headerLabel = application?.label ? localizedTranslation(application.label, lang) : t('applications.new');\n    const isAppReady = !isNewApp && application?.install?.status === ApplicationInstallStatus.SUCCESS;\n    return (\n        <>\n            <Header>\n                <Header.Content>{headerLabel}</Header.Content>\n                {isAppReady && (\n                    <Header.Subheader as=\"a\" href={application.url}>\n                        <Icon name=\"external alternate\" />\n                        {t('applications.open_application')}\n                    </Header.Subheader>\n                )}\n            </Header>\n            <GridTab\n                menu={{secondary: true, pointing: true}}\n                panes={panes}\n                onTabChange={_handleTabChange}\n                activeIndex={activeIndex}\n            />\n        </>\n    );\n}\n\nexport default EditApplicationTabs;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport EditApplicationTabs from './EditApplicationTabs';\nexport default EditApplicationTabs;","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {useQuery} from '@apollo/client';\nimport ErrorDisplay from 'components/shared/ErrorDisplay';\nimport Loading from 'components/shared/Loading';\nimport EditApplicationContext from 'context/EditApplicationContext';\nimport {getApplicationByIdQuery} from 'queries/applications/getApplicationByIdQuery';\nimport React from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {match} from 'react-router-dom';\nimport styled from 'styled-components';\nimport {GET_APPLICATION_BY_ID, GET_APPLICATION_BY_IDVariables} from '_gqlTypes/GET_APPLICATION_BY_ID';\nimport EditApplicationTabs from './EditApplicationTabs';\n\nexport interface IEditApplicationMatchParams {\n    id: string;\n}\n\ninterface IEditApplicationProps {\n    match?: match<IEditApplicationMatchParams>;\n}\n\nconst Wrapper = styled.div`\n    display: grid;\n    grid-template-rows: auto 1fr;\n`;\n\nfunction EditApplication({match: routerMatch}: IEditApplicationProps): JSX.Element {\n    const {t} = useTranslation();\n    const appId = routerMatch.params?.id ?? null;\n    const isNewApp = !appId;\n\n    const {loading, error, data} = useQuery<GET_APPLICATION_BY_ID, GET_APPLICATION_BY_IDVariables>(\n        getApplicationByIdQuery,\n        {\n            variables: {id: appId},\n            skip: isNewApp\n        }\n    );\n\n    if (loading) {\n        return <Loading />;\n    }\n\n    if (error) {\n        return <ErrorDisplay message={error.message} />;\n    }\n\n    if (!isNewApp && !data?.applications?.list.length) {\n        return <ErrorDisplay message={t('applications.not_found')} />;\n    }\n\n    const appData = data?.applications?.list[0];\n    const isReadOnly =\n        typeof appData?.permissions?.admin_application !== 'undefined' ? !appData.permissions.admin_application : false;\n\n    return (\n        <Wrapper>\n            <EditApplicationContext.Provider value={{application: appData ?? null, readonly: isReadOnly}}>\n                <EditApplicationTabs />\n            </EditApplicationContext.Provider>\n        </Wrapper>\n    );\n}\n\nexport default EditApplication;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport EditApplication from './EditApplication';\nexport default EditApplication;","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport React from 'react';\nimport {DropdownProps, Form} from 'semantic-ui-react';\nimport useLang from '../../../hooks/useLang';\nimport {localizedLabel} from '../../../utils/utils';\nimport {GET_LIBRARIES_libraries_list} from '../../../_gqlTypes/GET_LIBRARIES';\n\ninterface ILibrariesSelectorFieldProps extends DropdownProps {\n    loading?: boolean;\n    libraries: GET_LIBRARIES_libraries_list[] | null;\n}\n\nconst LibrariesSelectorField = ({loading, libraries, ...fieldProps}: ILibrariesSelectorFieldProps): JSX.Element => {\n    const availableLanguages = useLang().lang;\n    const options = !!libraries\n        ? libraries.map(l => ({key: l.id, value: l.id, text: localizedLabel(l.label, availableLanguages)}))\n        : [];\n\n    // TODO: find a cleaner way to remove props from i18n\n    delete fieldProps.t;\n    delete fieldProps.tReady;\n    delete fieldProps.defaultNS;\n    delete fieldProps.i18nOptions;\n    delete fieldProps.reportNS;\n\n    return <Form.Dropdown {...fieldProps} search options={options} />;\n};\n\nLibrariesSelectorField.defaultProps = {\n    loading: false,\n    libraries: []\n};\n\nexport default LibrariesSelectorField;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport LibrariesSelectorField from './LibrariesSelectorField';\nexport default LibrariesSelectorField;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {useQuery} from '@apollo/client';\nimport React from 'react';\nimport {FormDropdownProps} from 'semantic-ui-react';\nimport {GET_LIBRARIES, GET_LIBRARIESVariables} from '_gqlTypes/GET_LIBRARIES';\nimport {getLibsQuery} from '../../../queries/libraries/getLibrariesQuery';\nimport LibrariesSelectorField from '../LibrariesSelectorField';\n\nfunction LibrariesSelector(fieldProps: FormDropdownProps): JSX.Element {\n    const {loading, data} = useQuery<GET_LIBRARIES, GET_LIBRARIESVariables>(getLibsQuery);\n\n    return (\n        <LibrariesSelectorField\n            {...fieldProps}\n            loading={loading}\n            libraries={!!data && data.libraries ? data.libraries.list : null}\n        />\n    );\n}\n\nexport default LibrariesSelector;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport LibrariesSelector from './LibrariesSelector';\nexport default LibrariesSelector;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {useQuery} from '@apollo/client';\nimport {getLibsQuery} from 'queries/libraries/getLibrariesQuery';\nimport React from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {GET_LIBRARIES, GET_LIBRARIESVariables} from '_gqlTypes/GET_LIBRARIES';\nimport {LibraryBehavior} from '_gqlTypes/globalTypes';\nimport {RecordIdentity_whoAmI} from '_gqlTypes/RecordIdentity';\nimport ErrorDisplay from '../ErrorDisplay';\nimport Loading from '../Loading';\nimport RecordSelector from '../RecordSelector';\n\ninterface IFileSelectorProps {\n    onChange: (selectedFile: RecordIdentity_whoAmI) => void;\n    value: RecordIdentity_whoAmI;\n    label: string;\n    disabled?: boolean;\n}\n\nfunction FileSelector({label, value, onChange, disabled}: IFileSelectorProps): JSX.Element {\n    const {t} = useTranslation();\n\n    const {loading, error, data} = useQuery<GET_LIBRARIES, GET_LIBRARIESVariables>(getLibsQuery, {\n        variables: {\n            behavior: [LibraryBehavior.files]\n        }\n    });\n\n    if (loading) {\n        return <Loading />;\n    }\n\n    if (error) {\n        return <ErrorDisplay message={error.message} />;\n    }\n\n    const filesLibraries = data?.libraries?.list ?? [];\n\n    if (!filesLibraries.length) {\n        return <ErrorDisplay message={t('file_selector.no_files_libraries')} />;\n    }\n\n    return (\n        <RecordSelector\n            label={label}\n            value={value}\n            onChange={onChange}\n            disabled={disabled}\n            libraries={filesLibraries.map(l => l.id)}\n        />\n    );\n}\n\nexport default FileSelector;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport FileSelector from './FileSelector';\nexport default FileSelector;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport SelectRecordModal from 'components/records/SelectRecordModal';\nimport RecordCard from 'components/shared/RecordCard';\nimport React from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {Button, Confirm, Icon} from 'semantic-ui-react';\nimport styled from 'styled-components';\nimport {RecordIdentity_whoAmI} from '_gqlTypes/RecordIdentity';\n\ninterface IRecordSelectorProps {\n    onChange: (selectedFile: RecordIdentity_whoAmI) => void;\n    value: RecordIdentity_whoAmI;\n    label: string;\n    disabled?: boolean;\n    libraries: string[];\n    required?: boolean;\n}\n\nconst Wrapper = styled.div`\n    display: flex;\n    height: 3rem;\n\n    && .buttons {\n        display: none;\n    }\n\n    &:hover .buttons {\n        display: block;\n    }\n\n    > * {\n        margin-right: 1em;\n    }\n`;\n\nfunction RecordSelector({\n    onChange,\n    label,\n    value,\n    disabled,\n    libraries,\n    required = false\n}: IRecordSelectorProps): JSX.Element {\n    const {t} = useTranslation();\n    const [isModalOpen, setIsModalOpen] = React.useState(false);\n\n    const [showDeleteConfirm, setShowDeleteConfirm] = React.useState(false);\n    const _openDeleteConfirm = () => setShowDeleteConfirm(true);\n    const _closeDeleteConfirm = () => setShowDeleteConfirm(false);\n\n    const _openModal = () => {\n        setIsModalOpen(true);\n    };\n    const _handleCloseModal = () => setIsModalOpen(false);\n    const _handleSelect = (record: RecordIdentity_whoAmI) => {\n        onChange(record);\n        setIsModalOpen(false);\n    };\n    const _handleDelete = () => {\n        onChange(null);\n        _closeDeleteConfirm();\n    };\n\n    return (\n        <>\n            <label>{label}</label>\n            <Wrapper>\n                {value && (\n                    <>\n                        <RecordCard record={value} />\n                        {!disabled && (\n                            <Button.Group basic>\n                                <Button\n                                    type=\"button\"\n                                    icon\n                                    onClick={_openModal}\n                                    title=\"exchange\"\n                                    aria-label=\"exchange\"\n                                    name=\"exchange\"\n                                >\n                                    <Icon name=\"exchange\" />\n                                </Button>\n                                {!required && (\n                                    <Button type=\"button\" icon onClick={_openDeleteConfirm} aria-label=\"delete\">\n                                        <Icon name=\"close\" />\n                                    </Button>\n                                )}\n                            </Button.Group>\n                        )}\n                    </>\n                )}\n                {!value && (\n                    <Button type=\"button\" icon labelPosition=\"left\" onClick={_openModal}>\n                        <Icon name=\"search\" />\n                        {t('record_selector.select')}\n                    </Button>\n                )}\n            </Wrapper>\n            {isModalOpen && (\n                <SelectRecordModal\n                    library={libraries}\n                    open={isModalOpen}\n                    onClose={_handleCloseModal}\n                    onSelect={_handleSelect}\n                />\n            )}\n            {showDeleteConfirm && (\n                <Confirm\n                    open={showDeleteConfirm}\n                    onCancel={_closeDeleteConfirm}\n                    onConfirm={_handleDelete}\n                    content={t('record_selector.delete_confirm')}\n                    confirmButton={t('admin.submit')}\n                    cancelButton={t('admin.cancel')}\n                />\n            )}\n        </>\n    );\n}\n\nexport default RecordSelector;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport RecordSelector from './RecordSelector';\nexport default RecordSelector;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport TreesSelectorField from './TreesSelectorField';\nexport default TreesSelectorField;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport React from 'react';\nimport {DropdownProps, Form} from 'semantic-ui-react';\nimport useLang from '../../../hooks/useLang';\nimport {localizedLabel} from '../../../utils/utils';\nimport {GET_TREES_trees_list} from '../../../_gqlTypes/GET_TREES';\n\ninterface IAttributesSelectorFieldProps extends DropdownProps {\n    loading?: boolean;\n    trees: GET_TREES_trees_list[] | null;\n}\n\nconst TreesSelectorField = ({trees, ...fieldProps}: IAttributesSelectorFieldProps): JSX.Element => {\n    const availableLanguages = useLang().lang;\n    const options = !!trees\n        ? trees.map(a => ({key: a.id, value: a.id, text: localizedLabel(a.label, availableLanguages)}))\n        : [];\n\n    delete fieldProps.t;\n    delete fieldProps.tReady;\n    delete fieldProps.defaultNS;\n    delete fieldProps.i18nOptions;\n    delete fieldProps.reportNS;\n\n    return <Form.Dropdown {...fieldProps} search options={options} />;\n};\n\nexport default TreesSelectorField;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {useQuery} from '@apollo/client';\nimport React from 'react';\nimport {FormDropdownProps} from 'semantic-ui-react';\nimport {getTreesQuery} from '../../../queries/trees/getTreesQuery';\nimport {GET_ATTRIBUTESVariables} from '../../../_gqlTypes/GET_ATTRIBUTES';\nimport TreesSelectorField from '../TreesSelectorField';\n\ninterface IAttributesSelectorProps extends FormDropdownProps {\n    filters?: GET_ATTRIBUTESVariables;\n}\n\nfunction TreesSelector({filters, ...fieldProps}: IAttributesSelectorProps): JSX.Element {\n    const {loading, data} = useQuery(getTreesQuery, {variables: filters});\n    return <TreesSelectorField {...fieldProps} loading={loading} trees={!!data && data.trees ? data.trees.list : []} />;\n}\n\nexport default TreesSelector;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport TreesSelector from './TreesSelector';\n\nexport default TreesSelector;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport gql from 'graphql-tag';\n\nexport const getTreesQueryName = 'GET_TREES';\n\nexport const getTreesQuery = gql`\n    query GET_TREES($id: ID, $label: String, $system: Boolean) {\n        trees(filters: {id: $id, label: $label, system: $system}) {\n            totalCount\n            list {\n                id\n                label\n                system\n                behavior\n                libraries {\n                    library {\n                        id\n                        label\n                    }\n                    settings {\n                        allowMultiplePositions\n                        allowedAtRoot\n                        allowedChildren\n                    }\n                }\n            }\n        }\n    }\n`;\n"],"names":["EditApplicationContext","React","useEditApplicationContext","useContext","getApplicationByIdQuery","gql","recordIdentityFragment","applicationDetailsFragment","GridTabElem","styled","Tab","displayName","props","saveApplicationMutation","getApplicationModulesQuery","modules","fieldProps","options","map","comp","key","id","value","text","content","Header","size","subheader","description","Form","search","searchInput","Dropdown","name","useQuery","loading","data","applicationsModules","FormWrapper","isNewApp","FormBody","FormFooter","InstallMessage","onSubmitInfos","errors","onCheckIdIsUnique","t","useTranslation","application","readonly","useLang","availableLangs","defaultLang","isReadOnly","defaultApplicationData","type","ApplicationType","color","icon","module","label","reduce","acc","cur","endpoint","libraries","trees","initialValues","lib","tree","serverValidationErrors","extensions","code","ErrorTypes","fields","idValidator","yup","required","matches","test","validationSchema","shape","oneOf","Object","values","nullable","whoAmI","library","preview","Message","negative","Icon","message","onSubmit","validateOnChange","handleSubmit","handleBlur","setFieldValue","inputErrors","touched","submitForm","_handleLabelChange","e","_handleChange","split","field","subfield","formatIDString","isCheckbox","checked","_handleChangeNoLibraries","_handleChangeNoTrees","_handleChangeWithSubmit","_handleIconChange","selectedIcon","_getErrorByField","fieldName","getFieldError","_handleBlur","_handleKeyPress","grouped","lang","FormFieldWrapper","error","width","disabled","onChange","onBlur","onKeyPress","keys","appType","placeholder","fluid","selection","className","LibrariesSelector","multiple","Checkbox","toggle","TreesSelector","FileSelector","primary","style","float","labelPosition","apolloClient","useApolloClient","history","useHistory","useMutation","onError","onCompleted","res","push","saveApplication","update","cache","evict","_handleSubmit","submitData","dataToSave","libraryId","recordId","variables","_handleCheckIdIsUnique","query","fetchPolicy","applications","list","length","formErrors","graphQLErrors","getApplicationsEventsSubscription","applicationId","useSubscription","filters","onSubscriptionData","client","subscriptionData","applicationEvent","ApplicationEventTypes","appCacheId","identify","currentAppData","readFragment","fragment","newAppData","install","writeFragment","installApplicationMutation","Result","Segment","InstallHeader","onInstall","iconByStatus","ApplicationInstallStatus","installStatus","status","Button","onClick","inverted","lastCallResult","dispatch","useDispatch","useApplicationEventsSubscription","addMessage","MessagesTypes","title","runInstall","Wrapper","DefinePermByUserGroupView","PermissionTypes","applyTo","readOnly","mode","settings","navigationBar","statusBar","allowedModes","location","useLocation","tabName","hash","replace","panes","menuItem","displayCondition","render","display","padding","filter","p","useState","findIndex","activeIndex","setActiveIndex","headerLabel","localizedTranslation","isAppReady","as","href","url","menu","secondary","pointing","onTabChange","_","undefined","Number","toString","routerMatch","match","appId","params","skip","Loading","ErrorDisplay","appData","permissions","admin_application","LibrariesSelectorField","availableLanguages","l","localizedLabel","tReady","defaultNS","i18nOptions","reportNS","defaultProps","getLibsQuery","behavior","LibraryBehavior","filesLibraries","RecordSelector","isModalOpen","setIsModalOpen","showDeleteConfirm","setShowDeleteConfirm","_closeDeleteConfirm","_openModal","RecordCard","record","basic","SelectRecordModal","open","onClose","onSelect","Confirm","onCancel","onConfirm","confirmButton","cancelButton","a","getTreesQuery","getTreesQueryName"],"sourceRoot":""}