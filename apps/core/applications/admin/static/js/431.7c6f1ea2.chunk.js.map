{"version":3,"file":"static/js/431.7c6f1ea2.chunk.js","mappings":"odAKaA,E,MAAiBC,GAAH,2I,iCCuC3B,EAxBsB,SAAC,GAAiE,IAAhEC,EAA+D,EAA/DA,QACbC,GAD4E,EAAtDC,SACjBC,EAAAA,EAAAA,MAALF,GACDG,GAAWC,EAAAA,EAAAA,KAEjB,GAAoBC,EAAAA,EAAAA,aAAqDR,EAAgB,CACrFS,OAAQ,SAACC,EAAD,GAAqC,IAArBC,EAAoB,EAA3BC,KAAOD,eACpBE,EAAAA,EAAAA,IAAgBH,EAAQC,EAC3B,IAHEG,GAAP,eAMMC,EAAa,mCAAG,uGAClBD,EAAU,CACNE,UAAW,CAACC,MAAOf,EAAQgB,OAFb,2CAAH,qDAKbC,EAA6B,OAAlBjB,EAAQkB,QAAiBlB,EAAQkB,MAAMC,IAAMnB,EAAQkB,MAAME,KAAmBpB,EAAQgB,GAEvG,OAAOZ,EAASiB,YAAYC,EAAAA,GAAAA,uBACxB,SAACC,EAAA,EAAD,CAAiBC,OAAQX,EAAeY,eAAgBxB,EAAE,2BAA4B,CAACgB,SAAAA,IAAvF,UACI,SAACS,EAAA,EAAD,CAAcC,WAAY3B,EAAQ4B,WAEtC,IACP,ECtCD,ICUMC,GAAWC,EAAAA,EAAAA,IAAOC,EAAAA,EAAAA,KAAPD,CAAH,0EAaRE,EAAgB,SAAC,GAMkB,IALrCC,EAKoC,EALpCA,UACAC,EAIoC,EAJpCA,WACAC,EAGoC,EAHpCA,gBACAC,EAEoC,EAFpCA,QACAlC,EACoC,EADpCA,QAEOD,GAAKE,EAAAA,EAAAA,MAALF,EACDoC,GAAqBC,EAAAA,EAAAA,KAAUC,KAC/BC,EAAsB,SAACC,EAAyBC,GAEnC,aAAXA,EAAEC,OAA0C,IAAnBzC,EAAQ0B,QAAoBc,EAAEE,UACvDF,EAAEG,eAAgB,EAClBH,EAAEE,SAAU,GAGZT,GACAA,EAAgBO,EAEvB,EAED,OACI,+BACI,UAACX,EAAA,EAAD,CAAOe,YAAU,EAACC,SAAO,EAAzB,WACI,UAAChB,EAAA,SAAD,YACI,UAACA,EAAA,MAAD,YACI,SAACA,EAAA,aAAD,CAAkBiB,MAAO,KACzB,SAACjB,EAAA,aAAD,CAAkBiB,MAAO,EAAzB,SAA6B/C,EAAE,sBAC/B,SAAC8B,EAAA,aAAD,CAAkBiB,MAAO,EAAzB,SAA6B/C,EAAE,mBAC/B,SAAC8B,EAAA,aAAD,CAAkBiB,MAAO,EAAzB,SAA6B/C,EAAE,yBAC/B,SAAC8B,EAAA,aAAD,CAAkBiB,MAAO,QAE7B,UAACjB,EAAA,MAAD,CAAWkB,UAAU,UAArB,WACI,SAAClB,EAAA,aAAD,KACA,SAACA,EAAA,aAAD,WACI,SAACmB,EAAA,EAAD,CACIC,KAAK,QACLC,OAAK,EACLC,YAAapD,EAAE,mBAAqB,MACpCqD,KAAK,QACLC,MAAOrD,EAAQgB,OAAS,GACxBsC,SAAUhB,OAGlB,SAACT,EAAA,aAAD,WACI,SAACmB,EAAA,EAAD,CACIC,KAAK,QACLC,OAAK,EACLC,YAAapD,EAAE,gBAAkB,MACjCqD,KAAK,KACLC,MAAOrD,EAAQc,IAAM,GACrBwC,SAAUhB,OAGlB,SAACT,EAAA,aAAD,WACI,SAAC0B,EAAA,EAAD,CACIZ,cAAyC,qBAAnB3C,EAAQ0B,OAC9B0B,KAAK,SACLV,QAAS1C,EAAQ0B,OACjB4B,SAAUhB,OAGlB,SAACT,EAAA,aAAD,WAGR,SAACA,EAAA,OAAD,UACKK,GACG,SAACL,EAAA,MAAD,WACI,SAACA,EAAA,OAAD,CAAY2B,QAAS,EAArB,UACI,SAACC,EAAA,EAAD,QAIR1B,GACAA,EAAU2B,KAAI,SAAAC,GACV,IAAM5C,GAAW6C,EAAAA,EAAAA,IAAeD,EAAE3C,MAAOmB,GAEzC,OACI,UAACN,EAAA,MAAD,CAAsBgC,QAFV,kBAAM7B,EAAW2B,EAAjB,EAEZ,WACI,SAAChC,EAAD,WACI,SAACmC,EAAA,EAAD,CAAahE,QAAS6D,OAE1B,SAAC9B,EAAA,OAAD,UAAad,KACb,SAACc,EAAA,OAAD,UAAa8B,EAAE7C,MACf,SAACe,EAAA,OAAD,WACI,SAAC0B,EAAA,EAAD,CAAUQ,UAAQ,EAACrB,UAAWiB,EAAEjC,YAEpC,SAACG,EAAA,OAAD,WACI,SAAC,EAAD,CAAe/B,QAAS6D,EAAG3D,QAASA,QAV5B2D,EAAE7C,GAczB,UAMxB,EAEDgB,EAAckC,aAAe,CACzB9B,SAAS,EACTH,UAAW,GACX/B,QAAS,CAAC,GAGd,I,EChIA,EDgIA,EElHMiE,GAAQrC,EAAAA,EAAAA,IAAOsC,EAAAA,EAAPtC,CAAH,wFCfX,EDyBkB,SAAC,GAA6C,IAAD,IAA3CuC,EAA2C,EAA3CA,QACTpE,GAAKE,EAAAA,EAAAA,MAALF,EACDG,GAAWC,EAAAA,EAAAA,KACXiE,GAAkBC,EAAAA,EAAAA,KAExB,GAA8BC,EAAAA,EAAAA,UAAc,CAAC,GAA7C,eAAOtE,EAAP,KAAgBuE,EAAhB,KACA,GAA+BC,EAAAA,EAAAA,UAAgDC,EAAAA,EAAc,CACzF7D,WAAU,WAAK8D,EAAAA,EAAAA,IAAqB1E,MADjCkC,EAAP,EAAOA,QAASyC,EAAhB,EAAgBA,MAAOnE,EAAvB,EAAuBA,KAkBjBuB,GAAY,iBAACvB,QAAD,IAACA,GAAD,UAACA,EAAMuB,iBAAP,aAAC,EAAiB6C,YAAlB,QAA0B,IAAIC,QAAO,SAAAC,GAAG,OAAIC,EAAAA,EAAAA,IAAeX,EAAgBY,WAAYF,EAAIhE,GAAnD,IAE1D,OACI,iCACI,UAACmE,EAAA,EAAD,YACI,SAACA,EAAA,SAAD,CAAaC,UAAU,OAAOC,QAAQ,OAAOrC,MAAO,EAAGsC,cAAc,SAArE,UACI,UAACnB,EAAD,CAAOhB,KAAK,QAAZ,WACI,SAAC,KAAD,CAAmBA,KAAM,KACxBlD,EAAE,wBAGVG,EAASiB,YAAYC,EAAAA,GAAAA,wBAClB,SAAC6D,EAAA,SAAD,CAAaE,QAAQ,QAAQrC,MAAO,EAAGoC,UAAU,QAAQE,cAAc,SAAvE,UACI,UAACC,EAAA,EAAD,CAAQC,SAAO,EAACC,MAAI,EAACC,cAAc,OAAOvC,KAAK,SAASwC,GAAIC,EAAAA,GAAMC,GAAI,kBAAtE,WACI,SAACC,EAAA,EAAD,CAAMxC,KAAK,SACVrD,EAAE,yBAKD,qBAAV4E,GACJ,mCAAWA,EAAMkB,YAEjB,SAAC,EAAD,CACI3D,QAASA,IAAY1B,EACrBuB,UAAWA,EACXC,WA3BG,SAAAlC,GAAO,OAAIqE,EAAQ2B,KAAK,mBAAqBhG,EAAQgB,GAA9C,EA4BVmB,gBAzCS,SAAC8D,GACtB,IAAMC,EACkB,aAApBD,EAAWtD,KACLsD,EAAWpD,mBACPsD,EACAF,EAAWrD,QACfqD,EAAW1C,MAErBkB,GAAW,kBACJvE,GADG,cAEL+F,EAAW3C,KAAO4C,IAE1B,EA8BehG,QAASA,MAK5B,C,iHElFD,ECUwB,SAACkG,GACrB,IAAO3E,EAA4B2E,EAA5B3E,eAAgB4E,EAAYD,EAAZC,SAChBpG,GAAKE,EAAAA,EAAAA,MAALF,EACP,GAAsCuE,EAAAA,EAAAA,WAAkB,GAAxD,eAAO8B,EAAP,KAAoBC,EAApB,KAaMC,EAAgB,SAAC/D,GACnBA,EAAEgE,iBACFhE,EAAEiE,kBACFH,GAAe,EAClB,EAOKI,EAAkBC,EAAAA,aAAmBP,EAAU,CAACtC,QAjBjC,SAACtB,GAClBA,EAAEgE,iBACFhE,EAAEiE,kBACFH,GAAe,EAClB,IAeD,OACI,iBAAKxC,QAzBa,SAACtB,GACnBA,EAAEgE,iBACFhE,EAAEiE,iBACL,EAsBG,UACKC,GACD,SAACE,EAAA,EAAD,CACIC,KAAMR,EACNS,QAAStF,EACTuF,SAAUR,EACVS,UAdO,SAACxE,GAChB+D,EAAc/D,GACd2D,EAAM5E,QACT,EAYW0F,aAAcjH,EAAE,gBAChBkH,sBAAsB,EACtBC,oBAAoB,MAInC,C,2FCxCD,ICbA,EDOA,YAA6E,IAAtDzF,EAAqD,EAArDA,SAAUoC,EAA2C,EAA3CA,QAC7B,OACI,SAACwB,EAAA,EAAD,CAAQ,aAAW,SAAStC,UAAU,SAASoE,UAAQ,EAAC5B,KAAK,QAAQ9D,SAAUA,EAAUoC,QAASA,GAEzG,C,8HEcD,ICzBA,EDSA,YAAiE,IAAD,QAA1C/D,EAA0C,EAA1CA,QACZsH,GAA6D,eAC9DC,EAAAA,GAAAA,MAAwB,mBADsC,SAE9DA,EAAAA,GAAAA,YAA8B,mBAFgC,SAG9DA,EAAAA,GAAAA,SAA2B,0BAHmC,GAM7DC,EAAQ,iBAAGxH,QAAH,IAAGA,OAAH,EAAGA,EAASwH,gBAAZ,QAAwBD,EAAAA,GAAAA,SAEtC,OAAc,OAAPvH,QAAO,IAAPA,GAAA,UAAAA,EAASyF,YAAT,mBAAegC,cAAf,SAAuBC,SAC1B,SAACC,EAAA,EAAD,CAAeC,MAAO5H,EAAQyF,KAAKgC,OAAOC,QAAQG,MAAOC,MAAO,KAAM5G,MAAO,QAE7E,SAAC4E,EAAA,EAAD,CAAM,cAAY,eAAexC,KAAMgE,EAAmBE,GAAWrE,KAAK,OAEjF,C,wGErBYwB,EAAe5E,IAAH,+pBACnBgI,EAAAA,E","sources":["queries/libraries/deleteLibMutation.ts","components/libraries/DeleteLibrary/DeleteLibrary.tsx","components/libraries/DeleteLibrary/index.ts","components/libraries/LibrariesList/LibrariesList.tsx","components/libraries/LibrariesList/index.ts","components/libraries/Libraries/Libraries.tsx","components/libraries/Libraries/index.ts","components/shared/ConfirmedButton/index.ts","components/shared/ConfirmedButton/ConfirmedButton.tsx","components/shared/DeleteButton/DeleteButton.tsx","components/shared/DeleteButton/index.ts","components/shared/LibraryIcon/LibraryIcon.tsx","components/shared/LibraryIcon/index.ts","queries/libraries/getLibrariesQuery.ts"],"sourcesContent":["// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport gql from 'graphql-tag';\n\nexport const deleteLibQuery = gql`\n    mutation DELETE_LIBRARY($libID: ID!) {\n        deleteLibrary(id: $libID) {\n            id\n        }\n    }\n`;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {StoreObject, useMutation} from '@apollo/client';\nimport React from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {DELETE_LIBRARY, DELETE_LIBRARYVariables} from '_gqlTypes/DELETE_LIBRARY';\nimport useUserData from '../../../hooks/useUserData';\nimport {deleteLibQuery} from '../../../queries/libraries/deleteLibMutation';\nimport {deleteFromCache} from '../../../utils/utils';\nimport {GET_LIBRARIES_libraries_list} from '../../../_gqlTypes/GET_LIBRARIES';\nimport {PermissionsActions} from '../../../_gqlTypes/globalTypes';\nimport ConfirmedButton from '../../shared/ConfirmedButton';\nimport DeleteButton from '../../shared/DeleteButton';\n\ninterface IDeleteLibraryProps {\n    library: GET_LIBRARIES_libraries_list;\n    filters?: any;\n}\n\nconst DeleteLibrary = ({library, filters}: IDeleteLibraryProps): JSX.Element | null => {\n    const {t} = useTranslation();\n    const userData = useUserData();\n\n    const [deleteLib] = useMutation<DELETE_LIBRARY, DELETE_LIBRARYVariables>(deleteLibQuery, {\n        update: (cache, {data: {deleteLibrary}}) => {\n            deleteFromCache(cache, (deleteLibrary as unknown) as StoreObject);\n        }\n    });\n\n    const _handleDelete = async () =>\n        deleteLib({\n            variables: {libID: library.id}\n        });\n\n    const libLabel = library.label !== null ? library.label.fr || library.label.en || library.id : library.id;\n\n    return userData.permissions[PermissionsActions.admin_delete_library] ? (\n        <ConfirmedButton action={_handleDelete} confirmMessage={t('libraries.confirm_delete', {libLabel})}>\n            <DeleteButton disabled={!!library.system} />\n        </ConfirmedButton>\n    ) : null;\n};\n\nexport default DeleteLibrary;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport DeleteLibrary from './DeleteLibrary';\nexport default DeleteLibrary;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport LibraryIcon from 'components/shared/LibraryIcon';\nimport React from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {Checkbox, Input, Table} from 'semantic-ui-react';\nimport styled from 'styled-components';\nimport useLang from '../../../hooks/useLang';\nimport {localizedLabel} from '../../../utils/utils';\nimport {GET_LIBRARIES_libraries_list} from '../../../_gqlTypes/GET_LIBRARIES';\nimport Loading from '../../shared/Loading';\nimport DeleteLibrary from '../DeleteLibrary';\n\nconst IconCell = styled(Table.Cell)`\n    display: flex;\n    justify-content: center;\n`;\n\ninterface ILibrariesListProps {\n    libraries: GET_LIBRARIES_libraries_list[] | null;\n    onRowClick: (library: GET_LIBRARIES_libraries_list) => void;\n    onFiltersUpdate?: (filters: any) => void;\n    loading?: boolean;\n    filters?: any;\n}\n\nconst LibrariesList = ({\n    libraries,\n    onRowClick,\n    onFiltersUpdate,\n    loading,\n    filters\n}: ILibrariesListProps): JSX.Element => {\n    const {t} = useTranslation();\n    const availableLanguages = useLang().lang;\n    const _handleFilterChange = (e: React.SyntheticEvent, d: any) => {\n        // If a checkbox was not checked and is clicked, go back to indeterminate state\n        if (d.type === 'checkbox' && filters.system === false && d.checked) {\n            d.indeterminate = true;\n            d.checked = false;\n        }\n\n        if (onFiltersUpdate) {\n            onFiltersUpdate(d);\n        }\n    };\n\n    return (\n        <>\n            <Table selectable striped>\n                <Table.Header>\n                    <Table.Row>\n                        <Table.HeaderCell width={1} />\n                        <Table.HeaderCell width={7}>{t('libraries.label')}</Table.HeaderCell>\n                        <Table.HeaderCell width={6}>{t('libraries.ID')}</Table.HeaderCell>\n                        <Table.HeaderCell width={1}>{t('libraries.isSystem')}</Table.HeaderCell>\n                        <Table.HeaderCell width={1} />\n                    </Table.Row>\n                    <Table.Row className=\"filters\">\n                        <Table.HeaderCell />\n                        <Table.HeaderCell>\n                            <Input\n                                size=\"small\"\n                                fluid\n                                placeholder={t('libraries.label') + '...'}\n                                name=\"label\"\n                                value={filters.label || ''}\n                                onChange={_handleFilterChange}\n                            />\n                        </Table.HeaderCell>\n                        <Table.HeaderCell>\n                            <Input\n                                size=\"small\"\n                                fluid\n                                placeholder={t('libraries.ID') + '...'}\n                                name=\"id\"\n                                value={filters.id || ''}\n                                onChange={_handleFilterChange}\n                            />\n                        </Table.HeaderCell>\n                        <Table.HeaderCell>\n                            <Checkbox\n                                indeterminate={typeof filters.system === 'undefined'}\n                                name=\"system\"\n                                checked={filters.system}\n                                onChange={_handleFilterChange}\n                            />\n                        </Table.HeaderCell>\n                        <Table.HeaderCell />\n                    </Table.Row>\n                </Table.Header>\n                <Table.Body>\n                    {loading ? (\n                        <Table.Row>\n                            <Table.Cell colSpan={6}>\n                                <Loading />\n                            </Table.Cell>\n                        </Table.Row>\n                    ) : (\n                        libraries &&\n                        libraries.map(l => {\n                            const libLabel = localizedLabel(l.label, availableLanguages);\n                            const onClick = () => onRowClick(l);\n                            return (\n                                <Table.Row key={l.id} onClick={onClick}>\n                                    <IconCell>\n                                        <LibraryIcon library={l} />\n                                    </IconCell>\n                                    <Table.Cell>{libLabel}</Table.Cell>\n                                    <Table.Cell>{l.id}</Table.Cell>\n                                    <Table.Cell>\n                                        <Checkbox readOnly checked={!!l.system} />\n                                    </Table.Cell>\n                                    <Table.Cell>\n                                        <DeleteLibrary library={l} filters={filters} />\n                                    </Table.Cell>\n                                </Table.Row>\n                            );\n                        })\n                    )}\n                </Table.Body>\n            </Table>\n        </>\n    );\n};\n\nLibrariesList.defaultProps = {\n    loading: false,\n    libraries: [],\n    filters: {}\n};\n\nexport default LibrariesList;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport LibrariesList from './LibrariesList';\n\nexport default LibrariesList;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {useQuery} from '@apollo/client';\nimport {useCurrentApplicationContext} from 'context/CurrentApplicationContext';\nimport {History} from 'history';\nimport React, {useState} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {AiOutlineDatabase} from 'react-icons/ai';\nimport {Link} from 'react-router-dom';\nimport {Button, Grid, Header, Icon} from 'semantic-ui-react';\nimport styled from 'styled-components';\nimport useUserData from '../../../hooks/useUserData';\nimport {getLibsQuery} from '../../../queries/libraries/getLibrariesQuery';\nimport {addWildcardToFilters, isLibraryInApp} from '../../../utils/utils';\nimport {GET_LIBRARIES, GET_LIBRARIESVariables} from '../../../_gqlTypes/GET_LIBRARIES';\nimport {PermissionsActions} from '../../../_gqlTypes/globalTypes';\nimport LibrariesList from '../LibrariesList';\n\nconst Title = styled(Header)`\n    display: flex;\n    align-items: center;\n    gap: 0.5rem;\n`;\n\ninterface ILibrariesProps {\n    history: History;\n}\n\nconst Libraries = ({history}: ILibrariesProps): JSX.Element => {\n    const {t} = useTranslation();\n    const userData = useUserData();\n    const applicationData = useCurrentApplicationContext();\n\n    const [filters, setFilters] = useState<any>({});\n    const {loading, error, data} = useQuery<GET_LIBRARIES, GET_LIBRARIESVariables>(getLibsQuery, {\n        variables: {...addWildcardToFilters(filters)}\n    });\n\n    const _onFiltersUpdate = (filterElem: any) => {\n        const newElemState =\n            filterElem.type === 'checkbox'\n                ? filterElem.indeterminate\n                    ? undefined\n                    : filterElem.checked\n                : filterElem.value;\n\n        setFilters({\n            ...filters,\n            [filterElem.name]: newElemState\n        });\n    };\n    const onRowClick = library => history.push('/libraries/edit/' + library.id);\n    const libraries = (data?.libraries?.list ?? []).filter(lib => isLibraryInApp(applicationData.currentApp, lib.id));\n\n    return (\n        <>\n            <Grid>\n                <Grid.Column textAlign=\"left\" floated=\"left\" width={8} verticalAlign=\"middle\">\n                    <Title size=\"large\">\n                        <AiOutlineDatabase size={30} />\n                        {t('libraries.title')}\n                    </Title>\n                </Grid.Column>\n                {userData.permissions[PermissionsActions.admin_create_library] && (\n                    <Grid.Column floated=\"right\" width={6} textAlign=\"right\" verticalAlign=\"middle\">\n                        <Button primary icon labelPosition=\"left\" size=\"medium\" as={Link} to={'/libraries/edit'}>\n                            <Icon name=\"plus\" />\n                            {t('libraries.new')}\n                        </Button>\n                    </Grid.Column>\n                )}\n            </Grid>\n            {typeof error !== 'undefined' ? (\n                <p>Error: {error.message}</p>\n            ) : (\n                <LibrariesList\n                    loading={loading || !data}\n                    libraries={libraries}\n                    onRowClick={onRowClick}\n                    onFiltersUpdate={_onFiltersUpdate}\n                    filters={filters}\n                />\n            )}\n        </>\n    );\n};\n\nexport default Libraries;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport Libraries from './Libraries';\nexport default Libraries;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport ConfirmedButton from './ConfirmedButton';\nexport default ConfirmedButton;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport React, {useState} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {Confirm} from 'semantic-ui-react';\n\ninterface IConfirmedButtonProps {\n    actionButton?: React.ReactElement<any>;\n    action: (param?: any) => void;\n    confirmMessage: string;\n    children: JSX.Element;\n}\n\nconst ConfirmedButton = (props: IConfirmedButtonProps): JSX.Element => {\n    const {confirmMessage, children} = props;\n    const {t} = useTranslation();\n    const [showConfirm, setShowConfirm] = useState<boolean>(false);\n\n    const _disableClick = (e: React.SyntheticEvent) => {\n        e.preventDefault();\n        e.stopPropagation();\n    };\n\n    const _openConfirm = (e: React.SyntheticEvent) => {\n        e.preventDefault();\n        e.stopPropagation();\n        setShowConfirm(true);\n    };\n\n    const _closeConfirm = (e: React.SyntheticEvent) => {\n        e.preventDefault();\n        e.stopPropagation();\n        setShowConfirm(false);\n    };\n\n    const _runAction = (e: React.SyntheticEvent) => {\n        _closeConfirm(e);\n        props.action();\n    };\n\n    const clickableButton = React.cloneElement(children, {onClick: _openConfirm});\n\n    return (\n        <div onClick={_disableClick}>\n            {clickableButton}\n            <Confirm\n                open={showConfirm}\n                content={confirmMessage}\n                onCancel={_closeConfirm}\n                onConfirm={_runAction}\n                cancelButton={t('admin.cancel')}\n                closeOnDocumentClick={false}\n                closeOnDimmerClick={false}\n            />\n        </div>\n    );\n};\n\nexport default ConfirmedButton;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport React from 'react';\nimport {Button} from 'semantic-ui-react';\n\ninterface IDeleteButtonProps {\n    disabled: boolean;\n    onClick?: (event: React.SyntheticEvent) => void;\n}\n\nfunction DeleteButton({disabled, onClick}: IDeleteButtonProps): JSX.Element {\n    return (\n        <Button aria-label=\"delete\" className=\"delete\" circular icon=\"trash\" disabled={disabled} onClick={onClick} />\n    );\n}\n\nexport default DeleteButton;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport DeleteButton from './DeleteButton';\nexport default DeleteButton;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport React from 'react';\nimport {Icon, SemanticICONS} from 'semantic-ui-react';\nimport {GET_LIB_BY_ID_libraries_list} from '_gqlTypes/GET_LIB_BY_ID';\nimport {LibraryBehavior} from '_gqlTypes/globalTypes';\nimport RecordPreview from '../RecordPreview';\n\ninterface ILibraryIconProps {\n    library: Pick<GET_LIB_BY_ID_libraries_list, 'id' | 'behavior' | 'icon'>;\n}\n\nfunction LibraryIcon({library}: ILibraryIconProps): JSX.Element {\n    const iconNameByBehavior: {[key in LibraryBehavior]: SemanticICONS} = {\n        [LibraryBehavior.files]: 'images outline',\n        [LibraryBehavior.directories]: 'folder outline',\n        [LibraryBehavior.standard]: 'file alternate outline'\n    };\n\n    const behavior = library?.behavior ?? LibraryBehavior.standard;\n\n    return library?.icon?.whoAmI?.preview ? (\n        <RecordPreview image={library.icon.whoAmI.preview.small} color={null} label={null} />\n    ) : (\n        <Icon data-testid=\"generic-icon\" name={iconNameByBehavior[behavior]} size=\"big\" />\n    );\n}\n\nexport default LibraryIcon;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport LibraryIcon from './LibraryIcon';\nexport default LibraryIcon;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport gql from 'graphql-tag';\nimport {recordIdentityFragment} from 'queries/records/recordIdentityFragment';\n\nexport const getLibsQuery = gql`\n    ${recordIdentityFragment}\n    query GET_LIBRARIES($id: ID, $label: String, $system: Boolean, $behavior: [LibraryBehavior!]) {\n        libraries(filters: {id: $id, label: $label, system: $system, behavior: $behavior}) {\n            totalCount\n            list {\n                id\n                system\n                label\n                behavior\n                icon {\n                    ...RecordIdentity\n                }\n                gqlNames {\n                    query\n                    type\n                    list\n                    filter\n                    searchableFields\n                }\n            }\n        }\n    }\n`;\n"],"names":["deleteLibQuery","gql","library","t","filters","useTranslation","userData","useUserData","useMutation","update","cache","deleteLibrary","data","deleteFromCache","deleteLib","_handleDelete","variables","libID","id","libLabel","label","fr","en","permissions","PermissionsActions","ConfirmedButton","action","confirmMessage","DeleteButton","disabled","system","IconCell","styled","Table","LibrariesList","libraries","onRowClick","onFiltersUpdate","loading","availableLanguages","useLang","lang","_handleFilterChange","e","d","type","checked","indeterminate","selectable","striped","width","className","Input","size","fluid","placeholder","name","value","onChange","Checkbox","colSpan","Loading","map","l","localizedLabel","onClick","LibraryIcon","readOnly","defaultProps","Title","Header","history","applicationData","useCurrentApplicationContext","useState","setFilters","useQuery","getLibsQuery","addWildcardToFilters","error","list","filter","lib","isLibraryInApp","currentApp","Grid","textAlign","floated","verticalAlign","Button","primary","icon","labelPosition","as","Link","to","Icon","message","push","filterElem","newElemState","undefined","props","children","showConfirm","setShowConfirm","_closeConfirm","preventDefault","stopPropagation","clickableButton","React","Confirm","open","content","onCancel","onConfirm","cancelButton","closeOnDocumentClick","closeOnDimmerClick","circular","iconNameByBehavior","LibraryBehavior","behavior","whoAmI","preview","RecordPreview","image","small","color","recordIdentityFragment"],"sourceRoot":""}