{"version":3,"file":"static/js/989.ca92fe98.chunk.js","mappings":"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","sources":["../node_modules/semantic-ui-react/dist/es/elements/Input/Input.js","../../../node_modules/lodash-es/set.js","../node_modules/semantic-ui-react/dist/es/modules/Checkbox/Checkbox.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _includes from \"lodash-es/includes\";\nimport _map from \"lodash-es/map\";\nimport _invoke from \"lodash-es/invoke\";\nimport _get from \"lodash-es/get\";\nimport _isNil from \"lodash-es/isNil\";\nimport { handleRef } from '@fluentui/react-component-ref';\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, { Children, cloneElement, Component, createRef } from 'react';\nimport { childrenUtils, createHTMLInput, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps, partitionHTMLProps, useKeyOnly, useValueAndKey } from '../../lib';\nimport Button from '../Button';\nimport Icon from '../Icon';\nimport Label from '../Label';\n/**\n * An Input is a field used to elicit a response from a user.\n * @see Button\n * @see Form\n * @see Icon\n * @see Label\n */\n\nvar Input = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Input, _Component);\n\n  function Input() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n    _this.inputRef = /*#__PURE__*/createRef();\n\n    _this.computeIcon = function () {\n      var _this$props = _this.props,\n          loading = _this$props.loading,\n          icon = _this$props.icon;\n      if (!_isNil(icon)) return icon;\n      if (loading) return 'spinner';\n    };\n\n    _this.computeTabIndex = function () {\n      var _this$props2 = _this.props,\n          disabled = _this$props2.disabled,\n          tabIndex = _this$props2.tabIndex;\n      if (!_isNil(tabIndex)) return tabIndex;\n      if (disabled) return -1;\n    };\n\n    _this.focus = function () {\n      return _this.inputRef.current.focus();\n    };\n\n    _this.select = function () {\n      return _this.inputRef.current.select();\n    };\n\n    _this.handleChange = function (e) {\n      var value = _get(e, 'target.value');\n\n      _invoke(_this.props, 'onChange', e, _extends({}, _this.props, {\n        value: value\n      }));\n    };\n\n    _this.handleChildOverrides = function (child, defaultProps) {\n      return _extends({}, defaultProps, child.props, {\n        ref: function ref(c) {\n          handleRef(child.ref, c);\n          _this.inputRef.current = c;\n        }\n      });\n    };\n\n    _this.partitionProps = function () {\n      var _this$props3 = _this.props,\n          disabled = _this$props3.disabled,\n          type = _this$props3.type;\n\n      var tabIndex = _this.computeTabIndex();\n\n      var unhandled = getUnhandledProps(Input, _this.props);\n\n      var _partitionHTMLProps = partitionHTMLProps(unhandled),\n          htmlInputProps = _partitionHTMLProps[0],\n          rest = _partitionHTMLProps[1];\n\n      return [_extends({}, htmlInputProps, {\n        disabled: disabled,\n        type: type,\n        tabIndex: tabIndex,\n        onChange: _this.handleChange,\n        ref: _this.inputRef\n      }), rest];\n    };\n\n    return _this;\n  }\n\n  var _proto = Input.prototype;\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    var _this$props4 = this.props,\n        action = _this$props4.action,\n        actionPosition = _this$props4.actionPosition,\n        children = _this$props4.children,\n        className = _this$props4.className,\n        disabled = _this$props4.disabled,\n        error = _this$props4.error,\n        fluid = _this$props4.fluid,\n        focus = _this$props4.focus,\n        icon = _this$props4.icon,\n        iconPosition = _this$props4.iconPosition,\n        input = _this$props4.input,\n        inverted = _this$props4.inverted,\n        label = _this$props4.label,\n        labelPosition = _this$props4.labelPosition,\n        loading = _this$props4.loading,\n        size = _this$props4.size,\n        transparent = _this$props4.transparent,\n        type = _this$props4.type;\n    var classes = cx('ui', size, useKeyOnly(disabled, 'disabled'), useKeyOnly(error, 'error'), useKeyOnly(fluid, 'fluid'), useKeyOnly(focus, 'focus'), useKeyOnly(inverted, 'inverted'), useKeyOnly(loading, 'loading'), useKeyOnly(transparent, 'transparent'), useValueAndKey(actionPosition, 'action') || useKeyOnly(action, 'action'), useValueAndKey(iconPosition, 'icon') || useKeyOnly(icon || loading, 'icon'), useValueAndKey(labelPosition, 'labeled') || useKeyOnly(label, 'labeled'), 'input', className);\n    var ElementType = getElementType(Input, this.props);\n\n    var _this$partitionProps = this.partitionProps(),\n        htmlInputProps = _this$partitionProps[0],\n        rest = _this$partitionProps[1]; // Render with children\n    // ----------------------------------------\n\n\n    if (!childrenUtils.isNil(children)) {\n      // add htmlInputProps to the `<input />` child\n      var childElements = _map(Children.toArray(children), function (child) {\n        if (child.type !== 'input') return child;\n        return /*#__PURE__*/cloneElement(child, _this2.handleChildOverrides(child, htmlInputProps));\n      });\n\n      return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n        className: classes\n      }), childElements);\n    } // Render Shorthand\n    // ----------------------------------------\n\n\n    var actionElement = Button.create(action, {\n      autoGenerateKey: false\n    });\n    var labelElement = Label.create(label, {\n      defaultProps: {\n        className: cx('label', // add 'left|right corner'\n        _includes(labelPosition, 'corner') && labelPosition)\n      },\n      autoGenerateKey: false\n    });\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), actionPosition === 'left' && actionElement, labelPosition !== 'right' && labelElement, createHTMLInput(input || type, {\n      defaultProps: htmlInputProps,\n      autoGenerateKey: false\n    }), Icon.create(this.computeIcon(), {\n      autoGenerateKey: false\n    }), actionPosition !== 'left' && actionElement, labelPosition === 'right' && labelElement);\n  };\n\n  return Input;\n}(Component);\n\nInput.handledProps = [\"action\", \"actionPosition\", \"as\", \"children\", \"className\", \"disabled\", \"error\", \"fluid\", \"focus\", \"icon\", \"iconPosition\", \"input\", \"inverted\", \"label\", \"labelPosition\", \"loading\", \"onChange\", \"size\", \"tabIndex\", \"transparent\", \"type\"];\nInput.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** An Input can be formatted to alert the user to an action they may perform. */\n  action: PropTypes.oneOfType([PropTypes.bool, customPropTypes.itemShorthand]),\n\n  /** An action can appear along side an Input on the left or right. */\n  actionPosition: PropTypes.oneOf(['left']),\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** An Input field can show that it is disabled. */\n  disabled: PropTypes.bool,\n\n  /** An Input field can show the data contains errors. */\n  error: PropTypes.bool,\n\n  /** Take on the size of its container. */\n  fluid: PropTypes.bool,\n\n  /** An Input field can show a user is currently interacting with it. */\n  focus: PropTypes.bool,\n\n  /** Optional Icon to display inside the Input. */\n  icon: PropTypes.oneOfType([PropTypes.bool, customPropTypes.itemShorthand]),\n\n  /** An Icon can appear inside an Input on the left or right. */\n  iconPosition: PropTypes.oneOf(['left']),\n\n  /** Shorthand for creating the HTML Input. */\n  input: customPropTypes.itemShorthand,\n\n  /** Format to appear on dark backgrounds. */\n  inverted: PropTypes.bool,\n\n  /** Optional Label to display along side the Input. */\n  label: customPropTypes.itemShorthand,\n\n  /** A Label can appear outside an Input on the left or right. */\n  labelPosition: PropTypes.oneOf(['left', 'right', 'left corner', 'right corner']),\n\n  /** An Icon Input field can show that it is currently loading data. */\n  loading: PropTypes.bool,\n\n  /**\n   * Called on change.\n   *\n   * @param {ChangeEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props and a proposed value.\n   */\n  onChange: PropTypes.func,\n\n  /** An Input can vary in size. */\n  size: PropTypes.oneOf(['mini', 'small', 'large', 'big', 'huge', 'massive']),\n\n  /** An Input can receive focus. */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /** Transparent Input has no background. */\n  transparent: PropTypes.bool,\n\n  /** The HTML input type. */\n  type: PropTypes.string\n} : {};\nInput.defaultProps = {\n  type: 'text'\n};\nInput.create = createShorthandFactory(Input, function (type) {\n  return {\n    type: type\n  };\n});\nexport default Input;","import baseSet from './_baseSet.js';\n\n/**\n * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n * it's created. Arrays are created for missing index properties while objects\n * are created for all other missing properties. Use `_.setWith` to customize\n * `path` creation.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.set(object, 'a[0].b.c', 4);\n * console.log(object.a[0].b.c);\n * // => 4\n *\n * _.set(object, ['x', '0', 'y', 'z'], 5);\n * console.log(object.x[0].y.z);\n * // => 5\n */\nfunction set(object, path, value) {\n  return object == null ? object : baseSet(object, path, value);\n}\n\nexport default set;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _set from \"lodash-es/set\";\nimport _invoke from \"lodash-es/invoke\";\nimport _get from \"lodash-es/get\";\nimport _isNil from \"lodash-es/isNil\";\nimport { Ref } from '@fluentui/react-component-ref';\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, { createRef } from 'react';\nimport { ModernAutoControlledComponent as Component, createHTMLLabel, customPropTypes, getElementType, getUnhandledProps, htmlInputAttrs, partitionHTMLProps, useKeyOnly } from '../../lib';\n\n/**\n * A checkbox allows a user to select a value from a small set of options, often binary.\n * @see Form\n * @see Radio\n */\nvar Checkbox = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Checkbox, _Component);\n\n  function Checkbox() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n    _this.inputRef = /*#__PURE__*/createRef();\n    _this.labelRef = /*#__PURE__*/createRef();\n\n    _this.canToggle = function () {\n      var _this$props = _this.props,\n          disabled = _this$props.disabled,\n          radio = _this$props.radio,\n          readOnly = _this$props.readOnly;\n      var checked = _this.state.checked;\n      return !disabled && !readOnly && !(radio && checked);\n    };\n\n    _this.computeTabIndex = function () {\n      var _this$props2 = _this.props,\n          disabled = _this$props2.disabled,\n          tabIndex = _this$props2.tabIndex;\n      if (!_isNil(tabIndex)) return tabIndex;\n      return disabled ? -1 : 0;\n    };\n\n    _this.handleClick = function (e) {\n      var id = _this.props.id;\n      var _this$state = _this.state,\n          checked = _this$state.checked,\n          indeterminate = _this$state.indeterminate;\n\n      var isInputClick = _invoke(_this.inputRef.current, 'contains', e.target);\n\n      var isLabelClick = _invoke(_this.labelRef.current, 'contains', e.target);\n\n      var isRootClick = !isLabelClick && !isInputClick;\n      var hasId = !_isNil(id);\n      var isLabelClickAndForwardedToInput = isLabelClick && hasId; // https://github.com/Semantic-Org/Semantic-UI-React/pull/3351\n\n      if (!isLabelClickAndForwardedToInput) {\n        _invoke(_this.props, 'onClick', e, _extends({}, _this.props, {\n          checked: !checked,\n          indeterminate: !!indeterminate\n        }));\n      }\n\n      if (_this.isClickFromMouse) {\n        _this.isClickFromMouse = false;\n\n        if (isLabelClick && !hasId) {\n          _this.handleChange(e);\n        } // Changes should be triggered for the slider variation\n\n\n        if (isRootClick) {\n          _this.handleChange(e);\n        }\n\n        if (isLabelClick && hasId) {\n          // To prevent two clicks from being fired from the component we have to stop the propagation\n          // from the \"input\" click: https://github.com/Semantic-Org/Semantic-UI-React/issues/3433\n          e.stopPropagation();\n        }\n      }\n    };\n\n    _this.handleChange = function (e) {\n      var checked = _this.state.checked;\n      if (!_this.canToggle()) return;\n\n      _invoke(_this.props, 'onChange', e, _extends({}, _this.props, {\n        checked: !checked,\n        indeterminate: false\n      }));\n\n      _this.setState({\n        checked: !checked,\n        indeterminate: false\n      });\n    };\n\n    _this.handleMouseDown = function (e) {\n      var _this$state2 = _this.state,\n          checked = _this$state2.checked,\n          indeterminate = _this$state2.indeterminate;\n\n      _invoke(_this.props, 'onMouseDown', e, _extends({}, _this.props, {\n        checked: !!checked,\n        indeterminate: !!indeterminate\n      }));\n\n      if (!e.defaultPrevented) {\n        _invoke(_this.inputRef.current, 'focus');\n      } // Heads up!\n      // We need to call \"preventDefault\" to keep element focused.\n\n\n      e.preventDefault();\n    };\n\n    _this.handleMouseUp = function (e) {\n      var _this$state3 = _this.state,\n          checked = _this$state3.checked,\n          indeterminate = _this$state3.indeterminate;\n      _this.isClickFromMouse = true;\n\n      _invoke(_this.props, 'onMouseUp', e, _extends({}, _this.props, {\n        checked: !!checked,\n        indeterminate: !!indeterminate\n      }));\n    };\n\n    _this.setIndeterminate = function () {\n      var indeterminate = _this.state.indeterminate;\n\n      _set(_this.inputRef, 'current.indeterminate', !!indeterminate);\n    };\n\n    return _this;\n  }\n\n  var _proto = Checkbox.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.setIndeterminate();\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    this.setIndeterminate();\n  };\n\n  _proto.render = function render() {\n    var _this$props3 = this.props,\n        className = _this$props3.className,\n        disabled = _this$props3.disabled,\n        label = _this$props3.label,\n        id = _this$props3.id,\n        name = _this$props3.name,\n        radio = _this$props3.radio,\n        readOnly = _this$props3.readOnly,\n        slider = _this$props3.slider,\n        toggle = _this$props3.toggle,\n        type = _this$props3.type,\n        value = _this$props3.value;\n    var _this$state4 = this.state,\n        checked = _this$state4.checked,\n        indeterminate = _this$state4.indeterminate;\n    var classes = cx('ui', useKeyOnly(checked, 'checked'), useKeyOnly(disabled, 'disabled'), useKeyOnly(indeterminate, 'indeterminate'), // auto apply fitted class to compact white space when there is no label\n    // https://semantic-ui.com/modules/checkbox.html#fitted\n    useKeyOnly(_isNil(label), 'fitted'), useKeyOnly(radio, 'radio'), useKeyOnly(readOnly, 'read-only'), useKeyOnly(slider, 'slider'), useKeyOnly(toggle, 'toggle'), 'checkbox', className);\n    var unhandled = getUnhandledProps(Checkbox, this.props);\n    var ElementType = getElementType(Checkbox, this.props);\n\n    var _partitionHTMLProps = partitionHTMLProps(unhandled, {\n      htmlProps: htmlInputAttrs\n    }),\n        htmlInputProps = _partitionHTMLProps[0],\n        rest = _partitionHTMLProps[1]; // Heads Up!\n    // Do not remove empty labels, they are required by SUI CSS\n\n\n    var labelElement = createHTMLLabel(label, {\n      defaultProps: {\n        htmlFor: id\n      },\n      autoGenerateKey: false\n    }) || /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: id\n    });\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes,\n      onClick: this.handleClick,\n      onChange: this.handleChange,\n      onMouseDown: this.handleMouseDown,\n      onMouseUp: this.handleMouseUp\n    }), /*#__PURE__*/React.createElement(Ref, {\n      innerRef: this.inputRef\n    }, /*#__PURE__*/React.createElement(\"input\", _extends({}, htmlInputProps, {\n      checked: checked,\n      className: \"hidden\",\n      disabled: disabled,\n      id: id,\n      name: name,\n      readOnly: true,\n      tabIndex: this.computeTabIndex(),\n      type: type,\n      value: value\n    }))), /*#__PURE__*/React.createElement(Ref, {\n      innerRef: this.labelRef\n    }, labelElement));\n  };\n\n  return Checkbox;\n}(Component);\n\nCheckbox.handledProps = [\"as\", \"checked\", \"className\", \"defaultChecked\", \"defaultIndeterminate\", \"disabled\", \"fitted\", \"id\", \"indeterminate\", \"label\", \"name\", \"onChange\", \"onClick\", \"onMouseDown\", \"onMouseUp\", \"radio\", \"readOnly\", \"slider\", \"tabIndex\", \"toggle\", \"type\", \"value\"];\nexport { Checkbox as default };\nCheckbox.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Whether or not checkbox is checked. */\n  checked: PropTypes.bool,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** The initial value of checked. */\n  defaultChecked: PropTypes.bool,\n\n  /** Whether or not checkbox is indeterminate. */\n  defaultIndeterminate: PropTypes.bool,\n\n  /** A checkbox can appear disabled and be unable to change states */\n  disabled: PropTypes.bool,\n\n  /** Removes padding for a label. Auto applied when there is no label. */\n  fitted: PropTypes.bool,\n\n  /** A unique identifier. */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /** Whether or not checkbox is indeterminate. */\n  indeterminate: PropTypes.bool,\n\n  /** The text of the associated label element. */\n  label: customPropTypes.itemShorthand,\n\n  /** The HTML input name. */\n  name: PropTypes.string,\n\n  /**\n   * Called when the user attempts to change the checked state.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props and proposed checked/indeterminate state.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Called when the checkbox or label is clicked.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props and current checked/indeterminate state.\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * Called when the user presses down on the mouse.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props and current checked/indeterminate state.\n   */\n  onMouseDown: PropTypes.func,\n\n  /**\n   * Called when the user releases the mouse.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props and current checked/indeterminate state.\n   */\n  onMouseUp: PropTypes.func,\n\n  /** Format as a radio element. This means it is an exclusive option. */\n  radio: customPropTypes.every([PropTypes.bool, customPropTypes.disallow(['slider', 'toggle'])]),\n\n  /** A checkbox can be read-only and unable to change states. */\n  readOnly: PropTypes.bool,\n\n  /** Format to emphasize the current selection state. */\n  slider: customPropTypes.every([PropTypes.bool, customPropTypes.disallow(['radio', 'toggle'])]),\n\n  /** A checkbox can receive focus. */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /** Format to show an on or off choice. */\n  toggle: customPropTypes.every([PropTypes.bool, customPropTypes.disallow(['radio', 'slider'])]),\n\n  /** HTML input type, either checkbox or radio. */\n  type: PropTypes.oneOf(['checkbox', 'radio']),\n\n  /** The HTML input value. */\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n} : {};\nCheckbox.defaultProps = {\n  type: 'checkbox'\n};\nCheckbox.autoControlledProps = ['checked', 'indeterminate'];"],"names":["Input","_Component","_this","_len","arguments","length","args","Array","_key","call","apply","this","concat","inputRef","createRef","computeIcon","_this$props","props","loading","icon","_isNil","computeTabIndex","_this$props2","disabled","tabIndex","focus","current","select","handleChange","e","value","_get","_invoke","_extends","handleChildOverrides","child","defaultProps","ref","c","handleRef","partitionProps","_this$props3","type","unhandled","getUnhandledProps","_partitionHTMLProps","partitionHTMLProps","htmlInputProps","rest","onChange","_inheritsLoose","prototype","render","_this2","_this$props4","action","actionPosition","children","className","error","fluid","iconPosition","input","inverted","label","labelPosition","size","transparent","classes","cx","useKeyOnly","useValueAndKey","ElementType","getElementType","_this$partitionProps","childrenUtils","childElements","_map","Children","cloneElement","React","actionElement","Button","autoGenerateKey","labelElement","Label","_includes","createHTMLInput","Icon","Component","handledProps","propTypes","create","createShorthandFactory","object","path","baseSet","Checkbox","labelRef","canToggle","radio","readOnly","checked","state","handleClick","id","_this$state","indeterminate","isInputClick","target","isLabelClick","isRootClick","hasId","isClickFromMouse","stopPropagation","setState","handleMouseDown","_this$state2","defaultPrevented","preventDefault","handleMouseUp","_this$state3","setIndeterminate","_set","_proto","componentDidMount","componentDidUpdate","name","slider","toggle","_this$state4","htmlProps","htmlInputAttrs","createHTMLLabel","htmlFor","onClick","onMouseDown","onMouseUp","Ref","innerRef","autoControlledProps"],"sourceRoot":""}