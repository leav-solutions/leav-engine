{"version":3,"file":"static/js/78.3bd3128c.chunk.js","mappings":"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","sources":["components/attributes/AttributesList/index.ts","components/attributes/AttributesList/AttributesList.tsx","queries/records/indexRecordsMutation.ts","components/libraries/UnlinkLibAttribute/index.ts","components/libraries/UnlinkLibAttribute/UnlinkLibAttribute.tsx","components/libraries/EditLibrary/EditLibraryTabs/AttributesTab/AttributesTab.tsx","components/libraries/EditLibrary/EditLibraryTabs/AttributesTab/index.ts","queries/forms/deleteFormMutation.ts","queries/forms/getFormsQuery.ts","queries/forms/formElementsByDepsFragment.ts","queries/forms/getFormQuery.ts","components/libraries/EditLibrary/EditLibraryTabs/FormsTab/EditForm/hooks/useEditFormContext.ts","queries/forms/saveFormMutation.ts","components/libraries/EditLibrary/EditLibraryTabs/FormsTab/EditFormModal/EditFormModalButtonsContext.tsx","components/libraries/EditLibrary/EditLibraryTabs/FormsTab/EditForm/EditFormTabs/ContentTab/formBuilderReducer/hook/useFormBuilderReducer.ts","components/libraries/EditLibrary/EditLibraryTabs/FormsTab/EditForm/EditFormTabs/ContentTab/formBuilderReducer/helpers/getKeyFromDepValue.ts","components/libraries/EditLibrary/EditLibraryTabs/FormsTab/EditForm/EditFormTabs/ContentTab/formBuilderReducer/helpers/mergeConcat.ts","components/libraries/EditLibrary/EditLibraryTabs/FormsTab/EditForm/EditFormTabs/ContentTab/formBuilderReducer/helpers/sortByOrder.ts","components/libraries/EditLibrary/EditLibraryTabs/FormsTab/EditForm/EditFormTabs/ContentTab/formBuilderReducer/helpers/removeElementById.ts","components/libraries/EditLibrary/EditLibraryTabs/FormsTab/EditForm/EditFormTabs/ContentTab/formBuilderReducer/formBuilderReducer.ts","components/libraries/EditLibrary/EditLibraryTabs/FormsTab/EditForm/EditFormTabs/ContentTab/formBuilderReducer/helpers/actions/addElement.ts","components/libraries/EditLibrary/EditLibraryTabs/FormsTab/EditForm/EditFormTabs/ContentTab/formBuilderReducer/helpers/actions/removeElement.ts","components/libraries/EditLibrary/EditLibraryTabs/FormsTab/EditForm/EditFormTabs/ContentTab/formBuilderReducer/helpers/actions/moveElement.ts","components/libraries/EditLibrary/EditLibraryTabs/FormsTab/EditForm/EditFormTabs/ContentTab/formBuilderReducer/helpers/actions/openSettings.ts","components/libraries/EditLibrary/EditLibraryTabs/FormsTab/EditForm/EditFormTabs/ContentTab/formBuilderReducer/helpers/actions/closeSettings.ts","components/libraries/EditLibrary/EditLibraryTabs/FormsTab/EditForm/EditFormTabs/ContentTab/formBuilderReducer/helpers/actions/saveSettings.ts","components/libraries/EditLibrary/EditLibraryTabs/FormsTab/EditForm/EditFormTabs/ContentTab/formBuilderReducer/helpers/actions/changeActiveDependency.ts","components/libraries/EditLibrary/EditLibraryTabs/FormsTab/EditForm/EditFormTabs/ContentTab/formBuilderReducer/helpers/actions/removeTab.ts","components/libraries/EditLibrary/EditLibraryTabs/FormsTab/EditForm/EditFormTabs/ContentTab/BreadcrumbNavigator/BreadcrumbNavigatorView/BreadcrumbSection/BreadcrumbSection.tsx","components/libraries/EditLibrary/EditLibraryTabs/FormsTab/EditForm/EditFormTabs/ContentTab/BreadcrumbNavigator/BreadcrumbNavigatorView/BreadcrumbSection/index.ts","components/libraries/EditLibrary/EditLibraryTabs/FormsTab/EditForm/EditFormTabs/ContentTab/BreadcrumbNavigator/BreadcrumbNavigatorView/BreadcrumbNavigatorView.tsx","components/libraries/EditLibrary/EditLibraryTabs/FormsTab/EditForm/EditFormTabs/ContentTab/BreadcrumbNavigator/BreadcrumbNavigatorView/index.ts","components/libraries/EditLibrary/EditLibraryTabs/FormsTab/EditForm/EditFormTabs/ContentTab/BreadcrumbNavigator/BreadcrumbNavigator.tsx","components/libraries/EditLibrary/EditLibraryTabs/FormsTab/EditForm/EditFormTabs/ContentTab/BreadcrumbNavigator/index.ts","components/libraries/EditLibrary/EditLibraryTabs/FormsTab/EditForm/EditFormTabs/ContentTab/DependencySettings/DependencySettings.tsx","components/libraries/EditLibrary/EditLibraryTabs/FormsTab/EditForm/EditFormTabs/ContentTab/_types.ts","components/libraries/EditLibrary/EditLibraryTabs/FormsTab/EditForm/EditFormTabs/ContentTab/DependencySettings/index.ts","components/libraries/EditLibrary/EditLibraryTabs/FormsTab/EditForm/EditFormTabs/ContentTab/uiElements/fields/CheckboxField/CheckboxField.tsx","components/libraries/EditLibrary/EditLibraryTabs/FormsTab/EditForm/EditFormTabs/ContentTab/uiElements/fields/CheckboxField/index.ts","components/libraries/EditLibrary/EditLibraryTabs/FormsTab/EditForm/EditFormTabs/ContentTab/uiElements/fields/DateField/DateField.tsx","components/libraries/EditLibrary/EditLibraryTabs/FormsTab/EditForm/EditFormTabs/ContentTab/uiElements/fields/DateField/index.ts","components/libraries/EditLibrary/EditLibraryTabs/FormsTab/EditForm/EditFormTabs/ContentTab/uiElements/fields/DropdownField/DropdownField.tsx","components/libraries/EditLibrary/EditLibraryTabs/FormsTab/EditForm/EditFormTabs/ContentTab/uiElements/fields/DropdownField/index.ts","components/libraries/EditLibrary/EditLibraryTabs/FormsTab/EditForm/EditFormTabs/ContentTab/uiElements/fields/EncryptedField/EncryptedField.tsx","components/libraries/EditLibrary/EditLibraryTabs/FormsTab/EditForm/EditFormTabs/ContentTab/uiElements/fields/EncryptedField/index.ts","components/libraries/EditLibrary/EditLibraryTabs/FormsTab/EditForm/EditFormTabs/ContentTab/uiElements/fields/InputField/InputField.tsx","components/libraries/EditLibrary/EditLibraryTabs/FormsTab/EditForm/EditFormTabs/ContentTab/uiElements/fields/InputField/index.ts","components/libraries/EditLibrary/EditLibraryTabs/FormsTab/EditForm/EditFormTabs/ContentTab/uiElements/fields/LinkField/LinkField.tsx","components/libraries/EditLibrary/EditLibraryTabs/FormsTab/EditForm/EditFormTabs/ContentTab/uiElements/fields/LinkField/index.ts","components/shared/RecordCardSkeleton/RecordCardSkeleton.tsx","components/shared/RecordCardSkeleton/index.ts","components/libraries/EditLibrary/EditLibraryTabs/FormsTab/EditForm/EditFormTabs/ContentTab/uiElements/fields/TreeField/TreeField.tsx","components/libraries/EditLibrary/EditLibraryTabs/FormsTab/EditForm/EditFormTabs/ContentTab/uiElements/fields/TreeField/index.ts","components/libraries/EditLibrary/EditLibraryTabs/FormsTab/EditForm/EditFormTabs/ContentTab/FormLayout/FormLayoutElementWrapper/FormElementWrapper/FormElementWrapper.tsx","components/libraries/EditLibrary/EditLibraryTabs/FormsTab/EditForm/EditFormTabs/ContentTab/FormLayout/FormLayoutElementWrapper/FormElementWrapper/index.ts","components/libraries/EditLibrary/EditLibraryTabs/FormsTab/EditForm/EditFormTabs/ContentTab/uiElements/layout/Container/Container.tsx","components/libraries/EditLibrary/EditLibraryTabs/FormsTab/EditForm/EditFormTabs/ContentTab/uiElements/layout/Container/index.ts","components/libraries/EditLibrary/EditLibraryTabs/FormsTab/EditForm/EditFormTabs/ContentTab/uiElements/layout/Tabs/EditTabLabelModal/EditTabLabelModal.tsx","components/libraries/EditLibrary/EditLibraryTabs/FormsTab/EditForm/EditFormTabs/ContentTab/uiElements/layout/Tabs/EditTabLabelModal/index.ts","components/libraries/EditLibrary/EditLibraryTabs/FormsTab/EditForm/EditFormTabs/ContentTab/uiElements/layout/Tabs/Tabs.tsx","components/libraries/EditLibrary/EditLibraryTabs/FormsTab/EditForm/EditFormTabs/ContentTab/uiElements/layout/Tabs/index.ts","components/libraries/EditLibrary/EditLibraryTabs/FormsTab/EditForm/EditFormTabs/ContentTab/uiElements/layout/TextBlock/TextBlock.tsx","components/libraries/EditLibrary/EditLibraryTabs/FormsTab/EditForm/EditFormTabs/ContentTab/uiElements/layout/TextBlock/index.ts","components/libraries/EditLibrary/EditLibraryTabs/FormsTab/EditForm/EditFormTabs/ContentTab/uiElements/layout/UiDivider/UiDivider.tsx","components/libraries/EditLibrary/EditLibraryTabs/FormsTab/EditForm/EditFormTabs/ContentTab/uiElements/layout/UiDivider/index.ts","components/libraries/EditLibrary/EditLibraryTabs/FormsTab/EditForm/EditFormTabs/ContentTab/uiElements/index.tsx","components/libraries/EditLibrary/EditLibraryTabs/FormsTab/EditForm/EditFormTabs/ContentTab/ElementsReserve/AttributesList/ReserveAttribute/ReserveAttribute.tsx","components/libraries/EditLibrary/EditLibraryTabs/FormsTab/EditForm/EditFormTabs/ContentTab/ElementsReserve/AttributesList/ReserveAttribute/index.ts","components/libraries/EditLibrary/EditLibraryTabs/FormsTab/EditForm/EditFormTabs/ContentTab/ElementsReserve/AttributesList/AttributesList.tsx","components/libraries/EditLibrary/EditLibraryTabs/FormsTab/EditForm/EditFormTabs/ContentTab/ElementsReserve/AttributesList/index.ts","components/libraries/EditLibrary/EditLibraryTabs/FormsTab/EditForm/EditFormTabs/ContentTab/ElementsReserve/LayoutElementsList/ReserveLayoutElement/ReserveLayoutElement.tsx","components/libraries/EditLibrary/EditLibraryTabs/FormsTab/EditForm/EditFormTabs/ContentTab/ElementsReserve/LayoutElementsList/ReserveLayoutElement/index.ts","components/libraries/EditLibrary/EditLibraryTabs/FormsTab/EditForm/EditFormTabs/ContentTab/ElementsReserve/LayoutElementsList/LayoutElementsList.tsx","components/libraries/EditLibrary/EditLibraryTabs/FormsTab/EditForm/EditFormTabs/ContentTab/ElementsReserve/LayoutElementsList/index.ts","components/libraries/EditLibrary/EditLibraryTabs/FormsTab/EditForm/EditFormTabs/ContentTab/ElementsReserve/ElementsReserve.tsx","components/libraries/EditLibrary/EditLibraryTabs/FormsTab/EditForm/EditFormTabs/ContentTab/ElementsReserve/index.ts","components/libraries/EditLibrary/EditLibraryTabs/FormsTab/EditForm/EditFormTabs/ContentTab/FormLayout/SettingsEdition/SettingsField/SettingsInput/SettingsAttribute.tsx","components/libraries/EditLibrary/EditLibraryTabs/FormsTab/EditForm/EditFormTabs/ContentTab/FormLayout/SettingsEdition/SettingsField/SettingsInput/SettingsCheckbox.tsx","components/libraries/EditLibrary/EditLibraryTabs/FormsTab/EditForm/EditFormTabs/ContentTab/FormLayout/SettingsEdition/SettingsField/SettingsInput/SettingsRTE.tsx","components/libraries/EditLibrary/EditLibraryTabs/FormsTab/EditForm/EditFormTabs/ContentTab/FormLayout/SettingsEdition/SettingsField/SettingsInput/SettingsSelect.tsx","components/libraries/EditLibrary/EditLibraryTabs/FormsTab/EditForm/EditFormTabs/ContentTab/FormLayout/SettingsEdition/SettingsField/SettingsInput/SettingsTextInput.tsx","components/libraries/EditLibrary/EditLibraryTabs/FormsTab/EditForm/EditFormTabs/ContentTab/FormLayout/SettingsEdition/SettingsField/SettingsField.tsx","components/libraries/EditLibrary/EditLibraryTabs/FormsTab/EditForm/EditFormTabs/ContentTab/FormLayout/SettingsEdition/SettingsField/index.ts","components/libraries/EditLibrary/EditLibraryTabs/FormsTab/EditForm/EditFormTabs/ContentTab/FormLayout/SettingsEdition/SettingsEdition.tsx","components/libraries/EditLibrary/EditLibraryTabs/FormsTab/EditForm/EditFormTabs/ContentTab/FormLayout/SettingsEdition/index.ts","components/libraries/EditLibrary/EditLibraryTabs/FormsTab/EditForm/EditFormTabs/ContentTab/FormLayout/FormLayout.tsx","components/libraries/EditLibrary/EditLibraryTabs/FormsTab/EditForm/EditFormTabs/ContentTab/FormLayout/index.ts","components/libraries/EditLibrary/EditLibraryTabs/FormsTab/EditForm/EditFormTabs/ContentTab/ContentTab.tsx","components/libraries/EditLibrary/EditLibraryTabs/FormsTab/EditForm/EditFormTabs/ContentTab/index.ts","components/libraries/EditLibrary/EditLibraryTabs/FormsTab/EditForm/EditFormTabs/ContentTab/formBuilderReducer/computeInitialState.ts","components/libraries/EditLibrary/EditLibraryTabs/FormsTab/EditForm/EditFormTabs/InfosTab/InfosForm/InfosForm.tsx","components/libraries/EditLibrary/EditLibraryTabs/FormsTab/EditForm/EditFormTabs/InfosTab/InfosForm/index.ts","components/libraries/EditLibrary/EditLibraryTabs/FormsTab/EditForm/EditFormTabs/InfosTab/InfosTab.tsx","components/libraries/EditLibrary/EditLibraryTabs/FormsTab/EditForm/EditFormTabs/InfosTab/index.ts","components/libraries/EditLibrary/EditLibraryTabs/FormsTab/EditForm/EditFormTabs/EditFormTabs.tsx","components/libraries/EditLibrary/EditLibraryTabs/FormsTab/EditForm/EditFormTabs/index.ts","components/libraries/EditLibrary/EditLibraryTabs/FormsTab/EditForm/EditForm.tsx","components/libraries/EditLibrary/EditLibraryTabs/FormsTab/EditForm/index.ts","components/libraries/EditLibrary/EditLibraryTabs/FormsTab/EditFormModal/EditFormModal.tsx","components/libraries/EditLibrary/EditLibraryTabs/FormsTab/EditFormModal/index.ts","components/libraries/EditLibrary/EditLibraryTabs/FormsTab/FormsList/FormsList.tsx","components/libraries/EditLibrary/EditLibraryTabs/FormsTab/FormsList/index.ts","components/libraries/EditLibrary/EditLibraryTabs/FormsTab/FormsTab.tsx","components/libraries/EditLibrary/EditLibraryTabs/FormsTab/index.ts","queries/libraries/saveLibMutation.ts","queries/views/getViewsQuery.ts","components/views/ViewSelector/ViewSelectorField/ViewSelectorField.tsx","components/views/ViewSelector/ViewSelectorField/index.ts","components/views/ViewSelector/ViewSelector.tsx","components/views/ViewSelector/index.ts","components/libraries/EditLibrary/EditLibraryTabs/InfosTab/InfosForm/InfosForm.tsx","components/libraries/EditLibrary/EditLibraryTabs/InfosTab/InfosForm/index.ts","components/libraries/EditLibrary/EditLibraryTabs/InfosTab/InfosTab.tsx","components/libraries/EditLibrary/EditLibraryTabs/InfosTab/index.ts","components/libraries/EditLibrary/EditLibraryTabs/PermissionsTab/PermissionsContent/PermissionsContent.tsx","components/libraries/EditLibrary/EditLibraryTabs/PermissionsTab/PermissionsContent/index.ts","components/libraries/EditLibrary/EditLibraryTabs/PermissionsTab/PermissionsTab.tsx","components/libraries/EditLibrary/EditLibraryTabs/PermissionsTab/index.ts","queries/records/purgeRecords.ts","components/libraries/EditLibrary/EditLibraryTabs/PurgeTab/PurgeTab.tsx","components/libraries/EditLibrary/EditLibraryTabs/PurgeTab/index.ts","components/libraries/EditLibrary/EditLibraryTabs/EditLibraryTabs.tsx","components/libraries/EditLibrary/EditLibraryTabs/index.ts","components/libraries/EditLibrary/index.ts","components/libraries/EditLibrary/EditLibrary.tsx","components/shared/FileSelector/FileSelector.tsx","components/shared/FileSelector/index.ts","components/shared/LibraryIcon/LibraryIcon.tsx","components/shared/LibraryIcon/index.ts","components/shared/RecordSelector/RecordSelector.tsx","components/shared/RecordSelector/index.ts"],"sourcesContent":["// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport AttributesList from './AttributesList';\nexport default AttributesList;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport React from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {Checkbox, Dropdown, Input, Table} from 'semantic-ui-react';\nimport useLang from '../../../hooks/useLang';\nimport {localizedLabel} from '../../../utils/utils';\nimport {GET_ATTRIBUTES_attributes_list} from '../../../_gqlTypes/GET_ATTRIBUTES';\nimport {AttributeFormat, AttributeType} from '../../../_gqlTypes/globalTypes';\nimport Loading from '../../shared/Loading';\n\ninterface IAttributesListProps {\n    attributes: GET_ATTRIBUTES_attributes_list[] | null;\n    onRowClick: (attribute: GET_ATTRIBUTES_attributes_list) => void;\n    onFiltersUpdate?: (filters: any) => void;\n    loading: boolean;\n    withFilters?: boolean;\n    filters?: any;\n    actions?: JSX.Element;\n}\n\nconst AttributesList = ({\n    attributes = [],\n    loading = false,\n    withFilters = true,\n    filters = {},\n    onRowClick,\n    actions,\n    onFiltersUpdate\n}: IAttributesListProps): JSX.Element => {\n    const _handleFilterChange = (e: React.SyntheticEvent, d: any) => {\n        // If a checkbox was not checked and is clicked, go back to indeterminate state\n        if (d.type === 'checkbox' && filters[d.name] === false && d.checked) {\n            d.indeterminate = true;\n            d.checked = false;\n        }\n\n        if (onFiltersUpdate) {\n            onFiltersUpdate(d);\n        }\n    };\n\n    // const {onRowClick, children} = props;\n    const {t} = useTranslation();\n    const availableLanguages = useLang().lang;\n    const actionsList: React.ReactNode[] = actions ? (!Array.isArray(actions) ? [actions] : actions) : [];\n    const types = Object.keys(AttributeType).map(type => ({\n        key: type,\n        value: type,\n        text: t('attributes.types.' + type)\n    }));\n\n    const formats = Object.keys(AttributeFormat).map(format => ({\n        key: format,\n        value: format,\n        text: t('attributes.formats.' + format)\n    }));\n\n    return (\n        <Table selectable striped>\n            <Table.Header>\n                <Table.Row>\n                    <Table.HeaderCell width={4}>{t('attributes.label')}</Table.HeaderCell>\n                    <Table.HeaderCell width={4}>{t('attributes.ID')}</Table.HeaderCell>\n                    <Table.HeaderCell width={3}>{t('attributes.type')}</Table.HeaderCell>\n                    <Table.HeaderCell width={3}>{t('attributes.format')}</Table.HeaderCell>\n                    <Table.HeaderCell width={1}>{t('attributes.multiple_values')}</Table.HeaderCell>\n                    <Table.HeaderCell width={1}>{t('attributes.isSystem')}</Table.HeaderCell>\n                    <Table.HeaderCell width={1} />\n                </Table.Row>\n                {withFilters && (\n                    <Table.Row className=\"filters\">\n                        <Table.HeaderCell>\n                            <Input\n                                size=\"small\"\n                                fluid\n                                placeholder={t('attributes.label') + '...'}\n                                name=\"label\"\n                                value={filters.label || ''}\n                                onChange={_handleFilterChange}\n                            />\n                        </Table.HeaderCell>\n                        <Table.HeaderCell>\n                            <Input\n                                size=\"small\"\n                                fluid\n                                placeholder={t('attributes.ID') + '...'}\n                                name=\"id\"\n                                value={filters.id || ''}\n                                onChange={_handleFilterChange}\n                            />\n                        </Table.HeaderCell>\n                        <Table.HeaderCell>\n                            <Dropdown\n                                fluid\n                                multiple\n                                search\n                                selection\n                                options={types}\n                                placeholder={t('attributes.type') + '...'}\n                                name=\"type\"\n                                value={filters.type || []}\n                                onChange={_handleFilterChange}\n                            />\n                        </Table.HeaderCell>\n                        <Table.HeaderCell>\n                            <Dropdown\n                                fluid\n                                multiple\n                                search\n                                selection\n                                options={formats}\n                                placeholder={t('attributes.format') + '...'}\n                                name=\"format\"\n                                value={filters.format || []}\n                                onChange={_handleFilterChange}\n                            />\n                        </Table.HeaderCell>\n                        <Table.HeaderCell>\n                            <Checkbox\n                                indeterminate={typeof filters.multiple_values === 'undefined'}\n                                name=\"multiple_values\"\n                                checked={filters.multiple_values}\n                                onChange={_handleFilterChange}\n                            />\n                        </Table.HeaderCell>\n                        <Table.HeaderCell>\n                            <Checkbox\n                                indeterminate={typeof filters.system === 'undefined'}\n                                name=\"system\"\n                                checked={filters.system}\n                                onChange={_handleFilterChange}\n                            />\n                        </Table.HeaderCell>\n                        <Table.HeaderCell />\n                    </Table.Row>\n                )}\n            </Table.Header>\n            <Table.Body>\n                {loading ? (\n                    <Table.Row>\n                        <Table.Cell colSpan={6}>\n                            <Loading />\n                        </Table.Cell>\n                    </Table.Row>\n                ) : (\n                    !!attributes &&\n                    attributes.map(a => {\n                        const onClick = () => onRowClick(a);\n                        const attrLabel = localizedLabel(a.label, availableLanguages);\n                        return (\n                            <Table.Row key={a.id} onClick={onClick}>\n                                <Table.Cell>{attrLabel}</Table.Cell>\n                                <Table.Cell>{a.id}</Table.Cell>\n                                <Table.Cell>{t('attributes.types.' + a.type)}</Table.Cell>\n                                <Table.Cell>{a.format ? t('attributes.formats.' + a.format) : ''}</Table.Cell>\n                                <Table.Cell width={1}>\n                                    <Checkbox readOnly checked={a.multiple_values} />\n                                </Table.Cell>\n                                <Table.Cell width={1}>\n                                    <Checkbox readOnly checked={a.system} />\n                                </Table.Cell>\n                                <Table.Cell textAlign=\"right\" width={1} className=\"actions\">\n                                    {actionsList.map(child =>\n                                        React.cloneElement(child as React.ReactElement<any>, {attribute: a})\n                                    )}\n                                </Table.Cell>\n                            </Table.Row>\n                        );\n                    })\n                )}\n            </Table.Body>\n        </Table>\n    );\n};\n\nexport default AttributesList;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport gql from 'graphql-tag';\n\nexport const indexRecordsMutation = gql`\n    mutation INDEX_RECORDS($libraryId: String!, $records: [String!]) {\n        indexRecords(libraryId: $libraryId, records: $records)\n    }\n`;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport UnlinkLibAttribute from './UnlinkLibAttribute';\nexport default UnlinkLibAttribute;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport React from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {Button} from 'semantic-ui-react';\nimport {AttributeDetails} from '../../../_gqlTypes/AttributeDetails';\nimport {GET_LIB_BY_ID_libraries_list} from '../../../_gqlTypes/GET_LIB_BY_ID';\nimport ConfirmedButton from '../../shared/ConfirmedButton';\n\ninterface IUnlinkLibAttributeProps {\n    attribute?: AttributeDetails;\n    library: GET_LIB_BY_ID_libraries_list | null;\n    onUnlink: (attributesList: string[]) => void;\n}\n\nconst UnlinkLibAttribute = (props: IUnlinkLibAttributeProps): JSX.Element => {\n    const {t} = useTranslation();\n    const {attribute, library, onUnlink} = props;\n\n    if (!attribute || !library) {\n        return <></>;\n    }\n\n    const label = library.label !== null ? library.label.fr || library.label.en || library.id : library.id;\n\n    const action = () => {\n        const attributesToSave = !library.attributes\n            ? []\n            : library.attributes.filter(a => a.id !== attribute.id).map(a => a.id);\n\n        return onUnlink(attributesToSave);\n    };\n\n    return (\n        <ConfirmedButton action={action} confirmMessage={t('libraries.confirm_unlink_attr', {libLabel: label})}>\n            <Button className=\"unlink\" circular icon=\"cancel\" disabled={attribute.system} />\n        </ConfirmedButton>\n    );\n};\n\nexport default UnlinkLibAttribute;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {useMutation} from '@apollo/client';\nimport EditAttributeModal from 'components/attributes/EditAttributeModal';\nimport React, {useState} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {Button, Icon} from 'semantic-ui-react';\nimport {SAVE_LIBRARY_ATTRIBUTES, SAVE_LIBRARY_ATTRIBUTESVariables} from '_gqlTypes/SAVE_LIBRARY_ATTRIBUTES';\nimport {getLibByIdQuery} from '../../../../../queries/libraries/getLibraryById';\nimport {saveLibAttributesMutation} from '../../../../../queries/libraries/saveLibAttributesMutation';\nimport {GET_ATTRIBUTES_attributes_list} from '../../../../../_gqlTypes/GET_ATTRIBUTES';\nimport {GET_LIB_BY_ID_libraries_list} from '../../../../../_gqlTypes/GET_LIB_BY_ID';\nimport AttributesList from '../../../../attributes/AttributesList';\nimport AttributesSelectionModal from '../../../../attributes/AttributesSelectionModal';\nimport UnlinkLibAttribute from '../../../UnlinkLibAttribute';\n\ninterface IAttributesTabProps {\n    library: GET_LIB_BY_ID_libraries_list | null;\n    readonly: boolean;\n}\n\nconst AttributesTab = ({library, readonly}: IAttributesTabProps): JSX.Element | null => {\n    const {t} = useTranslation();\n    const [attributeModalDisplay, setAttributeModalDisplay] = useState<{visible: boolean; attribute?: string}>({\n        visible: false\n    });\n\n    const [showAddExistingAttrModal, setShowAddExistingAttrModal] = useState<boolean>(false);\n    const [saveLibAttr] = useMutation<SAVE_LIBRARY_ATTRIBUTES, SAVE_LIBRARY_ATTRIBUTESVariables>(\n        saveLibAttributesMutation\n    );\n\n    const _handleRowClick = (attribute: GET_ATTRIBUTES_attributes_list) => {\n        setAttributeModalDisplay({visible: true, attribute: attribute.id});\n    };\n\n    const _handleCloseAttributeModal = () => setAttributeModalDisplay({visible: false});\n\n    const _openNewAttrModal = () => {\n        setAttributeModalDisplay({visible: true});\n    };\n\n    const _openAddExistingAttrModal = () => {\n        setShowAddExistingAttrModal(true);\n    };\n\n    const _closeAddExistingAttrModal = () => {\n        setShowAddExistingAttrModal(false);\n    };\n\n    const saveAttributes = async (attributesToSave: string[]) => {\n        return saveLibAttr({\n            variables: {libId: library.id, attributes: attributesToSave},\n            refetchQueries: [{query: getLibByIdQuery, variables: {id: library.id}}]\n        });\n    };\n\n    const _onNewAttributeSaved = async (newAttr: GET_ATTRIBUTES_attributes_list) => {\n        if (library === null) {\n            return;\n        }\n\n        const attributesList = library.attributes ? [...library.attributes.map(a => a.id), newAttr.id] : [newAttr.id];\n\n        await saveAttributes(attributesList);\n        _handleCloseAttributeModal();\n    };\n\n    const _onClickUnlink = async (attributesList: string[]) => {\n        return saveAttributes(attributesList);\n    };\n\n    const onExistingAttrAdded = async (selection: string[]) => {\n        const newLibAttributes = library.attributes ? library.attributes.map(a => a.id) : [];\n        newLibAttributes.push(...selection);\n\n        await saveAttributes(newLibAttributes);\n        _closeAddExistingAttrModal();\n        return;\n    };\n\n    return (\n        library && (\n            <div>\n                {!readonly && (\n                    <>\n                        <Button icon labelPosition=\"left\" size=\"medium\" onClick={_openNewAttrModal}>\n                            <Icon name=\"plus\" />\n                            {t('attributes.new')}\n                        </Button>\n                        <Button icon labelPosition=\"left\" size=\"medium\" onClick={_openAddExistingAttrModal}>\n                            <Icon name=\"plus\" />\n                            {t('libraries.link_existing_attribute')}\n                        </Button>\n                    </>\n                )}\n\n                <AttributesList\n                    loading={false}\n                    attributes={library ? library.attributes : []}\n                    onRowClick={_handleRowClick}\n                    withFilters={false}\n                    actions={\n                        !readonly ? (\n                            <UnlinkLibAttribute library={library} key=\"unlink_attr_btn\" onUnlink={_onClickUnlink} />\n                        ) : (\n                            <></>\n                        )\n                    }\n                />\n\n                {!!library.attributes && showAddExistingAttrModal && (\n                    <AttributesSelectionModal\n                        openModal={showAddExistingAttrModal}\n                        onClose={_closeAddExistingAttrModal}\n                        onSubmit={onExistingAttrAdded}\n                        selection={library.attributes.map(a => a.id)}\n                        filter={{system: false}}\n                    />\n                )}\n\n                {attributeModalDisplay.visible && (\n                    <EditAttributeModal\n                        open={true}\n                        onClose={_handleCloseAttributeModal}\n                        onPostSave={attributeModalDisplay.attribute ? null : _onNewAttributeSaved}\n                        attribute={attributeModalDisplay.attribute}\n                        redirectAfterCreate={false}\n                    />\n                )}\n            </div>\n        )\n    );\n};\n\nexport default AttributesTab;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport AttributesTab from './AttributesTab';\nexport default AttributesTab;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport gql from 'graphql-tag';\n\nexport const deleteFormQuery = gql`\n    mutation DELETE_FORM($library: ID!, $formId: ID!) {\n        deleteForm(library: $library, id: $formId) {\n            library {\n                id\n            }\n            id\n        }\n    }\n`;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport gql from 'graphql-tag';\n\nexport const getFormsQuery = gql`\n    query GET_FORMS_LIST($library: ID!, $id: ID, $label: String, $system: Boolean) {\n        forms(filters: {library: $library, id: $id, label: $label, system: $system}) {\n            totalCount\n            list {\n                id\n                label\n                system\n            }\n        }\n    }\n`;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport gql from 'graphql-tag';\n\nexport const formElementsByDepsFragment = gql`\n    fragment FormElementsByDeps on FormElementsByDeps {\n        dependencyValue {\n            attribute\n            value {\n                id\n                library\n            }\n        }\n        elements {\n            id\n            containerId\n            order\n            type\n            uiElementType\n            settings {\n                key\n                value\n            }\n        }\n    }\n`;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport gql from 'graphql-tag';\nimport {formElementsByDepsFragment} from './formElementsByDepsFragment';\n\nexport const getFormQuery = gql`\n    ${formElementsByDepsFragment}\n    query GET_FORM($library: ID!, $id: ID!) {\n        forms(filters: {library: $library, id: $id}) {\n            totalCount\n            list {\n                id\n                label\n                system\n                elements {\n                    ...FormElementsByDeps\n                }\n                dependencyAttributes {\n                    id\n                    label\n                    ... on TreeAttribute {\n                        linked_tree {\n                            id\n                        }\n                    }\n                }\n            }\n        }\n    }\n`;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {createContext, useContext} from 'react';\nimport {GET_FORM_forms_list} from '_gqlTypes/GET_FORM';\n\nexport interface IEditFormContext {\n    form: GET_FORM_forms_list;\n    library: string;\n    readonly: boolean;\n    setForm: (form: GET_FORM_forms_list) => void;\n}\n\nexport const EditFormContext = createContext<IEditFormContext>({\n    form: null,\n    library: null,\n    readonly: false,\n    setForm: null\n});\n\nexport const useEditFormContext = () => useContext(EditFormContext);\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport gql from 'graphql-tag';\nimport {formElementsByDepsFragment} from './formElementsByDepsFragment';\n\nexport const saveFormQuery = gql`\n    ${formElementsByDepsFragment}\n    mutation SAVE_FORM($formData: FormInput!) {\n        saveForm(form: $formData) {\n            id\n            label\n            system\n            elements {\n                ...FormElementsByDeps\n            }\n            dependencyAttributes {\n                id\n                label\n            }\n        }\n    }\n`;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {createContext, useContext} from 'react';\nexport interface IEditFormModalButtonsContext {\n    buttons: {[key: string]: JSX.Element};\n    setButton: (key: string, button: JSX.Element) => void;\n    removeButton: (key: string) => void;\n}\n\nexport const EditFormModalButtonsContext = createContext<IEditFormModalButtonsContext>(null);\n\nexport const useEditFormModalButtonsContext = (): IEditFormModalButtonsContext => {\n    return useContext(EditFormModalButtonsContext);\n};\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport React, {Dispatch, useContext} from 'react';\nimport {FormBuilderAction, IFormBuilderState} from '../formBuilderReducer';\n\nconst initialState: IFormBuilderState = {\n    form: null,\n    library: '',\n    openSettings: false,\n    activeDependency: null,\n    elementInSettings: null,\n    elements: {},\n    activeElements: {}\n};\n\nexport const FormBuilderReducerContext = React.createContext<{\n    state: IFormBuilderState;\n    dispatch: Dispatch<FormBuilderAction>;\n}>({state: initialState, dispatch: () => initialState});\n\nexport const useFormBuilderReducer = () => useContext(FormBuilderReducerContext);\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {RecordIdentity_whoAmI} from '../../../../../../../../../../_gqlTypes/RecordIdentity';\nimport {defaultDepValue} from '../formBuilderReducer';\n\nexport default function getKeyFromDepValue(depValue: RecordIdentity_whoAmI | null): string {\n    return !!depValue ? `${depValue.library.id}/${depValue.id}` : defaultDepValue;\n}\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport mergeWith from 'lodash/mergeWith';\n\nexport default function mergeConcat<T, U>(target: T, src: U): T {\n    return mergeWith(target, src, (objVal: unknown, srcVal: unknown): any => {\n        if (Array.isArray(objVal)) {\n            return objVal.concat(srcVal);\n        }\n    });\n}\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nexport default function sortByOrder(a, b) {\n    return a.order - b.order;\n}\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport cloneDeep from 'lodash/cloneDeep';\nimport {IFormElement} from '../../_types';\nimport {ElementsByContainer, IFormBuilderState} from '../formBuilderReducer';\n\nconst _cleanContainerChildren = (\n    element: Pick<IFormElement, 'id'>,\n    fieldsByContainer: ElementsByContainer\n): ElementsByContainer => {\n    let fields = cloneDeep(fieldsByContainer);\n\n    if (typeof fields[element.id] !== 'undefined') {\n        for (const child of fields[element.id]) {\n            fields = _cleanContainerChildren(child, fields);\n        }\n\n        delete fields[element.id];\n    }\n\n    return fields;\n};\n\nconst removeElementById = (\n    state: IFormBuilderState,\n    elemId: string,\n    depAttribute: string,\n    depValue: string,\n    containerId: string\n): IFormBuilderState => {\n    const newElemsByDeps = cloneDeep(state.elements);\n    const _filterElem = el => el.id !== elemId;\n\n    // Remove elements linked to tab\n    newElemsByDeps[depAttribute][depValue][containerId] = newElemsByDeps[depAttribute][depValue][containerId].filter(\n        _filterElem\n    );\n    newElemsByDeps[depAttribute][depValue] = _cleanContainerChildren(\n        {\n            id: elemId\n        },\n        newElemsByDeps[depAttribute][depValue]\n    );\n\n    let newActiveElems = cloneDeep(state.activeElements);\n    newActiveElems[containerId] = state.activeElements[containerId].filter(_filterElem);\n\n    newActiveElems = _cleanContainerChildren(\n        {\n            id: elemId\n        },\n        newActiveElems\n    );\n\n    return {...state, elements: newElemsByDeps, activeElements: newActiveElems};\n};\n\nexport default removeElementById;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {GET_FORM_forms_list} from '../../../../../../../../../_gqlTypes/GET_FORM';\nimport {RecordIdentity_whoAmI} from '../../../../../../../../../_gqlTypes/RecordIdentity';\nimport {IKeyValue} from '../../../../../../../../../_types/shared';\nimport {IFormElement, IFormElementPos} from '../_types';\nimport addElement from './helpers/actions/addElement';\nimport changeActiveDependency from './helpers/actions/changeActiveDependency';\nimport closeSettings from './helpers/actions/closeSettings';\nimport moveElement from './helpers/actions/moveElement';\nimport openSettings from './helpers/actions/openSettings';\nimport removeElement from './helpers/actions/removeElement';\nimport removeTab from './helpers/actions/removeTab';\nimport saveSettings from './helpers/actions/saveSettings';\n\nexport type ElementsByDependencyAttribute = IKeyValue<ElementsByDependencyValue>;\n\nexport type ElementsByDependencyValue = IKeyValue<ElementsByContainer>;\n\nexport type ElementsByContainer = IKeyValue<IFormElement[]>;\n\nexport const defaultDepAttribute = '__default';\nexport const defaultDepValue = '__default';\nexport const defaultContainerId = '__root';\n\nexport interface IFormBuilderState {\n    form: GET_FORM_forms_list;\n    library: string;\n    openSettings: boolean;\n    activeDependency: {\n        attribute: string;\n        ancestors: RecordIdentity_whoAmI[];\n        value: RecordIdentity_whoAmI | null;\n    } | null;\n    elementInSettings: IFormElement | null;\n    elements: ElementsByDependencyAttribute;\n    activeElements: ElementsByContainer;\n}\n\nexport enum FormBuilderActionTypes {\n    ADD_ELEMENT = 'ADD_ELEMENT',\n    REMOVE_ELEMENT = 'REMOVE_ELEMENT',\n    MOVE_ELEMENT = 'MOVE_ELEMENT',\n    OPEN_SETTINGS = 'OPEN_SETTINGS',\n    CLOSE_SETTINGS = 'CLOSE_SETTINGS',\n    SAVE_SETTINGS = 'SAVE_SETTINGS',\n    CHANGE_ACTIVE_DEPENDENCY = 'CHANGE_ACTIVE_DEPENDENCY',\n    REMOVE_TAB = 'REMOVE_TAB'\n}\n\nexport interface IFormBuilderActionAddElement {\n    type: FormBuilderActionTypes.ADD_ELEMENT;\n    element: Omit<IFormElement, 'order' | 'herited'>;\n    position: IFormElementPos;\n}\nexport interface IFormBuilderActionRemoveElement {\n    type: FormBuilderActionTypes.REMOVE_ELEMENT;\n    element: IFormElement;\n}\nexport interface IFormBuilderActionMoveElement {\n    type: FormBuilderActionTypes.MOVE_ELEMENT;\n    elementId?: string;\n    from: IFormElementPos;\n    to: IFormElementPos;\n}\nexport interface IFormBuilderActionOpenSettings {\n    type: FormBuilderActionTypes.OPEN_SETTINGS;\n    element: IFormElement;\n}\nexport interface IFormBuilderActionCloseSettings {\n    type: FormBuilderActionTypes.CLOSE_SETTINGS;\n}\nexport interface IFormBuilderActionSaveSettings {\n    type: FormBuilderActionTypes.SAVE_SETTINGS;\n    settings: IKeyValue<any>;\n    element?: IFormElement;\n}\nexport interface IFormBuilderActionChangeActiveDependency {\n    type: FormBuilderActionTypes.CHANGE_ACTIVE_DEPENDENCY;\n    activeDependency: {\n        attribute: string;\n        ancestors: RecordIdentity_whoAmI[];\n        value: RecordIdentity_whoAmI | null;\n    } | null;\n}\nexport interface IFormBuilderActionRemoveTab {\n    type: FormBuilderActionTypes.REMOVE_TAB;\n    parentElement: IFormElement;\n    tabId: string;\n}\n\nexport type FormBuilderAction =\n    | IFormBuilderActionAddElement\n    | IFormBuilderActionRemoveElement\n    | IFormBuilderActionMoveElement\n    | IFormBuilderActionOpenSettings\n    | IFormBuilderActionCloseSettings\n    | IFormBuilderActionSaveSettings\n    | IFormBuilderActionChangeActiveDependency\n    | IFormBuilderActionRemoveTab;\n\nexport type FormBuilderDispatchFunc = (action: FormBuilderAction) => void;\n\nexport interface IFormBuilderStateAndDispatch {\n    state: IFormBuilderState;\n    dispatch: FormBuilderDispatchFunc;\n}\n\nconst formBuilderReducer = (state: IFormBuilderState, action: FormBuilderAction): IFormBuilderState => {\n    switch (action.type) {\n        case FormBuilderActionTypes.ADD_ELEMENT: {\n            return addElement(state, action);\n        }\n        case FormBuilderActionTypes.REMOVE_ELEMENT: {\n            return removeElement(state, action);\n        }\n        case FormBuilderActionTypes.MOVE_ELEMENT: {\n            return moveElement(state, action);\n        }\n        case FormBuilderActionTypes.OPEN_SETTINGS: {\n            return openSettings(state, action);\n        }\n        case FormBuilderActionTypes.CLOSE_SETTINGS: {\n            return closeSettings(state, action);\n        }\n        case FormBuilderActionTypes.SAVE_SETTINGS: {\n            return saveSettings(state, action);\n        }\n        case FormBuilderActionTypes.CHANGE_ACTIVE_DEPENDENCY: {\n            return changeActiveDependency(state, action);\n        }\n        case FormBuilderActionTypes.REMOVE_TAB: {\n            return removeTab(state, action);\n        }\n        default:\n            return state;\n    }\n};\n\nexport default formBuilderReducer;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {cloneDeep} from 'lodash';\nimport {IFormElement} from '../../../_types';\nimport {\n    defaultContainerId,\n    defaultDepAttribute,\n    defaultDepValue,\n    IFormBuilderActionAddElement,\n    IFormBuilderState\n} from '../../formBuilderReducer';\nimport getKeyFromDepValue from '../getKeyFromDepValue';\nimport mergeConcat from '../mergeConcat';\nimport sortByOrder from '../sortByOrder';\n\nexport default function addElement(state: IFormBuilderState, action: IFormBuilderActionAddElement) {\n    const _updateOrder = (origId: string) => (el: IFormElement) => {\n        const newEl = {...el};\n\n        if (el.id === origId) {\n            newEl.order = action.position.order;\n            return newEl;\n        }\n\n        if (el.order >= action.position.order) {\n            newEl.order++;\n        }\n\n        return newEl;\n    };\n\n    const elementToAdd: IFormElement = {\n        ...action.element,\n        order: action.position.order,\n        containerId: action.position.containerId\n    };\n\n    // Add field\n    let newElementsByDeps = cloneDeep(state.elements);\n    const containerId = elementToAdd.containerId ?? defaultContainerId;\n\n    const depAttributeKey = state.activeDependency ? state.activeDependency.attribute : defaultDepAttribute;\n    const depValueKey = state.activeDependency ? getKeyFromDepValue(state.activeDependency.value) : defaultDepValue;\n\n    const elementToMerge = {\n        [depAttributeKey]: {\n            [depValueKey]: {\n                [containerId]: [elementToAdd]\n            }\n        }\n    };\n    newElementsByDeps = mergeConcat(newElementsByDeps, elementToMerge);\n\n    newElementsByDeps[depAttributeKey][depValueKey][containerId] = newElementsByDeps[depAttributeKey][depValueKey][\n        containerId\n    ]\n        .map(_updateOrder(elementToAdd.id))\n        .sort(sortByOrder);\n\n    const elementToMergeToActiveFields = {\n        [containerId]: [{...elementToAdd, herited: false}]\n    };\n    const newActiveFields = mergeConcat(cloneDeep(state.activeElements), elementToMergeToActiveFields);\n\n    newActiveFields[containerId] = newActiveFields[containerId].map(_updateOrder(elementToAdd.id)).sort(sortByOrder);\n\n    return {\n        ...state,\n        elements: newElementsByDeps,\n        activeElements: newActiveFields\n    };\n}\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {\n    defaultContainerId,\n    defaultDepAttribute,\n    defaultDepValue,\n    IFormBuilderActionRemoveElement,\n    IFormBuilderState\n} from '../../formBuilderReducer';\nimport getKeyFromDepValue from '../getKeyFromDepValue';\nimport removeElementById from '../removeElementById';\n\nexport default function removeElement(state: IFormBuilderState, action: IFormBuilderActionRemoveElement) {\n    const depAttributeKey = state.activeDependency ? state.activeDependency.attribute : defaultDepAttribute;\n    const depValueKey = state.activeDependency ? getKeyFromDepValue(state.activeDependency.value) : defaultDepValue;\n    const containerId = action.element.containerId ?? defaultContainerId;\n\n    return removeElementById(state, action.element.id, depAttributeKey, depValueKey, containerId);\n}\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport cloneDeep from 'lodash/cloneDeep';\nimport {\n    defaultDepAttribute,\n    defaultDepValue,\n    IFormBuilderActionMoveElement,\n    IFormBuilderState\n} from '../../formBuilderReducer';\nimport getKeyFromDepValue from '../getKeyFromDepValue';\nimport mergeConcat from '../mergeConcat';\nimport sortByOrder from '../sortByOrder';\n\nexport default function moveElement(state: IFormBuilderState, action: IFormBuilderActionMoveElement) {\n    let newFieldsByDeps = cloneDeep(state.elements);\n    let newActiveFields = cloneDeep(state.activeElements);\n\n    const depAttributeKey = state.activeDependency ? state.activeDependency.attribute : defaultDepAttribute;\n    const depValueKey = state.activeDependency ? getKeyFromDepValue(state.activeDependency.value) : defaultDepValue;\n\n    // Same container ID => just re order\n    if (action.to.containerId === action.from.containerId) {\n        const moveDirection = action.from.order > action.to.order ? 'down' : 'up';\n        const _updateOrder = origId => el => {\n            const newEl = {...el};\n\n            if (el.id === origId) {\n                newEl.order = action.to.order;\n                return newEl;\n            }\n\n            if (moveDirection === 'down' && el.order >= action.to.order && el.order < action.from.order) {\n                newEl.order++;\n            } else if (moveDirection === 'up' && el.order > action.from.order && el.order <= action.to.order) {\n                newEl.order--;\n            }\n\n            return newEl;\n        };\n\n        // Update fields\n        newFieldsByDeps[depAttributeKey][depValueKey][action.from.containerId] = newFieldsByDeps[depAttributeKey][\n            depValueKey\n        ][action.from.containerId]\n            .map(_updateOrder(action.elementId))\n            .sort(sortByOrder);\n\n        // Update active fields\n        newActiveFields[action.to.containerId] = newActiveFields[action.to.containerId]\n            .map(_updateOrder(action.elementId))\n            .sort(sortByOrder);\n    } else {\n        const indexInActiveFields = state.activeElements[action.from.containerId].findIndex(\n            el => el.id === action.elementId\n        );\n\n        if (indexInActiveFields === -1) {\n            return state;\n        }\n\n        const newElement = {\n            ...state.activeElements[action.from.containerId][indexInActiveFields],\n            ...action.to\n        };\n\n        // Remove from source container\n        if (typeof newFieldsByDeps[depAttributeKey][depValueKey][action.from.containerId] !== 'undefined') {\n            newFieldsByDeps[depAttributeKey][depValueKey][action.from.containerId] = newFieldsByDeps[depAttributeKey][\n                depValueKey\n            ][action.from.containerId]\n                .filter(el => el.id !== action.elementId)\n                .map(el => ({...el, order: el.order > action.from.order ? el.order - 1 : el.order}))\n                .sort(sortByOrder);\n        }\n\n        // Add to destination\n        const elementToMerge = {\n            [depAttributeKey]: {\n                [depValueKey]: {\n                    [action.to.containerId]: [newElement]\n                }\n            }\n        };\n        newFieldsByDeps = mergeConcat(newFieldsByDeps, elementToMerge);\n        newFieldsByDeps[depAttributeKey][depValueKey][action.to.containerId] = newFieldsByDeps[depAttributeKey][\n            depValueKey\n        ][action.to.containerId]\n            .map(el => ({\n                ...el,\n                order: el.order >= action.to.order && el.id !== action.elementId ? el.order + 1 : el.order\n            }))\n            .sort(sortByOrder);\n\n        // Remove from source container\n        if (typeof newActiveFields[action.from.containerId] !== 'undefined') {\n            newActiveFields[action.from.containerId] = newActiveFields[action.from.containerId]\n                .filter(el => el.id !== action.elementId)\n                .map(el => ({...el, order: el.order > action.from.order ? el.order - 1 : el.order}))\n                .sort(sortByOrder);\n        }\n\n        // Add to destination\n        const elemToMerge = {\n            [action.to.containerId]: [newElement]\n        };\n        newActiveFields = mergeConcat(newActiveFields, elemToMerge);\n        newActiveFields[action.to.containerId] = newActiveFields[action.to.containerId]\n            .map(el => ({\n                ...el,\n                order: el.order >= action.to.order && el.id !== action.elementId ? el.order + 1 : el.order\n            }))\n            .sort(sortByOrder);\n    }\n\n    return {...state, elements: newFieldsByDeps, activeElements: newActiveFields};\n}\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {IFormBuilderActionOpenSettings, IFormBuilderState} from '../../formBuilderReducer';\n\nexport default function openSettings(state: IFormBuilderState, action: IFormBuilderActionOpenSettings) {\n    return {\n        ...state,\n        openSettings: true,\n        elementInSettings: action.element\n    };\n}\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {IFormBuilderActionCloseSettings, IFormBuilderState} from '../../formBuilderReducer';\n\nexport default function closeSettings(state: IFormBuilderState, action: IFormBuilderActionCloseSettings) {\n    return {\n        ...state,\n        openSettings: false,\n        elementInSettings: null\n    };\n}\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport cloneDeep from 'lodash/cloneDeep';\nimport {IFormElement} from '../../../_types';\nimport {defaultContainerId, IFormBuilderActionSaveSettings, IFormBuilderState} from '../../formBuilderReducer';\nimport getKeyFromDepValue from '../getKeyFromDepValue';\n\nexport default function saveSettings(state: IFormBuilderState, action: IFormBuilderActionSaveSettings) {\n    const elementToUpdate = action.element ?? state.elementInSettings;\n\n    if (!elementToUpdate) {\n        return state;\n    }\n\n    const depAttrKey = state.activeDependency?.attribute || '__default';\n    const depValueKey = state.activeDependency?.value ? getKeyFromDepValue(state.activeDependency.value) : '__default';\n    const containerId = elementToUpdate.containerId ?? defaultContainerId;\n\n    const indexInFields = state.elements[depAttrKey][depValueKey][containerId].findIndex(\n        el => el.id === elementToUpdate.id\n    );\n    const indexInActiveFields = state.activeElements[containerId].findIndex(el => el.id === elementToUpdate.id);\n\n    if (indexInFields < 0 || indexInActiveFields < 0) {\n        return state;\n    }\n    const newSettings = {...elementToUpdate.settings, ...action.settings};\n\n    const newElement: IFormElement = {\n        ...elementToUpdate,\n        settings: newSettings\n    };\n\n    const newFields = cloneDeep(state.elements);\n    newFields[depAttrKey][depValueKey][containerId][indexInFields] = newElement;\n\n    const newActiveFields = {...state.activeElements};\n    newActiveFields[containerId][indexInActiveFields] = {\n        ...newActiveFields[containerId][indexInActiveFields],\n        settings: newSettings\n    };\n\n    return {...state, elementInSettings: newElement, elements: newFields, activeElements: newActiveFields};\n}\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport cloneDeep from 'lodash/cloneDeep';\nimport {RecordIdentity_whoAmI} from '../../../../../../../../../../../_gqlTypes/RecordIdentity';\nimport {\n    defaultDepAttribute,\n    defaultDepValue,\n    IFormBuilderActionChangeActiveDependency,\n    IFormBuilderState\n} from '../../formBuilderReducer';\nimport getKeyFromDepValue from '../getKeyFromDepValue';\nimport mergeConcat from '../mergeConcat';\n\nexport default function changeActiveDependency(\n    state: IFormBuilderState,\n    action: IFormBuilderActionChangeActiveDependency\n) {\n    const {attribute = '', value = {}, ancestors = []} = action.activeDependency ?? {};\n\n    // Retrieve active fields.\n    // Always take default fields, set it as herited if we have an active dependency\n    let activeFields = cloneDeep(state.elements[defaultDepAttribute][defaultDepValue]);\n    for (const containerId of Object.keys(activeFields)) {\n        activeFields[containerId] = activeFields[containerId].map(f => ({\n            ...f,\n            herited: attribute && (value as RecordIdentity_whoAmI)?.id ? true : false\n        }));\n    }\n\n    // We have an active dependency\n    if (attribute) {\n        // Retrieve ancestors (herited) fields\n        for (const parent of ancestors) {\n            const depKey = getKeyFromDepValue(parent);\n            const depFields = state.elements?.[attribute]?.[depKey] ?? {};\n\n            for (const containerId of Object.keys(depFields)) {\n                depFields[containerId] = depFields[containerId].map(f => ({\n                    ...f,\n                    herited: true\n                }));\n            }\n\n            activeFields = mergeConcat(activeFields, depFields);\n        }\n\n        // Retrieve fields for this dependency value\n        const currentDepKey = getKeyFromDepValue(value as RecordIdentity_whoAmI);\n        const currentDepFields = state.elements?.[attribute]?.[currentDepKey] ?? {};\n\n        for (const containerId of Object.keys(currentDepFields)) {\n            currentDepFields[containerId] = currentDepFields[containerId].map(f => ({\n                ...f,\n                herited: false\n            }));\n        }\n\n        activeFields = mergeConcat(activeFields, currentDepFields);\n    }\n\n    return {\n        ...state,\n        activeElements: activeFields,\n        activeDependency: action.activeDependency ? {...action.activeDependency} : null\n    };\n}\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {ITabSettings} from '../../../uiElements/layout/Tabs/Tabs';\nimport {IFormElement} from '../../../_types';\nimport {\n    defaultContainerId,\n    defaultDepAttribute,\n    defaultDepValue,\n    IFormBuilderActionRemoveTab,\n    IFormBuilderState\n} from '../../formBuilderReducer';\nimport getKeyFromDepValue from '../getKeyFromDepValue';\nimport removeElementById from '../removeElementById';\n\nexport default function removeTab(state: IFormBuilderState, action: IFormBuilderActionRemoveTab): IFormBuilderState {\n    const depAttributeKey = state.activeDependency ? state.activeDependency.attribute : defaultDepAttribute;\n    const depValueKey = state.activeDependency ? getKeyFromDepValue(state.activeDependency.value) : defaultDepValue;\n    const containerId = action.parentElement.containerId ?? defaultContainerId;\n    const tabContainerId = `${action.parentElement.id}/${action.tabId}`;\n\n    // Remove elements linked to tab\n    const tmpState = removeElementById(state, tabContainerId, depAttributeKey, depValueKey, containerId);\n\n    // Update tabs element settings\n    const indexInElems = tmpState.elements[depAttributeKey][depValueKey][containerId].findIndex(\n        el => el.id === action.parentElement.id\n    );\n    const indexInActiveElems = tmpState.activeElements[containerId].findIndex(el => el.id === action.parentElement.id);\n\n    if (indexInElems >= 0 && indexInActiveElems >= 0) {\n        const newSettings = {\n            ...action.parentElement.settings,\n            tabs: [...(action.parentElement.settings?.tabs as ITabSettings[])].filter(t => t.id !== action.tabId)\n        };\n\n        const newElement: IFormElement = {\n            ...action.parentElement,\n            settings: newSettings\n        };\n\n        tmpState.elements[depAttributeKey][depValueKey][containerId][indexInElems] = newElement;\n        tmpState.activeElements[containerId][indexInActiveElems] = newElement;\n    }\n\n    return tmpState;\n}\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport React, {useState} from 'react';\nimport {NodeData} from 'react-sortable-tree';\nimport {Breadcrumb, Icon, Popup} from 'semantic-ui-react';\nimport styled from 'styled-components';\nimport useLang from '../../../../../../../../../../../hooks/useLang';\nimport {localizedLabel} from '../../../../../../../../../../../utils';\nimport {GET_TREE_BY_ID_trees_list} from '../../../../../../../../../../../_gqlTypes/GET_TREE_BY_ID';\nimport {RecordIdentity_whoAmI} from '../../../../../../../../../../../_gqlTypes/RecordIdentity';\nimport RecordCard from '../../../../../../../../../../shared/RecordCard';\nimport TreeExplorer from '../../../../../../../../../../trees/TreeExplorer';\nimport {\n    defaultDepAttribute,\n    defaultDepValue,\n    FormBuilderActionTypes\n} from '../../../formBuilderReducer/formBuilderReducer';\nimport {useFormBuilderReducer} from '../../../formBuilderReducer/hook/useFormBuilderReducer';\n\ninterface IBreadcrumbSectionProps {\n    treeData: GET_TREE_BY_ID_trees_list;\n    element?: RecordIdentity_whoAmI;\n    ancestors?: RecordIdentity_whoAmI[];\n}\n\nconst TreeElement = styled.div`\n    cursor: pointer;\n    display: flex;\n    align-items: center;\n`;\n\nconst TreeWrapper = styled.div`\n    height: 300px;\n    width: 300px;\n`;\n\nconst BreadcrumbSectionWrapper = styled(Breadcrumb.Section)`\n    position: relative;\n`;\n\nfunction BreadcrumbSection({treeData, element, ancestors}: IBreadcrumbSectionProps): JSX.Element {\n    const {lang} = useLang();\n    const treeLabel = localizedLabel(treeData.label, lang);\n    const {state, dispatch} = useFormBuilderReducer();\n\n    const [showTree, setShowTree] = useState<boolean>(false);\n\n    const _handleOpenTree = () => setShowTree(true);\n    const _handleCloseTree = () => setShowTree(false);\n\n    // No element supplied, consider it's root so display tree label\n    const content = element ? <RecordCard record={element} /> : treeLabel;\n\n    const _handleTreeNodeSelection = ({node}: NodeData) => {\n        setShowTree(false);\n        dispatch({\n            type: FormBuilderActionTypes.CHANGE_ACTIVE_DEPENDENCY,\n            activeDependency: {\n                attribute: state.activeDependency?.attribute || defaultDepAttribute,\n                value: node.record.whoAmI || defaultDepValue,\n                ancestors: node.ancestors.slice(0, -1).map(p => p.whoAmI)\n            }\n        });\n    };\n\n    const _handleClickOnElement = () =>\n        dispatch({\n            type: FormBuilderActionTypes.CHANGE_ACTIVE_DEPENDENCY,\n            activeDependency: {\n                attribute: state.activeDependency?.attribute ?? defaultDepAttribute,\n                value: element ?? null,\n                ancestors: ancestors ?? []\n            }\n        });\n\n    // We'll display tree starting from element's parent, to have its siblings and children accessible\n    let startTreeFrom;\n    if (ancestors) {\n        const parent = ancestors.slice(-1)[0];\n        startTreeFrom = parent ? {id: parent.id, library: parent.library.id} : undefined;\n    }\n\n    return (\n        <BreadcrumbSectionWrapper>\n            <TreeElement>\n                <div className=\"identity\" onClick={_handleClickOnElement}>\n                    {content}\n                </div>\n\n                <Popup\n                    on=\"click\"\n                    open={showTree}\n                    onOpen={_handleOpenTree}\n                    onClose={_handleCloseTree}\n                    trigger={\n                        <div className=\"dropdown-icon\">\n                            <Icon name=\"dropdown\" />\n                        </div>\n                    }\n                    content={\n                        <TreeWrapper>\n                            <TreeExplorer\n                                tree={treeData}\n                                onClickNode={_handleTreeNodeSelection}\n                                readOnly\n                                compact\n                                startAt={startTreeFrom}\n                            />\n                        </TreeWrapper>\n                    }\n                    position=\"bottom left\"\n                    basic\n                />\n            </TreeElement>\n        </BreadcrumbSectionWrapper>\n    );\n}\n\nexport default BreadcrumbSection;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport BreadcrumbSection from './BreadcrumbSection';\nexport default BreadcrumbSection;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport React from 'react';\nimport {Breadcrumb, BreadcrumbSectionProps} from 'semantic-ui-react';\nimport {GET_TREE_BY_ID_trees_list} from '../../../../../../../../../../_gqlTypes/GET_TREE_BY_ID';\nimport {RecordIdentity_whoAmI} from '../../../../../../../../../../_gqlTypes/RecordIdentity';\nimport {defaultDepValue} from '../../formBuilderReducer/formBuilderReducer';\nimport {useFormBuilderReducer} from '../../formBuilderReducer/hook/useFormBuilderReducer';\nimport BreadcrumbSection from './BreadcrumbSection';\n\ninterface IBreadcrumbNavigatorViewProps {\n    treeData: GET_TREE_BY_ID_trees_list;\n}\n\nfunction BreadcrumbNavigatorView({treeData}: IBreadcrumbNavigatorViewProps): JSX.Element {\n    const {state} = useFormBuilderReducer();\n\n    const _getSection = (element?: RecordIdentity_whoAmI, ancestors?: RecordIdentity_whoAmI[]) => (\n        <BreadcrumbSection\n            key={element?.id ?? defaultDepValue}\n            treeData={treeData}\n            element={element}\n            ancestors={ancestors}\n        />\n    );\n\n    let breadcrumbSections: BreadcrumbSectionProps[] = [\n        {\n            key: defaultDepValue,\n            content: _getSection(),\n            link: false,\n            active: false\n        }\n    ];\n\n    if (state.activeDependency?.ancestors) {\n        breadcrumbSections = [\n            ...breadcrumbSections,\n            ...state.activeDependency.ancestors.map((el, i) => ({\n                key: el.id,\n                content: _getSection(el, [...state.activeDependency!.ancestors].splice(0, i)),\n                link: false,\n                active: false\n            }))\n        ];\n    }\n\n    if (state.activeDependency?.value) {\n        breadcrumbSections.push({\n            key: state.activeDependency.value.id,\n            content: _getSection(state.activeDependency.value, state.activeDependency.ancestors ?? []),\n            link: false,\n            active: false\n        });\n    }\n\n    return <Breadcrumb sections={breadcrumbSections} icon=\"right angle\" />;\n}\n\nexport default BreadcrumbNavigatorView;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport BreadcrumbNavigatorView from './BreadcrumbNavigatorView';\nexport default BreadcrumbNavigatorView;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {useQuery} from '@apollo/client';\nimport React from 'react';\nimport {getTreeByIdQuery} from '../../../../../../../../../queries/trees/getTreeById';\nimport {GET_FORM_forms_list_dependencyAttributes_TreeAttribute} from '../../../../../../../../../_gqlTypes/GET_FORM';\nimport {GET_TREE_BY_ID, GET_TREE_BY_IDVariables} from '../../../../../../../../../_gqlTypes/GET_TREE_BY_ID';\nimport Loading from '../../../../../../../../shared/Loading';\nimport {useFormBuilderReducer} from '../formBuilderReducer/hook/useFormBuilderReducer';\nimport BreadcrumbNavigatorView from './BreadcrumbNavigatorView';\n\nfunction BreadcrumbNavigator(): JSX.Element {\n    const {state, dispatch} = useFormBuilderReducer();\n\n    // Retrieve tree ID from form config and selected attribute\n    const selectedDepAttribute = state.form.dependencyAttributes?.find(\n        a => a.id === state.activeDependency?.attribute\n    ) as GET_FORM_forms_list_dependencyAttributes_TreeAttribute;\n    const linkedTree = selectedDepAttribute.linked_tree?.id;\n\n    // Get tree attribute props\n    const {loading, error, data} = useQuery<GET_TREE_BY_ID, GET_TREE_BY_IDVariables>(getTreeByIdQuery, {\n        variables: {id: linkedTree},\n        skip: !linkedTree\n    });\n\n    if (loading) {\n        return <Loading />;\n    }\n\n    if (error) {\n        return <div className=\"error\">ERROR {error}</div>;\n    }\n\n    if (!data?.trees?.list.length) {\n        return <div className=\"error\">CANNOT RETRIEVE TREE DATA</div>;\n    }\n\n    const treeData = data.trees.list[0];\n\n    return <BreadcrumbNavigatorView treeData={treeData} />;\n}\n\nexport default BreadcrumbNavigator;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport BreadcrumbNavigator from './BreadcrumbNavigator';\nexport default BreadcrumbNavigator;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport React from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {Dropdown} from 'semantic-ui-react';\nimport styled from 'styled-components';\nimport useLang from '../../../../../../../../../hooks/useLang';\nimport {localizedLabel} from '../../../../../../../../../utils';\nimport {FormBuilderActionTypes} from '../formBuilderReducer/formBuilderReducer';\nimport {useFormBuilderReducer} from '../formBuilderReducer/hook/useFormBuilderReducer';\n\nconst StyledDropdown = styled(Dropdown)`\n    margin: 2em 0;\n`;\nStyledDropdown.displayName = 'Dropdown';\n\nfunction DependencySettings(): JSX.Element {\n    const {lang} = useLang();\n    const {t} = useTranslation();\n    const {state, dispatch} = useFormBuilderReducer();\n\n    if (!state.form.dependencyAttributes || !state.form.dependencyAttributes.length) {\n        return <></>;\n    }\n\n    const options = state.form.dependencyAttributes.map(attr => ({\n        text: localizedLabel(attr.label, lang),\n        value: attr.id\n    }));\n\n    const _handleChange = (_, data) => {\n        return dispatch({\n            type: FormBuilderActionTypes.CHANGE_ACTIVE_DEPENDENCY,\n            activeDependency: {\n                attribute: data.value,\n                value: null,\n                ancestors: []\n            }\n        });\n    };\n\n    return (\n        <StyledDropdown\n            data-test-id=\"attribute-selection\"\n            selection\n            fluid\n            clearable\n            options={options}\n            placeholder={t('forms.select_attribute')}\n            onChange={_handleChange}\n        />\n    );\n}\n\nexport default DependencySettings;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {DragObjectWithType} from 'react-dnd';\nimport {GET_ATTRIBUTE_BY_ID_attributes_list} from '_gqlTypes/GET_ATTRIBUTE_BY_ID';\nimport {FormElementTypes} from '../../../../../../../../_gqlTypes/globalTypes';\nimport {IKeyValue} from '../../../../../../../../_types/shared';\n\nexport const PLACEHOLDER_ID = '__placeholder__';\n\nexport enum UIElementTypes {\n    DIVIDER = 'divider',\n    FIELDS_CONTAINER = 'fields_container',\n    TEXT_BLOCK = 'text_block',\n    TABS = 'tabs'\n}\n\nexport enum FieldTypes {\n    TEXT_INPUT = 'input_field',\n    DATE = 'date',\n    CHECKBOX = 'checkbox',\n    ENCRYPTED = 'encrypted',\n    DROPDOWN = 'dropdown',\n    LINK = 'link',\n    TREE = 'tree'\n}\n\nexport enum DraggableElementTypes {\n    RESERVE_LAYOUT_ELEMENT = 'RESERVE_LAYOUT_ELEMENT',\n    ATTRIBUTE = 'ATTRIBUTE',\n    FORM_ELEMENT = 'FORM_ELEMENT'\n}\n\nexport enum TabsDirection {\n    VERTICAL = 'VERTICAL',\n    HORIZONTAL = 'HORIZONTAL'\n}\n\nexport interface IFormElement {\n    id: string;\n    order: number;\n    type: FormElementTypes;\n    uiElement: IUIElement;\n    containerId: string;\n    settings?: IKeyValue<unknown>;\n    herited?: boolean;\n}\n\nexport enum FormElementSettingsInputTypes {\n    NONE = 'NONE',\n    ATTRIBUTE_SELECTION = 'ATTRIBUTE_SELECTION',\n    ATTRIBUTE_SELECTION_MULTIPLE = 'ATTRIBUTE_SELECTION_MULTIPLE',\n    INPUT = 'INPUT',\n    CHECKBOX = 'CHECKBOX',\n    RTE = 'RTE',\n    SELECT = 'SELECT'\n}\n\nexport interface IFormElementSettings {\n    name: string;\n    inputType: FormElementSettingsInputTypes;\n    getInputSettings?: (attributeProps: GET_ATTRIBUTE_BY_ID_attributes_list) => IKeyValue<any>;\n    options?: string[];\n    defaultValue?: any;\n}\n\nexport interface IUIElement {\n    type: UIElementTypes | FieldTypes;\n    component: JSX.Element;\n    canDrop: (dropCandidate: IFormElement) => boolean;\n    settings?: IFormElementSettings[];\n}\n\nexport interface IFormElementProps<SettingsType extends object> {\n    elementData?: IFormElement;\n    settings: SettingsType;\n}\n\nexport interface ICommonFieldsSettings {\n    label?: string;\n    attribute?: string;\n}\n\nexport interface IFormElementPos {\n    order: number;\n    containerId: string;\n}\n\nexport interface IFormBuilderDragObject<T extends IUIElement | IFormElement> extends DragObjectWithType {\n    type: DraggableElementTypes;\n    element: T;\n    index: number;\n    currentPos?: IFormElementPos;\n    originPos?: IFormElementPos;\n    dropAtPos?: IFormElementPos;\n}\n\nexport type SettingsOnChangeFunc = (name: string, value: string | boolean) => void;\n\nexport interface ISettingsFieldCommonProps {\n    onChange: SettingsOnChangeFunc;\n    disabled: boolean;\n    fieldName: string;\n}\n\nexport type SettingsFieldSpecificProps<FieldPropsType> = Omit<FieldPropsType, keyof ISettingsFieldCommonProps>;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport DependencySettings from './DependencySettings';\nexport default DependencySettings;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport React from 'react';\nimport {Checkbox} from 'semantic-ui-react';\nimport {ICommonFieldsSettings, IFormElementProps} from '../../../_types';\n\nfunction CheckboxField(props: IFormElementProps<ICommonFieldsSettings>): JSX.Element {\n    const {label} = props.settings;\n    const fieldProps = {\n        label\n    };\n\n    return <Checkbox toggle {...fieldProps} />;\n}\n\nexport default CheckboxField;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport CheckboxField from './CheckboxField';\nexport default CheckboxField;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport React from 'react';\nimport {Input} from 'semantic-ui-react';\nimport styled from 'styled-components';\nimport {ICommonFieldsSettings, IFormElementProps} from '../../../_types';\n\nconst DateInput = styled(Input)`\n    && {\n        flex-grow: 0;\n    }\n`;\n\nconst TimeInput = styled(Input)`\n    && {\n        margin-left: 0.5em;\n        flex-grow: 0;\n    }\n`;\n\ninterface IDateFieldSettings extends ICommonFieldsSettings {\n    withTime?: boolean;\n}\n\nfunction DateField(props: IFormElementProps<IDateFieldSettings>): JSX.Element {\n    const {label = 'Date', withTime = false} = props.settings;\n    const fieldProps = {\n        label\n    };\n\n    return (\n        <>\n            <DateInput data-test-id=\"date-field\" type=\"date\" {...fieldProps} />\n            {withTime && <TimeInput data-test-id=\"time-field\" type=\"time\" />}\n        </>\n    );\n}\n\nexport default DateField;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport DateField from './DateField';\nexport default DateField;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport React from 'react';\nimport {Dropdown} from 'semantic-ui-react';\nimport {ICommonFieldsSettings, IFormElementProps} from '../../../_types';\n\nfunction DropdownField({settings}: IFormElementProps<ICommonFieldsSettings>): JSX.Element {\n    return (\n        <>\n            <label>{settings.label}</label>\n            <Dropdown {...settings} />\n        </>\n    );\n}\n\nexport default DropdownField;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport DropdownField from './DropdownField';\nexport default DropdownField;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport React from 'react';\nimport {Input} from 'semantic-ui-react';\nimport {ICommonFieldsSettings, IFormElementProps} from '../../../_types';\n\nfunction EncryptedField(props: IFormElementProps<ICommonFieldsSettings>): JSX.Element {\n    const {label = 'Toto'} = props.settings;\n    const fieldProps = {\n        label\n    };\n\n    return <Input type=\"password\" {...fieldProps} />;\n}\n\nexport default EncryptedField;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport EncryptedField from './EncryptedField';\nexport default EncryptedField;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport React from 'react';\nimport {Input} from 'semantic-ui-react';\nimport {ICommonFieldsSettings, IFormElementProps} from '../../../_types';\n\ninterface IInputFieldSettings extends ICommonFieldsSettings {\n    type?: 'text' | 'number';\n}\n\nfunction InputField(props: IFormElementProps<IInputFieldSettings>): JSX.Element {\n    const {label, type = 'text'} = props.settings;\n\n    const fieldProps = {\n        label\n    };\n\n    return <Input type={type} {...fieldProps} fluid />;\n}\n\nexport default InputField;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport InputField from './InputField';\nexport default InputField;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport React from 'react';\nimport {Table} from 'semantic-ui-react';\nimport styled from 'styled-components';\nimport {ICommonFieldsSettings, IFormElementProps} from '../../../_types';\n\nconst PreviewSkeleton = styled.div`\n    border-radius: 50%;\n    background: #ddd;\n    margin-right: 1em;\n    height: 2em;\n    width: 2em;\n    flex-grow: 0;\n`;\n\nconst TextSkeleton = styled.div`\n    background: #ddd;\n    height: 1.5em;\n    flex-grow: 1;\n`;\n\nconst CellWrapper = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n`;\n\nfunction LinkField({settings}: IFormElementProps<ICommonFieldsSettings>): JSX.Element {\n    return (\n        <Table celled striped>\n            <Table.Header>\n                <Table.Row>\n                    <Table.HeaderCell colSpan=\"3\">{settings.label}</Table.HeaderCell>\n                </Table.Row>\n            </Table.Header>\n            <Table.Body>\n                <Table.Row>\n                    <Table.Cell width=\"4\">\n                        <CellWrapper>\n                            <PreviewSkeleton />\n                            <TextSkeleton />\n                        </CellWrapper>\n                    </Table.Cell>\n                    <Table.Cell width=\"6\">\n                        <TextSkeleton />\n                    </Table.Cell>\n                    <Table.Cell width=\"6\">\n                        <TextSkeleton />\n                    </Table.Cell>\n                </Table.Row>\n            </Table.Body>\n        </Table>\n    );\n}\n\nexport default LinkField;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport LinkField from './LinkField';\nexport default LinkField;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport React from 'react';\nimport styled from 'styled-components';\n\nconst PreviewSkeleton = styled.div`\n    border-radius: 50%;\n    background: #ddd;\n    margin-right: 1em;\n    height: 2em;\n    width: 2em;\n    flex-grow: 0;\n`;\n\nconst TextSkeleton = styled.div`\n    background: #ddd;\n    height: 1.5em;\n    flex-grow: 1;\n`;\n\nconst Wrapper = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    width: 200px;\n`;\n\nfunction RecordCardSkeleton(): JSX.Element {\n    return (\n        <Wrapper>\n            <PreviewSkeleton />\n            <TextSkeleton />\n        </Wrapper>\n    );\n}\n\nexport default RecordCardSkeleton;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport RecordCardSkeleton from './RecordCardSkeleton';\nexport default RecordCardSkeleton;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport RecordCardSkeleton from 'components/shared/RecordCardSkeleton';\nimport React from 'react';\nimport {Breadcrumb, BreadcrumbSectionProps, Table} from 'semantic-ui-react';\nimport styled from 'styled-components';\nimport {ICommonFieldsSettings, IFormElementProps} from '../../../_types';\n\nconst CenteredBreadcrumb = styled(Breadcrumb)`\n    && {\n        display: flex;\n        align-items: center;\n    }\n`;\n\nfunction TreeField({settings}: IFormElementProps<ICommonFieldsSettings>): JSX.Element {\n    const nodes = [];\n    const sectionsNumber = 3;\n\n    const breadcrumbSection: BreadcrumbSectionProps[] = [...Array(sectionsNumber)].map((s, i) => ({\n        key: i,\n        content: <RecordCardSkeleton />,\n        link: false,\n        active: false\n    }));\n\n    return (\n        <Table celled striped>\n            <Table.Header>\n                <Table.Row>\n                    <Table.HeaderCell>{settings.label}</Table.HeaderCell>\n                </Table.Row>\n            </Table.Header>\n            <Table.Body>\n                <Table.Row>\n                    <Table.Cell width=\"4\">\n                        <CenteredBreadcrumb icon=\"right angle\" sections={breadcrumbSection} />\n                    </Table.Cell>\n                </Table.Row>\n            </Table.Body>\n        </Table>\n    );\n}\n\nexport default TreeField;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport TreeField from './TreeField';\nexport default TreeField;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {useQuery} from '@apollo/client';\nimport React, {useRef, useState} from 'react';\nimport {useDrag, useDrop, XYCoord} from 'react-dnd';\nimport {Button, Icon} from 'semantic-ui-react';\nimport styled from 'styled-components';\nimport useLang from '../../../../../../../../../../../hooks/useLang';\nimport {getAttributesQuery} from '../../../../../../../../../../../queries/attributes/getAttributesQuery';\nimport {localizedLabel} from '../../../../../../../../../../../utils';\nimport {GET_ATTRIBUTES, GET_ATTRIBUTESVariables} from '../../../../../../../../../../../_gqlTypes/GET_ATTRIBUTES';\nimport Loading from '../../../../../../../../../../shared/Loading';\nimport {useEditFormContext} from '../../../../../hooks/useEditFormContext';\nimport {FormBuilderActionTypes, IFormBuilderStateAndDispatch} from '../../../formBuilderReducer/formBuilderReducer';\nimport {DraggableElementTypes, IFormBuilderDragObject, IFormElement, IFormElementPos} from '../../../_types';\n\ninterface IFieldWrapperProps extends IFormBuilderStateAndDispatch {\n    element: IFormElement;\n    index: number;\n}\n\nconst HoverBtnGroup = styled(Button.Group)`\n    position: absolute;\n    top: 5px;\n    right: 5px;\n    cursor: pointer;\n    z-index: 10;\n`;\n\nconst Wrapper = styled.div<{isOver: boolean; isHerited: boolean}>`\n    position: relative;\n    background: ${props => (props.isHerited ? '#C3FFF9' : '#FFF')};\n    margin: 1em 0;\n    border-radius: 5px;\n    border-width: 1px;\n    border-style: dashed;\n    border-color: ${props => (props.isOver ? '#999' : '#DDD')};\n    display: flex;\n    color: #aaaaaa;\n    min-height: 4em;\n`;\n\nconst ElementHandle = styled.div`\n    text-align: center;\n    align-self: center;\n    width: 2em;\n    cursor: move;\n`;\n\nconst UiElementWrapper = styled.div<{isHerited: boolean; isReadOnly: boolean}>`\n    width: 100%;\n    text-align: left;\n    padding: 0.5em;\n    border-left: ${props => (props.isHerited || props.isReadOnly ? 'none' : '1px solid #aaa')};\n    display: flex;\n\n    & > div {\n        flex-grow: 1;\n    }\n`;\n\nfunction FormElementWrapper({element, index, dispatch, state}: IFieldWrapperProps): JSX.Element {\n    const {lang} = useLang();\n    const dropRef = useRef<HTMLDivElement>(null);\n    const {readonly} = useEditFormContext();\n\n    // Load attribute data\n    const {loading, error, data} = useQuery<GET_ATTRIBUTES, GET_ATTRIBUTESVariables>(getAttributesQuery, {\n        variables: {id: String(element?.settings?.attribute) || null},\n        skip: !element?.settings?.attribute\n    });\n\n    const [hover, setHover] = useState<boolean>(false);\n\n    const [, drop] = useDrop<\n        IFormBuilderDragObject<IFormElement>,\n        IFormBuilderDragObject<IFormElement>,\n        {isOver: boolean}\n    >({\n        accept: [\n            DraggableElementTypes.ATTRIBUTE,\n            DraggableElementTypes.FORM_ELEMENT,\n            DraggableElementTypes.RESERVE_LAYOUT_ELEMENT\n        ],\n        collect: monitor => ({\n            isOver: !!monitor.isOver() && element.uiElement.canDrop(monitor.getItem())\n        }),\n        canDrop: dragItem => element.uiElement.canDrop(dragItem.element) && !readonly,\n        hover: (item, monitor) => {\n            const isOverCurrent = monitor.isOver({shallow: true});\n            if (item.element.id === element.id || !isOverCurrent) {\n                return;\n            }\n\n            const itemFromPos: IFormElementPos = item.currentPos\n                ? {...item.currentPos}\n                : {order: 999, containerId: element.containerId};\n\n            // Determine rectangle on screen\n            const hoverBoundingRect = dropRef.current!.getBoundingClientRect();\n\n            // Determine mouse position\n            const clientOffset = monitor.getClientOffset();\n\n            // Get pixels to the top\n            const hoverClientY = (clientOffset as XYCoord).y - hoverBoundingRect.top;\n\n            const elemIndex = index;\n            const dragIndex = item.index;\n            const dragDown = dragIndex <= elemIndex;\n            const dragUp = dragIndex > elemIndex;\n\n            const threshold = 0.5;\n            const elemHeight = hoverBoundingRect.bottom - hoverBoundingRect.top;\n            const bottomThreshold = elemHeight * threshold;\n            const topThreshold = elemHeight - elemHeight * (1 - threshold);\n\n            item.dropAtPos = {order: elemIndex, containerId: element.containerId};\n            if (\n                (dragDown && hoverClientY > topThreshold) ||\n                (dragUp && hoverClientY < bottomThreshold) ||\n                dragIndex < 0\n            ) {\n                const nextPos = elemIndex;\n\n                item.currentPos = {order: nextPos, containerId: element.containerId};\n                item.dropAtPos = {order: nextPos, containerId: element.containerId};\n\n                if (dragIndex < 0) {\n                    item.index = nextPos;\n                }\n\n                // Add placeholder at pos\n                if (dragIndex < 0) {\n                    dispatch({\n                        type: FormBuilderActionTypes.ADD_ELEMENT,\n                        element: {...item.element},\n                        position: {order: nextPos, containerId: element.containerId}\n                    });\n                } else if (dragIndex !== nextPos) {\n                    dispatch({\n                        type: FormBuilderActionTypes.MOVE_ELEMENT,\n                        elementId: item.element.id,\n                        from: itemFromPos,\n                        to: item.dropAtPos\n                    });\n                }\n                item.index = nextPos;\n            }\n        }\n    });\n\n    const [, drag, preview] = useDrag<\n        IFormBuilderDragObject<IFormElement>,\n        IFormBuilderDragObject<IFormElement>,\n        {isDragging: boolean}\n    >({\n        item: {\n            type: DraggableElementTypes.ATTRIBUTE,\n            element,\n            index,\n            currentPos: {order: index, containerId: element.containerId},\n            originPos: {order: index, containerId: element.containerId}\n        },\n        collect: monitor => ({\n            isDragging: !!monitor.isDragging()\n        }),\n        canDrag: !readonly,\n        end: (dropResult, monitor) => {\n            if (!monitor.didDrop()) {\n                // Move element back to its origin\n                dispatch({\n                    type: FormBuilderActionTypes.MOVE_ELEMENT,\n                    elementId: monitor.getItem().element.id,\n                    from: monitor.getItem().currentPos,\n                    to: monitor.getItem().originPos\n                });\n            }\n        }\n    });\n\n    if (loading) {\n        return <Loading />;\n    }\n\n    if (error) {\n        return <div>ERROR {error}</div>;\n    }\n\n    const _handleMouseEnter = () => setHover(true);\n    const _handleMouseLeave = () => setHover(false);\n    const _handleSettingsClick = () => {\n        dispatch({type: FormBuilderActionTypes.OPEN_SETTINGS, element});\n    };\n\n    const _handleDeleteClick = () => {\n        dispatch({type: FormBuilderActionTypes.REMOVE_ELEMENT, element});\n    };\n\n    const attrData = data?.attributes?.list[0];\n\n    const fieldSettings = {\n        ...element.settings,\n        attribute: typeof element?.settings?.attribute !== 'undefined' ? attrData : null,\n        label: element?.settings?.label || (attrData && localizedLabel(attrData.label, lang)) || element.type\n    };\n\n    drop(preview(dropRef));\n    return (\n        <Wrapper\n            ref={dropRef}\n            onMouseEnter={_handleMouseEnter}\n            onMouseLeave={_handleMouseLeave}\n            isOver={false}\n            isHerited={!!element.herited}\n        >\n            {hover && (\n                <HoverBtnGroup icon>\n                    <Button onClick={_handleSettingsClick}>\n                        <Icon name=\"cog\" />\n                    </Button>\n                    {\n                        <Button onClick={_handleDeleteClick}>\n                            <Icon name=\"cancel\" />\n                        </Button>\n                    }\n                </HoverBtnGroup>\n            )}\n            {!element.herited && !readonly && (\n                <ElementHandle ref={drag}>\n                    <Icon name=\"bars\" fitted />\n                </ElementHandle>\n            )}\n            <UiElementWrapper isHerited={!!element.herited} isReadOnly={readonly}>\n                <element.uiElement.component.type\n                    elementData={element}\n                    settings={fieldSettings}\n                    state={state}\n                    dispatch={dispatch}\n                />\n            </UiElementWrapper>\n        </Wrapper>\n    );\n}\n\nexport default FormElementWrapper;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport FormElementWrapper from './FormElementWrapper';\nexport default FormElementWrapper;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport React, {useRef} from 'react';\nimport {useDrop, XYCoord} from 'react-dnd';\nimport {useTranslation} from 'react-i18next';\nimport styled from 'styled-components';\nimport {\n    defaultContainerId,\n    FormBuilderActionTypes,\n    IFormBuilderStateAndDispatch\n} from '../../../formBuilderReducer/formBuilderReducer';\nimport FormElementWrapper from '../../../FormLayout/FormLayoutElementWrapper/FormElementWrapper';\nimport {DraggableElementTypes, IFormBuilderDragObject, IFormElement} from '../../../_types';\n\ninterface IContainerProps extends Partial<IFormBuilderStateAndDispatch> {\n    elementData?: IFormElement;\n}\n\nconst ContainerWrapper = styled.div<{isOver: boolean; isRootContainer: boolean}>`\n    background: ${props => (props.isRootContainer ? '#FFF' : '#EEE')};\n    padding: ${props => (props.isRootContainer ? 0 : '2em')};\n    color: #aaaaaa;\n    text-align: center;\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    min-height: ${props => (props.isRootContainer ? 'calc(100vh - 18rem)' : 'auto')};\n`;\n\nconst EmptyContainerPlaceholder = styled.div`\n    border: 3px dashed #ddd;\n    border-radius: 5px;\n    text-align: center;\n    padding: 2em;\n    font-weight: bold;\n`;\n\nfunction Container({elementData, state, dispatch}: IContainerProps): JSX.Element {\n    const {t} = useTranslation();\n    const dropRef = useRef<HTMLDivElement>(null);\n    const [{isOver}, drop] = useDrop<IFormBuilderDragObject<IFormElement>, {containerId: string}, {isOver: boolean}>({\n        accept: [\n            DraggableElementTypes.ATTRIBUTE,\n            DraggableElementTypes.FORM_ELEMENT,\n            DraggableElementTypes.RESERVE_LAYOUT_ELEMENT\n        ],\n        drop: monitor => {\n            return {containerId: elementData?.id || defaultContainerId};\n        },\n        collect: monitor => ({\n            isOver: monitor.isOver({shallow: true})\n        }),\n        hover: (item, monitor) => {\n            const isOverCurrent = monitor.isOver({shallow: true});\n\n            if (\n                !state ||\n                !dispatch ||\n                !elementData ||\n                !isOverCurrent ||\n                item.currentPos?.containerId === elementData?.id ||\n                item.element.id === elementData.id\n            ) {\n                return;\n            }\n\n            // Determine rectangle on screen\n            const hoverBoundingRect = dropRef.current!.getBoundingClientRect();\n\n            // Determine mouse position\n            const clientOffset = monitor.getClientOffset();\n\n            // Get pixels to the top\n            const hoverClientY = (clientOffset as XYCoord).y - hoverBoundingRect.top;\n\n            const {index} = item;\n\n            // Element has not been added yet\n            const threshold = 0.5;\n            const elemHeight = hoverBoundingRect.bottom - hoverBoundingRect.top;\n            const bottomThreshold = elemHeight * threshold;\n\n            const addAtPos =\n                hoverClientY < bottomThreshold ? 0 : (state.activeElements[elementData.id] ?? []).length || 0;\n\n            const position = {order: addAtPos, containerId: elementData.id};\n\n            if (index < 0) {\n                dispatch({\n                    type: FormBuilderActionTypes.ADD_ELEMENT,\n                    element: {...item.element},\n                    position\n                });\n            } else {\n                dispatch({\n                    type: FormBuilderActionTypes.MOVE_ELEMENT,\n                    elementId: item.element.id,\n                    from: item.currentPos ?? {order: item.element.order, containerId: item.element.containerId},\n                    to: position\n                });\n            }\n            item.dropAtPos = position;\n            item.currentPos = position;\n            item.index = position.order;\n        }\n    });\n\n    if (!state || !dispatch || !elementData) {\n        return <></>;\n    }\n\n    drop(dropRef);\n\n    const content = state.activeElements[elementData.id] || [];\n\n    return (\n        <ContainerWrapper isOver={isOver} isRootContainer={elementData.id === defaultContainerId} ref={dropRef}>\n            {!!content.length ? (\n                content.map((c, i) => (\n                    <FormElementWrapper key={c.id} element={c} index={i} state={state} dispatch={dispatch} />\n                ))\n            ) : (\n                <EmptyContainerPlaceholder>{t('forms.empty_container')}</EmptyContainerPlaceholder>\n            )}\n        </ContainerWrapper>\n    );\n}\n\nexport default Container;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport Container from './Container';\nexport default Container;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport React from 'react';\nimport {Input, Modal} from 'semantic-ui-react';\nimport useLang from '../../../../../../../../../../../../hooks/useLang';\nimport {FormBuilderActionTypes} from '../../../../formBuilderReducer/formBuilderReducer';\nimport {useFormBuilderReducer} from '../../../../formBuilderReducer/hook/useFormBuilderReducer';\nimport {IFormElement} from '../../../../_types';\nimport {ITabSettings} from '../Tabs';\n\ninterface IEditTabLabelModalProps {\n    open: boolean;\n    onClose: () => void;\n    tabsElement: IFormElement;\n    tab: ITabSettings;\n}\n\nfunction EditTabLabelModal({open, tabsElement, tab, onClose}: IEditTabLabelModalProps): JSX.Element {\n    const {availableLangs} = useLang();\n    const {dispatch} = useFormBuilderReducer();\n\n    const _handleChange = (lang: string) => (_, data) => {\n        const existingTabs: ITabSettings[] = (tabsElement?.settings?.tabs as ITabSettings[]) ?? [];\n        const tabIndex = existingTabs.findIndex(t => t.id === tab.id);\n\n        if (tabIndex === -1) {\n            return;\n        }\n\n        const newTabs = [...existingTabs];\n        newTabs[tabIndex] = {\n            ...newTabs[tabIndex],\n            label: {\n                ...newTabs[tabIndex].label,\n                [lang]: data.value\n            }\n        };\n\n        const newSettings = {\n            ...tabsElement?.settings,\n            tabs: newTabs\n        };\n\n        dispatch({\n            type: FormBuilderActionTypes.SAVE_SETTINGS,\n            element: tabsElement,\n            settings: newSettings\n        });\n    };\n\n    const _handleKeyPress = e => {\n        if (e.key === 'Enter') {\n            onClose();\n        }\n    };\n\n    return (\n        <Modal open={open} onClose={onClose} closeOnEscape closeOnDimmerClick closeIcon size=\"small\" centered basic>\n            <Modal.Header />\n            <Modal.Content>\n                {availableLangs.map((l, i) => (\n                    <Input\n                        fluid\n                        key={l}\n                        name={l}\n                        label={l}\n                        defaultValue={tab?.label?.[l] ?? ''}\n                        style={{margin: '1em'}}\n                        onChange={_handleChange(l)}\n                        onKeyDown={_handleKeyPress}\n                    />\n                ))}\n            </Modal.Content>\n        </Modal>\n    );\n}\n\nexport default EditTabLabelModal;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport EditTabLabelModal from './EditTabLabelModal';\nexport default EditTabLabelModal;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport React, {useState} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {Button, Icon, Menu, Tab} from 'semantic-ui-react';\nimport styled from 'styled-components';\nimport {v4 as uuid} from 'uuid';\nimport {layoutElements} from '../..';\nimport useLang from '../../../../../../../../../../../hooks/useLang';\nimport {localizedLabel} from '../../../../../../../../../../../utils';\nimport {FormElementTypes} from '../../../../../../../../../../../_gqlTypes/globalTypes';\nimport {IKeyValue} from '../../../../../../../../../../../_types/shared';\nimport {FormBuilderActionTypes} from '../../../formBuilderReducer/formBuilderReducer';\nimport {useFormBuilderReducer} from '../../../formBuilderReducer/hook/useFormBuilderReducer';\nimport {IFormElement, IFormElementProps, TabsDirection, UIElementTypes} from '../../../_types';\nimport EditTabLabelModal from './EditTabLabelModal';\n\nexport const CompactMenuItem = styled(Menu.Item)`\n    &&&& {\n        padding: 0 1rem;\n    }\n`;\n\nexport interface ITabSettings {\n    label?: IKeyValue<string>;\n    id: string;\n}\n\nexport interface ITabsSettings {\n    tabs?: ITabSettings[];\n    direction?: TabsDirection;\n}\n\nfunction Tabs({settings, elementData}: IFormElementProps<ITabsSettings>): JSX.Element {\n    const {lang} = useLang();\n    const {t} = useTranslation();\n    const [activeIndex, setActiveIndex] = useState<number>(0);\n    const [showEditTabModal, setShowEditTabModal] = useState<boolean>(false);\n    const {state, dispatch} = useFormBuilderReducer();\n\n    const _getNewTab = (index?: number): ITabSettings => ({\n        label: {fr: t('forms.new_tab_label', {index})},\n        id: uuid()\n    });\n\n    if (!elementData || !dispatch || !state) {\n        return <></>;\n    }\n\n    // Adjust active index so that the 'plus' tab is never active\n    if (settings?.tabs?.length && activeIndex === settings?.tabs?.length) {\n        setActiveIndex(settings?.tabs?.length > 1 ? activeIndex - 1 : 0);\n    }\n\n    if (!settings.tabs?.length) {\n        dispatch({\n            type: FormBuilderActionTypes.SAVE_SETTINGS,\n            element: elementData,\n            settings: {\n                ...elementData?.settings,\n                tabs: [_getNewTab()]\n            }\n        });\n    }\n\n    const _handleTabChange = (_, data) => {\n        setActiveIndex(data.activeIndex);\n    };\n\n    const _handleAddTab = () => {\n        if (!dispatch) {\n            return;\n        }\n\n        const newTabs: ITabSettings[] = [...((elementData?.settings?.tabs as ITabSettings[]) ?? []), _getNewTab()];\n\n        dispatch({\n            type: FormBuilderActionTypes.SAVE_SETTINGS,\n            element: elementData,\n            settings: {\n                ...elementData?.settings,\n                tabs: newTabs\n            }\n        });\n    };\n\n    const _handleDeleteTab = tabId => () => {\n        dispatch({\n            type: FormBuilderActionTypes.REMOVE_TAB,\n            tabId,\n            parentElement: elementData\n        });\n    };\n\n    const _handleShowEditTabModal = () => setShowEditTabModal(true);\n    const _handleCloseEditTabModal = () => setShowEditTabModal(false);\n\n    const tabsToDisplay = settings.tabs || [];\n    const panes = tabsToDisplay.map(tab => ({\n        menuItem: (\n            <CompactMenuItem key={tab.id} className=\"form-tab-name\">\n                {localizedLabel(tab.label ?? null, lang)}\n                <Button.Group icon compact basic size=\"mini\" style={{marginLeft: '10px'}}>\n                    <Button onClick={_handleShowEditTabModal}>\n                        <Icon name=\"edit\" />\n                    </Button>\n                    {tabsToDisplay.length > 1 && (\n                        <Button>\n                            <Icon name=\"cancel\" onClick={_handleDeleteTab(tab.id)} />\n                        </Button>\n                    )}\n                </Button.Group>\n            </CompactMenuItem>\n        ),\n        render: () => {\n            const containerElement: IFormElement = {\n                uiElement: layoutElements[UIElementTypes.FIELDS_CONTAINER],\n                id: `${elementData.id}/${tab.id}`,\n                order: 0,\n                containerId: elementData?.id,\n                type: FormElementTypes.layout,\n                settings: {}\n            };\n\n            return (\n                <Tab.Pane>\n                    <containerElement.uiElement.component.type\n                        state={state}\n                        dispatch={dispatch}\n                        elementData={containerElement}\n                    />\n                </Tab.Pane>\n            );\n        }\n    }));\n\n    panes.push({\n        menuItem: (\n            <Menu.Item key=\"new_tab\" onClick={_handleAddTab}>\n                <Icon name=\"plus\" />\n            </Menu.Item>\n        ),\n        render: () => <Tab.Pane />\n    });\n\n    return (\n        <>\n            <Tab\n                menu={{\n                    tabular: true,\n                    vertical: settings.direction === TabsDirection.VERTICAL,\n                    compact: true,\n                    fluid: true\n                }}\n                activeIndex={activeIndex}\n                onTabChange={_handleTabChange}\n                panes={panes}\n            />\n            <EditTabLabelModal\n                open={showEditTabModal}\n                tab={tabsToDisplay[activeIndex]}\n                tabsElement={elementData}\n                onClose={_handleCloseEditTabModal}\n            />\n        </>\n    );\n}\n\nexport default Tabs;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport Tabs from './Tabs';\nexport default Tabs;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport React from 'react';\nimport {useTranslation} from 'react-i18next';\nimport ReactMarkdown from 'react-markdown';\nimport styled from 'styled-components';\nimport {IFormElementProps} from '../../../_types';\n\ninterface ITextBlockSettings {\n    content?: string;\n}\n\nconst ContentWrapper = styled.div`\n    display: block;\n`;\n\nfunction TextBlock({settings: {content = ''}}: IFormElementProps<ITextBlockSettings>): JSX.Element {\n    const {t} = useTranslation();\n    return (\n        <ContentWrapper data-testid=\"text-block-content\">\n            <ReactMarkdown>{content.trim() || t('forms.text_block_helper')}</ReactMarkdown>\n        </ContentWrapper>\n    );\n}\n\nexport default TextBlock;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport TextBlock from './TextBlock';\nexport default TextBlock;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport React from 'react';\nimport {Divider} from 'semantic-ui-react';\nimport {IFormElementProps} from '../../../_types';\n\ninterface IUiDividerSettings {\n    title?: string;\n}\n\nfunction UiDivider({settings}: IFormElementProps<IUiDividerSettings>): JSX.Element {\n    return settings?.title ? <Divider horizontal>{settings?.title}</Divider> : <Divider />;\n}\n\nexport default UiDivider;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport UiDivider from './UiDivider';\nexport default UiDivider;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport React from 'react';\nimport {\n    GET_ATTRIBUTE_BY_ID_attributes_list,\n    GET_ATTRIBUTE_BY_ID_attributes_list_LinkAttribute\n} from '_gqlTypes/GET_ATTRIBUTE_BY_ID';\nimport {AttributeType} from '_gqlTypes/globalTypes';\nimport {ISettingsAttributeProps} from '../FormLayout/SettingsEdition/SettingsField/SettingsInput/SettingsAttribute';\nimport {ISettingsFieldSelectProps} from '../FormLayout/SettingsEdition/SettingsField/SettingsInput/SettingsSelect';\nimport {\n    FieldTypes,\n    FormElementSettingsInputTypes,\n    IFormElementSettings,\n    IUIElement,\n    SettingsFieldSpecificProps,\n    TabsDirection,\n    UIElementTypes\n} from '../_types';\nimport CheckboxField from './fields/CheckboxField';\nimport DateField from './fields/DateField';\nimport DropdownField from './fields/DropdownField';\nimport EncryptedField from './fields/EncryptedField';\nimport InputField from './fields/InputField';\nimport LinkField from './fields/LinkField';\nimport TreeField from './fields/TreeField';\nimport Container from './layout/Container';\nimport Tabs from './layout/Tabs';\nimport TextBlock from './layout/TextBlock';\nimport UiDivider from './layout/UiDivider';\n\nconst commonFieldSettings: IFormElementSettings[] = [\n    {\n        name: 'attribute',\n        inputType: FormElementSettingsInputTypes.ATTRIBUTE_SELECTION\n    },\n    {\n        name: 'label',\n        inputType: FormElementSettingsInputTypes.INPUT\n    }\n];\n\nexport const layoutElements: {[type in UIElementTypes]: IUIElement} = {\n    [UIElementTypes.FIELDS_CONTAINER]: {\n        type: UIElementTypes.FIELDS_CONTAINER,\n        component: <Container />,\n        canDrop: () => true\n    },\n    [UIElementTypes.DIVIDER]: {\n        type: UIElementTypes.DIVIDER,\n        component: <UiDivider settings={{}} />,\n        settings: [\n            {\n                name: 'title',\n                inputType: FormElementSettingsInputTypes.INPUT\n            }\n        ],\n        canDrop: () => false\n    },\n    [UIElementTypes.TEXT_BLOCK]: {\n        type: UIElementTypes.TEXT_BLOCK,\n        component: <TextBlock settings={{}} />,\n        settings: [{name: 'content', inputType: FormElementSettingsInputTypes.RTE}],\n        canDrop: () => false\n    },\n    [UIElementTypes.TABS]: {\n        type: UIElementTypes.TABS,\n        component: <Tabs settings={{}} />,\n        settings: [\n            {name: 'tabs', inputType: FormElementSettingsInputTypes.NONE},\n            {\n                name: 'direction',\n                inputType: FormElementSettingsInputTypes.SELECT,\n                getInputSettings: (): SettingsFieldSpecificProps<ISettingsFieldSelectProps> => ({\n                    options: [TabsDirection.HORIZONTAL, TabsDirection.VERTICAL]\n                })\n            }\n        ],\n        canDrop: () => false\n    }\n};\n\nexport const formElements: {[type in FieldTypes]: IUIElement} = {\n    [FieldTypes.TEXT_INPUT]: {\n        type: FieldTypes.TEXT_INPUT,\n        component: <InputField settings={{}} />,\n        settings: [...commonFieldSettings],\n        canDrop: () => false\n    },\n    [FieldTypes.CHECKBOX]: {\n        type: FieldTypes.CHECKBOX,\n        component: <CheckboxField settings={{}} />,\n        settings: [...commonFieldSettings],\n        canDrop: () => false\n    },\n    [FieldTypes.DATE]: {\n        type: FieldTypes.DATE,\n        component: <DateField settings={{}} />,\n        settings: [...commonFieldSettings, {name: 'withTime', inputType: FormElementSettingsInputTypes.CHECKBOX}],\n        canDrop: () => false\n    },\n    [FieldTypes.ENCRYPTED]: {\n        type: FieldTypes.ENCRYPTED,\n        component: <EncryptedField settings={{}} />,\n        settings: [...commonFieldSettings],\n        canDrop: () => false\n    },\n    [FieldTypes.DROPDOWN]: {\n        type: FieldTypes.DROPDOWN,\n        component: <DropdownField settings={{}} />,\n        settings: [...commonFieldSettings],\n        canDrop: () => false\n    },\n    [FieldTypes.LINK]: {\n        type: FieldTypes.LINK,\n        component: <LinkField settings={{}} />,\n        settings: [\n            ...commonFieldSettings,\n            {\n                name: 'columns',\n                inputType: FormElementSettingsInputTypes.ATTRIBUTE_SELECTION_MULTIPLE,\n                getInputSettings: (\n                    attributeProps: GET_ATTRIBUTE_BY_ID_attributes_list\n                ): SettingsFieldSpecificProps<ISettingsAttributeProps> => ({\n                    multiple: true,\n                    filters: {\n                        // Links and trees are forbidden due to technical issues on the front to handle them\n                        type: [AttributeType.simple, AttributeType.advanced]\n                    },\n                    library: (attributeProps as GET_ATTRIBUTE_BY_ID_attributes_list_LinkAttribute).linked_library.id\n                })\n            },\n            {\n                name: 'displayRecordIdentity',\n                inputType: FormElementSettingsInputTypes.CHECKBOX,\n                defaultValue: true\n            }\n        ],\n        canDrop: () => false\n    },\n    [FieldTypes.TREE]: {\n        type: FieldTypes.TREE,\n        component: <TreeField settings={{}} />,\n        settings: [...commonFieldSettings],\n        canDrop: () => false\n    }\n};\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport React from 'react';\nimport {useDrag} from 'react-dnd';\nimport styled from 'styled-components';\nimport {v4 as uuidv4} from 'uuid';\nimport useLang from '../../../../../../../../../../../hooks/useLang';\nimport {localizedLabel} from '../../../../../../../../../../../utils';\nimport {GET_ATTRIBUTES_attributes_list} from '../../../../../../../../../../../_gqlTypes/GET_ATTRIBUTES';\nimport {AttributeFormat, AttributeType, FormElementTypes} from '../../../../../../../../../../../_gqlTypes/globalTypes';\nimport {useEditFormContext} from '../../../../../hooks/useEditFormContext';\nimport {defaultContainerId, FormBuilderActionTypes} from '../../../formBuilderReducer/formBuilderReducer';\nimport {useFormBuilderReducer} from '../../../formBuilderReducer/hook/useFormBuilderReducer';\nimport {formElements} from '../../../uiElements';\nimport {DraggableElementTypes, FieldTypes, IFormBuilderDragObject, IFormElement, IUIElement} from '../../../_types';\n\ninterface IReserveAttributeProps {\n    attribute: GET_ATTRIBUTES_attributes_list;\n}\n\nconst Wrapper = styled.div<{isDragging: boolean}>`\n    opacity: ${props => (props.isDragging ? 0.5 : 1)};\n    font-weight: bold;\n    cursor: move;\n    margin: 0.8em 0;\n`;\n\nfunction ReserveAttribute({attribute}: IReserveAttributeProps): JSX.Element {\n    const {dispatch} = useFormBuilderReducer();\n    const {lang} = useLang();\n    const {readonly} = useEditFormContext();\n\n    const attrLabel = localizedLabel(attribute.label, lang);\n\n    const _getElement = () => {\n        const elemByFormat: {[format in AttributeFormat]: IUIElement} = {\n            [AttributeFormat.boolean]: formElements[FieldTypes.CHECKBOX],\n            [AttributeFormat.date]: formElements[FieldTypes.DATE],\n            [AttributeFormat.encrypted]: formElements[FieldTypes.ENCRYPTED],\n            [AttributeFormat.extended]: formElements[FieldTypes.TEXT_INPUT],\n            [AttributeFormat.numeric]: formElements[FieldTypes.TEXT_INPUT],\n            [AttributeFormat.text]: formElements[FieldTypes.TEXT_INPUT],\n            [AttributeFormat.date_range]: formElements[FieldTypes.TEXT_INPUT]\n        };\n\n        let uiElement: IUIElement;\n        switch (attribute.type) {\n            case AttributeType.simple_link:\n            case AttributeType.advanced_link:\n                uiElement = formElements[FieldTypes.LINK];\n                break;\n            case AttributeType.tree:\n                uiElement = formElements[FieldTypes.TREE];\n                break;\n            default:\n                uiElement = elemByFormat[attribute.format!];\n                break;\n        }\n\n        return {\n            id: uuidv4(),\n            order: 0,\n            type: FormElementTypes.field,\n            containerId: defaultContainerId,\n            uiElement,\n            settings: uiElement.settings.reduce(\n                (acc, cur) => ({\n                    [cur.name]: cur.defaultValue,\n                    ...acc\n                }),\n                {\n                    attribute: attribute.id,\n                    label: attrLabel\n                }\n            )\n        };\n    };\n\n    const [{isDragging}, drag] = useDrag<\n        IFormBuilderDragObject<IFormElement>,\n        IFormBuilderDragObject<IFormElement>,\n        {isDragging: boolean}\n    >({\n        item: {type: DraggableElementTypes.ATTRIBUTE, element: _getElement(), index: -1},\n        collect: monitor => ({\n            isDragging: !!monitor.isDragging()\n        }),\n        canDrag: !readonly,\n        end: (dropResult, monitor) => {\n            if (monitor.didDrop()) {\n                // Item has already been added, don't do anything\n                if (typeof monitor.getItem().dropAtPos !== 'undefined') {\n                    return;\n                }\n\n                const position = {\n                    order: monitor.getItem().dropAtPos?.order || 0,\n                    containerId: monitor.getDropResult().containerId\n                };\n\n                dispatch({\n                    type: FormBuilderActionTypes.ADD_ELEMENT,\n                    element: {...monitor.getItem().element, containerId: position.containerId},\n                    position\n                });\n            }\n        }\n    });\n\n    return (\n        <Wrapper ref={drag} isDragging={isDragging}>\n            {attrLabel}\n        </Wrapper>\n    );\n}\n\nexport default ReserveAttribute;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport ReserveAttribute from './ReserveAttribute';\nexport default ReserveAttribute;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {useQuery} from '@apollo/client';\nimport React from 'react';\nimport {getAttributesQuery} from '../../../../../../../../../../queries/attributes/getAttributesQuery';\nimport {GET_ATTRIBUTES, GET_ATTRIBUTESVariables} from '../../../../../../../../../../_gqlTypes/GET_ATTRIBUTES';\nimport Loading from '../../../../../../../../../shared/Loading';\nimport {useFormBuilderReducer} from '../../formBuilderReducer/hook/useFormBuilderReducer';\nimport ReserveAttribute from './ReserveAttribute';\n\nfunction AttributesList(): JSX.Element {\n    // Get library attributes\n    const {state} = useFormBuilderReducer();\n    const {error, loading, data} = useQuery<GET_ATTRIBUTES, GET_ATTRIBUTESVariables>(getAttributesQuery, {\n        variables: {libraries: [state.library]}\n    });\n\n    if (loading) {\n        return <Loading />;\n    }\n\n    if (error) {\n        return <div className=\"error\">ERROR {error}</div>;\n    }\n\n    return (\n        <>\n            {(data?.attributes?.list ?? []).map(a => (\n                <ReserveAttribute key={a.id} attribute={a} />\n            ))}\n        </>\n    );\n}\n\nexport default AttributesList;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport AttributesList from './AttributesList';\nexport default AttributesList;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport React from 'react';\nimport {useDrag} from 'react-dnd';\nimport {useTranslation} from 'react-i18next';\nimport styled from 'styled-components';\nimport {v4 as uuidv4} from 'uuid';\nimport {FormElementTypes} from '../../../../../../../../../../../_gqlTypes/globalTypes';\nimport {useEditFormContext} from '../../../../../hooks/useEditFormContext';\nimport {defaultContainerId, FormBuilderActionTypes} from '../../../formBuilderReducer/formBuilderReducer';\nimport {useFormBuilderReducer} from '../../../formBuilderReducer/hook/useFormBuilderReducer';\nimport {DraggableElementTypes, IFormBuilderDragObject, IFormElement, IUIElement} from '../../../_types';\n\ninterface IReserveLayoutElementProps {\n    element: IUIElement;\n}\n\nconst Wrapper = styled.div<{isDragging: boolean}>`\n    opacity: ${props => (props.isDragging ? 0.5 : 1)};\n    font-weight: bold;\n    cursor: move;\n    margin: 1em 0;\n`;\n\nfunction ReserveLayoutElement({element}: IReserveLayoutElementProps): JSX.Element {\n    const {dispatch} = useFormBuilderReducer();\n    const {t} = useTranslation();\n    const {readonly} = useEditFormContext();\n\n    const formElement = {\n        id: uuidv4(),\n        order: 0,\n        containerId: defaultContainerId,\n        type: FormElementTypes.layout,\n        uiElement: element\n    };\n\n    const [{isDragging}, drag] = useDrag<\n        IFormBuilderDragObject<IFormElement>,\n        IFormBuilderDragObject<IFormElement>,\n        {isDragging: boolean}\n    >({\n        item: {\n            type: DraggableElementTypes.RESERVE_LAYOUT_ELEMENT,\n            element: formElement,\n            index: -1\n        },\n        collect: monitor => ({\n            isDragging: !!monitor.isDragging()\n        }),\n        canDrag: !readonly,\n        end: (_, monitor) => {\n            if (monitor.didDrop()) {\n                // Item has already been added, don't do anything\n                if (typeof monitor.getItem().dropAtPos !== 'undefined') {\n                    return;\n                }\n\n                const position = {\n                    order: monitor.getItem().dropAtPos?.order || 0,\n                    containerId: monitor.getDropResult().containerId\n                };\n\n                dispatch({\n                    type: FormBuilderActionTypes.ADD_ELEMENT,\n                    element: {...monitor.getItem().element, containerId: position.containerId},\n                    position\n                });\n            } else {\n                const containerId = monitor.getItem().dropAtPos?.containerId || defaultContainerId;\n\n                dispatch({\n                    type: FormBuilderActionTypes.REMOVE_ELEMENT,\n                    element: {...monitor.getItem().element, containerId}\n                });\n            }\n        }\n    });\n\n    return (\n        <Wrapper isDragging={isDragging} ref={drag}>\n            {t(`forms.elements.${element.type}`)}\n        </Wrapper>\n    );\n}\n\nexport default ReserveLayoutElement;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport ReserveLayoutElement from './ReserveLayoutElement';\nexport default ReserveLayoutElement;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport React from 'react';\nimport {layoutElements} from '../../uiElements';\nimport ReserveLayoutElement from './ReserveLayoutElement';\n\nfunction LayoutElementsList(): JSX.Element {\n    return (\n        <>\n            {Object.keys(layoutElements).map(key => (\n                <ReserveLayoutElement key={key} element={layoutElements[key]} />\n            ))}\n        </>\n    );\n}\n\nexport default LayoutElementsList;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport LayoutElementsList from './LayoutElementsList';\nexport default LayoutElementsList;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport React from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {Tab} from 'semantic-ui-react';\nimport AttributesList from './AttributesList';\nimport LayoutElementsList from './LayoutElementsList';\n\nfunction ElementsReserve(): JSX.Element {\n    const {t} = useTranslation();\n\n    const panes = [\n        {\n            menuItem: t('forms.layout'),\n            render: () => (\n                <Tab.Pane>\n                    <LayoutElementsList />\n                </Tab.Pane>\n            )\n        },\n        {\n            menuItem: t('forms.attributes'),\n            render: () => (\n                <Tab.Pane>\n                    <AttributesList />\n                </Tab.Pane>\n            )\n        }\n    ];\n\n    return <Tab panes={panes} />;\n}\n\nexport default ElementsReserve;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport ElementsReserve from './ElementsReserve';\nexport default ElementsReserve;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport AttributeSelector from 'components/attributes/AttributeSelector';\nimport React from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {GET_ATTRIBUTESVariables} from '_gqlTypes/GET_ATTRIBUTES';\nimport {useFormBuilderReducer} from '../../../../formBuilderReducer/hook/useFormBuilderReducer';\nimport {ISettingsFieldCommonProps} from '../../../../_types';\n\nexport interface ISettingsAttributeProps extends ISettingsFieldCommonProps {\n    library: string;\n    filters?: GET_ATTRIBUTESVariables;\n    multiple?: boolean;\n}\n\nfunction SettingsAttribute({\n    onChange,\n    fieldName,\n    library,\n    filters,\n    disabled,\n    multiple = false\n}: ISettingsAttributeProps): JSX.Element {\n    const {t} = useTranslation();\n    const {\n        state: {elementInSettings}\n    } = useFormBuilderReducer();\n\n    const _handleChange = (_, data) => onChange(data.name, data.value);\n    const fieldValue = elementInSettings?.settings?.[fieldName] as string[];\n\n    return (\n        <AttributeSelector\n            multiple={multiple}\n            key={fieldName}\n            disabled={disabled}\n            placeholder={t('forms.select_attribute')}\n            name={fieldName}\n            onChange={_handleChange}\n            filters={{\n                ...filters,\n                libraries: [library]\n            }}\n            fluid\n            value={fieldValue}\n        />\n    );\n}\n\nexport default SettingsAttribute;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport React from 'react';\nimport {Checkbox} from 'semantic-ui-react';\nimport {useFormBuilderReducer} from '../../../../formBuilderReducer/hook/useFormBuilderReducer';\nimport {ISettingsFieldCommonProps} from '../../../../_types';\n\nfunction SettingsCheckbox({onChange, fieldName, disabled}: ISettingsFieldCommonProps): JSX.Element {\n    const {\n        state: {elementInSettings}\n    } = useFormBuilderReducer();\n\n    const _handleChange = (_, data) => onChange(data.name, data.checked);\n\n    return (\n        <Checkbox\n            toggle\n            name={fieldName}\n            onChange={_handleChange}\n            disabled={disabled}\n            checked={!!elementInSettings?.settings?.[fieldName]}\n        />\n    );\n}\n\nexport default SettingsCheckbox;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport React, {useState} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport RichTextEditor from 'react-rte';\nimport styled from 'styled-components';\nimport {useFormBuilderReducer} from '../../../../formBuilderReducer/hook/useFormBuilderReducer';\nimport {ISettingsFieldCommonProps} from '../../../../_types';\n\nconst EditorWrapper = styled.div`\n    .rte-editor-toolbar select {\n        padding: 3px 25px 3px 3px;\n        background: transparent;\n    }\n`;\n\nfunction SettingsRTE({fieldName, onChange, disabled}: ISettingsFieldCommonProps): JSX.Element {\n    const {t} = useTranslation();\n    const {\n        state: {elementInSettings}\n    } = useFormBuilderReducer();\n\n    const [editorState, setEditorState] = useState(\n        RichTextEditor.createValueFromString(String(elementInSettings?.settings?.[fieldName] ?? ''), 'markdown')\n    );\n\n    const _handleBlur = () => {\n        onChange(fieldName, editorState.toString('markdown'));\n    };\n\n    return (\n        <EditorWrapper data-testid=\"rte-editor-wrapper\">\n            <RichTextEditor\n                value={editorState}\n                onChange={setEditorState}\n                //@ts-ignore\n                onBlur={_handleBlur}\n                disabled={disabled}\n                toolbarConfig={{\n                    display: ['INLINE_STYLE_BUTTONS', 'BLOCK_TYPE_BUTTONS', 'BLOCK_TYPE_DROPDOWN', 'HISTORY_BUTTONS'],\n                    INLINE_STYLE_BUTTONS: [\n                        {label: t('forms.rte.bold'), style: 'BOLD'},\n                        {label: t('forms.rte.italic'), style: 'ITALIC'}\n                    ],\n                    BLOCK_TYPE_DROPDOWN: [\n                        {label: t('forms.rte.normal'), style: 'unstyled', className: 'normal_text'},\n                        {label: t('forms.rte.header1'), style: 'header-one'},\n                        {label: t('forms.rte.header2'), style: 'header-two'},\n                        {label: t('forms.rte.header3'), style: 'header-three'}\n                    ],\n                    BLOCK_TYPE_BUTTONS: [\n                        {label: t('forms.rte.ul'), style: 'unordered-list-item'},\n                        {label: t('forms.rte.ol'), style: 'ordered-list-item'}\n                    ]\n                }}\n                toolbarClassName=\"rte-editor-toolbar\"\n            />\n        </EditorWrapper>\n    );\n}\n\nexport default SettingsRTE;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport React from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {DropdownItemProps, Select} from 'semantic-ui-react';\nimport {useFormBuilderReducer} from '../../../../formBuilderReducer/hook/useFormBuilderReducer';\nimport {ISettingsFieldCommonProps, TabsDirection} from '../../../../_types';\n\nexport interface ISettingsFieldSelectProps extends ISettingsFieldCommonProps {\n    options: string[];\n}\n\nfunction SettingsSelect({onChange, fieldName, options, disabled}: ISettingsFieldSelectProps): JSX.Element {\n    const {t} = useTranslation();\n    const {\n        state: {elementInSettings}\n    } = useFormBuilderReducer();\n\n    const dropdownOptions: DropdownItemProps[] = options.map(optionValue => ({\n        key: optionValue,\n        value: optionValue,\n        text: t(`forms.settings.select_options.${optionValue}`)\n    }));\n\n    const _handleChange = (_, data) => onChange(data.name, data.value);\n\n    return (\n        <Select\n            options={dropdownOptions}\n            name={fieldName}\n            disabled={disabled}\n            value={String(elementInSettings?.settings?.[fieldName] || TabsDirection.HORIZONTAL)}\n            onChange={_handleChange}\n        />\n    );\n}\n\nexport default SettingsSelect;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport React from 'react';\nimport {Input} from 'semantic-ui-react';\nimport {useFormBuilderReducer} from '../../../../formBuilderReducer/hook/useFormBuilderReducer';\nimport {ISettingsFieldCommonProps} from '../../../../_types';\n\nfunction SettingsTextInput({onChange, fieldName, disabled}: ISettingsFieldCommonProps): JSX.Element {\n    const {\n        state: {elementInSettings}\n    } = useFormBuilderReducer();\n\n    const _handleChange = (_, data) => {\n        onChange(data.name, data.value);\n    };\n\n    return (\n        <Input\n            type=\"text\"\n            name={fieldName}\n            id={fieldName}\n            disabled={disabled}\n            onChange={_handleChange}\n            value={elementInSettings?.settings?.[fieldName] || ''}\n        />\n    );\n}\n\nexport default SettingsTextInput;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {useQuery} from '@apollo/client';\nimport Loading from 'components/shared/Loading';\nimport {getAttributeByIdQuery} from 'queries/attributes/getAttributeById';\nimport React from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {Form} from 'semantic-ui-react';\nimport {GET_ATTRIBUTE_BY_ID, GET_ATTRIBUTE_BY_IDVariables} from '_gqlTypes/GET_ATTRIBUTE_BY_ID';\nimport {useEditFormContext} from '../../../../../hooks/useEditFormContext';\nimport {FormBuilderActionTypes} from '../../../formBuilderReducer/formBuilderReducer';\nimport {useFormBuilderReducer} from '../../../formBuilderReducer/hook/useFormBuilderReducer';\nimport {\n    FormElementSettingsInputTypes,\n    IFormElementSettings,\n    ISettingsFieldCommonProps,\n    SettingsOnChangeFunc\n} from '../../../_types';\nimport SettingsAttribute, {ISettingsAttributeProps} from './SettingsInput/SettingsAttribute';\nimport SettingsCheckbox from './SettingsInput/SettingsCheckbox';\nimport SettingsRTE from './SettingsInput/SettingsRTE';\nimport SettingsSelect, {ISettingsFieldSelectProps} from './SettingsInput/SettingsSelect';\nimport SettingsTextInput from './SettingsInput/SettingsTextInput';\n\ninterface ISettingsFieldProps {\n    settingsField: IFormElementSettings;\n}\n\nfunction SettingsField({settingsField}: ISettingsFieldProps): JSX.Element {\n    const {t} = useTranslation();\n    const {readonly} = useEditFormContext();\n    const {\n        state: {elementInSettings, library},\n        dispatch\n    } = useFormBuilderReducer();\n\n    const {loading, error, data} = useQuery<GET_ATTRIBUTE_BY_ID, GET_ATTRIBUTE_BY_IDVariables>(getAttributeByIdQuery, {\n        variables: {\n            id: String(elementInSettings.settings?.attribute)\n        }\n    });\n\n    if (loading) {\n        return <Loading />;\n    }\n\n    if (error) {\n        return <div className=\"error\">{error.message}</div>;\n    }\n\n    const attributeProps = data?.attributes?.list?.[0];\n    const _handleChange: SettingsOnChangeFunc = (name, value) => {\n        dispatch({\n            type: FormBuilderActionTypes.SAVE_SETTINGS,\n            settings: {\n                [name]: value\n            }\n        });\n    };\n\n    if (settingsField.inputType === FormElementSettingsInputTypes.NONE) {\n        return null;\n    }\n\n    let comp: JSX.Element;\n    const compProps: ISettingsFieldCommonProps = {\n        onChange: _handleChange,\n        disabled: readonly,\n        fieldName: settingsField.name,\n        ...(settingsField.getInputSettings ? settingsField.getInputSettings(attributeProps) : null)\n    };\n\n    switch (settingsField.inputType) {\n        case FormElementSettingsInputTypes.ATTRIBUTE_SELECTION:\n            comp = <SettingsAttribute {...compProps} library={library} />;\n            break;\n        case FormElementSettingsInputTypes.ATTRIBUTE_SELECTION_MULTIPLE:\n            comp = <SettingsAttribute {...(compProps as ISettingsAttributeProps)} />;\n            break;\n        case FormElementSettingsInputTypes.CHECKBOX:\n            comp = <SettingsCheckbox {...compProps} />;\n            break;\n        case FormElementSettingsInputTypes.RTE:\n            comp = <SettingsRTE {...compProps} />;\n            break;\n        case FormElementSettingsInputTypes.SELECT:\n            comp = <SettingsSelect {...(compProps as ISettingsFieldSelectProps)} />;\n            break;\n        default:\n            comp = <SettingsTextInput {...compProps} />;\n    }\n\n    return (\n        <Form.Field key={settingsField.name}>\n            <label>{t(`forms.settings.${settingsField.name}`)}</label>\n            {comp}\n        </Form.Field>\n    );\n}\n\nexport default SettingsField;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport SettingsField from './SettingsField';\nexport default SettingsField;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport React, {useCallback} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {Button, Form, Icon, Modal} from 'semantic-ui-react';\nimport styled from 'styled-components';\nimport {FormBuilderActionTypes} from '../../formBuilderReducer/formBuilderReducer';\nimport {useFormBuilderReducer} from '../../formBuilderReducer/hook/useFormBuilderReducer';\nimport SettingsField from './SettingsField';\n\nconst SettingsWrapper = styled.div`\n    padding: 1.5em;\n    min-height: calc(100vh - 24rem);\n`;\n\nfunction SettingsEdition(): JSX.Element {\n    const {\n        state: {elementInSettings, openSettings, library},\n        dispatch\n    } = useFormBuilderReducer();\n\n    const {t} = useTranslation();\n\n    const _closeSettings = useCallback(() => dispatch({type: FormBuilderActionTypes.CLOSE_SETTINGS}), [dispatch]);\n\n    return (\n        <Modal\n            open={openSettings}\n            onClose={_closeSettings}\n            closeOnDimmerClick\n            closeOnEscape\n            closeIcon\n            dimmer\n            size=\"large\"\n            className=\"scrolling\"\n        >\n            <Modal.Header>\n                <Icon name=\"settings\" /> {t('admin.settings')}\n            </Modal.Header>\n            <Modal.Content scrolling>\n                {elementInSettings && (\n                    <SettingsWrapper>\n                        <Form name=\"settings-edition\">\n                            {(elementInSettings.uiElement?.settings || []).map(settingsField => (\n                                <SettingsField key={settingsField.name} settingsField={settingsField} />\n                            ))}\n                        </Form>\n                    </SettingsWrapper>\n                )}\n            </Modal.Content>\n            <Modal.Actions>\n                <Button className=\"close-button\" onClick={_closeSettings}>\n                    <Icon name=\"close\" /> {t('admin.close')}\n                </Button>\n            </Modal.Actions>\n        </Modal>\n    );\n}\n\nexport default SettingsEdition;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport SettingsEdition from './SettingsEdition';\nexport default SettingsEdition;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport React from 'react';\nimport {Sidebar} from 'semantic-ui-react';\nimport {FormElementTypes} from '../../../../../../../../../_gqlTypes/globalTypes';\nimport {defaultContainerId} from '../formBuilderReducer/formBuilderReducer';\nimport {useFormBuilderReducer} from '../formBuilderReducer/hook/useFormBuilderReducer';\nimport {layoutElements} from '../uiElements';\nimport {IFormElement, UIElementTypes} from '../_types';\nimport SettingsEdition from './SettingsEdition';\n\nfunction FormLayout(): JSX.Element {\n    const {state, dispatch} = useFormBuilderReducer();\n\n    const rootContainer: IFormElement = {\n        id: defaultContainerId,\n        order: 0,\n        containerId: defaultContainerId,\n        type: FormElementTypes.layout,\n        uiElement: layoutElements[UIElementTypes.FIELDS_CONTAINER]\n    };\n\n    // Render layout\n    return (\n        <Sidebar.Pushable>\n            <rootContainer.uiElement.component.type elementData={rootContainer} state={state} dispatch={dispatch} />\n            <SettingsEdition />\n        </Sidebar.Pushable>\n    );\n}\n\nexport default FormLayout;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport FormLayout from './FormLayout';\nexport default FormLayout;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {useMutation} from '@apollo/client';\nimport useMessages from 'hooks/useMessages';\nimport React, {useCallback, useEffect, useReducer, useState} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {MessagesTypes} from 'redux/messages/messages';\nimport {Button, Grid, Icon} from 'semantic-ui-react';\nimport {saveFormQuery} from '../../../../../../../../queries/forms/saveFormMutation';\nimport {\n    FormElementInput,\n    FormElementsByDepsInput,\n    TreeElementInput\n} from '../../../../../../../../_gqlTypes/globalTypes';\nimport {SAVE_FORM, SAVE_FORMVariables} from '../../../../../../../../_gqlTypes/SAVE_FORM';\nimport {useEditFormModalButtonsContext} from '../../../EditFormModal/EditFormModalButtonsContext';\nimport {useEditFormContext} from '../../hooks/useEditFormContext';\nimport BreadcrumbNavigator from './BreadcrumbNavigator';\nimport DependencySettings from './DependencySettings';\nimport ElementsReserve from './ElementsReserve';\nimport {formBuilderReducer} from './formBuilderReducer';\nimport computateInitialState from './formBuilderReducer/computeInitialState';\nimport {defaultDepAttribute, defaultDepValue} from './formBuilderReducer/formBuilderReducer';\nimport {FormBuilderReducerContext} from './formBuilderReducer/hook/useFormBuilderReducer';\nimport FormLayout from './FormLayout';\n\nfunction ContentTab(): JSX.Element {\n    const {t} = useTranslation();\n    const {addMessage} = useMessages();\n    const {form, library, readonly} = useEditFormContext();\n    const [state, dispatch] = useReducer(formBuilderReducer, computateInitialState(library, form));\n    const [isSaving, setIsSaving] = useState<boolean>(false);\n    const {setButton, removeButton} = useEditFormModalButtonsContext();\n\n    const [saveForm] = useMutation<SAVE_FORM, SAVE_FORMVariables>(saveFormQuery, {\n        onCompleted: () => setIsSaving(false),\n        onError: () => setIsSaving(false)\n    });\n\n    const _handleSubmit = useCallback(async () => {\n        if (readonly) {\n            return;\n        }\n\n        setIsSaving(true);\n        const savableElements = Object.keys(state.elements).reduce(\n            (allElems: FormElementsByDepsInput[], depAttr: string): FormElementsByDepsInput[] => {\n                const elemsWithDeps = Object.keys(state.elements[depAttr]).reduce(\n                    (allDepElems: FormElementsByDepsInput[], depVal: string): FormElementsByDepsInput[] => {\n                        const elems: FormElementInput[] = Object.values(state.elements[depAttr][depVal])\n                            .flat()\n                            .map(el => ({\n                                id: el.id,\n                                containerId: el.containerId,\n                                order: el.order,\n                                uiElementType: el.uiElement.type,\n                                type: el.type,\n                                settings: Object.entries(el.settings || {}).reduce((allSettings, [key, value]) => {\n                                    if (typeof value !== 'undefined') {\n                                        allSettings.push({key, value});\n                                    }\n\n                                    return allSettings;\n                                }, [])\n                            }));\n\n                        const depElems: FormElementsByDepsInput = {elements: elems};\n\n                        if (depAttr !== defaultDepAttribute && depVal !== defaultDepValue) {\n                            const [depLibrary, depId] = depVal.split('/');\n\n                            const depValue: TreeElementInput = {library: depLibrary, id: depId};\n\n                            depElems.dependencyValue = {\n                                attribute: depAttr,\n                                value: depValue\n                            };\n                        }\n\n                        return [...allDepElems, depElems];\n                    },\n                    []\n                );\n\n                return [...allElems, ...elemsWithDeps];\n            },\n            []\n        );\n\n        await saveForm({\n            variables: {\n                formData: {\n                    id: form.id,\n                    library,\n                    elements: savableElements\n                }\n            }\n        });\n\n        addMessage({\n            type: MessagesTypes.SUCCESS,\n            content: t('forms.save_success')\n        });\n        setIsSaving(false);\n    }, [state]);\n\n    // This useEffect is used to transmit submit button to parent modal\n    useEffect(() => {\n        if (readonly) {\n            return;\n        }\n\n        const buttonKey = 'saveContent';\n\n        setButton(\n            buttonKey,\n            <Button loading={isSaving} key={buttonKey} primary icon labelPosition=\"left\" onClick={_handleSubmit}>\n                <Icon name=\"save\" />\n                {t('admin.save')}\n            </Button>\n        );\n\n        return () => {\n            removeButton(buttonKey);\n        };\n    }, [isSaving, _handleSubmit]);\n\n    return (\n        <FormBuilderReducerContext.Provider value={{state, dispatch}}>\n            <Grid columns={2} stackable verticalAlign=\"top\">\n                {state.activeDependency?.attribute && (\n                    <Grid.Row stretched>\n                        <BreadcrumbNavigator />\n                    </Grid.Row>\n                )}\n                <Grid.Row stretched>\n                    <Grid.Column width={4} className=\"elements\">\n                        <DependencySettings />\n                        <ElementsReserve />\n                    </Grid.Column>\n                    <Grid.Column className=\"layout\" width={12}>\n                        <FormLayout />\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n        </FormBuilderReducerContext.Provider>\n    );\n}\n\nexport default ContentTab;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport ContentTab from './ContentTab';\nexport default ContentTab;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {GET_FORM_forms_list} from '../../../../../../../../../_gqlTypes/GET_FORM';\nimport {FormElementTypes} from '../../../../../../../../../_gqlTypes/globalTypes';\nimport {formElements, layoutElements} from '../uiElements';\nimport {IFormElement} from '../_types';\nimport {\n    defaultContainerId,\n    defaultDepAttribute,\n    defaultDepValue,\n    ElementsByDependencyAttribute,\n    IFormBuilderState\n} from './formBuilderReducer';\nimport getKeyFromDepValue from './helpers/getKeyFromDepValue';\nimport sortByOrder from './helpers/sortByOrder';\n\nexport default function computeInitialState(library: string, form: GET_FORM_forms_list): IFormBuilderState {\n    // Transform received flat list of fields to nested fields by dependencies\n    const fieldsByDeps: ElementsByDependencyAttribute = form.elements.reduce(\n        (acc, cur) => {\n            const fieldsByContainer = cur.elements.reduce((groupedFields, field) => {\n                const containerId = field.containerId || defaultContainerId;\n\n                const {uiElementType, ...neededFieldData} = field;\n\n                const uiElement =\n                    field.type === FormElementTypes.layout\n                        ? layoutElements[uiElementType]\n                        : formElements[uiElementType];\n\n                const hydratedField: IFormElement = {\n                    ...neededFieldData,\n                    uiElement,\n                    settings: field.settings.reduce((allSettings, curSettings) => {\n                        let value = curSettings.value;\n\n                        if (curSettings.key === 'columns') {\n                            value = value.map(col => {\n                                if (typeof col === 'object' && typeof col.id !== 'undefined') {\n                                    return col.id;\n                                }\n\n                                return col;\n                            });\n                        }\n\n                        return {\n                            ...allSettings,\n                            [curSettings.key]: value\n                        };\n                    }, {})\n                };\n\n                if (typeof groupedFields[containerId] === 'undefined') {\n                    groupedFields[containerId] = [];\n                }\n\n                groupedFields[containerId].push(hydratedField);\n\n                return groupedFields;\n            }, {});\n\n            if (!cur.dependencyValue) {\n                acc[defaultDepAttribute][defaultDepValue] = fieldsByContainer;\n                return acc;\n            }\n\n            const depAttr = cur.dependencyValue.attribute;\n\n            if (typeof acc[depAttr] === 'undefined') {\n                acc[depAttr] = {};\n            }\n\n            const depKey = getKeyFromDepValue({\n                id: cur.dependencyValue.value.id || '',\n                library: {id: cur.dependencyValue.value.library || '', label: null},\n                label: '',\n                color: '',\n                preview: null\n            });\n\n            acc[depAttr][depKey] = fieldsByContainer;\n\n            return acc;\n        },\n        {[defaultDepAttribute]: {[defaultDepValue]: {}}}\n    );\n\n    // Set default fields as active fields. Add herited flag to false on these fields\n    const activeFields = {...fieldsByDeps[defaultDepAttribute][defaultDepValue]};\n    for (const containerId of Object.keys(activeFields)) {\n        activeFields[containerId] = activeFields[containerId].map(f => ({...f, herited: false})).sort(sortByOrder);\n    }\n\n    return {\n        form,\n        library,\n        activeDependency: null,\n        openSettings: false,\n        elementInSettings: null,\n        elements: fieldsByDeps,\n        activeElements: activeFields\n    };\n}\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {Formik,FormikProps} from 'formik';\nimport React,{useEffect,useRef,useState} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {Button,Form,Icon} from 'semantic-ui-react';\nimport styled from 'styled-components';\nimport useLang from '../../../../../../../../../hooks/useLang';\nimport {arrayPick,formatIDString,getFieldError,omit,pick} from '../../../../../../../../../utils';\nimport {GET_FORM_forms_list} from '../../../../../../../../../_gqlTypes/GET_FORM';\nimport {AttributeType,FormInput} from '../../../../../../../../../_gqlTypes/globalTypes';\nimport AttributeSelector from '../../../../../../../../attributes/AttributeSelector';\nimport FormFieldWrapper from '../../../../../../../../shared/FormFieldWrapper';\nimport {useEditFormModalButtonsContext} from '../../../../EditFormModal/EditFormModalButtonsContext';\nimport {useEditFormContext} from '../../../hooks/useEditFormContext';\n\ninterface IInfosFormProps {\n    onSubmit: (formData: FormInput) => void;\n}\n\ntype FormValues = Pick<GET_FORM_forms_list, 'id' | 'system' | 'label'> & {\n    dependencyAttributes: string[];\n};\n\n/* tslint:disable-next-line:variable-name */\nconst FormGroupWithMargin = styled(Form.Group)`\n    margin-top: 10px;\n`;\n\nfunction InfosForm({onSubmit}: IInfosFormProps): JSX.Element {\n    const {defaultLang, availableLangs} = useLang();\n    const {form, library, readonly} = useEditFormContext();\n    const {setButton, removeButton} = useEditFormModalButtonsContext();\n    const submitFunc = useRef<() => void>();\n\n    const existingForm = form !== null;\n    const {t} = useTranslation();\n    const defaultForm: FormValues = {\n        id: '',\n        system: false,\n        label: null,\n        dependencyAttributes: []\n    };\n\n    const [formValues, setFormValues] = useState<FormValues>(defaultForm);\n\n    // This useEffect is used to transmit the submit button to parent modal when creating a new form\n    useEffect(() => {\n        if (readonly || existingForm) {\n            return;\n        }\n        const buttonKey = 'saveForm';\n        setButton(\n            buttonKey,\n            <Button key={buttonKey} type=\"submit\" primary icon labelPosition=\"left\" onClick={submitFunc.current}>\n                <Icon name=\"save\" />\n                {t('admin.submit')}\n            </Button>\n        );\n\n        return () => removeButton(buttonKey);\n    }, [readonly, existingForm, library, form]);\n\n    useEffect(() => {\n        if (!form) {\n            return;\n        }\n\n        setFormValues({\n            ...pick(form as GET_FORM_forms_list, ['id', 'system', 'label']),\n            dependencyAttributes: arrayPick(form?.dependencyAttributes || [], 'id')\n        });\n    }, [form]);\n\n    const _handleSubmit = (values: FormValues) => {\n        const valuesToSubmit: FormInput = {\n            ...omit(values, ['system']),\n            label: (values?.label as SystemTranslation) ?? null,\n            library\n        };\n\n        return onSubmit(valuesToSubmit);\n    };\n\n    const _renderForm = ({\n        handleSubmit,\n        handleBlur,\n        setFieldValue,\n        submitForm,\n        errors: inputErrors,\n        values,\n        touched\n    }: FormikProps<FormValues>) => {\n        submitFunc.current = handleSubmit;\n\n        const _handleLabelChange = (e, data) => {\n            _handleChange(e, data);\n\n            const {name, value} = data;\n            const [field, subfield] = name.split('.');\n\n            // On new attribute, automatically generate an ID based on label\n            if (!existingForm && field === 'label' && subfield === defaultLang) {\n                setFieldValue('id', formatIDString(value));\n            }\n        };\n\n        const _handleChange = (e, data) => {\n            const value = data.type === 'checkbox' ? data.checked : data.value;\n            const name: string = data.name;\n\n            setFieldValue(name, value);\n        };\n\n        const _handleChangeWithSubmit = async (e, data) => {\n            await _handleChange(e, data);\n\n            if (existingForm) {\n                submitForm();\n            }\n        };\n\n        const _handleBlur = (e: React.FocusEvent) => {\n            if (!existingForm) {\n                handleBlur(e);\n            } else {\n                submitForm();\n            }\n        };\n\n        const _handleKeyPress = (e: React.KeyboardEvent) => {\n            if (e.key === 'Enter') {\n                submitForm();\n            }\n        };\n\n        const {id, label, dependencyAttributes} = values;\n\n        const _getErrorByField = (fieldName: string): string =>\n            getFieldError<FormValues>(fieldName, touched, {}, inputErrors);\n\n        return (\n            <Form onSubmit={handleSubmit}>\n                <Form.Group grouped>\n                    <label>{t('libraries.label')}</label>\n                    {availableLangs.map(lang => (\n                        <FormFieldWrapper key={lang} error={_getErrorByField(`label.${lang}`)}>\n                            <Form.Input\n                                label={`${lang} ${lang === defaultLang ? '*' : ''}`}\n                                name={'label.' + lang}\n                                aria-label={'label.' + lang}\n                                disabled={readonly}\n                                value={label?.[lang] || ''}\n                                onChange={_handleLabelChange}\n                                onBlur={_handleBlur}\n                                onKeyPress={_handleKeyPress}\n                            />\n                        </FormFieldWrapper>\n                    ))}\n                </Form.Group>\n                <FormFieldWrapper error={_getErrorByField('id')}>\n                    <Form.Input\n                        label={t('attributes.ID')}\n                        disabled={existingForm || readonly}\n                        name=\"id\"\n                        aria-label=\"id\"\n                        onChange={_handleChange}\n                        onBlur={_handleBlur}\n                        value={id}\n                    />\n                </FormFieldWrapper>\n                <FormFieldWrapper error={_getErrorByField('dependencyAttributes')}>\n                    <AttributeSelector\n                        label={t('forms.dependency_attributes')}\n                        filters={{type: [AttributeType.tree]}}\n                        multiple\n                        name=\"dependencyAttributes\"\n                        value={dependencyAttributes}\n                        onChange={_handleChangeWithSubmit}\n                        disabled={readonly}\n                    />\n                </FormFieldWrapper>\n            </Form>\n        );\n    };\n\n    return <Formik initialValues={formValues} onSubmit={_handleSubmit} render={_renderForm} enableReinitialize />;\n}\n\nexport default InfosForm;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport InfosForm from './InfosForm';\nexport default InfosForm;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {useMutation} from '@apollo/client';\nimport React from 'react';\nimport {useHistory, useLocation} from 'react-router-dom';\nimport {saveFormQuery} from '../../../../../../../../queries/forms/saveFormMutation';\nimport {clearCacheForQuery} from '../../../../../../../../utils';\nimport {FormInput} from '../../../../../../../../_gqlTypes/globalTypes';\nimport {SAVE_FORM, SAVE_FORMVariables} from '../../../../../../../../_gqlTypes/SAVE_FORM';\nimport {useEditFormContext} from '../../hooks/useEditFormContext';\nimport InfosForm from './InfosForm';\n\nfunction InfosTab(): JSX.Element {\n    const {form, library, readonly, setForm} = useEditFormContext();\n    const [saveForm] = useMutation<SAVE_FORM, SAVE_FORMVariables>(saveFormQuery, {\n        // Prevents Apollo from throwing an exception on error state. Errors are managed with the error variable\n        onError: e => undefined,\n        onCompleted: res => {\n            if (history?.replace) {\n                history.replace({pathname, hash: 'forms', search: `fid=${res.saveForm.id}`});\n            }\n        },\n        update: cache => {\n            // On form creation, handle cache\n            if (!form) {\n                clearCacheForQuery(cache, 'forms', {filters: {library}});\n            }\n        }\n    });\n\n    const history = useHistory();\n    const {pathname} = useLocation();\n\n    const _handleSubmit = async (formData: FormInput) => {\n        const res = await saveForm({\n            variables: {\n                formData: {...formData, id: formData.id, library}\n            }\n        });\n\n        setForm(res.data.saveForm);\n    };\n    return <InfosForm onSubmit={_handleSubmit} />;\n}\n\nexport default InfosTab;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport InfosTab from './InfosTab';\nexport default InfosTab;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport React from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {Header, Tab} from 'semantic-ui-react';\nimport useLang from '../../../../../../../hooks/useLang';\nimport {localizedLabel} from '../../../../../../../utils';\nimport {useEditFormContext} from '../hooks/useEditFormContext';\nimport ContentTab from './ContentTab';\nimport InfosTab from './InfosTab';\n\nfunction EditFormTabs(): JSX.Element {\n    const {t} = useTranslation();\n    const {lang} = useLang();\n    const {form} = useEditFormContext();\n\n    const isCreationMode = form === null;\n\n    const label = isCreationMode ? t('forms.new') : localizedLabel(form?.label ?? null, lang);\n\n    const panes = [\n        {\n            key: 'infos',\n            mustBeDisplayed: true,\n            menuItem: t('forms.informations'),\n            render: () => <InfosTab />\n        },\n        {\n            key: 'content',\n            mustBeDisplayed: !!form,\n            menuItem: t('forms.content'),\n            render: () => <ContentTab />\n        }\n    ].filter(p => p.mustBeDisplayed);\n\n    return (\n        <>\n            <Header className=\"no-grow\" data-testid=\"header\">\n                {label}\n            </Header>\n            <Tab\n                menu={{secondary: true, pointing: true}}\n                panes={panes}\n                className=\"grow flex-col height100\"\n                renderActiveOnly\n            />\n        </>\n    );\n}\n\nexport default EditFormTabs;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport EditFormTabs from './EditFormTabs';\nexport default EditFormTabs;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {useQuery} from '@apollo/client';\nimport React, {useEffect, useState} from 'react';\nimport {getFormQuery} from '../../../../../../queries/forms/getFormQuery';\nimport {GET_FORM, GET_FORMVariables, GET_FORM_forms_list} from '../../../../../../_gqlTypes/GET_FORM';\nimport Loading from '../../../../../shared/Loading';\nimport EditFormTabs from './EditFormTabs';\nimport {EditFormContext} from './hooks/useEditFormContext';\n\ninterface IEditFormProps {\n    formId: string | null;\n    libraryId: string;\n    readonly: boolean;\n}\n\nfunction EditForm({formId, libraryId, readonly}: IEditFormProps): JSX.Element {\n    const [form, setForm] = useState<GET_FORM_forms_list>(null);\n\n    const {loading, error, data} = useQuery<GET_FORM, GET_FORMVariables>(getFormQuery, {\n        variables: {\n            library: libraryId,\n            id: formId || ''\n        },\n        fetchPolicy: 'no-cache',\n        skip: !formId\n    });\n\n    useEffect(() => {\n        if (!data?.forms?.list?.[0]) {\n            return;\n        }\n\n        setForm(data?.forms?.list?.[0]);\n    }, [data]);\n\n    if (loading) {\n        return <Loading />;\n    }\n\n    if (error) {\n        return <div data-test-id=\"error\">ERROR {error.message}</div>;\n    }\n\n    if (formId && (!data || !data?.forms?.list.length)) {\n        return <div>Cannot retrieve form</div>;\n    }\n\n    return (\n        <EditFormContext.Provider value={{form, library: libraryId, readonly, setForm}}>\n            <EditFormTabs />\n        </EditFormContext.Provider>\n    );\n}\n\nexport default EditForm;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport EditForm from './EditForm';\nexport default EditForm;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport React, {useState} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {Button, Icon, Modal} from 'semantic-ui-react';\nimport EditForm from '../EditForm';\nimport {EditFormModalButtonsContext, IEditFormModalButtonsContext} from './EditFormModalButtonsContext';\n\ninterface IEditFormModalProps {\n    open: boolean;\n    onClose: () => void;\n    formId: string | null;\n    libraryId: string;\n    readonly: boolean;\n}\n\nfunction EditFormModal({open, onClose, formId, libraryId, readonly}: IEditFormModalProps): JSX.Element {\n    const {t} = useTranslation();\n    const [modalButtons, setModalButtons] = useState<IEditFormModalButtonsContext['buttons']>({});\n\n    const setButton = (key: string, button: JSX.Element) => {\n        setModalButtons({...modalButtons, [key]: button});\n    };\n\n    const removeButton = (key: string) => {\n        const newButtons = Object.keys(modalButtons).reduce((acc, cur) => {\n            if (cur !== key) {\n                acc[cur] = modalButtons[cur];\n            }\n            return acc;\n        }, {});\n\n        setModalButtons(newButtons);\n    };\n\n    return (\n        <EditFormModalButtonsContext.Provider value={{buttons: modalButtons, setButton, removeButton}}>\n            <Modal\n                open={open}\n                size=\"fullscreen\"\n                centered\n                closeOnDimmerClick\n                closeOnEscape\n                closeIcon\n                dimmer\n                className=\"overlay\"\n                onClose={onClose}\n            >\n                <Modal.Content scrolling>\n                    <EditForm formId={formId} libraryId={libraryId} readonly={readonly} />\n                </Modal.Content>\n                <Modal.Actions>\n                    <Button className=\"close-button\" onClick={onClose}>\n                        <Icon name=\"cancel\" /> {t('admin.close')}\n                    </Button>\n                    {Object.values(modalButtons)}\n                </Modal.Actions>\n            </Modal>\n        </EditFormModalButtonsContext.Provider>\n    );\n}\n\nexport default EditFormModal;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport EditFormModal from './EditFormModal';\nexport default EditFormModal;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport React from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {Button, Checkbox, Grid, Icon, Input, Table} from 'semantic-ui-react';\nimport useLang from '../../../../../../hooks/useLang';\nimport useUserData from '../../../../../../hooks/useUserData';\nimport {localizedLabel} from '../../../../../../utils';\nimport {GET_FORMS_LIST_forms_list} from '../../../../../../_gqlTypes/GET_FORMS_LIST';\nimport {IFormFilterOptions} from '../../../../../../_types/forms';\nimport ConfirmedButton from '../../../../../shared/ConfirmedButton';\nimport DeleteButton from '../../../../../shared/DeleteButton';\nimport Loading from '../../../../../shared/Loading';\n\ninterface IFormsListProps {\n    loading: boolean;\n    libraryId: string;\n    forms: GET_FORMS_LIST_forms_list[];\n    filters?: IFormFilterOptions;\n    onFiltersChange: (filters: IFormFilterOptions) => void;\n    onRowClick: (formId: string) => void;\n    onDelete: (formId: string) => void;\n    onCreate: () => void;\n}\n\nfunction FormsList({\n    loading,\n    forms,\n    filters = {},\n    onFiltersChange,\n    onCreate,\n    onRowClick,\n    onDelete\n}: IFormsListProps): JSX.Element {\n    const {lang: availableLanguages} = useLang();\n    const {t} = useTranslation();\n    const {permissions} = useUserData();\n\n    const _handleFilterChange = (e: React.SyntheticEvent, d: any) => {\n        // If a checkbox was not checked and is clicked, go back to indeterminate state\n        if (d.type === 'checkbox' && filters.system === false && d.checked) {\n            d.indeterminate = true;\n            d.checked = false;\n        }\n\n        if (onFiltersChange) {\n            onFiltersChange(d);\n        }\n    };\n\n    const _handleRowClick = (formId: string) => () => onRowClick(formId);\n    const _handleDelete = (formId: string) => () => onDelete(formId);\n\n    return (\n        <>\n            <Grid>\n                <Grid.Column floated=\"right\" width={4} textAlign=\"right\" verticalAlign=\"middle\">\n                    <Button icon labelPosition=\"left\" size=\"medium\" onClick={onCreate} data-test-id=\"create-form-btn\">\n                        <Icon name=\"plus\" />\n                        {t('forms.new')}\n                    </Button>\n                </Grid.Column>\n            </Grid>\n            <Table selectable striped>\n                <Table.Header>\n                    <Table.Row key=\"titles\">\n                        <Table.HeaderCell width={7}>{t('admin.label')}</Table.HeaderCell>\n                        <Table.HeaderCell width={7}>{t('admin.id')}</Table.HeaderCell>\n                        <Table.HeaderCell width={1}>{t('admin.isSystem')}</Table.HeaderCell>\n                        <Table.HeaderCell width={1} />\n                    </Table.Row>\n                    <Table.Row className=\"filters\" key=\"filters\">\n                        <Table.HeaderCell key=\"label\">\n                            <Input\n                                key=\"label\"\n                                size=\"small\"\n                                fluid\n                                placeholder={t('admin.label') + '...'}\n                                name=\"label\"\n                                value={filters.label || ''}\n                                onChange={_handleFilterChange}\n                            />\n                        </Table.HeaderCell>\n                        <Table.HeaderCell key=\"id\">\n                            <Input\n                                key=\"id\"\n                                size=\"small\"\n                                fluid\n                                placeholder={t('admin.id') + '...'}\n                                name=\"id\"\n                                value={filters.id || ''}\n                                onChange={_handleFilterChange}\n                            />\n                        </Table.HeaderCell>\n                        <Table.HeaderCell key=\"system\">\n                            <Checkbox\n                                key=\"system\"\n                                indeterminate={typeof filters.system === 'undefined'}\n                                name=\"system\"\n                                checked={filters.system}\n                                onChange={_handleFilterChange}\n                            />\n                        </Table.HeaderCell>\n                        <Table.HeaderCell />\n                    </Table.Row>\n                </Table.Header>\n                <Table.Body>\n                    {loading ? (\n                        <Table.Row>\n                            <Table.Cell colSpan={6}>\n                                <Loading />\n                            </Table.Cell>\n                        </Table.Row>\n                    ) : (\n                        forms.map(f => {\n                            const formLabel = localizedLabel(f.label, availableLanguages);\n                            return (\n                                <Table.Row key={f.id} data-test-id=\"form-list-row\" onClick={_handleRowClick(f.id)}>\n                                    <Table.Cell>{formLabel}</Table.Cell>\n                                    <Table.Cell>{f.id}</Table.Cell>\n                                    <Table.Cell width={1}>\n                                        <Checkbox readOnly checked={f.system} />\n                                    </Table.Cell>\n                                    <Table.Cell>\n                                        <ConfirmedButton\n                                            action={_handleDelete(f.id)}\n                                            confirmMessage={t('forms.confirm_delete', {formLabel})}\n                                        >\n                                            <DeleteButton disabled={f.system} />\n                                        </ConfirmedButton>\n                                    </Table.Cell>\n                                </Table.Row>\n                            );\n                        })\n                    )}\n                </Table.Body>\n            </Table>\n        </>\n    );\n}\n\nexport default FormsList;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport FormsList from './FormsList';\nexport default FormsList;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {useMutation, useQuery} from '@apollo/client';\nimport React, {useState} from 'react';\nimport {deleteFormQuery} from '../../../../../queries/forms/deleteFormMutation';\nimport {getFormsQuery} from '../../../../../queries/forms/getFormsQuery';\nimport {addWildcardToFilters, clearCacheForQuery} from '../../../../../utils';\nimport {DELETE_FORM, DELETE_FORMVariables} from '../../../../../_gqlTypes/DELETE_FORM';\nimport {GET_FORMS_LIST, GET_FORMS_LISTVariables} from '../../../../../_gqlTypes/GET_FORMS_LIST';\nimport {IFormFilterOptions} from '../../../../../_types/forms';\nimport EditFormModal from './EditFormModal';\nimport FormsList from './FormsList';\n\ninterface IFormsTabProps {\n    libraryId: string;\n    readonly: boolean;\n}\n\nfunction FormsTab({libraryId, readonly}: IFormsTabProps): JSX.Element {\n    const [filters, setFilters] = useState<IFormFilterOptions>({});\n    const {loading, error, data} = useQuery<GET_FORMS_LIST, GET_FORMS_LISTVariables>(getFormsQuery, {\n        variables: {...addWildcardToFilters(filters), library: libraryId}\n    });\n\n    const [deleteForm] = useMutation<DELETE_FORM, DELETE_FORMVariables>(deleteFormQuery);\n\n    const [editedForm, setEditedForm] = useState<string | null>(null);\n    const [openEditionModal, setOpenEditionModal] = useState<boolean>(false);\n\n    const _handleFormEditionClose = () => {\n        setOpenEditionModal(false);\n    };\n\n    const _handleFiltersChange = (filterElem: any) => {\n        const newElemState =\n            filterElem.type === 'checkbox'\n                ? filterElem.indeterminate\n                    ? undefined\n                    : filterElem.checked\n                : filterElem.value;\n\n        const newFilters = {\n            ...filters,\n            [filterElem.name]: newElemState\n        };\n\n        setFilters(newFilters);\n    };\n\n    const _handleCreate = () => {\n        setEditedForm(null);\n        setOpenEditionModal(true);\n    };\n\n    const _handleRowClick = (formId: string) => {\n        setEditedForm(formId);\n        setOpenEditionModal(true);\n    };\n\n    const _handleDelete = (formId: string) => {\n        return deleteForm({\n            variables: {\n                formId,\n                library: libraryId\n            },\n            update: (cache, {data: {deleteForm: deletedForm}}: any) => {\n                // Get cached data for library's forms list\n                const cacheData = cache.readQuery<GET_FORMS_LIST, GET_FORMS_LISTVariables>({\n                    query: getFormsQuery,\n                    variables: {library: libraryId}\n                });\n\n                // Clear everything in cache related to this library's forms list. There might be\n                // some filtered list here\n                clearCacheForQuery(cache, 'forms', {filters: {library: libraryId}});\n\n                // Rewrite cache for the full forms list only (no filters).\n                // If a filtered list is being displayed, it won't refresh automatically.\n                // It's not optimal, but we consider the most common use case when creating form is\n                // displaying the full list. As it's not trivial at all to refresh every possible\n                // filters properly, we don't do it.\n                const newCacheData = {\n                    forms: {\n                        list: [...(cacheData?.forms?.list || [])].filter(f => f.id !== deletedForm.id),\n                        totalCount: cacheData?.forms?.totalCount ? cacheData?.forms?.totalCount - 1 : 0,\n                        __typename: 'FormsList'\n                    }\n                };\n\n                cache.writeQuery({\n                    query: getFormsQuery,\n                    variables: {library: libraryId},\n                    data: newCacheData\n                });\n            }\n        });\n    };\n\n    if (error) {\n        return <div className=\"error\">Error {error.message}</div>;\n    }\n\n    if (!loading && !data?.forms?.list) {\n        return <div>Could not retrieve forms</div>;\n    }\n\n    return (\n        <>\n            <FormsList\n                loading={loading}\n                libraryId={libraryId}\n                forms={data?.forms?.list || []}\n                filters={filters}\n                onFiltersChange={_handleFiltersChange}\n                onCreate={_handleCreate}\n                onRowClick={_handleRowClick}\n                onDelete={_handleDelete}\n            />\n            {openEditionModal && (\n                <EditFormModal\n                    formId={editedForm}\n                    open={openEditionModal}\n                    libraryId={libraryId}\n                    onClose={_handleFormEditionClose}\n                    readonly={readonly}\n                />\n            )}\n        </>\n    );\n}\n\nexport default FormsTab;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport FormsTab from './FormsTab';\nexport default FormsTab;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport gql from 'graphql-tag';\nimport {libraryDetailsFragment} from './libraryDetailsFragment';\n\nexport const saveLibQuery = gql`\n    ${libraryDetailsFragment}\n    mutation SAVE_LIBRARY($libData: LibraryInput!, $lang: [AvailableLanguage!]) {\n        saveLibrary(library: $libData) {\n            ...LibraryDetails\n        }\n    }\n`;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport gql from 'graphql-tag';\n\nexport const getViewsQuery = gql`\n    query GET_VIEWS($library: String!) {\n        views(library: $library) {\n            list {\n                id\n                label\n            }\n        }\n    }\n`;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport React from 'react';\nimport {Form} from 'semantic-ui-react';\nimport useLang from '../../../../hooks/useLang';\nimport {localizedLabel} from '../../../../utils';\nimport {GET_VIEWS_views_list} from '../../../../_gqlTypes/GET_VIEWS';\n\ninterface IViewSelectorFieldProps {\n    views: GET_VIEWS_views_list[];\n}\n\nfunction ViewSelectorField({views = [], ...fieldProps}: IViewSelectorFieldProps): JSX.Element {\n    const availableLanguages = useLang().lang;\n    const options = views.map(v => ({key: v.id, value: v.id, text: localizedLabel(v.label, availableLanguages)}));\n    options.unshift({key: '', value: '', text: ''});\n\n    return <Form.Dropdown {...fieldProps} search options={options} />;\n}\n\nexport default ViewSelectorField;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport ViewSelectorField from './ViewSelectorField';\nexport default ViewSelectorField;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {useQuery} from '@apollo/client';\nimport React from 'react';\nimport {FormDropdownProps} from 'semantic-ui-react';\nimport {getViewsQuery} from '../../../queries/views/getViewsQuery';\nimport {GET_VIEWS, GET_VIEWSVariables} from '../../../_gqlTypes/GET_VIEWS';\nimport Loading from '../../shared/Loading';\nimport ViewSelectorField from './ViewSelectorField';\n\ninterface IViewSelectorProps extends FormDropdownProps {\n    library: string;\n}\n\nfunction ViewSelector({library, ...fieldProps}: IViewSelectorProps): JSX.Element {\n    const {loading, error, data} = useQuery<GET_VIEWS, GET_VIEWSVariables>(getViewsQuery, {\n        variables: {\n            library\n        }\n    });\n\n    if (loading) {\n        return <Loading />;\n    }\n\n    if (error) {\n        return <div data-test-id=\"error\">Error {error.message}</div>;\n    }\n\n    const views = data?.views?.list ?? [];\n\n    return <ViewSelectorField views={views} {...fieldProps} />;\n}\n\nexport default ViewSelector;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport ViewSelector from './ViewSelector';\nexport default ViewSelector;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport FileSelector from 'components/shared/FileSelector';\nimport {Formik, FormikProps} from 'formik';\nimport React from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {Form, Icon} from 'semantic-ui-react';\nimport styled from 'styled-components';\nimport * as yup from 'yup';\nimport {RecordIdentity_whoAmI} from '_gqlTypes/RecordIdentity';\nimport useLang from '../../../../../../hooks/useLang';\nimport {formatIDString, getFieldError, localizedLabel} from '../../../../../../utils';\nimport {GET_LIB_BY_ID_libraries_list} from '../../../../../../_gqlTypes/GET_LIB_BY_ID';\nimport {AttributeType, LibraryBehavior} from '../../../../../../_gqlTypes/globalTypes';\nimport {ErrorTypes, IFormError} from '../../../../../../_types/errors';\nimport FormFieldWrapper from '../../../../../shared/FormFieldWrapper';\nimport ViewSelector from '../../../../../views/ViewSelector';\n\ninterface IInfosFormProps {\n    library: GET_LIB_BY_ID_libraries_list | null;\n    onSubmit: (formData: any) => void;\n    readonly: boolean;\n    errors?: IFormError;\n    onCheckIdExists: (val: string) => Promise<boolean>;\n}\n\ntype LibraryFormValues = Omit<GET_LIB_BY_ID_libraries_list, 'gqlNames' | 'fullTextAttributes' | 'defaultView'> & {\n    defaultView?: string | null;\n    fullTextAttributes: string[];\n};\n\nconst FormGroupWithMargin = styled(Form.Group)`\n    margin-top: 10px;\n`;\n\n// TODO: add validation, getfielderror on attribute\n/* tslint:disable-next-line:variable-name */\nconst InfosForm = ({library, onSubmit, readonly, errors, onCheckIdExists}: IInfosFormProps): JSX.Element => {\n    const {t} = useTranslation();\n    const {defaultLang, availableLangs, lang} = useLang();\n    const isExistingLib = library !== null;\n\n    const defaultLibrary: LibraryFormValues = {\n        id: '',\n        system: false,\n        label: {\n            fr: '',\n            en: ''\n        },\n        icon: null,\n        behavior: LibraryBehavior.standard,\n        attributes: [],\n        permissions_conf: null,\n        defaultView: null,\n        fullTextAttributes: [],\n        recordIdentityConf: {\n            label: null,\n            color: null,\n            preview: null,\n            treeColorPreview: null\n        },\n        permissions: {\n            admin_library: true,\n            access_library: true,\n            access_record: true,\n            create_record: true,\n            edit_record: true,\n            delete_record: true\n        }\n    };\n\n    const initialValues: LibraryFormValues =\n        library === null\n            ? defaultLibrary\n            : {\n                  ...library,\n                  defaultView: library?.defaultView?.id ?? null,\n                  fullTextAttributes: library?.fullTextAttributes ? library.fullTextAttributes.map(a => a.id) : []\n              };\n\n    const libAttributesOptions = initialValues.attributes\n        ? initialValues.attributes.map(a => ({\n              key: a.id,\n              value: a.id,\n              text: localizedLabel(a.label, lang) || a.id\n          }))\n        : [];\n\n    const libTreeAttributesOptions = library?.attributes\n        ? library.attributes\n              .filter(a => a.type === AttributeType.tree)\n              .map(a => ({\n                  key: a.id,\n                  value: a.id,\n                  text: localizedLabel(a.label, lang) || a.id\n              }))\n        : [];\n    libAttributesOptions.unshift({key: '', value: '', text: ''});\n\n    const _handleSubmit = values => {\n        onSubmit(values);\n    };\n\n    const serverValidationErrors =\n        errors && errors.extensions.code === ErrorTypes.VALIDATION_ERROR ? errors.extensions.fields : {};\n\n    let idValidator = yup\n        .string()\n        .required()\n        .matches(/^[a-z0-9_]+$/);\n\n    if (!isExistingLib) {\n        // TODO: ID unicity validation is not debounced. As it's not trivial to implement, check future implementation\n        // in formik (https://github.com/jaredpalmer/formik/pull/1597)\n        idValidator = idValidator.test('isIdUnique', t('admin.validation_errors.id_exists'), onCheckIdExists);\n    }\n\n    const validationSchema = yup.object().shape({\n        label: yup.object().shape({\n            [defaultLang || lang[0]]: yup.string().required()\n        }),\n        id: idValidator,\n        recordIdentityConf: yup\n            .object()\n            .shape({\n                label: yup.string().nullable(),\n                color: yup.string().nullable(),\n                preview: yup.string().nullable(),\n                treeColorPreview: yup.string().nullable()\n            })\n            .nullable()\n    });\n\n    const _renderForm = ({\n        handleSubmit,\n        handleBlur,\n        setFieldValue,\n        errors: inputErrors,\n        values,\n        touched,\n        submitForm,\n        isValid,\n        isValidating,\n        isSubmitting\n    }: FormikProps<LibraryFormValues>) => {\n        const _handleLabelChange = (e, data) => {\n            _handleChange(e, data);\n\n            const {name, value} = data;\n            const [field, subfield] = name.split('.');\n\n            // On new attribute, automatically generate an ID based on label\n            if (!isExistingLib && field === 'label' && subfield === defaultLang) {\n                setFieldValue('id', formatIDString(value));\n            }\n        };\n\n        const _handleChange = async (e, data) => {\n            const value = data.type === 'checkbox' ? data.checked : data.value;\n            const name: string = data.name;\n\n            await setFieldValue(name, value);\n        };\n\n        const _handleChangeWithSubmit = async (e, data) => {\n            await _handleChange(e, data);\n\n            if (isExistingLib) {\n                submitForm();\n            }\n        };\n\n        const _handleBlur = (e: React.FocusEvent) => {\n            if (!isExistingLib) {\n                handleBlur(e);\n            } else {\n                submitForm();\n            }\n        };\n\n        const _handleKeyPress = (e: React.KeyboardEvent) => {\n            if (e.key === 'Enter') {\n                submitForm();\n            }\n        };\n\n        const _handleIconChange = async (selectedIcon: RecordIdentity_whoAmI) => {\n            _handleChangeWithSubmit(null, {\n                name: 'icon',\n                value: {whoAmI: selectedIcon}\n            });\n        };\n\n        const {id, label, behavior, recordIdentityConf, defaultView, fullTextAttributes} = values;\n\n        const _getErrorByField = (fieldName: string): string =>\n            getFieldError<LibraryFormValues>(fieldName, touched, serverValidationErrors || {}, inputErrors);\n\n        const behaviorOptions = Object.values(LibraryBehavior).map(b => ({\n            key: b,\n            value: b,\n            text: t(`libraries.behavior_${b}`)\n        }));\n\n        const _onSubmit = () => {\n            return handleSubmit();\n        };\n\n        return (\n            <Form onSubmit={_onSubmit}>\n                <Form.Group grouped>\n                    <label>{t('libraries.label')}</label>\n                    {availableLangs.map(availableLang => (\n                        <FormFieldWrapper key={availableLang} error={_getErrorByField(`label.${availableLang}`)}>\n                            <Form.Input\n                                label={`${availableLang} ${availableLang === defaultLang ? '*' : ''}`}\n                                name={'label.' + availableLang}\n                                aria-label={'label.' + availableLang}\n                                disabled={readonly}\n                                value={label?.[availableLang] ?? ''}\n                                onChange={_handleLabelChange}\n                                onBlur={_handleBlur}\n                                onKeyPress={_handleKeyPress}\n                            />\n                        </FormFieldWrapper>\n                    ))}\n                </Form.Group>\n                <FormFieldWrapper error={_getErrorByField('id')}>\n                    <Form.Input\n                        label={t('attributes.ID')}\n                        disabled={isExistingLib || readonly}\n                        name=\"id\"\n                        aria-label=\"id\"\n                        onChange={_handleChange}\n                        onBlur={_handleBlur}\n                        value={id}\n                    />\n                </FormFieldWrapper>\n                <FormFieldWrapper error={_getErrorByField('behavior')}>\n                    <Form.Select\n                        label={t('libraries.behavior')}\n                        disabled={isExistingLib || readonly}\n                        name=\"behavior\"\n                        aria-label=\"behavior\"\n                        onChange={_handleChangeWithSubmit}\n                        onBlur={_handleBlur}\n                        value={behavior}\n                        options={behaviorOptions}\n                    />\n                </FormFieldWrapper>\n                <FormFieldWrapper error={_getErrorByField('libraries.fulltext_attributes')}>\n                    <Form.Dropdown\n                        search\n                        selection\n                        multiple\n                        options={libAttributesOptions}\n                        name=\"fullTextAttributes\"\n                        aria-label=\"fullTextAttributes\"\n                        disabled={!isExistingLib || readonly}\n                        label={t('libraries.fulltext_attributes')}\n                        value={fullTextAttributes}\n                        onChange={_handleChangeWithSubmit}\n                        onBlur={_handleBlur}\n                    />\n                </FormFieldWrapper>\n                {isExistingLib && (\n                    <FormFieldWrapper error={_getErrorByField('defaultView')}>\n                        <ViewSelector\n                            search\n                            selection\n                            label={t('libraries.default_view')}\n                            disabled={readonly}\n                            name=\"defaultView\"\n                            aria-label=\"defaultView\"\n                            value={defaultView ?? ''}\n                            library={library!.id}\n                            onChange={_handleChangeWithSubmit}\n                            onBlur={handleBlur}\n                        />\n                    </FormFieldWrapper>\n                )}\n                <Form.Group grouped>\n                    <label>{t('libraries.record_identity')}</label>\n                    <FormFieldWrapper error={_getErrorByField('recordIdentityConf.label')}>\n                        <Form.Dropdown\n                            search\n                            selection\n                            options={libAttributesOptions}\n                            name=\"recordIdentityConf.label\"\n                            disabled={readonly}\n                            label={t('libraries.record_identity_label')}\n                            value={recordIdentityConf && recordIdentityConf.label ? recordIdentityConf.label : ''}\n                            onChange={_handleChangeWithSubmit}\n                        />\n                    </FormFieldWrapper>\n                    <FormFieldWrapper error={_getErrorByField('recordIdentityConf.color')}>\n                        <Form.Dropdown\n                            search\n                            selection\n                            options={libAttributesOptions}\n                            name=\"recordIdentityConf.color\"\n                            disabled={readonly}\n                            label={t('libraries.record_identity_color')}\n                            value={recordIdentityConf && recordIdentityConf.color ? recordIdentityConf.color : ''}\n                            onChange={_handleChangeWithSubmit}\n                        />\n                    </FormFieldWrapper>\n                    <FormFieldWrapper error={_getErrorByField('recordIdentityConf.preview')}>\n                        <Form.Dropdown\n                            search\n                            selection\n                            options={libAttributesOptions}\n                            name=\"recordIdentityConf.preview\"\n                            disabled={readonly}\n                            label={t('libraries.record_identity_preview')}\n                            value={recordIdentityConf && recordIdentityConf.preview ? recordIdentityConf.preview : ''}\n                            onChange={_handleChangeWithSubmit}\n                        />\n                    </FormFieldWrapper>\n                    <FormFieldWrapper error={_getErrorByField('recordIdentityConf.preview')}>\n                        <Form.Dropdown\n                            search\n                            selection\n                            options={libTreeAttributesOptions}\n                            name=\"recordIdentityConf.treeColorPreview\"\n                            disabled={readonly}\n                            label={t('libraries.record_identity_dependent_color_and_preview')}\n                            value={\n                                recordIdentityConf && recordIdentityConf.treeColorPreview\n                                    ? recordIdentityConf.treeColorPreview\n                                    : ''\n                            }\n                            onChange={_handleChangeWithSubmit}\n                        />\n                    </FormFieldWrapper>\n                </Form.Group>\n                <FormFieldWrapper error={_getErrorByField('icon.whoAmI')}>\n                    <FileSelector\n                        onChange={_handleIconChange}\n                        value={values.icon?.whoAmI ?? null}\n                        label={t('applications.icon')}\n                    />\n                </FormFieldWrapper>\n                {!readonly && !isExistingLib && (\n                    <FormGroupWithMargin>\n                        <Form.Button icon primary type=\"submit\" labelPosition=\"left\">\n                            <Icon name=\"save\" />\n                            {t('admin.submit')}\n                        </Form.Button>\n                    </FormGroupWithMargin>\n                )}\n            </Form>\n        );\n    };\n\n    return (\n        <Formik\n            initialValues={initialValues}\n            onSubmit={_handleSubmit}\n            render={_renderForm}\n            validationSchema={validationSchema}\n        />\n    );\n};\n\nexport default InfosForm;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport InfosForm from './InfosForm';\nexport default InfosForm;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {useLazyQuery, useMutation} from '@apollo/client';\nimport React from 'react';\nimport {useHistory} from 'react-router-dom';\nimport {getLibByIdQuery} from '../../../../../queries/libraries/getLibraryById';\nimport {saveLibQuery} from '../../../../../queries/libraries/saveLibMutation';\nimport {clearCacheForQuery} from '../../../../../utils';\nimport {\n    GET_LIB_BY_ID,\n    GET_LIB_BY_IDVariables,\n    GET_LIB_BY_ID_libraries_list\n} from '../../../../../_gqlTypes/GET_LIB_BY_ID';\nimport {IFormError} from '../../../../../_types/errors';\nimport InfosForm from './InfosForm';\n\ninterface IInfosTabProps {\n    library: GET_LIB_BY_ID_libraries_list | null;\n    readonly: boolean;\n}\n\nfunction InfosTab({library, readonly}: IInfosTabProps): JSX.Element {\n    const history = useHistory();\n    const isNewLib = !library;\n\n    const [saveLibrary, {error: errorSave}] = useMutation(saveLibQuery, {\n        // Prevents Apollo from throwing an exception on error state. Errors are managed with the error variable\n        onError: () => undefined,\n        update: cache => {\n            // There might be a lot of different lists with different\n            // filters in cache, thus we just revoke everything\n            if (isNewLib) {\n                clearCacheForQuery(cache, 'libraries');\n            }\n        }\n    });\n\n    const [getLibById, {data: dataLibById}] = useLazyQuery<GET_LIB_BY_ID, GET_LIB_BY_IDVariables>(getLibByIdQuery, {\n        fetchPolicy: 'no-cache'\n    });\n\n    const _handleCheckIdExists = async val => {\n        await getLibById({variables: {id: val}});\n\n        return !!dataLibById && !!dataLibById.libraries && !dataLibById.libraries.list.length;\n    };\n\n    const _handleSubmit = async libData => {\n        const dataToSave = {\n            id: libData.id,\n            label: {\n                fr: libData.label.fr,\n                en: libData.label.en\n            },\n            icon: libData.icon?.whoAmI\n                ? {\n                      libraryId: libData.icon.whoAmI.library.id,\n                      recordId: libData.icon.whoAmI.id\n                  }\n                : null,\n            behavior: libData.behavior,\n            defaultView: libData.defaultView || null,\n            fullTextAttributes: libData.fullTextAttributes,\n            recordIdentityConf:\n                libData.recordIdentityConf !== null\n                    ? {\n                          label: libData.recordIdentityConf.label,\n                          preview: libData.recordIdentityConf.preview,\n                          color: libData.recordIdentityConf.color,\n                          treeColorPreview: libData.recordIdentityConf.treeColorPreview\n                      }\n                    : null\n        };\n        await saveLibrary({\n            variables: {\n                libData: dataToSave\n            }\n        });\n\n        if (isNewLib) {\n            history.replace({pathname: '/libraries/edit/' + libData.id});\n        }\n    };\n\n    const formErrors = errorSave?.graphQLErrors?.length ? errorSave.graphQLErrors[0] : null;\n\n    return (\n        <InfosForm\n            library={library}\n            onSubmit={_handleSubmit}\n            readonly={readonly}\n            errors={(formErrors as unknown) as IFormError}\n            onCheckIdExists={_handleCheckIdExists}\n        />\n    );\n}\n\nexport default InfosTab;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport InfosTab from './InfosTab';\nexport default InfosTab;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport PermissionsSettings from 'components/shared/PermissionsSettings';\nimport React from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {Tab} from 'semantic-ui-react';\nimport styled from 'styled-components';\nimport {IGroupedPermissionsActions} from '_types/permissions';\nimport useLang from '../../../../../../hooks/useLang';\nimport {localizedLabel} from '../../../../../../utils';\nimport {\n    GET_LIB_BY_ID_libraries_list,\n    GET_LIB_BY_ID_libraries_list_permissions_conf_permissionTreeAttributes_TreeAttribute\n} from '../../../../../../_gqlTypes/GET_LIB_BY_ID';\nimport {\n    PermissionsActions,\n    PermissionsRelation,\n    PermissionTypes,\n    Treepermissions_confInput\n} from '../../../../../../_gqlTypes/globalTypes';\nimport DefinePermByUserGroupView from '../../../../../permissions/DefinePermByUserGroupView';\nimport DefineTreePermissionsView from '../../../../../permissions/DefineTreePermissionsView';\n\nconst PermissionsSettingsBtn = styled(PermissionsSettings)`\n    position: absolute;\n    top: 2rem;\n    right: 2rem;\n`;\n\ninterface IPermissionsContentProps {\n    library: GET_LIB_BY_ID_libraries_list;\n    onSubmitSettings: (conf: Treepermissions_confInput) => void;\n    readonly: boolean;\n}\n\nfunction PermissionsContent({library, onSubmitSettings, readonly}: IPermissionsContentProps): JSX.Element {\n    const {t} = useTranslation();\n    const availableLanguages = useLang().lang;\n    const defaultPermsConf = {permissionTreeAttributes: [], relation: PermissionsRelation.and};\n\n    const groupedLibraryPermissions: IGroupedPermissionsActions = {\n        library: [PermissionsActions.admin_library, PermissionsActions.access_library],\n        entities: [\n            PermissionsActions.access_record,\n            PermissionsActions.create_record,\n            PermissionsActions.edit_record,\n            PermissionsActions.delete_record\n        ]\n    };\n\n    const permsConf = library.permissions_conf || defaultPermsConf;\n    const panes = permsConf.permissionTreeAttributes.map(a => ({\n        key: a.id,\n        menuItem: localizedLabel(a.label, availableLanguages),\n        render: () => (\n            <Tab.Pane key={a.id} className=\"grow flex-col height100\">\n                {(a as GET_LIB_BY_ID_libraries_list_permissions_conf_permissionTreeAttributes_TreeAttribute)\n                    .linked_tree ? (\n                    <DefineTreePermissionsView\n                        key={a.id}\n                        treeAttribute={\n                            a as GET_LIB_BY_ID_libraries_list_permissions_conf_permissionTreeAttributes_TreeAttribute\n                        }\n                        permissionType={PermissionTypes.record}\n                        applyTo={library.id}\n                        readOnly={readonly}\n                    />\n                ) : (\n                    <p>Missing tree ID</p>\n                )}\n            </Tab.Pane>\n        )\n    }));\n\n    panes.unshift({\n        key: 'libPermissions',\n        menuItem: t('permissions.default'),\n        render: () => (\n            <Tab.Pane key=\"libPermissions\" className=\"grow flex-col height100\">\n                {\n                    <DefinePermByUserGroupView\n                        type={PermissionTypes.library}\n                        key=\"libPermissions\"\n                        actions={groupedLibraryPermissions}\n                        applyTo={library.id}\n                        readOnly={readonly}\n                    />\n                }\n            </Tab.Pane>\n        )\n    });\n\n    const _handleChangeSettings = (settings: Treepermissions_confInput) => {\n        onSubmitSettings(settings);\n    };\n\n    return (\n        <div className=\"flex-col height100\">\n            <PermissionsSettingsBtn\n                permissionsSettings={library.permissions_conf}\n                onChangeSettings={_handleChangeSettings}\n                library={library}\n                readonly={readonly}\n            />\n            <Tab panes={panes} className=\"grow flex-col height100\" />\n        </div>\n    );\n}\n\nexport default PermissionsContent;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport PermissionsContent from './PermissionsContent';\nexport default PermissionsContent;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {useMutation} from '@apollo/client';\nimport React from 'react';\nimport {saveLibQuery} from '../../../../../queries/libraries/saveLibMutation';\nimport {GET_LIB_BY_ID_libraries_list} from '../../../../../_gqlTypes/GET_LIB_BY_ID';\nimport {Treepermissions_confInput} from '../../../../../_gqlTypes/globalTypes';\nimport {SAVE_LIBRARY, SAVE_LIBRARYVariables} from '../../../../../_gqlTypes/SAVE_LIBRARY';\nimport PermissionsContent from './PermissionsContent';\n\ninterface IPermissionsTabProps {\n    library: GET_LIB_BY_ID_libraries_list;\n    readonly: boolean;\n}\n\nfunction PermissionsTab({library, readonly}: IPermissionsTabProps): JSX.Element {\n    const [saveLibrary] = useMutation<SAVE_LIBRARY, SAVE_LIBRARYVariables>(saveLibQuery);\n\n    const _handleSubmitSettings = (conf: Treepermissions_confInput) =>\n        saveLibrary({\n            variables: {\n                libData: {\n                    id: library.id,\n                    permissions_conf: conf\n                }\n            }\n        });\n\n    return <PermissionsContent library={library} readonly={readonly} onSubmitSettings={_handleSubmitSettings} />;\n}\n\nexport default PermissionsTab;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport PermissionsTab from './PermissionsTab';\nexport default PermissionsTab;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport gql from 'graphql-tag';\n\nexport const purgeRecordsMutation = gql`\n    mutation PURGE_RECORDS($libraryId: String!) {\n        purgeInactiveRecords(libraryId: $libraryId) {\n            id\n        }\n    }\n`;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {useMutation, useQuery} from '@apollo/client';\nimport ErrorDisplay from 'components/shared/ErrorDisplay';\nimport Loading from 'components/shared/Loading';\nimport {purgeRecordsMutation} from 'queries/records/purgeRecords';\nimport {\n    getRecordsListQuery,\n    IGetRecordsListQuery,\n    IGetRecordsListQueryVariables,\n    RecordFilterCondition\n} from 'queries/records/recordsListQuery';\nimport React from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {Button, Confirm, Icon} from 'semantic-ui-react';\nimport styled from 'styled-components';\nimport {GET_LIB_BY_ID_libraries_list} from '_gqlTypes/GET_LIB_BY_ID';\nimport {PURGE_RECORDS, PURGE_RECORDSVariables} from '_gqlTypes/PURGE_RECORDS';\n\nconst Summary = styled.div`\n    margin: 1rem 0;\n`;\n\nconst ConfirmContent = styled.div`\n    padding: 1.5rem;\n    text-align: center;\n\n    .warning {\n        white-space: pre-line;\n        margin-bottom: 1rem;\n        color: #9f3a38;\n        font-weight: bold;\n        line-height: 1.2em;\n        font-size: 1.2em;\n    }\n`;\n\ninterface IPurgeTabProps {\n    library: GET_LIB_BY_ID_libraries_list | null;\n    readonly: boolean;\n}\n\nfunction PurgeTab({library, readonly}: IPurgeTabProps): JSX.Element {\n    const {t} = useTranslation();\n    const {loading, error, data, refetch} = useQuery<IGetRecordsListQuery, IGetRecordsListQueryVariables>(\n        getRecordsListQuery(library.gqlNames.query),\n        {\n            variables: {\n                pagination: {limit: 1, offset: 0},\n                filters: [{field: 'active', condition: RecordFilterCondition.EQUAL, value: 'false'}]\n            }\n        }\n    );\n\n    const [purgeRecords, {loading: purgeLoading, error: purgeError}] = useMutation<\n        PURGE_RECORDS,\n        PURGE_RECORDSVariables\n    >(purgeRecordsMutation, {variables: {libraryId: library.id}});\n\n    const [showConfirm, setShowConfirm] = React.useState(false);\n\n    const _handleOpenConfirm = () => setShowConfirm(true);\n    const _handleCloseConfirm = () => setShowConfirm(false);\n\n    const _startPurge = async () => {\n        try {\n            _handleCloseConfirm();\n            await purgeRecords();\n            refetch();\n        } catch (e) {\n            // Error is handled with error variable\n        }\n    };\n\n    if (loading || purgeLoading) {\n        return <Loading />;\n    }\n\n    if (error || purgeError) {\n        return <ErrorDisplay message={error?.message || purgeError?.message} />;\n    }\n\n    const recordsCount = data?.[library.gqlNames.query]?.totalCount ?? 0;\n\n    const confirmContent = (\n        <ConfirmContent>\n            <div className=\"warning\">{t('libraries.purge.warning', {interpolation: false})}</div>\n            <div>{t('libraries.purge.confirm')}</div>\n        </ConfirmContent>\n    );\n\n    return (\n        <div>\n            <Summary>{t('libraries.purge.summary', {count: recordsCount})}</Summary>\n            {!!recordsCount && !readonly && (\n                <Button primary onClick={_handleOpenConfirm} icon labelPosition=\"left\">\n                    <Icon name=\"trash alternate outline\" />\n                    {t('libraries.purge.launch_button')}\n                </Button>\n            )}\n            {showConfirm && (\n                <Confirm\n                    open={showConfirm}\n                    onCancel={_handleCloseConfirm}\n                    onConfirm={_startPurge}\n                    content={confirmContent}\n                    cancelButton={t('admin.cancel')}\n                    confirmButton={t('admin.submit')}\n                />\n            )}\n        </div>\n    );\n}\n\nexport default PurgeTab;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport PurgeTab from './PurgeTab';\nexport default PurgeTab;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {useMutation} from '@apollo/client';\nimport LibraryIcon from 'components/shared/LibraryIcon';\nimport {Location} from 'history';\nimport React, {useState} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {AiOutlineFileSearch} from 'react-icons/ai';\nimport {useHistory, useLocation} from 'react-router-dom';\nimport {Button, Grid, Header, Tab, TabProps} from 'semantic-ui-react';\nimport styled from 'styled-components';\nimport {indexRecordsMutation} from '../../../../queries/records/indexRecordsMutation';\nimport {GET_LIB_BY_ID_libraries_list} from '../../../../_gqlTypes/GET_LIB_BY_ID';\nimport {INDEX_RECORDS, INDEX_RECORDSVariables} from '../../../../_gqlTypes/INDEX_RECORDS';\nimport AttributesTab from './AttributesTab';\nimport FormsTab from './FormsTab';\nimport InfosTab from './InfosTab';\nimport PermissionsTab from './PermissionsTab';\nimport PurgeTab from './PurgeTab';\n\nconst Title = styled(Header)`\n    display: flex;\n    align-items: center;\n`;\n\nTitle.displayName = 'Title';\n\ninterface IEditLibraryTabsProps {\n    library: GET_LIB_BY_ID_libraries_list | null;\n    readOnly: boolean;\n    location?: Location;\n}\n\nconst EditLibraryTabs = ({library, readOnly}: IEditLibraryTabsProps): JSX.Element => {\n    const {t} = useTranslation();\n    const history = useHistory();\n    const location = useLocation();\n    const isCreationMode = library === null;\n\n    const [indexRecords, {loading: indexLoading}] = useMutation<INDEX_RECORDS, INDEX_RECORDSVariables>(\n        indexRecordsMutation\n    );\n\n    const label = isCreationMode ? t('libraries.new') : library!.label?.fr || library!.label?.en || library!.id;\n\n    const panes = [\n        {\n            key: 'infos',\n            mustBeDisplayed: true,\n            menuItem: t('libraries.informations'),\n            render: () => (\n                <Tab.Pane key=\"infos\" className=\"grow\">\n                    <InfosTab library={library} readonly={readOnly} />\n                </Tab.Pane>\n            )\n        },\n        {\n            key: 'permissions',\n            mustBeDisplayed: !isCreationMode,\n            menuItem: t('libraries.permissions'),\n            render: () => {\n                return (\n                    <Tab.Pane key=\"permissions\" className=\"grow flex-col height100\">\n                        <PermissionsTab library={library as GET_LIB_BY_ID_libraries_list} readonly={readOnly} />\n                    </Tab.Pane>\n                );\n            }\n        },\n        {\n            key: 'attributes',\n            mustBeDisplayed: !isCreationMode,\n            menuItem: t('libraries.attributes'),\n            render: () => {\n                return (\n                    <Tab.Pane key=\"attributes\" className=\"grow\">\n                        <AttributesTab library={library} readonly={readOnly} />\n                    </Tab.Pane>\n                );\n            }\n        },\n        {\n            key: 'forms',\n            mustBeDisplayed: !isCreationMode,\n            menuItem: t('forms.title'),\n            render: () => {\n                return (\n                    <Tab.Pane key=\"forms\" className=\"height100\" style={{padding: '0', border: '0px none'}}>\n                        <FormsTab libraryId={library!.id} readonly={readOnly} />\n                    </Tab.Pane>\n                );\n            }\n        },\n        {\n            key: 'purge',\n            mustBeDisplayed: !isCreationMode,\n            menuItem: t('libraries.purge.title'),\n            render: () => {\n                return (\n                    <Tab.Pane key=\"purge\" className=\"height100\" style={{padding: '0', border: '0px none'}}>\n                        <PurgeTab library={library} readonly={readOnly} />\n                    </Tab.Pane>\n                );\n            }\n        }\n    ].filter(p => p.mustBeDisplayed);\n\n    const tabName = location ? location.hash.replace('#', '') : undefined;\n    const [activeIndex, setActiveIndex] = useState<number | undefined>(\n        tabName ? panes.findIndex(p => tabName === p.key) : 0\n    );\n\n    const _handleOnTabChange = (event: React.MouseEvent<HTMLDivElement, MouseEvent>, data: TabProps) => {\n        if (data.panes && data.activeIndex !== undefined) {\n            setActiveIndex(Number(data.activeIndex.toString()));\n            history?.push(`#${data.panes[data.activeIndex].key}`);\n        }\n    };\n\n    const _handleIndex = async () => {\n        await indexRecords({\n            variables: {\n                libraryId: library.id\n            }\n        });\n    };\n\n    return (\n        <>\n            <Grid padded verticalAlign={'middle'}>\n                <Grid.Column width={12}>\n                    <Title className=\"no-grow\" role=\"heading\" aria-label=\"title\">\n                        <LibraryIcon library={library} />\n                        {label}\n                    </Title>\n                </Grid.Column>\n                {!isCreationMode && (\n                    <Grid.Column width={4} textAlign=\"right\">\n                        <Button\n                            primary\n                            disabled={indexLoading}\n                            onClick={_handleIndex}\n                            loading={indexLoading}\n                            aria-label=\"index\"\n                        >\n                            <AiOutlineFileSearch /> {t('libraries.index_fulltext_search')}\n                        </Button>\n                    </Grid.Column>\n                )}\n            </Grid>\n            <Tab\n                activeIndex={activeIndex}\n                onTabChange={_handleOnTabChange}\n                menu={{secondary: true, pointing: true}}\n                panes={panes}\n                className=\"grow flex-col height100\"\n            />\n        </>\n    );\n};\n\nexport default EditLibraryTabs;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport EditLibraryTabs from './EditLibraryTabs';\nexport default EditLibraryTabs;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport EditLibrary from './EditLibrary';\nexport default EditLibrary;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {useQuery} from '@apollo/client';\nimport React from 'react';\nimport {match} from 'react-router-dom';\nimport useLang from '../../../hooks/useLang';\nimport {getLibByIdQuery} from '../../../queries/libraries/getLibraryById';\nimport {GET_LIB_BY_ID, GET_LIB_BY_IDVariables, GET_LIB_BY_ID_libraries_list} from '../../../_gqlTypes/GET_LIB_BY_ID';\nimport Loading from '../../shared/Loading';\nimport EditLibraryTabs from './EditLibraryTabs';\n\nexport interface IEditLibraryMatchParams {\n    id: string;\n}\n\ninterface IEditLibraryProps {\n    match?: match<IEditLibraryMatchParams>;\n}\n\nconst EditLibrary = ({match: routeMatch}: IEditLibraryProps): JSX.Element => {\n    const libraryId = routeMatch.params.id;\n    const {lang} = useLang();\n\n    const {loading, error, data} = useQuery<GET_LIB_BY_ID, GET_LIB_BY_IDVariables>(getLibByIdQuery, {\n        variables: {id: libraryId, lang}\n    });\n    const readOnly = !data?.libraries?.list[0]?.permissions.admin_library;\n\n    const _getEditLibraryTabs = (libToEdit: GET_LIB_BY_ID_libraries_list | null) => {\n        return <EditLibraryTabs library={libToEdit} readOnly={readOnly} />;\n    };\n\n    if (!libraryId) {\n        return _getEditLibraryTabs(null);\n    }\n\n    if (loading) {\n        return <Loading />;\n    }\n\n    if (typeof error !== 'undefined') {\n        return <p>Error: {error.message}</p>;\n    }\n\n    if (!data || !data.libraries || !data.libraries.list.length) {\n        return <p>Unknown library</p>;\n    }\n\n    return _getEditLibraryTabs(data.libraries.list[0]);\n};\n\nexport default EditLibrary;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {useQuery} from '@apollo/client';\nimport {getLibsQuery} from 'queries/libraries/getLibrariesQuery';\nimport React from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {GET_LIBRARIES, GET_LIBRARIESVariables} from '_gqlTypes/GET_LIBRARIES';\nimport {LibraryBehavior} from '_gqlTypes/globalTypes';\nimport {RecordIdentity_whoAmI} from '_gqlTypes/RecordIdentity';\nimport ErrorDisplay from '../ErrorDisplay';\nimport Loading from '../Loading';\nimport RecordSelector from '../RecordSelector';\n\ninterface IFileSelectorProps {\n    onChange: (selectedFile: RecordIdentity_whoAmI) => void;\n    value: RecordIdentity_whoAmI;\n    label: string;\n    disabled?: boolean;\n}\n\nfunction FileSelector({label, value, onChange, disabled}: IFileSelectorProps): JSX.Element {\n    const {t} = useTranslation();\n\n    const {loading, error, data} = useQuery<GET_LIBRARIES, GET_LIBRARIESVariables>(getLibsQuery, {\n        variables: {\n            behavior: [LibraryBehavior.files]\n        }\n    });\n\n    if (loading) {\n        return <Loading />;\n    }\n\n    if (error) {\n        return <ErrorDisplay message={error.message} />;\n    }\n\n    const filesLibraries = data?.libraries?.list ?? [];\n\n    if (!filesLibraries.length) {\n        return <ErrorDisplay message={t('file_selector.no_files_libraries')} />;\n    }\n\n    return (\n        <RecordSelector\n            label={label}\n            value={value}\n            onChange={onChange}\n            disabled={disabled}\n            libraries={filesLibraries.map(l => l.id)}\n        />\n    );\n}\n\nexport default FileSelector;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport FileSelector from './FileSelector';\nexport default FileSelector;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport React from 'react';\nimport {Icon, SemanticICONS} from 'semantic-ui-react';\nimport {GET_LIB_BY_ID_libraries_list} from '_gqlTypes/GET_LIB_BY_ID';\nimport {LibraryBehavior} from '_gqlTypes/globalTypes';\nimport RecordPreview from '../RecordPreview';\n\ninterface ILibraryIconProps {\n    library: Pick<GET_LIB_BY_ID_libraries_list, 'id' | 'behavior' | 'icon'>;\n}\n\nfunction LibraryIcon({library}: ILibraryIconProps): JSX.Element {\n    const iconNameByBehavior: {[key in LibraryBehavior]: SemanticICONS} = {\n        [LibraryBehavior.files]: 'images outline',\n        [LibraryBehavior.directories]: 'folder outline',\n        [LibraryBehavior.standard]: 'file alternate outline'\n    };\n\n    const behavior = library?.behavior ?? LibraryBehavior.standard;\n\n    return library?.icon?.whoAmI?.preview ? (\n        <RecordPreview image={library.icon.whoAmI.preview.small} color={null} label={null} />\n    ) : (\n        <Icon data-testid=\"generic-icon\" name={iconNameByBehavior[behavior]} size=\"big\" />\n    );\n}\n\nexport default LibraryIcon;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport LibraryIcon from './LibraryIcon';\nexport default LibraryIcon;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport SelectRecordModal from 'components/records/SelectRecordModal';\nimport RecordCard from 'components/shared/RecordCard';\nimport React from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {Button, Confirm, Icon} from 'semantic-ui-react';\nimport styled from 'styled-components';\nimport {RecordIdentity_whoAmI} from '_gqlTypes/RecordIdentity';\n\ninterface IRecordSelectorProps {\n    onChange: (selectedFile: RecordIdentity_whoAmI) => void;\n    value: RecordIdentity_whoAmI;\n    label: string;\n    disabled?: boolean;\n    libraries: string[];\n    required?: boolean;\n}\n\nconst Wrapper = styled.div`\n    display: flex;\n    height: 3rem;\n\n    && .buttons {\n        display: none;\n    }\n\n    &:hover .buttons {\n        display: block;\n    }\n\n    > * {\n        margin-right: 1em;\n    }\n`;\n\nfunction RecordSelector({\n    onChange,\n    label,\n    value,\n    disabled,\n    libraries,\n    required = false\n}: IRecordSelectorProps): JSX.Element {\n    const {t} = useTranslation();\n    const [isModalOpen, setIsModalOpen] = React.useState(false);\n\n    const [showDeleteConfirm, setShowDeleteConfirm] = React.useState(false);\n    const _openDeleteConfirm = () => setShowDeleteConfirm(true);\n    const _closeDeleteConfirm = () => setShowDeleteConfirm(false);\n\n    const _openModal = () => {\n        setIsModalOpen(true);\n    };\n    const _handleCloseModal = () => setIsModalOpen(false);\n    const _handleSelect = (record: RecordIdentity_whoAmI) => {\n        onChange(record);\n        setIsModalOpen(false);\n    };\n    const _handleDelete = () => {\n        onChange(null);\n        _closeDeleteConfirm();\n    };\n\n    return (\n        <>\n            <label>{label}</label>\n            <Wrapper>\n                {value && (\n                    <>\n                        <RecordCard record={value} />\n                        {!disabled && (\n                            <Button.Group basic>\n                                <Button\n                                    type=\"button\"\n                                    icon\n                                    onClick={_openModal}\n                                    title=\"exchange\"\n                                    aria-label=\"exchange\"\n                                    name=\"exchange\"\n                                >\n                                    <Icon name=\"exchange\" />\n                                </Button>\n                                {!required && (\n                                    <Button type=\"button\" icon onClick={_openDeleteConfirm} aria-label=\"delete\">\n                                        <Icon name=\"close\" />\n                                    </Button>\n                                )}\n                            </Button.Group>\n                        )}\n                    </>\n                )}\n                {!value && (\n                    <Button type=\"button\" icon labelPosition=\"left\" onClick={_openModal}>\n                        <Icon name=\"search\" />\n                        {t('record_selector.select')}\n                    </Button>\n                )}\n            </Wrapper>\n            {isModalOpen && (\n                <SelectRecordModal\n                    library={libraries}\n                    open={isModalOpen}\n                    onClose={_handleCloseModal}\n                    onSelect={_handleSelect}\n                />\n            )}\n            {showDeleteConfirm && (\n                <Confirm\n                    open={showDeleteConfirm}\n                    onCancel={_closeDeleteConfirm}\n                    onConfirm={_handleDelete}\n                    content={t('record_selector.delete_confirm')}\n                    confirmButton={t('admin.submit')}\n                    cancelButton={t('admin.cancel')}\n                />\n            )}\n        </>\n    );\n}\n\nexport default RecordSelector;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport RecordSelector from './RecordSelector';\nexport default RecordSelector;\n"],"names":["attributes","loading","withFilters","filters","onRowClick","actions","onFiltersUpdate","_handleFilterChange","e","d","type","name","checked","indeterminate","t","useTranslation","availableLanguages","useLang","lang","actionsList","Array","isArray","types","Object","keys","AttributeType","map","key","value","text","formats","AttributeFormat","format","Table","selectable","striped","width","className","Input","size","fluid","placeholder","label","onChange","id","Dropdown","multiple","search","selection","options","Checkbox","multiple_values","system","colSpan","Loading","a","attrLabel","localizedLabel","onClick","readOnly","textAlign","child","React","attribute","indexRecordsMutation","gql","props","library","onUnlink","fr","en","ConfirmedButton","action","attributesToSave","filter","confirmMessage","libLabel","Button","circular","icon","disabled","readonly","useState","visible","attributeModalDisplay","setAttributeModalDisplay","showAddExistingAttrModal","setShowAddExistingAttrModal","useMutation","saveLibAttributesMutation","saveLibAttr","_handleCloseAttributeModal","_closeAddExistingAttrModal","saveAttributes","variables","libId","refetchQueries","query","getLibByIdQuery","_onNewAttributeSaved","newAttr","attributesList","_onClickUnlink","onExistingAttrAdded","newLibAttributes","push","labelPosition","Icon","AttributesList","AttributesSelectionModal","openModal","onClose","onSubmit","EditAttributeModal","open","onPostSave","redirectAfterCreate","deleteFormQuery","getFormsQuery","formElementsByDepsFragment","getFormQuery","EditFormContext","createContext","form","setForm","useEditFormContext","useContext","saveFormQuery","EditFormModalButtonsContext","useEditFormModalButtonsContext","initialState","openSettings","activeDependency","elementInSettings","elements","activeElements","FormBuilderReducerContext","state","dispatch","useFormBuilderReducer","getKeyFromDepValue","depValue","defaultDepValue","mergeConcat","target","src","mergeWith","objVal","srcVal","concat","sortByOrder","b","order","_cleanContainerChildren","element","fieldsByContainer","fields","cloneDeep","elemId","depAttribute","containerId","newElemsByDeps","_filterElem","el","newActiveElems","FormBuilderActionTypes","defaultDepAttribute","defaultContainerId","ADD_ELEMENT","_updateOrder","origId","newEl","position","elementToAdd","newElementsByDeps","depAttributeKey","depValueKey","sort","elementToMergeToActiveFields","herited","newActiveFields","addElement","REMOVE_ELEMENT","removeElementById","removeElement","MOVE_ELEMENT","newFieldsByDeps","to","from","moveDirection","elementId","indexInActiveFields","findIndex","newElement","moveElement","OPEN_SETTINGS","CLOSE_SETTINGS","closeSettings","SAVE_SETTINGS","elementToUpdate","depAttrKey","indexInFields","newSettings","settings","newFields","saveSettings","CHANGE_ACTIVE_DEPENDENCY","ancestors","activeFields","f","depKey","depFields","currentDepKey","currentDepFields","changeActiveDependency","REMOVE_TAB","parentElement","tabContainerId","tabId","tmpState","indexInElems","indexInActiveElems","tabs","removeTab","TreeElement","styled","TreeWrapper","BreadcrumbSectionWrapper","Breadcrumb","startTreeFrom","treeData","treeLabel","showTree","setShowTree","content","RecordCard","record","parent","slice","undefined","Popup","on","onOpen","trigger","TreeExplorer","tree","onClickNode","node","whoAmI","p","compact","startAt","basic","_getSection","breadcrumbSections","link","active","i","splice","sections","linkedTree","dependencyAttributes","find","linked_tree","useQuery","getTreeByIdQuery","skip","error","data","trees","list","length","StyledDropdown","displayName","UIElementTypes","FieldTypes","DraggableElementTypes","TabsDirection","FormElementSettingsInputTypes","attr","clearable","_","fieldProps","toggle","DateInput","TimeInput","withTime","PreviewSkeleton","TextSkeleton","CellWrapper","celled","Wrapper","CenteredBreadcrumb","breadcrumbSection","s","HoverBtnGroup","isHerited","isOver","ElementHandle","UiElementWrapper","isReadOnly","index","dropRef","useRef","getAttributesQuery","String","hover","setHover","useDrop","accept","ATTRIBUTE","FORM_ELEMENT","RESERVE_LAYOUT_ELEMENT","collect","monitor","uiElement","canDrop","getItem","dragItem","item","isOverCurrent","shallow","itemFromPos","currentPos","hoverBoundingRect","current","getBoundingClientRect","hoverClientY","getClientOffset","y","top","elemIndex","dragIndex","dragDown","dragUp","elemHeight","bottom","bottomThreshold","topThreshold","dropAtPos","nextPos","drop","useDrag","originPos","isDragging","canDrag","end","dropResult","didDrop","drag","preview","attrData","fieldSettings","ref","onMouseEnter","onMouseLeave","fitted","component","elementData","ContainerWrapper","isRootContainer","EmptyContainerPlaceholder","c","tabsElement","tab","availableLangs","_handleKeyPress","Modal","closeOnEscape","closeOnDimmerClick","closeIcon","centered","l","defaultValue","style","margin","existingTabs","tabIndex","newTabs","onKeyDown","CompactMenuItem","Menu","activeIndex","setActiveIndex","showEditTabModal","setShowEditTabModal","_getNewTab","uuid","_handleShowEditTabModal","tabsToDisplay","panes","menuItem","marginLeft","render","containerElement","layoutElements","FIELDS_CONTAINER","FormElementTypes","Tab","menu","tabular","vertical","direction","VERTICAL","onTabChange","ContentWrapper","trim","title","Divider","horizontal","commonFieldSettings","inputType","ATTRIBUTE_SELECTION","INPUT","DIVIDER","TEXT_BLOCK","RTE","TABS","NONE","SELECT","getInputSettings","HORIZONTAL","formElements","TEXT_INPUT","CHECKBOX","DATE","ENCRYPTED","DROPDOWN","LINK","ATTRIBUTE_SELECTION_MULTIPLE","attributeProps","linked_library","TREE","elemByFormat","uuidv4","reduce","acc","cur","_getElement","getDropResult","libraries","formElement","fieldName","fieldValue","AttributeSelector","EditorWrapper","RichTextEditor","editorState","setEditorState","onBlur","toString","toolbarConfig","display","INLINE_STYLE_BUTTONS","BLOCK_TYPE_DROPDOWN","BLOCK_TYPE_BUTTONS","toolbarClassName","dropdownOptions","optionValue","Select","settingsField","getAttributeByIdQuery","message","comp","compProps","Form","SettingsWrapper","_closeSettings","useCallback","dimmer","scrolling","rootContainer","Sidebar","addMessage","useMessages","useReducer","formBuilderReducer","fieldsByDeps","groupedFields","field","uiElementType","neededFieldData","hydratedField","allSettings","curSettings","col","dependencyValue","depAttr","color","computateInitialState","isSaving","setIsSaving","setButton","removeButton","onCompleted","onError","saveForm","_handleSubmit","savableElements","allElems","elemsWithDeps","allDepElems","depVal","depElems","values","flat","entries","split","formData","MessagesTypes","useEffect","buttonKey","primary","Provider","Grid","columns","stackable","verticalAlign","stretched","defaultLang","submitFunc","existingForm","formValues","setFormValues","pick","arrayPick","initialValues","valuesToSubmit","omit","handleSubmit","handleBlur","setFieldValue","submitForm","inputErrors","errors","touched","_handleLabelChange","_handleChange","subfield","formatIDString","_handleChangeWithSubmit","_handleBlur","_getErrorByField","getFieldError","grouped","FormFieldWrapper","onKeyPress","enableReinitialize","res","history","replace","pathname","hash","update","cache","clearCacheForQuery","useHistory","useLocation","mustBeDisplayed","Header","secondary","pointing","renderActiveOnly","formId","libraryId","fetchPolicy","forms","modalButtons","setModalButtons","buttons","button","newButtons","onFiltersChange","onCreate","onDelete","useUserData","permissions","_handleDelete","floated","formLabel","DeleteButton","setFilters","addWildcardToFilters","deleteForm","editedForm","setEditedForm","openEditionModal","setOpenEditionModal","filterElem","newElemState","newFilters","deletedForm","cacheData","readQuery","newCacheData","totalCount","__typename","writeQuery","saveLibQuery","libraryDetailsFragment","getViewsQuery","views","v","unshift","FormGroupWithMargin","onCheckIdExists","isExistingLib","defaultLibrary","behavior","LibraryBehavior","permissions_conf","defaultView","fullTextAttributes","recordIdentityConf","treeColorPreview","admin_library","access_library","access_record","create_record","edit_record","delete_record","libAttributesOptions","libTreeAttributesOptions","serverValidationErrors","extensions","code","ErrorTypes","idValidator","yup","required","matches","test","validationSchema","shape","nullable","isValid","isValidating","isSubmitting","_handleIconChange","selectedIcon","behaviorOptions","availableLang","FileSelector","isNewLib","saveLibrary","errorSave","useLazyQuery","getLibById","dataLibById","_handleCheckIdExists","val","libData","dataToSave","recordId","formErrors","graphQLErrors","PermissionsSettingsBtn","PermissionsSettings","onSubmitSettings","defaultPermsConf","permissionTreeAttributes","relation","PermissionsRelation","groupedLibraryPermissions","PermissionsActions","entities","DefineTreePermissionsView","treeAttribute","permissionType","PermissionTypes","applyTo","DefinePermByUserGroupView","permissionsSettings","onChangeSettings","conf","purgeRecordsMutation","Summary","ConfirmContent","getRecordsListQuery","gqlNames","pagination","limit","offset","condition","RecordFilterCondition","refetch","purgeRecords","purgeLoading","purgeError","showConfirm","setShowConfirm","_handleCloseConfirm","_startPurge","ErrorDisplay","recordsCount","confirmContent","interpolation","count","Confirm","onCancel","onConfirm","cancelButton","confirmButton","Title","location","isCreationMode","indexRecords","indexLoading","padding","border","tabName","_handleIndex","padded","role","LibraryIcon","event","Number","match","params","_getEditLibraryTabs","libToEdit","getLibsQuery","filesLibraries","RecordSelector","iconNameByBehavior","RecordPreview","image","small","isModalOpen","setIsModalOpen","showDeleteConfirm","setShowDeleteConfirm","_closeDeleteConfirm","_openModal","SelectRecordModal","onSelect"],"sourceRoot":""}