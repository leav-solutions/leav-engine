{"version":3,"file":"static/js/291.d3ff617d.chunk.js","mappings":"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","sources":["_types/trees.ts","components/permissions/PermissionsActionsGroupSelector/PermissionsActionsGroupSelector.tsx","components/permissions/PermissionsActionsGroupSelector/index.ts","components/permissions/DefinePermByUserGroupView/DefinePermByUserGroupView.tsx","components/permissions/DefinePermByUserGroupView/index.ts","components/permissions/DefinePermissionsViewLoadTree/index.ts","components/permissions/DefinePermissionsViewLoadTree/DefinePermissionsViewLoadTree.tsx","queries/permissions/getPermissionsActionsQuery.ts","queries/permissions/getPermissionsQuery.ts","queries/permissions/savePermissionMutation.ts","components/shared/CustomIcon/CustomIcon.tsx","components/shared/CustomIcon/index.ts","components/shared/icons/PermissionsAllowedIcon/PermissionsAllowedIcon.svg","components/shared/icons/PermissionsAllowedIcon/index.ts","components/shared/icons/PermissionsAllowedIcon/PermissionsAllowedIcon.tsx","components/shared/icons/PermissionsForbiddenIcon/PermissionsForbiddenIcon.svg","components/shared/icons/PermissionsForbiddenIcon/index.ts","components/shared/icons/PermissionsForbiddenIcon/PermissionsForbiddenIcon.tsx","components/shared/icons/PermissionsInheritIcon/PermissionsInheritIcon.svg","components/shared/icons/PermissionsInheritIcon/index.ts","components/shared/icons/PermissionsInheritIcon/PermissionsInheritIcon.tsx","components/permissions/EditPermissions/EditPermissionsView/PermissionSelector/PermissionSelector.tsx","components/permissions/EditPermissions/EditPermissionsView/PermissionSelector/index.ts","components/permissions/EditPermissions/EditPermissionsView/EditPermissionsView.tsx","components/permissions/EditPermissions/EditPermissionsView/index.ts","components/permissions/EditPermissions/EditPermissions.tsx","components/permissions/EditPermissions/index.ts","queries/records/createRecordMutation.ts","queries/values/valueDetailsFragment.ts","queries/records/recordDataQuery.ts","queries/values/saveValueBatchMutation.ts","components/records/FormFields/LinksField/LinksFieldElement/LinksFieldElement.tsx","components/records/FormFields/LinksField/LinksFieldElement/index.ts","components/records/FormFields/LinksField/LinksFieldTreeElement/LinksFieldTreeElement.tsx","components/records/FormFields/LinksField/LinksFieldTreeElement/index.ts","components/records/FormFields/LinksField/LinksField.tsx","components/records/FormFields/LinksField/index.ts","components/records/EditRecord/CreateRecordForm/CreateRecordForm.tsx","components/records/EditRecord/CreateRecordForm/CreateRecordFormContainer/CreateRecordFormContainer.tsx","components/records/EditRecord/CreateRecordForm/CreateRecordFormContainer/index.ts","queries/values/deleteValueMutation.ts","queries/values/saveValueMutation.ts","components/records/EditRecord/EditRecordForm/EditRecordForm/StandardValuesWrapper/EditRecordInput/EditRecordInput.tsx","components/records/EditRecord/EditRecordForm/EditRecordForm/StandardValuesWrapper/StandardValuesReducer.ts","components/records/EditRecord/EditRecordForm/EditRecordForm/StandardValuesWrapper/EditRecordInput/index.ts","components/records/EditRecord/EditRecordForm/EditRecordForm/StandardValuesWrapper/StandardValuesWrapper.tsx","components/records/EditRecord/EditRecordForm/EditRecordForm/StandardValuesWrapper/index.ts","components/records/EditRecord/EditRecordForm/EditRecordForm/index.ts","components/records/EditRecord/EditRecordForm/EditRecordForm/EditRecordForm.tsx","components/records/EditRecord/EditRecordForm/EditRecordFormContainer.tsx","components/records/EditRecord/EditRecordForm/index.ts","components/records/EditRecord/EditRecord.tsx","components/records/EditRecordModal/index.ts","components/records/EditRecordModal/EditRecordModal.tsx","components/navigator/RootSelector.tsx","components/navigator/NavigatorReducer.ts","webpack://admin/./src/components/navigator/FiltersPanel.module.css?d044","components/navigator/FiltersPanel.tsx","webpack://admin/./src/components/navigator/MainPanel.module.css?ca1a","components/navigator/ListPanel.tsx","components/navigator/TopPanel.tsx","components/navigator/MainPanel.tsx","components/navigator/Navigator.tsx","components/navigator/index.ts","components/records/SelectRecordModal/SelectRecordModal.tsx","components/records/SelectRecordModal/index.ts","components/shared/ColumnsDisplay/ColumnsDisplay.tsx","components/shared/ColumnsDisplay/index.ts","components/shared/FormFieldWrapper/FormFieldWrapper.tsx","components/shared/FormFieldWrapper/index.ts","components/shared/TreeNodeBreadcrumb/AltPaths/AltPaths.tsx","components/shared/TreeNodeBreadcrumb/AltPaths/index.ts","components/shared/TreeNodeBreadcrumb/PathPart/PathPart.tsx","components/shared/TreeNodeBreadcrumb/PathPart/index.ts","components/shared/TreeNodeBreadcrumb/TreeNodeBreadcrumb.tsx","components/shared/TreeNodeBreadcrumb/index.ts","components/trees/SelectTreeNodeModal/index.ts","components/trees/SelectTreeNodeModal/SelectTreeNodeModal.tsx","queries/trees/treeNodeChildrenQuery.ts","queries/trees/treeAddElementMutation.ts","queries/trees/treeDeleteElementMutation.ts","queries/trees/treeMoveElementMutation.ts","components/trees/TreeExplorer/TreeExplorerView/TreeExplorerView.tsx","components/trees/TreeExplorer/TreeExplorerView/index.ts","components/trees/TreeExplorer/TreeExplorer.tsx","components/trees/TreeExplorer/index.ts","queries/attributes/attributeFragments.ts","queries/libraries/getLibrariesQuery.ts","queries/libraries/getLibraryById.ts","queries/libraries/libraryDetailsFragment.ts","queries/records/recordsListQuery.ts","queries/trees/getTreeById.ts"],"sourcesContent":["// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {ExtendedNodeData, NodeData, TreeItem} from 'react-sortable-tree';\n\nexport interface ITreeNode extends TreeItem {\n    id: string;\n}\n\nexport interface ITreeNodeData extends NodeData {\n    node: ITreeNode;\n}\n\nexport type IExtendedTreeNodeData = ExtendedNodeData &\n    ITreeNodeData & {\n        parentNode: ITreeNode;\n    };\n\nexport const fakeRootId = 'root';\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport React from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {Header, List, ListItemProps} from 'semantic-ui-react';\nimport styled from 'styled-components';\nimport {PermissionTypes} from '_gqlTypes/globalTypes';\nimport {IGroupedPermissionsActions} from '_types/permissions';\n\ninterface IPermissionsActionsGroupSelectorProps {\n    actions: IGroupedPermissionsActions;\n    type: PermissionTypes;\n    selectedGroup: string;\n    onSelect: (selectedGroup: string) => void;\n}\n\n// Add a wrapper to avoid to pass down the \"isSelected\" prop to the List.Item\nconst ListItem = styled(({isSelected, ...rest}: {isSelected: boolean} & ListItemProps) => <List.Item {...rest} />)`\n    &&&&& {\n        background-color: ${props => (props.isSelected ? '#DEF4FF' : 'none')};\n        text-align: left;\n        margin: 0.5em 0;\n        border: 1px solid #ddd;\n        border-radius: 3px;\n\n        :hover {\n            background-color: ${props => (props.isSelected ? '#DEF4FF' : 'none')};\n        }\n    }\n`;\n\nfunction PermissionsActionsGroupSelector({\n    actions,\n    type,\n    selectedGroup,\n    onSelect\n}: IPermissionsActionsGroupSelectorProps): JSX.Element {\n    const {t} = useTranslation();\n\n    const _handleItemClick = (groupName: string) => () => onSelect(groupName);\n\n    return (\n        <>\n            <Header as=\"h4\">{t(`permissions.type.${type}`)}</Header>\n            <List selection relaxed>\n                {Object.keys(actions).map(groupName => (\n                    <ListItem\n                        key={groupName}\n                        onClick={_handleItemClick(groupName)}\n                        isSelected={groupName === selectedGroup}\n                    >\n                        <List.Content>{t(`permissions.group.${groupName}`)}</List.Content>\n                    </ListItem>\n                ))}\n            </List>\n        </>\n    );\n}\n\nexport default PermissionsActionsGroupSelector;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport PermissionsActionsGroupSelector from './PermissionsActionsGroupSelector';\nexport default PermissionsActionsGroupSelector;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport React, {useState} from 'react';\nimport {IGroupedPermissionsActions} from '_types/permissions';\nimport {fakeRootId, ITreeNodeData} from '_types/trees';\nimport {getTreeNodeKey} from '../../../utils/utils';\nimport {PermissionTypes} from '../../../_gqlTypes/globalTypes';\nimport ColumnsDisplay from '../../shared/ColumnsDisplay';\nimport DefinePermissionsViewLoadTree from '../DefinePermissionsViewLoadTree';\nimport EditPermissions from '../EditPermissions';\nimport PermissionsActionsGroupSelector from '../PermissionsActionsGroupSelector';\n\ninterface IDefinePermByUserGroupViewProps {\n    applyTo?: string;\n    readOnly?: boolean;\n    type: PermissionTypes;\n    actions?: IGroupedPermissionsActions;\n}\n\nfunction DefinePermByUserGroupView({applyTo, readOnly, type, actions}: IDefinePermByUserGroupViewProps): JSX.Element {\n    const usersGroupsTreeId = 'users_groups';\n\n    const [selectedGroupNode, setSelectedGroupNode] = useState<ITreeNodeData | null>({\n        node: {id: fakeRootId},\n        path: [],\n        treeIndex: 0\n    });\n\n    // Select first group by default\n    const [selectedPermissionsGroup, setSelectedPermissionsGroup] = useState<string>(\n        actions ? Object.keys(actions)[0] : null\n    );\n\n    const _selectGroupNode = (nodeData: ITreeNodeData) =>\n        setSelectedGroupNode(getTreeNodeKey(nodeData) !== getTreeNodeKey(selectedGroupNode) ? nodeData : null);\n\n    const maxColsCount = actions ? 3 : 2;\n    const cols = [];\n\n    const _handleSelectPermissionsGroup = (selectedGroup: string) => {\n        setSelectedPermissionsGroup(selectedGroup);\n    };\n\n    if (actions) {\n        cols.push(\n            <PermissionsActionsGroupSelector\n                actions={actions}\n                type={type}\n                selectedGroup={selectedPermissionsGroup}\n                onSelect={_handleSelectPermissionsGroup}\n            />\n        );\n    }\n\n    if (!actions || selectedPermissionsGroup) {\n        cols.push([\n            <DefinePermissionsViewLoadTree\n                key=\"users_groups\"\n                treeId={usersGroupsTreeId}\n                onClick={_selectGroupNode}\n                selectedNode={selectedGroupNode}\n            />\n        ]);\n    }\n\n    if (selectedGroupNode) {\n        cols.push(\n            <EditPermissions\n                permParams={{\n                    type,\n                    actions: actions?.[selectedPermissionsGroup],\n                    applyTo,\n                    usersGroup: selectedGroupNode.node.id !== 'root' ? selectedGroupNode.node.id : null\n                }}\n                readOnly={readOnly}\n            />\n        );\n    }\n\n    return <ColumnsDisplay columnsNumber={maxColsCount} columnsContent={cols} />;\n}\n\nexport default DefinePermByUserGroupView;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport DefinePermByUserGroupView from './DefinePermByUserGroupView';\nexport default DefinePermByUserGroupView;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport DefinePermissionsViewLoadTree from './DefinePermissionsViewLoadTree';\nexport default DefinePermissionsViewLoadTree;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {useQuery} from '@apollo/client';\nimport ErrorDisplay from 'components/shared/ErrorDisplay';\nimport {getTreeByIdQuery} from 'queries/trees/getTreeById';\nimport React from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {Header} from 'semantic-ui-react';\nimport {GET_TREE_BY_ID, GET_TREE_BY_IDVariables} from '_gqlTypes/GET_TREE_BY_ID';\nimport {ITreeNodeData} from '_types/trees';\nimport useLang from '../../../hooks/useLang';\nimport {localizedLabel} from '../../../utils/utils';\nimport Loading from '../../shared/Loading';\nimport TreeExplorer from '../../trees/TreeExplorer';\n\ninterface IDefinePermissionsViewLoadTreeProps {\n    treeId: string;\n    onClick: (nodeData: ITreeNodeData) => void;\n    selectedNode: ITreeNodeData | null;\n}\n\nconst DefinePermissionsViewLoadTree = ({\n    treeId,\n    onClick,\n    selectedNode\n}: IDefinePermissionsViewLoadTreeProps): JSX.Element => {\n    const {t} = useTranslation();\n    const availableLanguages = useLang().lang;\n    const {loading, error, data} = useQuery<GET_TREE_BY_ID, GET_TREE_BY_IDVariables>(getTreeByIdQuery, {\n        variables: {id: treeId}\n    });\n\n    if (loading) {\n        return <Loading />;\n    }\n\n    if (error || !data?.trees) {\n        return <ErrorDisplay message={error.message} />;\n    }\n\n    const treeData = data.trees.list[0];\n    const treeLabel = localizedLabel(treeData.label, availableLanguages);\n\n    return (\n        <>\n            <Header as=\"h4\">{treeLabel}</Header>\n            <TreeExplorer\n                compact\n                key={treeData.id}\n                tree={treeData}\n                onClickNode={onClick}\n                selection={selectedNode ? [selectedNode] : null}\n                readOnly\n                withFakeRoot\n                fakeRootLabel={t('permissions.any_entity', {\n                    entityName: treeLabel,\n                    interpolation: {escapeValue: false}\n                })}\n            />\n        </>\n    );\n};\n\nexport default DefinePermissionsViewLoadTree;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport gql from 'graphql-tag';\n\nexport const getPermissionsActionsQuery = gql`\n    query GET_PERMISSIONS_ACTIONS($type: PermissionTypes!, $applyOn: String) {\n        permissionsActionsByType(type: $type, applyOn: $applyOn) {\n            name\n            label\n        }\n    }\n`;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport gql from 'graphql-tag';\n\nexport const getPermissionsQuery = gql`\n    query GET_PERMISSIONS(\n        $type: PermissionTypes!\n        $applyTo: ID\n        $actions: [PermissionsActions!]!\n        $usersGroup: ID\n        $permissionTreeTarget: PermissionsTreeTargetInput\n    ) {\n        perm: permissions(\n            type: $type\n            applyTo: $applyTo\n            actions: $actions\n            usersGroup: $usersGroup\n            permissionTreeTarget: $permissionTreeTarget\n        ) {\n            name\n            allowed\n        }\n        inheritPerm: inheritedPermissions(\n            type: $type\n            applyTo: $applyTo\n            actions: $actions\n            userGroupNodeId: $usersGroup\n            permissionTreeTarget: $permissionTreeTarget\n        ) {\n            name\n            allowed\n        }\n    }\n`;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport gql from 'graphql-tag';\n\nexport const savePermissionsQuery = gql`\n    mutation SAVE_PERMISSION($permData: PermissionInput!) {\n        savePermission(permission: $permData) {\n            type\n            applyTo\n            usersGroup\n            actions {\n                name\n                allowed\n            }\n            permissionTreeTarget {\n                nodeId\n                tree\n            }\n        }\n    }\n`;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport React from 'react';\nimport styled from 'styled-components';\n\nexport interface ICustomIconProps {\n    svg: string;\n    label?: string;\n    size?: string;\n    style?: React.CSSProperties;\n}\n\nconst CustomImg = styled.img<{size?: string}>`\n    transform: translate(0px, -1px) scale(1.5);\n    width: ${props => props?.size ?? '1em'};\n`;\n\nfunction CustomIcon({svg, label, size, style}: ICustomIconProps): JSX.Element {\n    return (\n        <div style={{width: size, height: size, display: 'inline-block', ...style}}>\n            <CustomImg src={svg} alt={label} size={size} />\n        </div>\n    );\n}\n\nexport default CustomIcon;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport CustomIcon from './CustomIcon';\nexport default CustomIcon;","var _defs, _path, _path2, _path3, _circle, _circle2;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgPermissionsAllowedIcon(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Calque_1\",\n    \"data-name\": \"Calque 1\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 36.96 36.96\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"style\", null, \".cls-1{fill:#3aaa35;}\"))), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M21.24,2.59a18.48,18.48,0,1,0,18.5,18.48A18.48,18.48,0,0,0,21.24,2.59Z\",\n    transform: \"translate(-2.78 -2.59)\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    className: \"cls-1\",\n    d: \"M21.26,35.86A14.79,14.79,0,1,1,36,21.07h0A14.78,14.78,0,0,1,21.27,35.86Z\",\n    transform: \"translate(-2.78 -2.59)\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M21.24,31.58a10.15,10.15,0,0,0,9.47-6.46H27.62a7.36,7.36,0,0,1-12.75,0H11.79a10.14,10.14,0,0,0,9.46,6.46Z\",\n    transform: \"translate(-2.78 -2.59)\"\n  })), _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    id: \"Ellipse_31\",\n    \"data-name\": \"Ellipse 31\",\n    cx: 24.88,\n    cy: 13.87,\n    r: 3\n  })), _circle2 || (_circle2 = /*#__PURE__*/React.createElement(\"circle\", {\n    id: \"Ellipse_32\",\n    \"data-name\": \"Ellipse 32\",\n    cx: 11.88,\n    cy: 13.87,\n    r: 3\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPermissionsAllowedIcon);\nexport default __webpack_public_path__ + \"static/media/PermissionsAllowedIcon.dfca86616d4fa8c2b789273f9d065a54.svg\";\nexport { ForwardRef as ReactComponent };","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport PermissionsAllowedIcon from './PermissionsAllowedIcon';\nexport default PermissionsAllowedIcon;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport React from 'react';\nimport CustomIcon from '../../CustomIcon';\nimport IconSvg from './PermissionsAllowedIcon.svg';\n\nconst PermissionsAllowedIcon = () => {\n    return <CustomIcon svg={IconSvg} label=\"permissions allowed\" />;\n};\n\nexport default PermissionsAllowedIcon;\n","var _defs, _path, _path2, _path3, _circle, _circle2;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgPermissionsForbiddenIcon(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Calque_1\",\n    \"data-name\": \"Calque 1\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 36.96 36.96\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"style\", null, \".cls-1{fill:#e30613;}\"))), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M21.24,2.59a18.48,18.48,0,1,0,18.5,18.48A18.48,18.48,0,0,0,21.24,2.59Z\",\n    transform: \"translate(-2.78 -2.59)\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    className: \"cls-1\",\n    d: \"M21.26,35.86A14.79,14.79,0,1,1,36,21.07h0A14.78,14.78,0,0,1,21.27,35.86Z\",\n    transform: \"translate(-2.78 -2.59)\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M21.25,24.12a10.14,10.14,0,0,0-9.46,6.46h3.08a7.36,7.36,0,0,1,12.75,0h3.09a10.15,10.15,0,0,0-9.47-6.46Z\",\n    transform: \"translate(-2.78 -2.59)\"\n  })), _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    id: \"Ellipse_31\",\n    \"data-name\": \"Ellipse 31\",\n    cx: 24.88,\n    cy: 13.87,\n    r: 3\n  })), _circle2 || (_circle2 = /*#__PURE__*/React.createElement(\"circle\", {\n    id: \"Ellipse_32\",\n    \"data-name\": \"Ellipse 32\",\n    cx: 11.88,\n    cy: 13.87,\n    r: 3\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPermissionsForbiddenIcon);\nexport default __webpack_public_path__ + \"static/media/PermissionsForbiddenIcon.0a25cc0d325b292d7c28b4fc52cee7ec.svg\";\nexport { ForwardRef as ReactComponent };","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport PermissionsForbiddenIcon from './PermissionsForbiddenIcon';\nexport default PermissionsForbiddenIcon;","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport React from 'react';\nimport CustomIcon from '../../CustomIcon';\nimport IconSvg from './PermissionsForbiddenIcon.svg';\n\nconst PermissionsForbiddenIcon = () => {\n    return <CustomIcon svg={IconSvg} label=\"permissions allowed\" />;\n};\n\nexport default PermissionsForbiddenIcon;\n","var _defs, _path, _path2, _rect, _polygon;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgPermissionsInheritIcon(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Calque_1\",\n    \"data-name\": \"Calque 1\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 36.96 36.96\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"style\", null, \".cls-1{fill:#f6f6f6;}\"))), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M21.33,3a18.48,18.48,0,1,0,18.5,18.48A18.48,18.48,0,0,0,21.33,3Z\",\n    transform: \"translate(-2.87 -2.98)\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    className: \"cls-1\",\n    d: \"M21.26,36.24A14.79,14.79,0,1,1,36,21.46h0A14.77,14.77,0,0,1,21.27,36.24Z\",\n    transform: \"translate(-2.87 -2.98)\"\n  })), _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 10.8,\n    y: 25.83,\n    width: 15.36,\n    height: 2.56\n  })), _polygon || (_polygon = /*#__PURE__*/React.createElement(\"polygon\", {\n    points: \"24.88 16.87 20.99 16.87 20.99 8.57 15.87 8.57 15.87 16.87 12.08 16.87 18.48 23.91 24.88 16.87\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPermissionsInheritIcon);\nexport default __webpack_public_path__ + \"static/media/PermissionsInheritIcon.9fe2c684b2548cadf2231120c9668797.svg\";\nexport { ForwardRef as ReactComponent };","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport PermissionsInheritIcon from './PermissionsInheritIcon';\nexport default PermissionsInheritIcon;","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport React from 'react';\nimport CustomIcon from '../../CustomIcon';\nimport IconSvg from './PermissionsInheritIcon.svg';\n\nconst PermissionsInheritIcon = () => {\n    return <CustomIcon svg={IconSvg} label=\"permissions allowed\" />;\n};\n\nexport default PermissionsInheritIcon;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport Loading from 'components/shared/Loading';\nimport hexToRgba from 'hex-rgba';\nimport React from 'react';\nimport {Input, InputOnChangeData} from 'semantic-ui-react';\n\ninterface IPermissionSelectorProps {\n    value: boolean | null;\n    inheritValue: boolean;\n    onChange: (permValue: boolean | null) => Promise<void>;\n    as: any;\n    forbiddenColor: string;\n    allowedColor: string;\n    readOnly?: boolean;\n}\n\nfunction PermissionSelector({\n    value,\n    inheritValue,\n    as,\n    onChange,\n    forbiddenColor,\n    allowedColor,\n    readOnly\n}: IPermissionSelectorProps): JSX.Element {\n    const [isLoading, setIsLoading] = React.useState(false);\n    const permValToInputVal = permVal => (permVal === false ? 0 : permVal === null ? 1 : 2);\n    const inputValToPermVal = {\n        0: false,\n        1: null,\n        2: true\n    };\n\n    const bgColors = {\n        0: forbiddenColor,\n        1: '#FFFFFF',\n        2: allowedColor\n    };\n\n    const inputVal = permValToInputVal(value);\n    const bgColor = value !== null ? bgColors[inputVal] : hexToRgba(bgColors[permValToInputVal(inheritValue)], 40);\n\n    const Wrapper = as;\n    Wrapper.displayName = 'Wrapper';\n\n    const _handleChange = async (e: React.ChangeEvent, data: InputOnChangeData) => {\n        setIsLoading(true);\n\n        await onChange(inputValToPermVal[data.value]);\n\n        setIsLoading(false);\n    };\n\n    return (\n        <Wrapper style={{background: bgColor}}>\n            {isLoading ? (\n                <Loading size=\"tiny\" withLabel={false} />\n            ) : (\n                <Input\n                    aria-label=\"permission-selector\"\n                    type=\"range\"\n                    min=\"0\"\n                    max=\"2\"\n                    step=\"1\"\n                    value={inputVal}\n                    disabled={readOnly}\n                    style={{border: 'none'}}\n                    onChange={_handleChange}\n                    transparent\n                    fluid\n                />\n            )}\n        </Wrapper>\n    );\n}\nPermissionSelector.defaultProps = {\n    readOnly: false\n};\n\nexport default PermissionSelector;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport PermissionSelector from './PermissionSelector';\nexport default PermissionSelector;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport PermissionsAllowedIcon from 'components/shared/icons/PermissionsAllowedIcon';\nimport PermissionsForbiddenIcon from 'components/shared/icons/PermissionsForbiddenIcon';\nimport PermissionsInheritIcon from 'components/shared/icons/PermissionsInheritIcon';\nimport React from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {Header, Table} from 'semantic-ui-react';\nimport styled from 'styled-components';\nimport useLang from '../../../../hooks/useLang';\nimport {localizedLabel} from '../../../../utils';\nimport {GET_PERMISSIONS_inheritPerm, GET_PERMISSIONS_perm} from '../../../../_gqlTypes/GET_PERMISSIONS';\nimport {GET_PERMISSIONS_ACTIONS_permissionsActionsByType} from '../../../../_gqlTypes/GET_PERMISSIONS_ACTIONS';\nimport {SAVE_PERMISSION_savePermission_actions} from '../../../../_gqlTypes/SAVE_PERMISSION';\nimport {IKeyValue} from '../../../../_types/shared';\nimport PermissionSelector from './PermissionSelector';\n\ninterface IEditPermissionsViewProps {\n    permissions: GET_PERMISSIONS_perm[];\n    actions: GET_PERMISSIONS_ACTIONS_permissionsActionsByType[];\n    inheritedPermissions: GET_PERMISSIONS_inheritPerm[];\n    onChange: (permToSave: SAVE_PERMISSION_savePermission_actions) => Promise<void>;\n    readOnly?: boolean;\n}\n\nconst permissionForbiddenColor = '#FF0000';\nconst permissionAllowedColor = '#99cc00';\n\nconst PermissionsHeader = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n`;\n\nconst EditPermissionsView = ({\n    permissions,\n    actions,\n    inheritedPermissions,\n    onChange,\n    readOnly = false\n}: IEditPermissionsViewProps): JSX.Element => {\n    const {t} = useTranslation();\n    const {lang} = useLang();\n    const permissionsByName: IKeyValue<boolean | null> = permissions.reduce(\n        (perms, perm) => ({\n            ...perms,\n            [perm.name]: perm.allowed\n        }),\n        {}\n    );\n\n    const heritPermByName: IKeyValue<boolean> = inheritedPermissions.reduce(\n        (heritPerms, p) => ({...heritPerms, [p.name]: p.allowed}),\n        {}\n    );\n\n    return (\n        <>\n            <Header as=\"h4\">{t('permissions.permission_col_name')}</Header>\n            <Table celled>\n                <Table.Header>\n                    <Table.Row>\n                        <Table.HeaderCell width={10}></Table.HeaderCell>\n                        <Table.HeaderCell width={6}>\n                            <PermissionsHeader>\n                                <PermissionsForbiddenIcon />\n                                <PermissionsInheritIcon />\n                                <PermissionsAllowedIcon />\n                            </PermissionsHeader>\n                        </Table.HeaderCell>\n                    </Table.Row>\n                </Table.Header>\n                <Table.Body>\n                    {actions.map(a => {\n                        if (typeof permissionsByName[a.name] === undefined) {\n                            return null;\n                        }\n\n                        const _onPermUpdate = (permVal: boolean | null) => onChange({name: a.name, allowed: permVal});\n\n                        return (\n                            <Table.Row key={a.name}>\n                                <Table.Cell>\n                                    <p>{localizedLabel(a.label, lang)}</p>\n                                </Table.Cell>\n                                <PermissionSelector\n                                    as={Table.Cell}\n                                    value={permissionsByName[a.name] ?? null}\n                                    inheritValue={heritPermByName[a.name]}\n                                    onChange={_onPermUpdate}\n                                    forbiddenColor={permissionForbiddenColor}\n                                    allowedColor={permissionAllowedColor}\n                                    readOnly={readOnly}\n                                />\n                            </Table.Row>\n                        );\n                    })}\n                </Table.Body>\n            </Table>\n        </>\n    );\n};\n\nexport default EditPermissionsView;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport EditPermissionsView from './EditPermissionsView';\nexport default EditPermissionsView;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {useMutation, useQuery} from '@apollo/client';\nimport React from 'react';\nimport {getPermissionsActionsQuery} from '../../../queries/permissions/getPermissionsActionsQuery';\nimport {getPermissionsQuery} from '../../../queries/permissions/getPermissionsQuery';\nimport {savePermissionsQuery} from '../../../queries/permissions/savePermissionMutation';\nimport {GET_PERMISSIONS, GET_PERMISSIONSVariables} from '../../../_gqlTypes/GET_PERMISSIONS';\nimport {GET_PERMISSIONS_ACTIONS, GET_PERMISSIONS_ACTIONSVariables} from '../../../_gqlTypes/GET_PERMISSIONS_ACTIONS';\nimport {PermissionsActions, PermissionsTreeTargetInput, PermissionTypes} from '../../../_gqlTypes/globalTypes';\nimport {\n    SAVE_PERMISSION,\n    SAVE_PERMISSIONVariables,\n    SAVE_PERMISSION_savePermission_actions\n} from '../../../_gqlTypes/SAVE_PERMISSION';\nimport Loading from '../../shared/Loading';\nimport EditPermissionsView from './EditPermissionsView';\n\ninterface IEditPermissionParams {\n    type: PermissionTypes;\n    applyTo?: string | null;\n    usersGroup?: string | null;\n    permissionTreeTarget?: PermissionsTreeTargetInput | null;\n    actions?: PermissionsActions[];\n}\n\ninterface IEditPermissionsProps {\n    permParams: IEditPermissionParams;\n    readOnly?: boolean;\n}\n\nconst EditPermissions = ({permParams, readOnly = false}: IEditPermissionsProps): JSX.Element => {\n    const {loading: loadingActions, error: errorActions, data: dataActions} = useQuery<\n        GET_PERMISSIONS_ACTIONS,\n        GET_PERMISSIONS_ACTIONSVariables\n    >(getPermissionsActionsQuery, {\n        variables: {type: permParams.type, applyOn: permParams.applyTo},\n        fetchPolicy: 'network-only',\n        notifyOnNetworkStatusChange: true\n    });\n\n    const actionsToEdit = (dataActions?.permissionsActionsByType ?? []).filter(\n        p => !permParams.actions || permParams.actions?.includes(p.name)\n    );\n\n    const getPermsVariables = {...permParams, actions: actionsToEdit.map(a => a.name)};\n\n    const {loading, error, data} = useQuery<GET_PERMISSIONS, GET_PERMISSIONSVariables>(getPermissionsQuery, {\n        variables: getPermsVariables,\n        fetchPolicy: 'network-only',\n        notifyOnNetworkStatusChange: true,\n        skip: !dataActions\n    });\n\n    const [savePerms] = useMutation<SAVE_PERMISSION, SAVE_PERMISSIONVariables>(savePermissionsQuery);\n\n    if (loadingActions || loading) {\n        return <Loading />;\n    }\n\n    if (error || errorActions || !(data?.perm && data?.inheritPerm)) {\n        return (\n            <div className=\"error\" data-test-id=\"error\">\n                Error fetching permissions {errorActions?.toString()} {error?.toString()}\n            </div>\n        );\n    }\n\n    const _onSave = async (permToSave: SAVE_PERMISSION_savePermission_actions) => {\n        await savePerms({\n            variables: {\n                permData: {\n                    ...permParams,\n                    actions: [permToSave]\n                }\n            },\n            refetchQueries: [{query: getPermissionsQuery, variables: getPermsVariables}]\n        });\n    };\n\n    return (\n        <EditPermissionsView\n            onChange={_onSave}\n            actions={actionsToEdit}\n            permissions={data.perm}\n            inheritedPermissions={data.inheritPerm}\n            readOnly={readOnly}\n        />\n    );\n};\n\nexport default EditPermissions;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport EditPermissions from './EditPermissions';\nexport default EditPermissions;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport gql from 'graphql-tag';\nimport {recordIdentityFragment} from './recordIdentityFragment';\n\nexport const createRecordQuery = gql`\n    ${recordIdentityFragment}\n    mutation CREATE_RECORD($library: ID!) {\n        createRecord(library: $library) {\n            id\n            ...RecordIdentity\n        }\n    }\n`;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport gql from 'graphql-tag';\n\nexport const valueDetailsFragment = gql`\n    fragment ValueDetails on GenericValue {\n        id_value\n        created_at\n        modified_at\n        version {\n            treeId\n            treeNode {\n                id\n                record {\n                    id\n                    whoAmI {\n                        id\n                        label\n                        library {\n                            id\n                        }\n                    }\n                }\n            }\n        }\n        metadata {\n            name\n            value {\n                value\n                raw_value\n            }\n        }\n\n        ... on Value {\n            value\n            raw_value\n        }\n\n        ... on LinkValue {\n            linkValue: value {\n                ...RecordIdentity\n            }\n        }\n\n        ... on TreeValue {\n            treeValue: value {\n                record {\n                    ...RecordIdentity\n                }\n                ancestors {\n                    record {\n                        ...RecordIdentity\n                    }\n                }\n            }\n        }\n    }\n`;\n\nexport const valueDetailsExtendedFragment = gql`\n    fragment ValueDetailsExtended on GenericValue {\n        id_value\n        created_at\n        modified_at\n        version {\n            treeId\n            treeNode {\n                id\n                record {\n                    id\n                    whoAmI {\n                        id\n                        label\n                        library {\n                            id\n                        }\n                    }\n                }\n            }\n        }\n        metadata {\n            name\n            value {\n                value\n                raw_value\n            }\n        }\n\n        ... on Value {\n            id_value\n        }\n\n        ... on LinkValue {\n            linkValue: value {\n                ...RecordIdentity\n            }\n        }\n\n        ... on TreeValue {\n            treeValue: value {\n                record {\n                    ...RecordIdentity\n                }\n                ancestors {\n                    record {\n                        ...RecordIdentity\n                    }\n                }\n            }\n        }\n    }\n`;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {gqlUnchecked} from '../../utils';\nimport {GET_LIB_BY_ID_libraries_list, GET_LIB_BY_ID_libraries_list_attributes} from '../../_gqlTypes/GET_LIB_BY_ID';\nimport {AttributeFormat} from '../../_gqlTypes/globalTypes';\nimport {valueDetailsExtendedFragment, valueDetailsFragment} from '../values/valueDetailsFragment';\nimport {recordIdentityFragment} from './recordIdentityFragment';\n\nconst _getAttributeValueQuery = (attribute: GET_LIB_BY_ID_libraries_list_attributes) => {\n    const fieldName = attribute.id;\n\n    let fullQuery: string;\n    switch (attribute.format) {\n        case AttributeFormat.extended:\n            fullQuery = `${fieldName}: property(attribute: \"${fieldName}\") { ...ValueDetailsExtended }`;\n            break;\n        case AttributeFormat.text:\n        default:\n            fullQuery = `${fieldName}: property(attribute: \"${fieldName}\") { ...ValueDetails }`;\n            break;\n    }\n    return fullQuery;\n};\n\nexport function getRecordDataQuery(\n    library: GET_LIB_BY_ID_libraries_list,\n    attributes: GET_LIB_BY_ID_libraries_list_attributes[]\n) {\n    const detailsExtendedFragment = attributes.find(a => a.format === AttributeFormat.extended)\n        ? valueDetailsExtendedFragment\n        : '';\n\n    return gqlUnchecked`\n        ${recordIdentityFragment}\n        ${valueDetailsFragment}\n        ${detailsExtendedFragment}\n\n        query ${`RECORD_DATA_${library.id}`}($id: String!, $version: [ValueVersionInput]) {\n            record: ${library.gqlNames.query}(filters: {field: \"id\", condition: EQUAL, value: $id}, version: $version) {\n                list {\n                    ...RecordIdentity\n                    ${attributes.map(_getAttributeValueQuery)}\n                }\n            }\n        }\n    `;\n}\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport gql from 'graphql-tag';\nimport {recordIdentityFragment} from 'queries/records/recordIdentityFragment';\n\nexport const saveValueBatchQuery = gql`\n    ${recordIdentityFragment}\n    mutation SAVE_VALUE_BATCH(\n        $library: ID!\n        $recordId: ID!\n        $version: [ValueVersionInput!]\n        $values: [ValueBatchInput!]!\n    ) {\n        saveValueBatch(library: $library, recordId: $recordId, version: $version, values: $values) {\n            values {\n                id_value\n                modified_at\n                created_at\n                version {\n                    treeId\n                    treeNode {\n                        id\n                        record {\n                            id\n                            whoAmI {\n                                id\n                                label\n                                library {\n                                    id\n                                }\n                            }\n                        }\n                    }\n                }\n                attribute {\n                    id\n                }\n\n                ... on Value {\n                    value\n                    raw_value\n                }\n\n                ... on LinkValue {\n                    linkValue: value {\n                        ...RecordIdentity\n                    }\n                }\n\n                ... on TreeValue {\n                    treeValue: value {\n                        record {\n                            ...RecordIdentity\n                        }\n\n                        ancestors {\n                            record {\n                                ...RecordIdentity\n                            }\n                        }\n                    }\n                }\n            }\n            errors {\n                type\n                attribute\n                input\n                message\n            }\n        }\n    }\n`;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport React, {useState} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {Confirm, Icon, Menu, Table} from 'semantic-ui-react';\nimport styled from 'styled-components';\nimport {ILinkValue} from '../../../../../_types/records';\nimport RecordCard from '../../../../shared/RecordCard';\nimport EditRecordModal from '../../../EditRecordModal';\n\ninterface ILinksFieldElementProps {\n    value: ILinkValue;\n    onDeleteLink: (value: ILinkValue) => void;\n    readonly?: boolean;\n}\n\nconst Row = styled(Table.Row)`\n    position: relative;\n    padding: 0;\n`;\n\nconst HoverMenu = styled(Menu)`\n    &&& {\n        position: absolute;\n        background: none;\n        box-shadow: 0 0 40px 20px #444 inset;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        margin: 0;\n        border-radius: 0;\n    }\n`;\n\nconst LinksFieldElement = ({value, onDeleteLink, readonly = false}: ILinksFieldElementProps): JSX.Element => {\n    const {t} = useTranslation();\n    const [isHovering, setIsHovering] = useState<boolean>(false);\n    const [openDeleteConfirm, setOpenDeleteConfirm] = useState<boolean>(false);\n    const [showModal, setShowModal] = useState<boolean>(false);\n\n    const _handleMouseEnter = () => setIsHovering(true);\n    const _handleMouseLeave = () => setIsHovering(false);\n\n    const _openEditRecord = () => setShowModal(true);\n    const _closeEditRecord = () => setShowModal(false);\n\n    const _handleOpenDeleteConfirm = () => setOpenDeleteConfirm(true);\n    const _handleCloseDeleteConfirm = () => setOpenDeleteConfirm(false);\n\n    const _handleDelete = () => onDeleteLink(value);\n\n    return (\n        <>\n            {value.linkValue && (\n                <>\n                    <Row\n                        data-test-id=\"link_element_wrapper\"\n                        key={`${value.id_value}_${value.linkValue.whoAmI.id}`}\n                        onMouseEnter={_handleMouseEnter}\n                        onMouseLeave={_handleMouseLeave}\n                        style={{position: 'relative'}}\n                        className=\"my_row\"\n                    >\n                        <Table.Cell style={{position: 'relative'}}>\n                            <RecordCard record={value.linkValue.whoAmI} />\n                            {isHovering && (\n                                <HoverMenu data-test-id=\"link_element_hover_menu\" size=\"small\" inverted>\n                                    <Menu.Item data-test-id=\"edit_record_btn\" size=\"big\" onClick={_openEditRecord}>\n                                        <Icon name=\"edit outline\" size=\"large\" />\n                                        {t('records.edit')}\n                                    </Menu.Item>\n                                    {!readonly && (\n                                        <Menu.Item\n                                            data-test-id=\"delete_link_btn\"\n                                            size=\"big\"\n                                            onClick={_handleOpenDeleteConfirm}\n                                        >\n                                            <Icon name=\"trash alternate\" size=\"large\" />\n                                            {t('records.delete_link')}\n                                        </Menu.Item>\n                                    )}\n                                </HoverMenu>\n                            )}\n                        </Table.Cell>\n                    </Row>\n                    <EditRecordModal\n                        open={showModal}\n                        onClose={_closeEditRecord}\n                        recordId={value.linkValue.whoAmI.id}\n                        library={value.linkValue.whoAmI.library.id}\n                    />\n                    {!readonly && (\n                        <Confirm\n                            data-test-id=\"delete_confirm_modal\"\n                            open={openDeleteConfirm}\n                            onCancel={_handleCloseDeleteConfirm}\n                            onConfirm={_handleDelete}\n                            content={t('records.delete_confirm')}\n                        />\n                    )}\n                </>\n            )}\n        </>\n    );\n};\n\nexport default LinksFieldElement;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport LinksFieldElement from './LinksFieldElement';\nexport default LinksFieldElement;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport React, {useState} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {Table} from 'semantic-ui-react';\nimport {RecordIdentity_whoAmI} from '../../../../../_gqlTypes/RecordIdentity';\nimport {ITreeLinkValue} from '../../../../../_types/records';\nimport TreeNodeBreadcrumb from '../../../../shared/TreeNodeBreadcrumb';\nimport {ITreeBreadcrumbMenuItem} from '../../../../shared/TreeNodeBreadcrumb/TreeNodeBreadcrumb';\nimport EditRecordModal from '../../../EditRecordModal';\n\ninterface ILinksFieldTreeElementProps {\n    value: ITreeLinkValue;\n    readOnly?: boolean;\n    onDeleteLink: (value: ITreeLinkValue) => void;\n}\n\nfunction LinksFieldTreeElement({value, readOnly, onDeleteLink}: ILinksFieldTreeElementProps): JSX.Element {\n    const {t} = useTranslation();\n\n    const _handleDeleteLink = () => onDeleteLink(value);\n    const [isOpenEditRecordModal, setIsOpenEditRecordModal] = useState<boolean>(false);\n    const [editedRecord, setEditedRecord] = useState<RecordIdentity_whoAmI | null>(null);\n\n    const _handleOpenEditRecordModal = (r: RecordIdentity_whoAmI) => {\n        setEditedRecord(r);\n        setIsOpenEditRecordModal(true);\n    };\n    const _handleCloseEditRecordModal = () => setIsOpenEditRecordModal(false);\n\n    if (!value.treeValue) {\n        return (\n            <Table.Row>\n                <Table.Cell>Invalid value</Table.Cell>\n            </Table.Row>\n        );\n    }\n\n    const actions: ITreeBreadcrumbMenuItem[] = [\n        {\n            text: t('records.edit'),\n            icon: 'edit outline',\n            action: _handleOpenEditRecordModal\n        }\n    ];\n\n    if (!readOnly) {\n        actions.push({\n            text: t('records.delete_link'),\n            icon: 'trash alternate outline',\n            action: _handleDeleteLink,\n            displayFilter: (r: RecordIdentity_whoAmI) => r.id === value.treeValue?.record.whoAmI.id\n        });\n    }\n\n    return (\n        <>\n            <Table.Row>\n                <Table.Cell>\n                    <TreeNodeBreadcrumb element={value.treeValue} actions={actions} />\n                </Table.Cell>\n            </Table.Row>\n            {isOpenEditRecordModal && !!editedRecord && (\n                <EditRecordModal\n                    library={editedRecord!.library.id}\n                    recordId={editedRecord!.id}\n                    open={isOpenEditRecordModal}\n                    onClose={_handleCloseEditRecordModal}\n                />\n            )}\n        </>\n    );\n}\n\nexport default LinksFieldTreeElement;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport LinksFieldTreeElement from './LinksFieldTreeElement';\nexport default LinksFieldTreeElement;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport React, {useState} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {TreeItem} from 'react-sortable-tree';\nimport {Button, Dropdown, Table} from 'semantic-ui-react';\nimport styled from 'styled-components';\nimport useLang from '../../../../hooks/useLang';\nimport {isLinkAttribute, isLinkValue, isTreeAttribute, isTreeValue, localizedLabel} from '../../../../utils';\nimport {GET_LIB_BY_ID_libraries_list_attributes} from '../../../../_gqlTypes/GET_LIB_BY_ID';\nimport {AttributeType} from '../../../../_gqlTypes/globalTypes';\nimport {RecordIdentity_whoAmI} from '../../../../_gqlTypes/RecordIdentity';\nimport {FormLinksAllowedValues, ILinkValue, ITreeLinkValue} from '../../../../_types/records';\nimport SelectTreeNodeModal from '../../../trees/SelectTreeNodeModal';\nimport EditRecordModal from '../../EditRecordModal';\nimport SelectRecordModal from '../../SelectRecordModal';\nimport LinksFieldElement from './LinksFieldElement';\nimport LinksFieldTreeElement from './LinksFieldTreeElement';\n\ninterface IEditRecordFormLinksProps {\n    attribute: GET_LIB_BY_ID_libraries_list_attributes;\n    values: FormLinksAllowedValues[];\n    onChange: (value: ILinkValue | ITreeLinkValue, index: number) => void;\n    readonly?: boolean;\n}\n\nconst ElementsCount = styled.div`\n    float: right;\n`;\n\nconst Wrapper = styled.div`\n    margin-bottom: 1em;\n`;\n\nconst AddButton = styled(Button)`\n    &&& {\n        margin-left: 1em;\n    }\n`;\n\nfunction LinksField({values, attribute, onChange, readonly}: IEditRecordFormLinksProps): JSX.Element {\n    const {t} = useTranslation();\n    const availableLanguages = useLang().lang;\n    const [isOpenSelectRecordModal, setIsOpenSelectRecordModal] = useState<boolean>(false);\n    const [isOpenAddRecordModal, setIsOpenAddRecordModal] = useState<boolean>(false);\n    const [isOpenSelectTreeNodeModal, setIsOpenSelectTreeNodeModal] = useState<boolean>(false);\n    const valuesToDisplay = values.filter(v => v !== null);\n\n    const _onRecordAdded = (record: RecordIdentity_whoAmI) => {\n        onChange(\n            {\n                linkValue: {\n                    id: record.id,\n                    whoAmI: record\n                },\n                id_value: null,\n                modified_at: null,\n                created_at: null,\n                version: null\n            },\n            values.length\n        );\n        _handleCloseSelectRecordModal();\n    };\n\n    const _handleOpenSelectRecordModal = () => setIsOpenSelectRecordModal(true);\n    const _handleCloseSelectRecordModal = () => setIsOpenSelectRecordModal(false);\n    const _handleOpenSelectTreeNodeModal = () => setIsOpenSelectTreeNodeModal(true);\n    const _handleCloseSelectTreeNodeModal = () => setIsOpenSelectTreeNodeModal(false);\n    const _onTreeNodeSelected = ({node}: TreeItem) => {\n        const val: ITreeLinkValue = {\n            treeValue: {\n                id: node.id,\n                record: {whoAmI: node.record.whoAmI},\n                ancestors: node.parents.map(p => ({\n                    record: {\n                        whoAmI: p.record.whoAmI\n                    }\n                }))\n            },\n            id_value: null,\n            modified_at: null,\n            created_at: null,\n            version: null\n        };\n\n        onChange(val, values.length);\n        _handleCloseSelectTreeNodeModal();\n    };\n\n    const _handleOpenAddRecordModal = () => setIsOpenAddRecordModal(true);\n\n    const _handleCloseAddRecordModal = (record?: RecordIdentity_whoAmI) => {\n        if (!!record) {\n            onChange(\n                {\n                    linkValue: {\n                        id: record.id,\n                        whoAmI: record\n                    },\n                    id_value: null,\n                    modified_at: null,\n                    created_at: null,\n                    version: null\n                },\n                values.length\n            );\n        }\n        setIsOpenAddRecordModal(false);\n    };\n\n    const _handleAddValue = e => {\n        if (attribute.type !== AttributeType.tree) {\n            return;\n        }\n        _handleOpenSelectTreeNodeModal();\n    };\n\n    const _handleDeleteLink = index => (valueToDelete: FormLinksAllowedValues) => {\n        onChange(\n            {\n                linkValue: null,\n                id_value: valueToDelete.id_value,\n                modified_at: null,\n                created_at: null,\n                version: null\n            },\n            index\n        );\n    };\n\n    const addValueBtn = (\n        <AddButton\n            type=\"button\"\n            content={t('records.add_value')}\n            icon=\"plus\"\n            compact\n            basic\n            labelPosition=\"left\"\n            onClick={_handleAddValue}\n        />\n    );\n\n    const canAddValue = !readonly && (attribute.multiple_values || !valuesToDisplay.length);\n\n    return (\n        <Wrapper id=\"inputField\">\n            <Table data-test-id=\"link_values\" compact=\"very\">\n                <Table.Header>\n                    <Table.Row>\n                        <Table.HeaderCell>\n                            <label>{localizedLabel(attribute.label, availableLanguages)}</label>\n                            {canAddValue && isLinkAttribute(attribute) && attribute.linked_library && (\n                                <Dropdown trigger={addValueBtn} icon={false}>\n                                    <Dropdown.Menu>\n                                        <Dropdown.Item\n                                            data-test-id=\"add_value_btn\"\n                                            onClick={_handleOpenSelectRecordModal}\n                                            icon=\"search\"\n                                            text={t('records.select_record')}\n                                        />\n                                        <Dropdown.Item\n                                            data-test-id=\"add_value_create_btn\"\n                                            onClick={_handleOpenAddRecordModal}\n                                            icon=\"plus circle\"\n                                            text={t('records.create_record')}\n                                        />\n                                    </Dropdown.Menu>\n                                </Dropdown>\n                            )}\n                            {canAddValue && attribute.type === AttributeType.tree && addValueBtn}\n                            <ElementsCount data-test-id=\"elements_count\">\n                                {t('records.links_elements_count', {count: values ? valuesToDisplay.length : 0})}\n                            </ElementsCount>\n                        </Table.HeaderCell>\n                    </Table.Row>\n                </Table.Header>\n                <Table.Body>\n                    {valuesToDisplay.map((v, i) => {\n                        if (!v || (isLinkValue(v) && !v.linkValue) || (isTreeValue(v) && !v.treeValue)) {\n                            return undefined;\n                        }\n\n                        return isLinkAttribute(attribute) ? (\n                            <LinksFieldElement\n                                value={v as ILinkValue}\n                                key={`${v.id_value}_${(v as ILinkValue).linkValue!.whoAmI.id}`}\n                                onDeleteLink={_handleDeleteLink(i)}\n                                readonly={readonly}\n                            />\n                        ) : (\n                            <LinksFieldTreeElement\n                                key={`${v.id_value}_${(v as ITreeLinkValue).treeValue!.record.whoAmI.id}`}\n                                value={v as ITreeLinkValue}\n                                onDeleteLink={_handleDeleteLink(i)}\n                            />\n                        );\n                    })}\n                </Table.Body>\n            </Table>\n\n            {!readonly && isLinkAttribute(attribute) && attribute.linked_library && (\n                <>\n                    <SelectRecordModal\n                        open={isOpenSelectRecordModal}\n                        library={attribute.linked_library.id}\n                        onSelect={_onRecordAdded}\n                        onClose={_handleCloseSelectRecordModal}\n                    />\n                    {attribute.linked_library && (\n                        <EditRecordModal\n                            library={attribute.linked_library.id}\n                            open={isOpenAddRecordModal}\n                            onClose={_handleCloseAddRecordModal}\n                        />\n                    )}\n                </>\n            )}\n\n            {!readonly && isTreeAttribute(attribute) && attribute.linked_tree && (\n                <SelectTreeNodeModal\n                    open={isOpenSelectTreeNodeModal}\n                    onClose={_handleCloseSelectTreeNodeModal}\n                    tree={attribute.linked_tree.id}\n                    onSelect={_onTreeNodeSelected}\n                />\n            )}\n        </Wrapper>\n    );\n}\n\nexport default LinksField;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport LinksField from './LinksField';\nexport default LinksField;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {Formik} from 'formik';\nimport React, {useEffect, useRef} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {Button, Form, Icon} from 'semantic-ui-react';\nimport useLang from '../../../../hooks/useLang';\nimport {isLinkAttribute, isValueNull, localizedLabel} from '../../../../utils';\nimport {GET_LIB_BY_ID_libraries_list_attributes} from '../../../../_gqlTypes/GET_LIB_BY_ID';\nimport {AttributeType} from '../../../../_gqlTypes/globalTypes';\nimport {SAVE_VALUE_BATCH_saveValueBatch_errors} from '../../../../_gqlTypes/SAVE_VALUE_BATCH';\nimport {IGenericValue, ILinkValue, ITreeLinkValue, IValue, RecordData, RecordEdition} from '../../../../_types/records';\nimport FormFieldWrapper from '../../../shared/FormFieldWrapper';\nimport LinksField from '../../FormFields/LinksField';\n\ninterface ICreateRecordFormProps {\n    attributes: {[attributeId: string]: GET_LIB_BY_ID_libraries_list_attributes};\n    errors?: IEditRecordFormError;\n    onSave: (values: RecordData) => void;\n    setSubmitFuncRef?: RecordEdition.SetSubmitFuncRef;\n    inModal?: boolean;\n}\n\nexport interface IEditRecordFormError {\n    [fieldName: string]: SAVE_VALUE_BATCH_saveValueBatch_errors;\n}\n\nconst _getVirginValue = (attribute): IValue | ILinkValue | ITreeLinkValue => {\n    const baseValue: IGenericValue = {\n        id_value: null,\n        modified_at: null,\n        created_at: null,\n        version: null\n    };\n\n    switch (attribute.type) {\n        case AttributeType.simple_link:\n        case AttributeType.advanced_link:\n            return {...baseValue, linkValue: null};\n        case AttributeType.tree:\n            return {...baseValue, treeValue: null};\n        default:\n            return {...baseValue, value: null, raw_value: null};\n    }\n};\n\nconst CreateRecordForm = ({\n    onSave,\n    attributes,\n    setSubmitFuncRef,\n    errors = {},\n    inModal = false\n}: ICreateRecordFormProps): JSX.Element => {\n    const {t} = useTranslation();\n    const availableLanguages = useLang().lang;\n    const _isAttributeReadOnly = (attribute: GET_LIB_BY_ID_libraries_list_attributes): boolean => {\n        return attribute.system;\n    };\n\n    const submitRef = useRef<RecordEdition.SubmitFunc | null>(null);\n    useEffect(() => {\n        if (!!setSubmitFuncRef) {\n            setSubmitFuncRef(submitRef);\n        }\n    }, [setSubmitFuncRef]);\n\n    const _renderForm = ({values, handleSubmit, setFieldValue}) => {\n        const _handleChange = (e, data) => {\n            const value = data.type === 'checkbox' ? data.checked : data.value;\n            const fieldName: string = data.name;\n\n            // If we're on a multivalues attribute, we need to find the updated value in the array\n            // Otherwise, just update value\n            const newFieldValue = values[fieldName].map((v, i) => {\n                const newVal = i === data['data-index'] ? value : v.value;\n                return {...v, value: newVal};\n            });\n\n            setFieldValue(fieldName, newFieldValue);\n        };\n\n        const _handleLinkChange = (fieldName: string) => (value: ILinkValue | ITreeLinkValue, index) => {\n            let newFieldValue;\n            if (isValueNull(value)) {\n                // Delete value\n                newFieldValue = [...values[fieldName]];\n                newFieldValue = [...newFieldValue.slice(0, index), ...newFieldValue.slice(index + 1)];\n            } else {\n                // Add value\n                newFieldValue = [...values[fieldName], value];\n            }\n\n            setFieldValue(fieldName, newFieldValue);\n        };\n\n        const _addValue = fieldName => () => {\n            const newFieldValues = values[fieldName].map(v => ({...v}));\n            newFieldValues.push({\n                value: '',\n                id_value: null\n            });\n\n            setFieldValue(fieldName, newFieldValues);\n        };\n\n        const _renderValueField = (\n            attr: GET_LIB_BY_ID_libraries_list_attributes,\n            fieldValues: IGenericValue[],\n            readonly: boolean\n        ) => {\n            if (isLinkAttribute(attr, false)) {\n                return (\n                    <LinksField\n                        values={fieldValues as ILinkValue[] | ITreeLinkValue[]}\n                        attribute={attr}\n                        onChange={_handleLinkChange(attr.id)}\n                        readonly={readonly}\n                    />\n                );\n            }\n\n            if (!fieldValues.length) {\n                fieldValues.push({..._getVirginValue(attr)});\n            }\n\n            const attributeLabel = localizedLabel(attr.label, availableLanguages);\n            const canAddValue = !readonly && (attr.multiple_values || !fieldValues.length);\n\n            return (\n                <>\n                    <label style={{display: 'inline'}}>{attributeLabel}</label>\n                    {canAddValue && (\n                        <Button\n                            type=\"button\"\n                            size=\"mini\"\n                            compact\n                            basic\n                            icon\n                            labelPosition=\"right\"\n                            style={{margin: '5px'}}\n                            onClick={_addValue(attr.id)}\n                            data-test-id=\"add_value_btn\"\n                        >\n                            <Icon name=\"plus\" />\n                            {t('records.add_value')}\n                        </Button>\n                    )}\n                    {fieldValues.map((v, i) => {\n                        return (\n                            <Form.Input\n                                key={attr.id + '_' + i}\n                                name={attr.id}\n                                value={(v as IValue)?.value || ''}\n                                data-index={i}\n                                onChange={_handleChange}\n                                disabled={readonly}\n                            />\n                        );\n                    })}\n                </>\n            );\n        };\n\n        submitRef.current = handleSubmit;\n\n        return (\n            <Form onSubmit={handleSubmit}>\n                {Object.keys(attributes).map(attrId => (\n                    <FormFieldWrapper key={attrId} error={errors[attrId]?.message ?? ''}>\n                        {_renderValueField(\n                            attributes[attrId],\n                            values[attrId],\n                            _isAttributeReadOnly(attributes[attrId])\n                        )}\n                    </FormFieldWrapper>\n                ))}\n                {!inModal && (\n                    <Form.Group>\n                        <Form.Button type=\"submit\" positive>\n                            <Icon name=\"checkmark\" /> {t('admin.submit')}\n                        </Form.Button>\n                    </Form.Group>\n                )}\n            </Form>\n        );\n    };\n\n    const initValues = Object.keys(attributes).reduce((allValues, attrId) => {\n        allValues[attrId] = [{..._getVirginValue(attributes[attrId])}];\n\n        return allValues;\n    }, {});\n\n    return <Formik render={_renderForm} initialValues={initValues} onSubmit={onSave} enableReinitialize />;\n};\n\nexport default CreateRecordForm;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {useMutation, useQuery} from '@apollo/client';\nimport {NetworkStatus} from 'apollo-client';\nimport React, {useCallback, useEffect, useMemo, useState} from 'react';\nimport useLang from '../../../../../hooks/useLang';\nimport {createRecordQuery} from '../../../../../queries/records/createRecordMutation';\nimport {getRecordDataQuery} from '../../../../../queries/records/recordDataQuery';\nimport {saveValueBatchQuery} from '../../../../../queries/values/saveValueBatchMutation';\nimport {isValueNull, versionObjToGraphql} from '../../../../../utils';\nimport {CREATE_RECORD, CREATE_RECORDVariables} from '../../../../../_gqlTypes/CREATE_RECORD';\nimport {\n    GET_LIB_BY_ID_libraries_list,\n    GET_LIB_BY_ID_libraries_list_attributes\n} from '../../../../../_gqlTypes/GET_LIB_BY_ID';\nimport {AttributeType, ValueBatchInput} from '../../../../../_gqlTypes/globalTypes';\nimport {RecordIdentity_whoAmI} from '../../../../../_gqlTypes/RecordIdentity';\nimport {SAVE_VALUE_BATCH, SAVE_VALUE_BATCHVariables} from '../../../../../_gqlTypes/SAVE_VALUE_BATCH';\nimport {\n    IGenericValue,\n    IGetRecordData,\n    ILinkValue,\n    ITreeLinkValue,\n    IValue,\n    RecordData,\n    RecordEdition\n} from '../../../../../_types/records';\nimport Loading from '../../../../shared/Loading';\nimport CreateRecordForm from '../CreateRecordForm';\n\ninterface ICreateRecordFormContainerProps {\n    library: GET_LIB_BY_ID_libraries_list;\n    recordId?: string;\n    attributes: GET_LIB_BY_ID_libraries_list_attributes[];\n    valueVersion?: {[treeName: string]: string};\n    onIdentityUpdate?: (identity: RecordIdentity_whoAmI) => void;\n    setSubmitFunc?: RecordEdition.SetSubmitFuncRef;\n    inModal?: boolean;\n    onPostSave?: (record: RecordIdentity_whoAmI) => void;\n}\n\nconst _extractValueToSave = (value: IGenericValue, attribute: GET_LIB_BY_ID_libraries_list_attributes) => {\n    let extractedValue;\n\n    switch (attribute.type) {\n        case AttributeType.advanced_link:\n        case AttributeType.simple_link:\n            extractedValue =\n                (value as ILinkValue).linkValue !== null ? (value as ILinkValue).linkValue!.whoAmI.id : null;\n            break;\n        case AttributeType.tree:\n            extractedValue =\n                (value as ITreeLinkValue).treeValue !== null\n                    ? [\n                          (value as ITreeLinkValue).treeValue!.record.whoAmI.library.id,\n                          (value as ITreeLinkValue).treeValue!.record.whoAmI.id\n                      ].join('/')\n                    : null;\n            break;\n        default:\n            extractedValue = (value as IValue) !== null ? (value as IValue).value : null;\n            break;\n    }\n\n    return extractedValue;\n};\n\nfunction CreateRecordFormContainer({\n    attributes,\n    library,\n    recordId: initialRecordId,\n    valueVersion,\n    onIdentityUpdate,\n    setSubmitFunc,\n    onPostSave,\n    inModal = false\n}: ICreateRecordFormContainerProps): JSX.Element {\n    const attributesById = useMemo(\n        () =>\n            attributes.reduce((acc, attr) => {\n                acc[attr.id] = attr;\n                return acc;\n            }, {}),\n        [attributes]\n    );\n\n    const lang = useLang().lang;\n\n    const [recordId, setRecordId] = useState<string>(initialRecordId || '');\n    const [savePending, setSavePending] = useState<boolean>(false);\n\n    const query = getRecordDataQuery(library, attributes);\n    const {loading, error, data, refetch: refetchData, networkStatus} = useQuery<IGetRecordData>(query, {\n        variables: {id: recordId, version: versionObjToGraphql(valueVersion || null), lang},\n        skip: !recordId || savePending,\n        fetchPolicy: 'no-cache'\n    });\n\n    const [saveValueBatch, {data: dataSave}] = useMutation<SAVE_VALUE_BATCH, SAVE_VALUE_BATCHVariables>(\n        saveValueBatchQuery\n    );\n\n    const [createRecord] = useMutation<CREATE_RECORD, CREATE_RECORDVariables>(createRecordQuery);\n\n    const _extractRecordIdentity = useCallback((dataQueryRes: IGetRecordData): RecordIdentity_whoAmI => {\n        return dataQueryRes && dataQueryRes.record.list[0].whoAmI\n            ? dataQueryRes.record.list[0].whoAmI\n            : {id: '', library: {id: '', label: null}, label: null, color: null, preview: null};\n    }, []);\n\n    useEffect(() => {\n        if (onIdentityUpdate && data && data.record && data.record.list.length) {\n            onIdentityUpdate(_extractRecordIdentity(data));\n        }\n    }, [onIdentityUpdate, _extractRecordIdentity, data, library, recordId]);\n\n    const onSave = async (values: RecordData) => {\n        setSavePending(true);\n\n        const submittedValues = Object.keys(values)\n            .filter(attrName => !!attributesById[attrName] && !attributesById[attrName].system)\n            .reduce((allValues: ValueBatchInput[], attrName: string) => {\n                for (const val of values[attrName]) {\n                    // Don't save empty values which doesn't already exists: it means it is an empty field\n                    if (val && !isValueNull(val)) {\n                        const valToSave: string | null = _extractValueToSave(val, attributesById[attrName]);\n\n                        if (valToSave !== '') {\n                            allValues.push({\n                                attribute: attrName,\n                                id_value: val ? val.id_value : null,\n                                value: valToSave\n                            });\n                        }\n                    }\n                }\n\n                return allValues;\n            }, []);\n\n        const _executeSaveValue = (idRecord: string) => {\n            return saveValueBatch({\n                variables: {\n                    library: library.id,\n                    recordId: idRecord,\n                    version: !!valueVersion ? versionObjToGraphql(valueVersion) : null,\n                    values: submittedValues\n                }\n            });\n        };\n\n        let saveValuesRes;\n        const resCreaRecord = await createRecord({\n            variables: {library: library.id}\n        });\n\n        if (!!resCreaRecord && !!resCreaRecord.data) {\n            setRecordId(resCreaRecord.data.createRecord.id);\n            saveValuesRes = await _executeSaveValue(resCreaRecord.data.createRecord.id);\n        }\n        setSavePending(false);\n\n        const freshData = await refetchData();\n\n        if (\n            onPostSave &&\n            saveValuesRes?.data &&\n            !saveValuesRes.data.errors &&\n            !saveValuesRes.data.saveValueBatch.errors &&\n            saveValuesRes.data.saveValueBatch.values\n        ) {\n            onPostSave(_extractRecordIdentity(freshData.data));\n        }\n    };\n\n    if (error) {\n        return <p className=\"error\">ERROR</p>;\n    }\n\n    if (loading || (recordId && networkStatus !== NetworkStatus.ready)) {\n        return <Loading withDimmer />;\n    }\n\n    if (recordId && (!data || !data.record || !data.record.list.length)) {\n        return <p>Unknown record</p>;\n    }\n\n    const formErrors =\n        dataSave && dataSave.saveValueBatch && dataSave.saveValueBatch.errors\n            ? dataSave.saveValueBatch.errors.reduce((allErrors, saveError) => {\n                  allErrors[saveError.attribute] = saveError;\n\n                  return allErrors;\n              }, {})\n            : {};\n\n    return (\n        <CreateRecordForm\n            onSave={onSave}\n            attributes={attributesById}\n            errors={formErrors}\n            setSubmitFuncRef={setSubmitFunc}\n            inModal={inModal}\n        />\n    );\n}\n\nexport default CreateRecordFormContainer;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport CreateRecordFormContainer from './CreateRecordFormContainer';\nexport default CreateRecordFormContainer;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport gql from 'graphql-tag';\n\nexport const deleteValueQuery = gql`\n    mutation DELETE_VALUE($library: ID!, $recordId: ID!, $attribute: ID!, $valueId: ID) {\n        deleteValue(library: $library, recordId: $recordId, attribute: $attribute, valueId: $valueId) {\n            attribute {\n                id\n            }\n            id_value\n        }\n    }\n`;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport gql from 'graphql-tag';\nimport {recordIdentityFragment} from 'queries/records/recordIdentityFragment';\n\nexport const saveValueQuery = gql`\n    ${recordIdentityFragment}\n    mutation SAVE_VALUE($library: ID!, $recordId: ID!, $attribute: ID!, $value: ValueInput!) {\n        saveValue(library: $library, recordId: $recordId, attribute: $attribute, value: $value) {\n            id_value\n\n            attribute {\n                id\n            }\n\n            ... on Value {\n                value\n                raw_value\n            }\n\n            ... on LinkValue {\n                linkValue: value {\n                    ...RecordIdentity\n                }\n            }\n\n            ... on TreeValue {\n                treeValue: value {\n                    record {\n                        ...RecordIdentity\n                    }\n                }\n            }\n        }\n    }\n`;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport React, {useEffect, useState} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {Button, Form, Input} from 'semantic-ui-react';\nimport styled from 'styled-components';\nimport {GET_LIB_BY_ID_libraries_list_attributes} from '../../../../../../../_gqlTypes/GET_LIB_BY_ID';\nimport {IGenericValue, IValue} from '../../../../../../../_types/records';\n\ninterface IEditRecordInputProps {\n    attribute: GET_LIB_BY_ID_libraries_list_attributes;\n    value: IGenericValue;\n    readonly: boolean;\n    onSubmit: () => void;\n    onDelete: () => void;\n    onCancel: () => void;\n    onChange: (newValue: string) => void;\n}\n\nconst ButtonsWrapper = styled(Button.Group)`\n    &&& {\n        position: absolute;\n        top: 0;\n        right: 0;\n        float: right;\n        border-radius: 0;\n        bottom: 0;\n        border-right: none;\n        border-top: none;\n        border-bottom: none;\n    }\n`;\n\nconst InputWrapper = styled(Form.Field)`\n    position: relative;\n`;\n\nconst StyledInput = styled(Input)`\n    & input:focus {\n        padding-right: 120px;\n    }\n`;\nStyledInput.displayName = 'Input';\n\nfunction EditRecordInput({\n    value,\n    attribute,\n    readonly,\n    onChange,\n    onSubmit,\n    onDelete,\n    onCancel\n}: IEditRecordInputProps): JSX.Element {\n    const {t} = useTranslation();\n    const [editing, setEditing] = useState(false);\n    let blurTimeoutRef;\n\n    useEffect(() => {\n        return () => {\n            // Clear timeout created on blur to avoid warnings about updating state on unmounted components\n            if (blurTimeoutRef) {\n                setEditing(false); // Force editing to false in case to make sure we don't stay with editing = true\n                clearTimeout(blurTimeoutRef);\n            }\n        };\n    });\n\n    const _handleFocus = () => setEditing(true);\n\n    const _handleValidate = () => {\n        onSubmit();\n        setEditing(false);\n    };\n\n    const _handleChange = e => {\n        onChange(e.target.value);\n        setEditing(true);\n    };\n\n    const _handleCancel = () => {\n        onCancel();\n        setEditing(false);\n    };\n\n    const _handleDelete = () => {\n        onDelete();\n\n        setEditing(false);\n    };\n\n    const _handleKeyPress = e => {\n        if (e.key === 'Enter') {\n            _handleValidate();\n            e.target.blur();\n        }\n        setEditing(false);\n    };\n\n    const _handleBlur = e => {\n        // This is a ugly hack to make sure we hide buttons when user clicks on another field.\n        // The best behavior would be to save value on blur, but it's really hard to implement because\n        // the blur event messes around with the buttons and it's hard to know if we clicked on a button.\n        // Things would be easier if Firefox filled relatedTarget on the event as expected, but it's not\n        // TODO: find a better solution!\n        blurTimeoutRef = setTimeout(() => setEditing(false), 150);\n    };\n\n    return (\n        <InputWrapper data-test-id=\"input-wrapper\" style={{marginBottom: '15px'}} id={attribute.id}>\n            <StyledInput\n                fluid\n                type=\"text\"\n                name={`${attribute.id}_${value?.id_value || 'newVal'}`}\n                value={(value as IValue)?.value || ''}\n                disabled={readonly}\n                onFocus={_handleFocus}\n                onChange={_handleChange}\n                onKeyPress={_handleKeyPress}\n                onBlur={_handleBlur}\n                key={`${attribute.id}_${value?.id_value || 'newVal'}`}\n            />\n            {editing && (\n                <ButtonsWrapper basic size=\"small\">\n                    <Button\n                        onClick={_handleCancel}\n                        className=\"record-input-btn\"\n                        data-test-id=\"cancel-btn\"\n                        title={t('admin.cancel')}\n                        icon=\"undo\"\n                    />\n                    <Button\n                        onClick={_handleDelete}\n                        className=\"record-input-btn\"\n                        data-test-id=\"delete-btn\"\n                        title={t('attributes.remove_value')}\n                        icon=\"trash\"\n                    />\n                    <Button\n                        onClick={_handleValidate}\n                        className=\"record-input-btn\"\n                        data-test-id=\"submit-btn\"\n                        title={t('admin.submit')}\n                        icon=\"check\"\n                    />\n                </ButtonsWrapper>\n            )}\n        </InputWrapper>\n    );\n}\n\nexport default EditRecordInput;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {IValue} from '../../../../../../_types/records';\n\nexport enum StandardValuesActionTypes {\n    REINIT = 'REINIT',\n    ADD = 'ADD',\n    CHANGE = 'CHANGE',\n    SUBMIT = 'SUBMIT',\n    DELETE = 'DELETE',\n    CANCEL = 'CANCEL'\n}\n\nexport type IStandardValuesActionData = {\n    valueIndex?: number;\n} & {\n    [key: string]: any;\n};\n\nexport interface IStandardValuesAction {\n    type: StandardValuesActionTypes;\n    data?: IStandardValuesActionData;\n}\n\nexport interface IStandardValuesReducerState {\n    values: IValue[];\n    initialValues: IValue[];\n}\n\nconst virginValue = {id_value: null, value: '', raw_value: '', modified_at: null, created_at: null, version: null};\n\nconst reducer = (state: IStandardValuesReducerState, action: IStandardValuesAction): IStandardValuesReducerState => {\n    const valueIndex = action?.data?.valueIndex || 0;\n    switch (action.type) {\n        case StandardValuesActionTypes.REINIT: {\n            const newState = {\n                values: action?.data?.values || [],\n                initialValues: action?.data?.values || []\n            };\n            return newState;\n        }\n        case StandardValuesActionTypes.ADD: {\n            const newState = {\n                ...state,\n                values: [...state.values, {...virginValue}]\n            };\n            return newState;\n        }\n        case StandardValuesActionTypes.CHANGE: {\n            const newState = {...state, values: [...state.values]};\n            const newValue = {...newState.values[valueIndex], value: action?.data?.newValue || ''};\n            newState.values[valueIndex] = newValue;\n            return newState;\n        }\n        case StandardValuesActionTypes.SUBMIT: {\n            const newState = {...state, initialValues: [...state.initialValues]};\n            newState.initialValues[valueIndex] = state.values[valueIndex];\n            return newState;\n        }\n        case StandardValuesActionTypes.DELETE: {\n            const newState = {...state};\n            newState.values = [...newState.values.slice(0, valueIndex), ...newState.values.slice(valueIndex + 1)];\n\n            if (!newState.values.length) {\n                newState.values.push({...virginValue});\n            }\n\n            return newState;\n        }\n        case StandardValuesActionTypes.CANCEL: {\n            const newState = {...state, values: [...state.values]};\n            newState.values[valueIndex] = state.initialValues[valueIndex];\n            return newState;\n        }\n        default: {\n            return state;\n        }\n    }\n};\n\nexport default reducer;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport EditRecordInput from './EditRecordInput';\nexport default EditRecordInput;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport React, {useEffect, useReducer} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {Button, Icon} from 'semantic-ui-react';\nimport styled from 'styled-components';\nimport useLang from '../../../../../../hooks/useLang';\nimport {localizedLabel} from '../../../../../../utils';\nimport {GET_LIB_BY_ID_libraries_list_attributes} from '../../../../../../_gqlTypes/GET_LIB_BY_ID';\nimport {AttributeType, ValueInput} from '../../../../../../_gqlTypes/globalTypes';\nimport {IValue} from '../../../../../../_types/records';\nimport EditRecordInput from './EditRecordInput';\nimport reducer, {StandardValuesActionTypes} from './StandardValuesReducer';\n\ninterface IStandardValuesWrapperProps {\n    attribute: GET_LIB_BY_ID_libraries_list_attributes;\n    values: IValue | IValue[];\n    readonly: boolean;\n    onSubmit: (value: ValueInput) => void;\n    onDelete: (value: ValueInput) => void;\n}\n\nconst _prepareValues = (vals: IValue | IValue[]): IValue[] => {\n    const values = (Array.isArray(vals) ? vals : [vals]).filter(v => v !== null);\n\n    if (!values.length) {\n        values.push({id_value: null, value: '', raw_value: '', modified_at: null, created_at: null, version: null});\n    }\n\n    return values;\n};\n\nconst FieldLabel = styled.label`\n    font-weight: bold;\n    margin-bottom: 0.5em;\n`;\n\nconst InputWrapper = styled.div`\n    position: relative;\n`;\n\nfunction StandardValuesWrapper({\n    attribute,\n    values,\n    readonly,\n    onSubmit,\n    onDelete\n}: IStandardValuesWrapperProps): JSX.Element {\n    const {t} = useTranslation();\n    const availableLanguages = useLang().lang;\n    const attributeLabel = localizedLabel(attribute.label, availableLanguages);\n\n    const initialValues = _prepareValues(values);\n    const [state, dispatch] = useReducer(reducer, {\n        values: initialValues,\n        initialValues\n    });\n    const {values: valuesToDisplay} = state;\n\n    useEffect(() => {\n        dispatch({type: StandardValuesActionTypes.REINIT, data: {values: _prepareValues(values)}});\n    }, [values]);\n\n    const _addValue = () => {\n        dispatch({type: StandardValuesActionTypes.ADD});\n    };\n\n    const _getValueInputByIndex = (index): ValueInput => {\n        const val: IValue = state.values[index];\n        return {\n            id_value: val.id_value,\n            value: String(val.value)\n        };\n    };\n\n    const _handleChange = index => (newValue: string) => {\n        dispatch({type: StandardValuesActionTypes.CHANGE, data: {valueIndex: index, newValue}});\n    };\n\n    const _handleSubmit = (index: number) => () => {\n        dispatch({type: StandardValuesActionTypes.SUBMIT, data: {valueIndex: index}});\n        onSubmit(_getValueInputByIndex(index));\n    };\n\n    const _handleDelete = index => () => {\n        dispatch({type: StandardValuesActionTypes.DELETE, data: {valueIndex: index}});\n\n        if (valuesToDisplay[index].id_value || attribute.type === AttributeType.simple) {\n            onDelete(_getValueInputByIndex(index));\n        }\n    };\n\n    const _handleCancel = index => () => {\n        dispatch({type: StandardValuesActionTypes.CANCEL, data: {valueIndex: index}});\n    };\n\n    const canAddValue = !readonly && (attribute.multiple_values || !valuesToDisplay.length);\n\n    return (\n        <InputWrapper data-test-id=\"input-wrapper\" key={attribute.id} style={{marginBottom: '15px'}} id={attribute.id}>\n            <FieldLabel>{attributeLabel}</FieldLabel>\n            {canAddValue && (\n                <Button\n                    type=\"button\"\n                    size=\"mini\"\n                    compact\n                    basic\n                    icon\n                    labelPosition=\"right\"\n                    style={{margin: '5px'}}\n                    onClick={_addValue}\n                    data-test-id=\"add_value_btn\"\n                    id={attribute.id}\n                >\n                    <Icon name=\"plus\" id={attribute.id} />\n                    {t('records.add_value')}\n                </Button>\n            )}\n            {valuesToDisplay.map((v, i) => (\n                <EditRecordInput\n                    key={attribute.id + '_' + i}\n                    attribute={attribute}\n                    value={v}\n                    readonly={readonly}\n                    onChange={_handleChange(i)}\n                    onSubmit={_handleSubmit(i)}\n                    onDelete={_handleDelete(i)}\n                    onCancel={_handleCancel(i)}\n                />\n            ))}\n        </InputWrapper>\n    );\n}\n\nexport default StandardValuesWrapper;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport StandardValuesWrapper from './StandardValuesWrapper';\nexport default StandardValuesWrapper;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport EditRecordForm from './EditRecordForm';\nexport default EditRecordForm;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {useMutation, useQuery} from '@apollo/client';\nimport {NetworkStatus} from 'apollo-client';\nimport React, {useCallback, useEffect} from 'react';\nimport {GET_ATTRIBUTE_BY_ID_attributes_list} from '_gqlTypes/GET_ATTRIBUTE_BY_ID';\nimport useLang from '../../../../../hooks/useLang';\nimport {getRecordDataQuery} from '../../../../../queries/records/recordDataQuery';\nimport {deleteValueQuery} from '../../../../../queries/values/deleteValueMutation';\nimport {saveValueQuery} from '../../../../../queries/values/saveValueMutation';\nimport {isLinkAttribute, versionObjToGraphql} from '../../../../../utils';\nimport {isLinkValue, isTreeValue} from '../../../../../utils/utils';\nimport {DELETE_VALUE, DELETE_VALUEVariables} from '../../../../../_gqlTypes/DELETE_VALUE';\nimport {\n    GET_LIB_BY_ID_libraries_list,\n    GET_LIB_BY_ID_libraries_list_attributes\n} from '../../../../../_gqlTypes/GET_LIB_BY_ID';\nimport {ValueInput} from '../../../../../_gqlTypes/globalTypes';\nimport {RecordIdentity_whoAmI} from '../../../../../_gqlTypes/RecordIdentity';\nimport {SAVE_VALUE, SAVE_VALUEVariables} from '../../../../../_gqlTypes/SAVE_VALUE';\nimport {SAVE_VALUE_BATCH_saveValueBatch_errors} from '../../../../../_gqlTypes/SAVE_VALUE_BATCH';\nimport {IGetRecordData, ILinkValue, ITreeLinkValue, IValue, RecordData} from '../../../../../_types/records';\nimport Loading from '../../../../shared/Loading';\nimport LinksField from '../../../FormFields/LinksField';\nimport StandardValuesWrapper from './StandardValuesWrapper';\n\ninterface IEditRecordFormProps {\n    attributes: GET_LIB_BY_ID_libraries_list_attributes[];\n    errors?: IEditRecordFormError;\n    inModal?: boolean;\n    library: GET_LIB_BY_ID_libraries_list;\n    valueVersion?: {[treeName: string]: string};\n    onIdentityUpdate?: any;\n    initialRecordId?: string;\n    setRecordIdentity?: (input: React.SetStateAction<RecordIdentity_whoAmI | undefined>) => void;\n}\n\nexport interface IEditRecordFormError {\n    [fieldName: string]: SAVE_VALUE_BATCH_saveValueBatch_errors;\n}\n\nconst EditRecordForm = ({\n    attributes,\n    onIdentityUpdate,\n    errors = {},\n    inModal = false,\n    library,\n    valueVersion,\n    initialRecordId,\n    setRecordIdentity\n}: IEditRecordFormProps): JSX.Element => {\n    const lang = useLang().lang;\n\n    const recordId = initialRecordId === undefined ? '' : initialRecordId;\n\n    const query = getRecordDataQuery(library, attributes);\n    const getRecordDataVariables = {id: recordId, version: versionObjToGraphql(valueVersion || null), lang};\n\n    const {loading, error, data, networkStatus} = useQuery<IGetRecordData>(query, {\n        variables: getRecordDataVariables,\n        skip: !recordId\n    });\n\n    const [deleteValueMutation] = useMutation<DELETE_VALUE, DELETE_VALUEVariables>(deleteValueQuery, {\n        refetchQueries: [{query, variables: getRecordDataVariables}]\n    });\n\n    const [saveValueMutation] = useMutation<SAVE_VALUE, SAVE_VALUEVariables>(saveValueQuery, {\n        refetchQueries: [{query, variables: getRecordDataVariables}]\n    });\n\n    const _extractRecordIdentity = useCallback((dataQueryRes: IGetRecordData): RecordIdentity_whoAmI => {\n        return dataQueryRes && dataQueryRes.record.list[0].whoAmI\n            ? dataQueryRes.record.list[0].whoAmI\n            : {id: '', library: {id: '', label: null}, label: null, color: null, preview: null};\n    }, []);\n\n    useEffect(() => {\n        if (onIdentityUpdate && data && data.record && data.record.list.length) {\n            onIdentityUpdate(_extractRecordIdentity(data));\n        }\n    }, [onIdentityUpdate, _extractRecordIdentity, data, library, recordId]);\n\n    if (error) {\n        return <p className=\"error\">ERROR ${error.message}</p>;\n    }\n\n    if (loading || (recordId && networkStatus !== NetworkStatus.ready)) {\n        return <Loading withDimmer />;\n    }\n\n    if (recordId && (!data || !data.record || !data.record.list.length)) {\n        return <p>Unknown record</p>;\n    }\n\n    const recordData: RecordData = recordId\n        ? Object.keys(data!.record.list[0]).reduce((cleanData, fieldName) => {\n              if (fieldName !== '__typename') {\n                  cleanData[fieldName] = data!.record.list[0][fieldName];\n              }\n              return cleanData;\n          }, {})\n        : {};\n\n    if (setRecordIdentity) {\n        setRecordIdentity(recordData.whoAmI);\n    }\n\n    const _submitValue = attribute => (value: ValueInput) =>\n        saveValueMutation({\n            variables: {\n                library: library.id,\n                recordId,\n                attribute: attribute.id,\n                value\n            }\n        });\n\n    const _deleteValue = attribute => (value: ValueInput) => {\n        deleteValueMutation({\n            variables: {\n                library: library.id,\n                recordId,\n                attribute: attribute.id,\n                valueId: value.id_value\n            }\n        });\n    };\n\n    const _getInput = (attribute: GET_LIB_BY_ID_libraries_list_attributes) => {\n        const values = recordData[attribute.id];\n\n        if (isLinkAttribute(attribute as GET_ATTRIBUTE_BY_ID_attributes_list, false)) {\n            const _handleLinkChange = (value: ILinkValue | ITreeLinkValue) => {\n                if (\n                    (isLinkValue(value) && value.linkValue === null) ||\n                    (isTreeValue(value) && value.treeValue === null)\n                ) {\n                    return _deleteValue(attribute)({id_value: value.id_value, value: null});\n                }\n\n                const savedValue = {\n                    id_value: value.id_value,\n                    value: isTreeValue(value) ? value.treeValue?.id : (value as ILinkValue)!.linkValue?.id\n                };\n\n                return _submitValue(attribute)(savedValue);\n            };\n\n            return (\n                <LinksField\n                    key={attribute.id}\n                    values={values as ILinkValue[] | ITreeLinkValue[]}\n                    attribute={attribute}\n                    readonly={attribute.system}\n                    onChange={_handleLinkChange}\n                />\n            );\n        }\n\n        return (\n            <StandardValuesWrapper\n                key={attribute.id}\n                values={values as IValue[]}\n                attribute={attribute}\n                readonly={attribute.readonly}\n                onSubmit={_submitValue(attribute)}\n                onDelete={_deleteValue(attribute)}\n            />\n        );\n    };\n\n    return <>{attributes && attributes.map(attr => _getInput(attr))}</>;\n};\n\nexport default EditRecordForm;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport React from 'react';\nimport {GET_LIB_BY_ID_libraries_list} from '../../../../_gqlTypes/GET_LIB_BY_ID';\nimport {RecordIdentity_whoAmI} from '../../../../_gqlTypes/RecordIdentity';\nimport EditRecordForm from './EditRecordForm';\n\ninterface IEditRecordFormProps {\n    initialRecordId?: string;\n    library: GET_LIB_BY_ID_libraries_list;\n    setRecordIdentity?: (input: React.SetStateAction<RecordIdentity_whoAmI | undefined>) => void;\n    onIdentityUpdate?: any;\n}\n\nfunction EditRecordFormContainer({\n    initialRecordId,\n    library,\n    setRecordIdentity,\n    onIdentityUpdate\n}: IEditRecordFormProps): JSX.Element {\n    const attributes = library && library.attributes ? library.attributes : [];\n\n    const formErrors = {};\n\n    return (\n        <EditRecordForm\n            attributes={attributes}\n            errors={formErrors}\n            inModal\n            library={library}\n            onIdentityUpdate={onIdentityUpdate}\n            initialRecordId={initialRecordId}\n            setRecordIdentity={setRecordIdentity}\n        />\n    );\n}\n\nexport default EditRecordFormContainer;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport EditRecordFormContainer from './EditRecordFormContainer';\nexport default EditRecordFormContainer;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {useQuery} from '@apollo/client';\nimport React from 'react';\nimport {getLibByIdQuery} from '../../../queries/libraries/getLibraryById';\nimport {GET_LIB_BY_ID, GET_LIB_BY_IDVariables} from '../../../_gqlTypes/GET_LIB_BY_ID';\nimport {TreeElementInput} from '../../../_gqlTypes/globalTypes';\nimport {RecordIdentity_whoAmI} from '../../../_gqlTypes/RecordIdentity';\nimport {RecordEdition} from '../../../_types/records';\nimport Loading from '../../shared/Loading';\nimport CreateRecordFormContainer from './CreateRecordForm/CreateRecordFormContainer';\nimport RecordEditionForm from './EditRecordForm';\n\nexport interface IEditRecordProps {\n    library: string;\n    recordId?: string;\n    version?: {[treeName: string]: TreeElementInput};\n    onIdentityUpdate?: (identity: RecordIdentity_whoAmI) => void;\n    setSubmitFunc?: RecordEdition.SetSubmitFuncRef;\n    inModal?: boolean;\n    onPostSave?: (record: RecordIdentity_whoAmI) => void;\n}\n\nfunction EditRecord({\n    library,\n    recordId,\n    version,\n    onIdentityUpdate,\n    setSubmitFunc,\n    onPostSave,\n    inModal = false\n}: IEditRecordProps): JSX.Element {\n    const {data, loading, error} = useQuery<GET_LIB_BY_ID, GET_LIB_BY_IDVariables>(getLibByIdQuery, {\n        variables: {id: library}\n    });\n\n    if (loading) {\n        return <Loading withDimmer />;\n    }\n\n    if (error) {\n        return <p className=\"error\">ERROR</p>;\n    }\n\n    if (!data || !data.libraries || !data.libraries.list) {\n        return <p>Unknown library</p>;\n    }\n\n    const lib = data.libraries.list[0];\n\n    const attributes = lib.attributes || [];\n\n    return (\n        <>\n            {recordId ? (\n                <RecordEditionForm initialRecordId={recordId} library={lib} onIdentityUpdate={onIdentityUpdate} />\n            ) : (\n                <CreateRecordFormContainer\n                    onPostSave={onPostSave}\n                    attributes={attributes}\n                    setSubmitFunc={setSubmitFunc}\n                    library={lib}\n                    inModal={inModal}\n                />\n            )}\n        </>\n    );\n}\n\nexport default EditRecord;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport EditRecordModal from './EditRecordModal';\nexport default EditRecordModal;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport React, {useState} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {Button, Icon, Modal} from 'semantic-ui-react';\nimport {RecordIdentity_whoAmI} from '../../../_gqlTypes/RecordIdentity';\nimport {RecordEdition} from '../../../_types/records';\nimport RecordCard from '../../shared/RecordCard';\nimport EditRecord, {IEditRecordProps} from '../EditRecord/EditRecord';\n\ninterface IEditRecordModalProps extends IEditRecordProps {\n    open: boolean;\n    onClose: (recordIdentity?: RecordIdentity_whoAmI) => void;\n}\n\nconst EditRecordModal = ({open, recordId, library, version, onClose}: IEditRecordModalProps): JSX.Element => {\n    const {t} = useTranslation();\n    const [recordIdentity, setRecordIdentity] = useState<RecordIdentity_whoAmI>();\n    const [submitFuncRef, setSubmitFuncRef] = useState<RecordEdition.FuncRef | null>(null);\n\n    const submitForm = () => {\n        if (submitFuncRef && submitFuncRef.current) {\n            submitFuncRef.current();\n        }\n    };\n\n    const _handleClose = () => onClose();\n\n    return (\n        <Modal\n            open={open}\n            onClose={_handleClose}\n            size=\"large\"\n            centered\n            closeOnDimmerClick\n            closeOnEscape\n            closeIcon\n            dimmer\n        >\n            {recordId && recordIdentity && (\n                <Modal.Header style={{fontSize: '1.3em'}}>\n                    <RecordCard record={recordIdentity} />\n                </Modal.Header>\n            )}\n            <Modal.Content scrolling style={{minHeight: 'calc(30vh)'}}>\n                <EditRecord\n                    recordId={recordId}\n                    library={library}\n                    version={version}\n                    onIdentityUpdate={setRecordIdentity}\n                    setSubmitFunc={setSubmitFuncRef}\n                    inModal\n                    onPostSave={onClose}\n                />\n            </Modal.Content>\n            {!recordId && (\n                <Modal.Actions>\n                    <Button className=\"close-button\" onClick={_handleClose} negative>\n                        <Icon name=\"cancel\" /> {t('admin.cancel')}\n                    </Button>\n                    <Button className=\"submit-button\" onClick={submitForm} positive>\n                        <Icon name=\"checkmark\" /> {t('admin.submit')}\n                    </Button>\n                </Modal.Actions>\n            )}\n        </Modal>\n    );\n};\n\nexport default EditRecordModal;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {useQuery} from '@apollo/client';\nimport gql from 'graphql-tag';\nimport React from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {List} from 'semantic-ui-react';\nimport Loading from '../shared/Loading';\n\nexport interface IRootSelectorContainerProps {\n    restrictToRoots: string[];\n    onSelect: (root: string) => void;\n    lang: string[];\n}\ninterface IRootSelectorElemProps {\n    onSelect: (root: string) => void;\n    elem: any;\n}\n\nexport const QUERY = gql`\n    query ROOT_SELECTOR_QUERY($lang: [AvailableLanguage!]) {\n        libraries {\n            list {\n                id\n                label(lang: $lang)\n            }\n        }\n    }\n`;\n\nfunction RootSelectorContainer({restrictToRoots, onSelect, lang}: IRootSelectorContainerProps) {\n    const {loading, error, data} = useQuery(QUERY, {\n        variables: {lang}\n    });\n    const {t} = useTranslation();\n    if (loading) {\n        return <Loading />;\n    }\n    if (error) {\n        return <p data-testid=\"error\">{error.message}</p>;\n    }\n\n    const librariesList = (restrictToRoots.length > 0\n        ? data.libraries.list.filter(lib => restrictToRoots.includes(lib.id))\n        : data.libraries.list\n    ).map(lib => ({\n        id: lib.id,\n        label: lib.label[lang[0]]\n    }));\n\n    return (\n        <div className=\"ui placeholder segment\">\n            <div className=\"ui two column relaxed stackable grid\">\n                <div className=\"middle aligned column\">\n                    <List selection>\n                        {librariesList.map(lib => {\n                            return <RootSelectorElem key={lib.id} onSelect={onSelect} elem={lib} />;\n                        })}\n                    </List>\n                </div>\n                <div className=\"middle aligned column\">\n                    <div className=\"ui visible info large message\">{t('navigator.select_root')}</div>\n                </div>\n            </div>\n            <div className=\"ui vertical divider\">\n                <i className=\"angle double left icon\" />\n            </div>\n        </div>\n    );\n}\n\nfunction RootSelectorElem({onSelect, elem}: IRootSelectorElemProps) {\n    const handleClick = () => {\n        onSelect(elem.id);\n    };\n    return (\n        <List.Item onClick={handleClick}>\n            <List.Icon name=\"book\" size=\"big\" />\n            <List.Content>\n                <List.Header>{elem.label}</List.Header>\n                {elem.id}\n            </List.Content>\n        </List.Item>\n    );\n}\n\nexport default RootSelectorContainer;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {GET_LIB_BY_ID_libraries_list, GET_LIB_BY_ID_libraries_list_attributes} from '../../_gqlTypes/GET_LIB_BY_ID';\nimport {RecordIdentity_whoAmI} from '../../_gqlTypes/RecordIdentity';\nimport {IGenericValue} from '../../_types/records';\nimport {EditRecordClick, SelectionChanged} from './Navigator';\n\ntype RecordData = {\n    [attributeName: string]: IGenericValue | IGenericValue[];\n} & {\n    id: string;\n    whoAmI: RecordIdentity_whoAmI;\n};\nexport interface IReducerState {\n    restrictToRoots: string[];\n    selectable: boolean;\n    onSelectionChanged: null | SelectionChanged;\n    onEditRecordClick: EditRecordClick | null;\n    multipleSelection: boolean;\n    selection: RecordIdentity_whoAmI[];\n    selectedRoot: string | null;\n    rootsList: GET_LIB_BY_ID_libraries_list[];\n    selectedRootLabel: string | null;\n    selectedRootQuery: string | null;\n    selectedRootFilter: string | null;\n    selectedRootAttributes: GET_LIB_BY_ID_libraries_list_attributes[];\n    lang: string[];\n    filters: IFilter[];\n    showFilters: boolean;\n    list: RecordData[];\n    execSearch: boolean;\n    availableOffsets: Array<number | string>;\n    selectedOffset: number | null;\n    totalCount?: number;\n    offset?: number;\n    currentPage?: number;\n}\nexport interface ICursors {\n    prev: string;\n    next: string;\n}\nexport interface IFilter {\n    attribute: string;\n    value: string;\n    operator: string;\n}\nexport interface IReducerAction {\n    type: ActionTypes;\n    data?: any;\n}\nexport enum ActionTypes {\n    INIT_STATE = 'INIT_STATE',\n    SET_RESTRICT_ROOTS = 'SET_RESTRICT_TO_ROOTS',\n    SET_SELECTED_ROOT = 'SET_SELECTED_ROOT',\n    SET_ROOTS = 'SET_ROOTS',\n    SET_ROOT_INFOS = 'SET_ROOT_INFOS',\n    SET_FILTERS = 'SET_FILTERS',\n    TOGGLE_FILTERS = 'TOGGLE_FILTERS',\n    SET_LIST = 'SET_LIST',\n    FILTER_REMOVE = 'FILTER_REMOVE',\n    SELECTION_ADD = 'SELECTION_ADD',\n    SELECTION_REMOVE = 'SELECTION_REMOVE',\n    SET_OFFSET = 'SET_OFFSET',\n    SET_LIMIT = 'SET_LIMIT'\n}\n\nexport const initialState = {\n    restrictToRoots: [],\n    selectable: false,\n    onSelectionChanged: null,\n    onEditRecordClick: null,\n    multipleSelection: false,\n    selection: [],\n    selectedRoot: null,\n    selectedRootLabel: null,\n    selectedRootQuery: null,\n    selectedRootFilter: null,\n    selectedRootAttributes: [],\n    rootsList: [],\n    lang: ['fr'],\n    filters: [],\n    showFilters: false,\n    list: [],\n    execSearch: true,\n    availableOffsets: [5, 10, 15, 20, 50, 100],\n    selectedOffset: 10\n};\n\nconst reducer = (state: IReducerState, action: IReducerAction): IReducerState => {\n    switch (action.type) {\n        case ActionTypes.INIT_STATE:\n            return {\n                ...state,\n                restrictToRoots: action.data.restrictToRoots,\n                selectedRoot: action.data.restrictToRoots.length === 1 ? action.data.restrictToRoots[0] : null,\n                onSelectionChanged: action.data.onSelectionChanged,\n                multipleSelection: action.data.multipleSelection,\n                selectable: action.data.selectable\n            };\n        case ActionTypes.SET_RESTRICT_ROOTS:\n            return {\n                ...state,\n                restrictToRoots: action.data,\n                selectedRoot: action.data.length === 1 ? action.data[0] : null\n            };\n        case ActionTypes.SET_SELECTED_ROOT:\n            return {\n                ...state,\n                selectedRoot: action.data,\n                selectedRootQuery: null,\n                selectedRootAttributes: [],\n                list: [],\n                filters: [],\n                execSearch: true\n            };\n        case ActionTypes.SET_ROOTS:\n            return {\n                ...state,\n                rootsList: action.data\n            };\n        case ActionTypes.SET_ROOT_INFOS:\n            return {\n                ...state,\n                selectedRootLabel: action.data.label,\n                selectedRootQuery: action.data.query,\n                selectedRootFilter: action.data.filter,\n                selectedRootAttributes: action.data.attributes\n            };\n        case ActionTypes.SET_FILTERS:\n            return {\n                ...state,\n                filters: action.data,\n                list: [],\n                showFilters: false,\n                execSearch: true\n            };\n        case ActionTypes.FILTER_REMOVE:\n            return {\n                ...state,\n                filters: state.filters.filter((f, i) => i !== action.data),\n                execSearch: true\n            };\n        case ActionTypes.TOGGLE_FILTERS:\n            return {\n                ...state,\n                showFilters: !state.showFilters\n            };\n        case ActionTypes.SET_LIST:\n            return {\n                ...state,\n                list: action.data.list,\n                totalCount: action.data.totalCount,\n                offset: action.data.offset,\n                execSearch: false,\n                availableOffsets:\n                    state.availableOffsets.length < 7\n                        ? [...state.availableOffsets, action.data.all]\n                        : state.availableOffsets\n            };\n        case ActionTypes.SET_OFFSET:\n            return {\n                ...state,\n                offset: action.data.offset,\n                currentPage: action.data.page,\n                execSearch: true\n            };\n        case ActionTypes.SET_LIMIT:\n            if (typeof action.data.limit === 'string') {\n                return {\n                    ...state,\n                    selectedOffset: null,\n                    offset: 0,\n                    currentPage: 1,\n                    execSearch: true\n                };\n            }\n            return {\n                ...state,\n                selectedOffset: action.data.limit,\n                offset: 0,\n                currentPage: 1,\n                execSearch: true\n            };\n        case ActionTypes.SELECTION_ADD:\n            const addedSelection = state.multipleSelection\n                ? Array.from(new Set(state.selection).add(action.data))\n                : [action.data];\n            const callbackAdd = state.onSelectionChanged;\n            if (callbackAdd !== null) {\n                setImmediate(() => callbackAdd(addedSelection));\n            }\n            return {\n                ...state,\n                selection: addedSelection\n            };\n        case ActionTypes.SELECTION_REMOVE:\n            const substractedSelection = state.selection.filter(e => e.id !== action.data.id);\n            const callbackRemove = state.onSelectionChanged;\n            if (callbackRemove !== null) {\n                setImmediate(() => callbackRemove(substractedSelection));\n            }\n            return {\n                ...state,\n                selection: substractedSelection\n            };\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"FiltersPanel_filter__-kKlp\",\"filterAttribute\":\"FiltersPanel_filterAttribute__jOGR9\",\"filterFunction\":\"FiltersPanel_filterFunction__ZT2y5\",\"filterValue\":\"FiltersPanel_filterValue__SivrC\",\"filterRemove\":\"FiltersPanel_filterRemove__Uvjhq\"};","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport React, {useEffect, useMemo, useReducer} from 'react';\nimport {Button, Dropdown, Icon, Input, Label, Segment} from 'semantic-ui-react';\nimport styles from './FiltersPanel.module.css';\nimport {IListProps} from './MainPanel';\nimport {ActionTypes, IFilter} from './NavigatorReducer';\n\nconst emptyFilter: IFilter = {\n    attribute: '',\n    value: '',\n    operator: '='\n};\n\nenum LocalActionTypes {\n    ADD_FILTER = 'ADD_FILTER',\n    REMOVE_FILTER = 'REMOVE_FILTER',\n    CHANGE_VALUE = 'CHANGE_VALUE',\n    CHANGE_ATTRIBUTE = 'CHANGE_ATTRIBUTE',\n    RESET = 'RESET'\n}\n\nconst localReducer = (state, action) => {\n    switch (action.type) {\n        case LocalActionTypes.ADD_FILTER:\n            return [...state, {...emptyFilter}];\n        case LocalActionTypes.REMOVE_FILTER:\n            const stateCopy = [...state];\n            stateCopy.splice(action.data, 1);\n            return stateCopy;\n        case LocalActionTypes.CHANGE_VALUE:\n            state[action.data.index] = {...state[action.data.index], value: action.data.value};\n            return [...state];\n        case LocalActionTypes.CHANGE_ATTRIBUTE:\n            state[action.data.index] = {...state[action.data.index], attribute: action.data.value};\n            return [...state];\n        case LocalActionTypes.RESET:\n            if (action.data.length === 0) {\n                return [{...emptyFilter}];\n            }\n            return action.data;\n        default:\n            return state;\n    }\n};\n\nexport default function FiltersPanel({state, dispatch}: IListProps) {\n    const [localState, localDispatch] = useReducer(localReducer, state.filters);\n    const toggleFilters = () => {\n        localDispatch({\n            type: LocalActionTypes.RESET,\n            data: state.filters\n        });\n        dispatch({\n            type: ActionTypes.TOGGLE_FILTERS,\n            data: null\n        });\n    };\n    useEffect(() => {\n        if (state.showFilters) {\n            localDispatch({\n                type: LocalActionTypes.RESET,\n                data: state.filters\n            });\n        }\n    }, [state.filters, state.showFilters]);\n\n    const attributesDropDownOptions = useMemo(() => {\n        return state.selectedRootAttributes.map(attribute => {\n            return {\n                key: attribute.id,\n                text: attribute.label?.fr,\n                value: attribute.id\n            };\n        });\n    }, [state.selectedRootAttributes]);\n\n    const applyFilters = () => {\n        const goodFilters = localState.filter(f => {\n            return f.attribute !== '' && f.operator !== '' && f.value !== '';\n        });\n        dispatch({\n            type: ActionTypes.SET_FILTERS,\n            data: goodFilters\n        });\n    };\n\n    const addFilter = () => {\n        localDispatch({\n            type: LocalActionTypes.ADD_FILTER,\n            data: null\n        });\n    };\n    const memoizedFunctions = useMemo(() => {\n        return {\n            removeFilter: (i: number) => {\n                localDispatch({\n                    type: LocalActionTypes.REMOVE_FILTER,\n                    data: i\n                });\n            },\n            changeValue: (i: number, value: string) => {\n                localDispatch({\n                    type: LocalActionTypes.CHANGE_VALUE,\n                    data: {\n                        index: i,\n                        value\n                    }\n                });\n            },\n            changeAttribute: (i: number, value: string) => {\n                localDispatch({\n                    type: LocalActionTypes.CHANGE_ATTRIBUTE,\n                    data: {\n                        index: i,\n                        value\n                    }\n                });\n            }\n        };\n    }, [localDispatch]);\n\n    const renderFilter = useMemo(() => {\n        return (filterData, index) => {\n            const onRemove = () => {\n                memoizedFunctions.removeFilter(index);\n            };\n            const onChangeValue = e => {\n                memoizedFunctions.changeValue(index, e.target.value);\n            };\n            const onChangeAttribute = (_, data) => {\n                memoizedFunctions.changeAttribute(index, data.value);\n            };\n            return (\n                <Input\n                    key={index}\n                    fluid\n                    labelPosition=\"left\"\n                    type=\"text\"\n                    placeholder=\"Value...\"\n                    className={styles.filter}\n                >\n                    <Dropdown\n                        style={{width: '40%'}}\n                        placeholder=\"Attribute\"\n                        search\n                        selection\n                        options={attributesDropDownOptions}\n                        className={styles.filterAttribute}\n                        onChange={onChangeAttribute}\n                        value={filterData.attribute}\n                    />\n                    <Label className={styles.filterFunction}>=</Label>\n                    <input\n                        data-id={index}\n                        onChange={onChangeValue}\n                        value={filterData.value}\n                        className={styles.filterValue}\n                    />\n                    <Button as=\"a\" negative onClick={onRemove} className={styles.filterRemove}>\n                        <Icon name=\"delete\" />\n                    </Button>\n                </Input>\n            );\n        };\n    }, [attributesDropDownOptions, memoizedFunctions]);\n    const onSubmit = e => {\n        e.preventDefault();\n        applyFilters();\n    };\n    return (\n        <Segment\n            className=\"inverted\"\n            style={{\n                position: 'absolute',\n                top: 0,\n                right: 0,\n                width: '75%',\n                bottom: 0,\n                textAlign: 'left',\n                boxSizing: 'border-box'\n            }}\n        >\n            <h4 className=\"ui right floated header\">\n                <i className=\"ui window close icon\" onClick={toggleFilters} />\n            </h4>\n            <form onSubmit={onSubmit}>\n                <h4 className=\"ui left floated header\">\n                    <Button type=\"button\" onClick={addFilter}>\n                        <Icon name=\"add\" /> Add filter\n                    </Button>\n                    <Button type=\"submit\" primary>\n                        <Icon name=\"filter\" /> Apply filters\n                    </Button>\n                </h4>\n                <div className=\"ui divider clearing\" />\n\n                {localState.map(renderFilter)}\n            </form>\n        </Segment>\n    );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"TopPanelContainer\":\"MainPanel_TopPanelContainer__TyfVE\",\"ListPanelContainer\":\"MainPanel_ListPanelContainer__1EJB6\",\"TopPanelHeader\":\"MainPanel_TopPanelHeader__ESXpC\",\"ListPanelTable\":\"MainPanel_ListPanelTable__pYsDw\",\"ListPanelTableTh\":\"MainPanel_ListPanelTableTh__cg+Lk\",\"ListPanelTableThFooter\":\"MainPanel_ListPanelTableThFooter__ZyENs\",\"ListPanelPaginationContainer\":\"MainPanel_ListPanelPaginationContainer__Tsw4o\",\"ListPanelPaginationCount\":\"MainPanel_ListPanelPaginationCount__DYRe9\",\"blurred\":\"MainPanel_blurred__jRE2Q\",\"clickable\":\"MainPanel_clickable__rGGvw\"};","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {useQuery} from '@apollo/client';\nimport {\n    getRecordsListQuery,\n    IGetRecordsListQuery,\n    IGetRecordsListQueryVariables\n} from 'queries/records/recordsListQuery';\nimport React, {useEffect, useMemo} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {Checkbox, Pagination, Select, Table} from 'semantic-ui-react';\nimport Loading from '../shared/Loading';\nimport RecordCard from '../shared/RecordCard';\nimport {IListProps} from './MainPanel';\nimport styles from './MainPanel.module.css';\nimport {ActionTypes} from './NavigatorReducer';\n\nexport default function ListPanel({state, dispatch}: IListProps) {\n    return !state.execSearch ? (\n        <List state={state} dispatch={dispatch} />\n    ) : (\n        <ListLoader\n            selectedRootQuery={state.selectedRootQuery}\n            filters={state.filters}\n            dispatch={dispatch}\n            offset={typeof state.offset === 'number' ? state.offset : null}\n            limit={state.selectedOffset}\n        />\n    );\n}\nfunction List({state, dispatch}: IListProps) {\n    const {t} = useTranslation();\n    const isSelectable = state.selectable;\n    const getHandleSelectionChanged = useMemo(() => {\n        return entity => (event, data) => {\n            const actionType = data.checked ? ActionTypes.SELECTION_ADD : ActionTypes.SELECTION_REMOVE;\n            dispatch({\n                type: actionType,\n                data: entity.whoAmI\n            });\n        };\n    }, [dispatch]);\n    const isSelected = useMemo(() => {\n        return idToSearch => {\n            return state.selection.find(elementInSelection => elementInSelection.id === idToSearch) !== undefined;\n        };\n    }, [state.selection]);\n    const onEdit = useMemo(() => {\n        const callback = state.onEditRecordClick ? state.onEditRecordClick : () => undefined;\n        return entity => (event, data) => {\n            callback(entity.whoAmI);\n        };\n    }, [state.onEditRecordClick]);\n    const _onChange = (e, pageInfo) => {\n        const activePage = pageInfo.activePage;\n        let offset = 0;\n        if (state.selectedOffset) {\n            offset = (activePage - 1) * state.selectedOffset;\n        }\n        const data = {offset, page: activePage};\n        dispatch({\n            type: ActionTypes.SET_OFFSET,\n            data\n        });\n    };\n    const _handleLimitChange = (e, data) => {\n        dispatch({\n            type: ActionTypes.SET_LIMIT,\n            data: {limit: data.value}\n        });\n    };\n    const totalPages =\n        state.totalCount && state.selectedOffset\n            ? Math.floor(state.totalCount / state.selectedOffset) + (state.totalCount % state.selectedOffset ? 1 : 0)\n            : 1;\n\n    const limitOptions = state.availableOffsets.map(x => {\n        return {text: x.toString(), value: x};\n    });\n\n    return (\n        <Table className={styles.ListPanelTable} selectable celled>\n            <Table.Header>\n                <Table.Row>\n                    {isSelectable && <Table.HeaderCell className={styles.ListPanelTableTh} />}\n                    <Table.HeaderCell className={styles.ListPanelTableTh}>ID</Table.HeaderCell>\n                    <Table.HeaderCell className={styles.ListPanelTableTh} />\n                </Table.Row>\n            </Table.Header>\n            <Table.Body>\n                {state.list.map(e => (\n                    <Table.Row key={e.whoAmI.id}>\n                        {isSelectable && (\n                            <Table.Cell width=\"1\">\n                                <Checkbox\n                                    toggle\n                                    onChange={getHandleSelectionChanged(e)}\n                                    checked={isSelected(e.whoAmI.id)}\n                                />\n                            </Table.Cell>\n                        )}\n                        <Table.Cell className={styles.clickable} width=\"3\" onClick={onEdit(e)}>\n                            <RecordCard record={e.whoAmI} />\n                        </Table.Cell>\n                        <Table.Cell width=\"12\" />\n                    </Table.Row>\n                ))}\n            </Table.Body>\n            <Table.Footer>\n                <Table.Row>\n                    <Table.HeaderCell className={styles.ListPanelTableThFooter} colSpan=\"3\">\n                        <div className={styles.ListPanelPaginationContainer}>\n                            <Pagination\n                                onPageChange={_onChange}\n                                activePage={state.currentPage ? state.currentPage : 1}\n                                value={state.selectedOffset ? state.selectedOffset : ''}\n                                totalPages={totalPages}\n                            />\n                            <p className={styles.ListPanelPaginationCount}>\n                                {state.totalCount} {state.selectedRootLabel}\n                            </p>\n                        </div>\n                        <br />\n                        <div style={{position: 'absolute', bottom: '3px', right: '2px'}}>\n                            <span style={{marginRight: '5px'}}>{t('navigator.select_range')}</span>\n                            <Select\n                                placeholder={t('navigator.select_range')}\n                                value={\n                                    state.selectedOffset\n                                        ? state.selectedOffset\n                                        : state.availableOffsets[state.availableOffsets.length - 1]\n                                }\n                                options={limitOptions}\n                                onChange={_handleLimitChange}\n                            />\n                        </div>\n                    </Table.HeaderCell>\n                </Table.Row>\n            </Table.Footer>\n        </Table>\n    );\n}\n\nfunction ListLoader({selectedRootQuery, filters, dispatch, offset, limit}) {\n    const {t} = useTranslation();\n    const listQuery = getRecordsListQuery(selectedRootQuery);\n\n    const filtersVar = filters.reduce((queryFilters, filter, index) => {\n        if (filters.length > 1 && index > 0) {\n            queryFilters.push({\n                operator: 'AND'\n            });\n        }\n\n        const newFilter = {\n            field: filter.attribute,\n            condition: 'EQUAL',\n            value: filter.value\n        };\n\n        queryFilters.push(newFilter);\n\n        return queryFilters;\n    }, []);\n\n    const pagination =\n        limit === null\n            ? null\n            : {\n                  offset: offset !== null ? offset : 0,\n                  limit\n              };\n\n    const {loading, error, data} = useQuery<IGetRecordsListQuery, IGetRecordsListQueryVariables>(listQuery, {\n        fetchPolicy: 'network-only',\n        variables: {\n            filters: filtersVar,\n            pagination\n        }\n    });\n\n    useEffect(() => {\n        if (!data) {\n            return;\n        }\n\n        dispatch({\n            type: ActionTypes.SET_LIST,\n            data: {...data[selectedRootQuery], offset, all}\n        });\n    }, [data]);\n\n    if (loading) {\n        return <Loading withDimmer />;\n    }\n    if (error) {\n        return <p data-testid=\"error\">{error.message}</p>;\n    }\n    if (!data) {\n        return <p data-testid=\"error\">No data</p>;\n    }\n\n    const all = t('navigator.display_all');\n\n    return null;\n}\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport React, {useMemo, useState} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {Button, Label, Icon, Divider} from 'semantic-ui-react';\n\nimport {IListProps} from './MainPanel';\nimport {ActionTypes} from './NavigatorReducer';\n\nimport styles from './MainPanel.module.css';\nimport EditRecordModal from '../records/EditRecordModal';\n\nexport default function TopPanel({state, dispatch}: IListProps) {\n    const {t} = useTranslation();\n    const [createRecordOpen, setCreateRecordOpen] = useState(false);\n\n    const {clearRoot, toggleFilters, makeOnFilterRemove, selectedRootAttributesById} = useMemo(() => {\n        return {\n            clearRoot: () => {\n                dispatch({\n                    type: ActionTypes.SET_SELECTED_ROOT,\n                    data: null\n                });\n            },\n            toggleFilters: () => {\n                dispatch({\n                    type: ActionTypes.TOGGLE_FILTERS,\n                    data: null\n                });\n            },\n            makeOnFilterRemove: i => e => {\n                e.stopPropagation();\n                dispatch({\n                    type: ActionTypes.FILTER_REMOVE,\n                    data: i\n                });\n                return false;\n            },\n            selectedRootAttributesById: state.selectedRootAttributes.reduce((acc, a) => {\n                acc[a.id] = a;\n                return acc;\n            }, {})\n        };\n    }, [dispatch, state.selectedRootAttributes]);\n\n    const _createNewRecord = () => {\n        setCreateRecordOpen(true);\n    };\n\n    const _onCloseEditRecordModal = () => {\n        setCreateRecordOpen(false);\n        dispatch({\n            type: ActionTypes.SET_FILTERS,\n            data: state.filters\n        });\n    };\n\n    return (\n        <div className={`ui block segment secondary height100 ${styles.TopPanelHeader}`}>\n            <h3>\n                {state.restrictToRoots.length !== 1 && (\n                    <Button size=\"tiny\" compact circular data-testid=\"clear_root\" onClick={clearRoot} icon=\"random\" />\n                )}\n                <i className=\"book icon\" />\n                {state.selectedRootLabel}\n            </h3>\n            <Button size=\"small\" data-testid=\"toggle_filters\" onClick={toggleFilters}>\n                <Icon name=\"edit\" />\n                {t('navigator.edit_filters')}\n            </Button>\n\n            <Button\n                icon\n                labelPosition=\"left\"\n                size=\"large\"\n                style={{position: 'absolute', right: '10px', top: '16px'}}\n                onClick={_createNewRecord}\n            >\n                <Icon name=\"plus\" />\n                {t('records.create_record')}\n            </Button>\n\n            <Divider />\n\n            <Label.Group onClick={toggleFilters} color=\"blue\">\n                {state.filters.map((f, i) => (\n                    <Label as=\"span\" image key={i}>\n                        {`${selectedRootAttributesById[f.attribute].label[state.lang[0]]} ${f.operator} ${f.value}`}\n                        <Label.Detail>\n                            <Icon name=\"delete\" onClick={makeOnFilterRemove(i)} />\n                        </Label.Detail>\n                    </Label>\n                ))}\n            </Label.Group>\n            {createRecordOpen && (\n                <EditRecordModal\n                    open\n                    onClose={_onCloseEditRecordModal}\n                    library={state.selectedRoot ? state.selectedRoot : ''}\n                />\n            )}\n        </div>\n    );\n}\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {useQuery} from '@apollo/client';\nimport gql from 'graphql-tag';\nimport React, {useEffect} from 'react';\nimport {Dimmer, Transition} from 'semantic-ui-react';\nimport Loading from '../shared/Loading';\nimport FiltersPanel from './FiltersPanel';\nimport ListPanel from './ListPanel';\nimport styles from './MainPanel.module.css';\nimport {ActionTypes, IReducerAction, IReducerState} from './NavigatorReducer';\nimport TopPanel from './TopPanel';\n\nexport interface IListProps {\n    state: IReducerState;\n    dispatch: (action: IReducerAction) => void;\n}\n\nexport default function MainPanel({state, dispatch}: IListProps) {\n    if (!state.selectedRootQuery || !state.selectedRootAttributes) {\n        return <GetLibraryInfos state={state} dispatch={dispatch} />;\n    }\n    return (\n        <Dimmer.Dimmable as={'div'} dimmed={state.showFilters} className=\"height100\">\n            <div className={`${styles.TopPanelContainer} ${state.showFilters ? styles.blurred : ''}`}>\n                <TopPanel state={state} dispatch={dispatch} />\n            </div>\n            <div className={`ui segment ${styles.ListPanelContainer} ${state.showFilters ? styles.blurred : ''}`}>\n                <ListPanel state={state} dispatch={dispatch} />\n            </div>\n            <Transition visible={state.showFilters} animation=\"fade left\" duration={350}>\n                <Dimmer.Inner\n                    active={state.showFilters}\n                    className=\"height100\"\n                    style={{backgroundColor: 'rgba(0,0,0,0.6)'}}\n                >\n                    <FiltersPanel state={state} dispatch={dispatch} />\n                </Dimmer.Inner>\n            </Transition>\n        </Dimmer.Dimmable>\n    );\n}\n\nexport const QUERY_LIBRARY_CONFIG = gql`\n    query QUERY_LIBRARY_CONFIG($id: ID, $lang: [AvailableLanguage!]) {\n        libraries(filters: {id: $id}) {\n            list {\n                id\n                label(lang: $lang)\n                gqlNames {\n                    query\n                    filter\n                }\n                attributes {\n                    id\n                    type\n                    format\n                    label(lang: $lang)\n                }\n            }\n        }\n    }\n`;\n\nfunction GetLibraryInfos({state, dispatch}: IListProps) {\n    const {loading, error, data} = useQuery(QUERY_LIBRARY_CONFIG, {\n        variables: {\n            id: state.selectedRoot,\n            lang: state.lang\n        }\n    });\n\n    useEffect(() => {\n        if (!data) {\n            return;\n        }\n\n        dispatch({\n            type: ActionTypes.SET_ROOT_INFOS,\n            data: {\n                label: data.libraries.list[0].label[`${state.lang[0]}`],\n                query: data.libraries.list[0].gqlNames.query,\n                filter: data.libraries.list[0].gqlNames.filter,\n                attributes: data.libraries.list[0].attributes\n            }\n        });\n    }, [data?.libraries]);\n\n    if (loading) {\n        return <Loading />;\n    }\n    if (error) {\n        return <p data-testid=\"error\">{error.message}</p>;\n    }\n\n    return null;\n}\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport React, {useReducer, useEffect} from 'react';\n\nimport useLang from '../../hooks/useLang';\nimport RootSelector from './RootSelector';\nimport MainPanel from './MainPanel';\nimport reducer, {ActionTypes, initialState} from './NavigatorReducer';\nimport {RecordIdentity_whoAmI} from '../../_gqlTypes/RecordIdentity';\n\nexport type SelectionChanged = (arr: RecordIdentity_whoAmI[]) => void;\nexport type GetSelectionRef = () => RecordIdentity_whoAmI[];\nexport type EditRecordClick = (record: RecordIdentity_whoAmI) => any;\n\nexport interface INavigatorProps {\n    restrictToRoots?: string[];\n    onSelectionChanged?: SelectionChanged;\n    multipleSelection?: boolean;\n    selectable?: boolean;\n    getSelectionRef?: React.MutableRefObject<GetSelectionRef | null>;\n    onEditRecordClick?: EditRecordClick;\n}\n\nfunction Navigator(props: INavigatorProps): JSX.Element {\n    const {lang} = useLang();\n    const [state, dispatch] = useReducer(reducer, {\n        ...initialState,\n        ...props,\n        lang,\n        selectedRoot: props.restrictToRoots && props.restrictToRoots.length === 1 ? props.restrictToRoots[0] : null\n    });\n    useEffect(() => {\n        if (props.getSelectionRef) {\n            props.getSelectionRef.current = () => {\n                return state.selection;\n            };\n        }\n    }, [props.getSelectionRef, state.selection]);\n    const rootSelected = (root: string) =>\n        dispatch({\n            type: ActionTypes.SET_SELECTED_ROOT,\n            data: root\n        });\n    return state.selectedRoot ? (\n        <MainPanel state={state} dispatch={dispatch} />\n    ) : (\n        <RootSelector restrictToRoots={state.restrictToRoots} lang={state.lang} onSelect={rootSelected} />\n    );\n}\nexport default Navigator;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport Navigator from './Navigator';\nexport default Navigator;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport React from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {Button, Modal} from 'semantic-ui-react';\nimport styled from 'styled-components';\nimport {RecordIdentity_whoAmI} from '../../../_gqlTypes/RecordIdentity';\nimport Navigator from '../../navigator';\n\nconst NavigatorModal = styled(Modal)`\n    max-height: 90vh;\n    overflow: auto;\n`;\n\ninterface IEditRecordFormSelectRecordProps {\n    open: boolean;\n    library: string | string[];\n    onSelect: (record: RecordIdentity_whoAmI) => void;\n    onClose: () => void;\n}\n\nconst EditRecordFormSelectRecord = ({\n    library,\n    open,\n    onClose,\n    onSelect\n}: IEditRecordFormSelectRecordProps): JSX.Element => {\n    const {t} = useTranslation();\n\n    return (\n        <NavigatorModal open={open} onClose={onClose}>\n            <Modal.Header>{t('records.select_record')}</Modal.Header>\n            <Navigator onEditRecordClick={onSelect} restrictToRoots={Array.isArray(library) ? library : [library]} />\n            <Modal.Actions>\n                <Button data-test-id=\"select-record-modal-close-btn\" onClick={onClose}>\n                    {t('admin.cancel')}\n                </Button>\n            </Modal.Actions>\n        </NavigatorModal>\n    );\n};\n\nexport default EditRecordFormSelectRecord;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport SelectRecordModal from './SelectRecordModal';\nexport default SelectRecordModal;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport React from 'react';\nimport styled from 'styled-components';\n\ninterface IColumnsDisplayProps {\n    columnsNumber: number;\n    columnsContent: JSX.Element[];\n}\n\ninterface IColumnProps {\n    columnsNumber: number;\n}\n\nconst Wrapper = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    height: 100%;\n`;\n\nconst Column = styled.div<IColumnProps>`\n    position: relative;\n    padding: 1em;\n    flex-direction: column;\n    display: flex;\n    text-align: center;\n    border-right: 1px solid #999999;\n    width: ${props => 100 / props.columnsNumber + '%'};\n\n    &:first-child {\n        padding-left: 0;\n    }\n\n    &:last-child {\n        border-right: none;\n        padding-right: 0;\n    }\n`;\n\nfunction ColumnsDisplay({columnsContent, columnsNumber}: IColumnsDisplayProps): JSX.Element {\n    return (\n        <Wrapper>\n            {columnsContent.map((c, i) => (\n                <Column columnsNumber={columnsNumber} key={i}>\n                    {c}\n                </Column>\n            ))}\n        </Wrapper>\n    );\n}\n\nexport default ColumnsDisplay;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport ColumnsDisplay from './ColumnsDisplay';\nexport default ColumnsDisplay;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport React from 'react';\nimport {Form, Label} from 'semantic-ui-react';\n\nexport interface IFormFieldWrapperProps {\n    error?: string;\n    children: React.ReactNode;\n}\n\nfunction FormFieldWrapper({error, children}: IFormFieldWrapperProps): JSX.Element {\n    const childrenList: React.ReactNode[] = children ? (!Array.isArray(children) ? [children] : children) : [];\n\n    return (\n        <Form.Field>\n            {childrenList.map((c, i) => React.cloneElement(c as React.ReactElement<any>, {error: !!error, key: i}))}\n            {!!error && <Label pointing=\"above\">{typeof error !== 'string' ? JSON.stringify(error) : error}</Label>}\n        </Form.Field>\n    );\n}\n\nexport default FormFieldWrapper;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport FormFieldWrapper from './FormFieldWrapper';\nexport default FormFieldWrapper;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport React from 'react';\nimport {Modal, Breadcrumb, Table} from 'semantic-ui-react';\nimport styled from 'styled-components';\nimport {RecordIdentity_whoAmI} from '../../../../_gqlTypes/RecordIdentity';\nimport RecordCard from '../../RecordCard';\nimport * as Crypto from 'crypto';\n\nconst PathPartWrapper = styled.div`\n    position: relative;\n    padding-right: 30px;\n    height: 30px;\n`;\n\nfunction AltPaths({\n    altPaths = [],\n    onClose\n}: {\n    altPaths: RecordIdentity_whoAmI[][];\n    onClose: React.Dispatch<React.SetStateAction<boolean>>;\n}): JSX.Element {\n    return (\n        <Modal size={'fullscreen'} open onClose={() => onClose(false)}>\n            <Modal.Content>\n                <Table>\n                    <Table.Body>\n                        {altPaths.map(p => (\n                            <Table.Row key={p.map(e => e.id).join('')}>\n                                <Table.Cell collapsing>\n                                    <Breadcrumb\n                                        sections={p.map(r => ({\n                                            key: r.id,\n                                            content: (\n                                                <PathPartWrapper data-test-id=\"path_part_wrapper\">\n                                                    <RecordCard record={r} />\n                                                </PathPartWrapper>\n                                            ),\n                                            link: false,\n                                            active: false\n                                        }))}\n                                        icon=\"right angle\"\n                                    />\n                                </Table.Cell>\n                            </Table.Row>\n                        ))}\n                    </Table.Body>\n                </Table>\n            </Modal.Content>\n        </Modal>\n    );\n}\n\nexport default AltPaths;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport AltPaths from './AltPaths';\nexport default AltPaths;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport React, {useState} from 'react';\nimport {Dropdown, Icon} from 'semantic-ui-react';\nimport styled from 'styled-components';\nimport {RecordIdentity_whoAmI} from '../../../../_gqlTypes/RecordIdentity';\nimport RecordCard from '../../RecordCard';\nimport {ITreeBreadcrumbMenuItem} from '../TreeNodeBreadcrumb';\nimport {useTranslation} from 'react-i18next';\nimport AltPaths from '../AltPaths';\n\ninterface IPathPartProps {\n    record: RecordIdentity_whoAmI;\n    actions?: ITreeBreadcrumbMenuItem[];\n    altPaths?: RecordIdentity_whoAmI[][];\n}\n\nconst PathPartWrapper = styled.div`\n    position: relative;\n    padding-right: 30px;\n    height: 30px;\n`;\n\nconst HoverDropdown = styled(Dropdown)`\n    && {\n        position: absolute;\n        top: 7px;\n        right: 0;\n    }\n`;\n\nfunction PathPart({record, altPaths = [], actions = []}: IPathPartProps): JSX.Element {\n    const [isHovering, setIsHovering] = useState<boolean>(false);\n    const _handleMouseEnter = () => setIsHovering(true);\n    const _handleMouseLeave = () => setIsHovering(false);\n    const [showAltPaths, setShowAltPaths] = useState<boolean>(false);\n    const {t} = useTranslation();\n\n    const menuItems = actions\n        .filter(a => !a.displayFilter || a.displayFilter(record))\n        .map((item, index) => {\n            const action = () => item.action(record);\n            return <Dropdown.Item key={index} text={item.text} icon={item.icon} onClick={action} />;\n        });\n\n    if (altPaths.length) {\n        menuItems.push(\n            <Dropdown.Item\n                key=\"altPaths\"\n                text={t('trees.alternative_paths')}\n                icon=\"list\"\n                onClick={() => setShowAltPaths(true)}\n            />\n        );\n    }\n\n    const displayMenu = !!menuItems.length;\n    const showMenuBtn = <Icon name=\"ellipsis vertical\" />;\n\n    return (\n        <PathPartWrapper\n            data-test-id=\"path_part_wrapper\"\n            onMouseEnter={_handleMouseEnter}\n            onMouseLeave={_handleMouseLeave}\n        >\n            <RecordCard record={record} />\n            {displayMenu && isHovering && (\n                <HoverDropdown trigger={showMenuBtn} icon={false}>\n                    <Dropdown.Menu>{menuItems}</Dropdown.Menu>\n                </HoverDropdown>\n            )}\n            {showAltPaths && <AltPaths altPaths={altPaths} onClose={setShowAltPaths}></AltPaths>}\n        </PathPartWrapper>\n    );\n}\n\nexport default PathPart;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport PathPart from './PathPart';\nexport default PathPart;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport React from 'react';\nimport {Breadcrumb, BreadcrumbSectionProps} from 'semantic-ui-react';\nimport {RecordIdentity_whoAmI} from '../../../_gqlTypes/RecordIdentity';\nimport {ITreeLinkElement} from '../../../_types/records';\nimport PathPart from './PathPart';\n\nexport interface ITreeBreadcrumbMenuItem {\n    text: string;\n    icon: string;\n    action: (r: RecordIdentity_whoAmI) => void;\n    displayFilter?: (r: RecordIdentity_whoAmI) => boolean;\n}\n\ninterface ITreeNodeBreadcrumbProps {\n    element: ITreeLinkElement;\n    actions?: ITreeBreadcrumbMenuItem[];\n}\n\nfunction TreeNodeBreadcrumb({element, actions}: ITreeNodeBreadcrumbProps): JSX.Element {\n    const breadcrumbSections: BreadcrumbSectionProps[] = [];\n    const altPaths: RecordIdentity_whoAmI[][] = [];\n\n    if (element.ancestors?.length) {\n        const defaultPath = element.ancestors.slice(0, -1);\n\n        for (const el of defaultPath) {\n            breadcrumbSections.push({\n                key: el.record?.whoAmI?.id,\n                content: <PathPart record={el.record?.whoAmI} actions={actions} />,\n                link: false,\n                active: false\n            });\n        }\n    }\n\n    const elementRecord = element.record;\n    if (!!elementRecord && elementRecord.whoAmI) {\n        breadcrumbSections.push({\n            key: elementRecord.whoAmI.id,\n            content: <PathPart record={elementRecord.whoAmI} actions={actions} altPaths={altPaths} />,\n            link: false,\n            active: true\n        });\n    }\n\n    return <Breadcrumb sections={breadcrumbSections} icon=\"right angle\" />;\n}\n\nexport default TreeNodeBreadcrumb;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport TreeNodeBreadcrumb from './TreeNodeBreadcrumb';\nexport default TreeNodeBreadcrumb;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport SelectTreeNodeModal from './SelectTreeNodeModal';\nexport default SelectTreeNodeModal;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {useQuery} from '@apollo/client';\nimport React, {useState} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {NodeData} from 'react-sortable-tree';\nimport {Button, Modal} from 'semantic-ui-react';\nimport {ITreeNodeData} from '_types/trees';\nimport {getTreeByIdQuery} from '../../../queries/trees/getTreeById';\nimport {GET_TREE_BY_ID, GET_TREE_BY_IDVariables} from '../../../_gqlTypes/GET_TREE_BY_ID';\nimport Loading from '../../shared/Loading';\nimport TreeExplorer from '../TreeExplorer';\n\ninterface ISelectTreeNodeModalProps {\n    tree: string;\n    onSelect: (node: NodeData) => void;\n    open: boolean;\n    onClose: () => void;\n}\n\nconst SelectTreeNodeModal = ({open, tree, onSelect, onClose}: ISelectTreeNodeModalProps): JSX.Element => {\n    const {t} = useTranslation();\n    const [currentSelection, setCurrentSelection] = useState<ITreeNodeData[] | null>(null);\n    const {loading, error, data} = useQuery<GET_TREE_BY_ID, GET_TREE_BY_IDVariables>(getTreeByIdQuery, {\n        variables: {\n            id: tree\n        }\n    });\n\n    const _handleNodeSelection = (node: ITreeNodeData) => setCurrentSelection([node]);\n    const _handleSubmit = () => {\n        const selectedNode = currentSelection![0];\n\n        return onSelect(selectedNode);\n    };\n\n    if (loading) {\n        return <Loading />;\n    }\n\n    if (error) {\n        return <p>ERROR {error}</p>;\n    }\n\n    if (!data || !data.trees || !data.trees.list.length) {\n        return <p>Unknown tree</p>;\n    }\n\n    const treeSettings = data.trees.list[0];\n\n    return (\n        <Modal open={open} onClose={onClose} closeIcon>\n            <Modal.Header>{t('trees.select_tree_node')}</Modal.Header>\n            <Modal.Content style={{height: '80vh'}}>\n                <TreeExplorer\n                    tree={treeSettings}\n                    onClickNode={_handleNodeSelection}\n                    readOnly\n                    selection={currentSelection}\n                />\n            </Modal.Content>\n            <Modal.Actions>\n                <Button\n                    data-test-id=\"select_tree_node_close_btn\"\n                    negative\n                    content={t('admin.cancel')}\n                    icon=\"cancel\"\n                    onClick={onClose}\n                />\n                {currentSelection && currentSelection.length && (\n                    <Button\n                        data-test-id=\"select_tree_node_submit_btn\"\n                        positive\n                        content={t('admin.submit')}\n                        icon=\"check\"\n                        onClick={_handleSubmit}\n                    />\n                )}\n            </Modal.Actions>\n        </Modal>\n    );\n};\n\nexport default SelectTreeNodeModal;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport gql from 'graphql-tag';\nimport {recordIdentityFragment} from 'queries/records/recordIdentityFragment';\n\nexport const getTreeNodeChildrenQuery = gql`\n    ${recordIdentityFragment}\n    query TREE_NODE_CHILDREN($treeId: ID!, $node: ID, $pagination: Pagination) {\n        treeNodeChildren(treeId: $treeId, node: $node, pagination: $pagination) {\n            list {\n                id\n                order\n                childrenCount\n                record {\n                    ...RecordIdentity\n                }\n            }\n        }\n    }\n`;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport gql from 'graphql-tag';\n\nexport const addTreeElementQuery = gql`\n    mutation ADD_TREE_ELEMENT($treeId: ID!, $element: TreeElementInput!, $parent: ID) {\n        treeAddElement(treeId: $treeId, element: $element, parent: $parent, order: 0) {\n            id\n        }\n    }\n`;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport gql from 'graphql-tag';\n\nexport const deleteTreeElementQuery = gql`\n    mutation DELETE_TREE_ELEMENT($treeId: ID!, $nodeId: ID!, $deleteChildren: Boolean) {\n        treeDeleteElement(treeId: $treeId, nodeId: $nodeId, deleteChildren: $deleteChildren)\n    }\n`;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport gql from 'graphql-tag';\n\nexport const moveTreeElementQuery = gql`\n    mutation MOVE_TREE_ELEMENT($treeId: ID!, $nodeId: ID!, $parentTo: ID, $order: Int) {\n        treeMoveElement(treeId: $treeId, nodeId: $nodeId, parentTo: $parentTo, order: $order) {\n            id\n        }\n    }\n`;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport EditRecordModal from 'components/records/EditRecordModal';\nimport SelectRecordModal from 'components/records/SelectRecordModal';\nimport Loading from 'components/shared/Loading';\nimport useLang from 'hooks/useLang';\nimport React, {useState} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {\n    NodeData,\n    OnDragPreviousAndNextLocation,\n    SortableTreeWithoutDndContext as SortableTree\n} from 'react-sortable-tree';\nimport {Button, Confirm, Dropdown, Icon, Label, Modal} from 'semantic-ui-react';\nimport styled from 'styled-components';\nimport {activeItemColor} from 'themingVar';\nimport {getTreeNodeKey, localizedLabel, stringToColor} from 'utils';\nimport {GET_TREE_BY_ID_trees_list} from '_gqlTypes/GET_TREE_BY_ID';\nimport {RecordIdentity_whoAmI} from '_gqlTypes/RecordIdentity';\nimport {fakeRootId, IExtendedTreeNodeData, ITreeNode, ITreeNodeData} from '_types/trees';\nimport {\n    AddTreeElementHandler,\n    ClickNodeHandler,\n    DeleteNodeHandler,\n    MoveNodeHandler,\n    NodeVisibilityToggleHandler,\n    TreeChangeHandler\n} from '../_types';\n\nconst Wrapper = styled.div<{compact: boolean}>`\n    /** Overrides some SortableTree CSS rules **/\n    .rst__rowContents {\n        padding: 0;\n        background: transparent;\n        height: 100%;\n        ${props =>\n            props.compact\n                ? `\n        min-width: 130px;\n        border: none;\n        box-shadow: none;\n        `\n                : ''}\n    }\n\n    .rst__rowLabel {\n        height: 100%;\n    }\n\n    .rst__rowTitle {\n        height: 100%;\n    }\n\n    .rst__row.tree-node {\n        cursor: pointer;\n        height: 100%;\n    }\n\n    .rst__row.tree-node.selected {\n        background: ${activeItemColor};\n    }\n    .rst__rowWrapper {\n        padding: 3px 0;\n    }\n    .rst__moveHandle,\n    .rst__loadingHandle {\n        width: 30px;\n    }\n\n    ${props =>\n        props.compact\n            ? `\n    .rst__collapseButton,\n    .rst__expandButton {\n        background-size: 16px;\n        width: 12px;\n        height: 12px;\n    }\n    .rst__collapseButton:hover:not(:active),\n    .rst__expandButton:hover:not(:active) {\n        background-size: 20px;\n        width: 16px;\n        height: 16px;\n    }\n    `\n            : ''}\n`;\n\ninterface ITreeExplorerViewProps {\n    treeSettings: GET_TREE_BY_ID_trees_list;\n    treeData: ITreeNode[];\n    onTreeChange: TreeChangeHandler;\n    onVisibilityToggle: NodeVisibilityToggleHandler;\n    onMoveNode: MoveNodeHandler;\n    onDeleteNode: DeleteNodeHandler;\n    readOnly: boolean;\n    onClickNode?: ClickNodeHandler;\n    selection?: ITreeNodeData[] | null;\n    onAddElement?: AddTreeElementHandler;\n    compact?: boolean;\n}\n\ninterface IEditionState {\n    recordId?: string;\n    library: string;\n    parent: string | null;\n    path: string[];\n}\n\nconst LibIconLabel = styled(Label)`\n    background-color: ${props => props.bgcolor};\n`;\n\nconst initialEditionState: IEditionState = {\n    library: '',\n    path: [],\n    parent: null\n};\n\nconst TreeExplorerView = ({\n    treeSettings,\n    treeData,\n    onTreeChange,\n    onVisibilityToggle,\n    onMoveNode,\n    onDeleteNode,\n    onClickNode,\n    selection,\n    readOnly,\n    onAddElement,\n    compact = false\n}: ITreeExplorerViewProps) => {\n    const {t} = useTranslation();\n    const availableLanguages = useLang().lang;\n    const [editRecordModalOpen, setEditRecordModalOpen] = useState<boolean>(false);\n    const [openDeleteConfirm, setOpenDeleteConfirm] = useState<boolean>(false);\n    const [openAddElementModal, setOpenAddElementModal] = useState<boolean>(false);\n    const [openSelectRecordModal, setOpenSelectRecordModal] = useState<boolean>(false);\n    const [nodeToDelete, setNodeToDelete] = useState<ITreeNodeData>();\n\n    const [editionState, setEditionState] = useState<IEditionState>(initialEditionState);\n\n    const _handleOpenDeleteConfirm = (node: ITreeNodeData) => {\n        setNodeToDelete(node);\n        setOpenDeleteConfirm(true);\n    };\n\n    const _handleCloseDeleteConfirm = () => setOpenDeleteConfirm(false);\n\n    const _handleOpenAddElementModal = (parent: string, path: string[], library: string) => () => {\n        setOpenAddElementModal(true);\n        setEditionState({\n            parent,\n            library,\n            path\n        });\n    };\n    const _handleCloseAddElementModal = () => setOpenAddElementModal(false);\n\n    const _handleOpenSelectRecordModal = () => {\n        _handleCloseAddElementModal();\n        setOpenSelectRecordModal(true);\n    };\n    const _handleCloseSelectRecordModal = () => setOpenSelectRecordModal(false);\n    const _handleSelectElement = (record: RecordIdentity_whoAmI) => {\n        if (!editionState.parent || !onAddElement) {\n            return;\n        }\n\n        onAddElement(record, editionState.parent, editionState.path);\n        _handleCloseSelectRecordModal();\n    };\n\n    const _openEditRecordModal = (params?: {\n        parent: string;\n        library: string;\n        recordId?: string;\n        path: string[];\n    }) => () => {\n        setOpenAddElementModal(false);\n        setEditRecordModalOpen(true);\n        if (!!params) {\n            setEditionState(params);\n        }\n    };\n\n    const _handleEditRecordPostSave = (record: RecordIdentity_whoAmI | undefined) => {\n        setEditRecordModalOpen(false);\n        if (record && !editionState.recordId && editionState.parent && !!onAddElement) {\n            return onAddElement(record, editionState.parent, editionState.path);\n        }\n    };\n\n    const _handleDelete = () => {\n        _handleCloseDeleteConfirm();\n        return nodeToDelete && onDeleteNode(nodeToDelete);\n    };\n\n    const _genNodeProps = (rowInfo: IExtendedTreeNodeData) => {\n        const onClick =\n            onClickNode &&\n            ((e: any) => {\n                if (e.target.className !== 'rst__expandButton' && e.target.className !== 'rst__collapseButton') {\n                    onClickNode({...rowInfo});\n                }\n            });\n\n        const nodeClasses = ['tree-node'];\n\n        if (selection && selection.find(n => getTreeNodeKey(n) === getTreeNodeKey(rowInfo))) {\n            nodeClasses.push('selected');\n        }\n\n        const _handleClickDelete = () => _handleOpenDeleteConfirm(rowInfo);\n        const isFakeRoot = rowInfo.node.isFakeRoot;\n        return {\n            canDrag: !readOnly && !isFakeRoot,\n            buttons: [\n                !readOnly && (\n                    <Dropdown pointing={false} basic compact icon=\"ellipsis vertical\">\n                        <Dropdown.Menu>\n                            {!isFakeRoot && (\n                                <>\n                                    <Dropdown.Item\n                                        key=\"edit_record_btn_item\"\n                                        text={t('records.edit')}\n                                        icon=\"edit outline\"\n                                        onClick={_openEditRecordModal({\n                                            parent: rowInfo.parentNode?.id ?? fakeRootId,\n                                            library: rowInfo.node.record.library?.id,\n                                            recordId: rowInfo.node.record.id,\n                                            path: rowInfo.path as string[]\n                                        })}\n                                    />\n                                    <Dropdown.Item\n                                        key=\"delete_record_btn_item\"\n                                        text={t('trees.delete')}\n                                        icon=\"alternate trash outline\"\n                                        onClick={_handleClickDelete}\n                                    />\n                                    <Dropdown.Divider />\n                                </>\n                            )}\n                            <Dropdown.Header icon=\"plus square outline\" content={t('trees.add_element')} />\n                            {treeSettings.libraries.map(lib => (\n                                <Dropdown.Item\n                                    key={`add_record_btn_item_${lib.library.id}`}\n                                    text={localizedLabel(lib.library.label, availableLanguages)}\n                                    onClick={_handleOpenAddElementModal(\n                                        rowInfo.node.id,\n                                        rowInfo.path as string[],\n                                        lib.library.id\n                                    )}\n                                    label={\n                                        <LibIconLabel\n                                            circular\n                                            bgcolor={stringToColor(lib.library.id)}\n                                            content={lib.library.id[0].toUpperCase()}\n                                        />\n                                    }\n                                />\n                            ))}\n                        </Dropdown.Menu>\n                    </Dropdown>\n                )\n            ],\n            className: nodeClasses.join(' '),\n            onClick\n        };\n    };\n\n    const canDrop = (d: OnDragPreviousAndNextLocation & NodeData) => {\n        return d.nextParent !== null;\n    };\n\n    const orTxt = t('admin.or');\n\n    const theme = {\n        scaffoldBlockPxWidth: compact ? 25 : 35,\n        rowHeight: compact ? 35 : 50,\n        slideRegionSize: compact ? 30 : 50\n    };\n\n    return (\n        <Wrapper className=\"grow height100\" compact={compact}>\n            {!treeData?.length ? (\n                <Loading withDimmer />\n            ) : (\n                <SortableTree\n                    data-test-id=\"sortable-tree\"\n                    canDrag={!readOnly}\n                    canDrop={canDrop}\n                    treeData={treeData}\n                    onChange={onTreeChange}\n                    onVisibilityToggle={onVisibilityToggle}\n                    getNodeKey={getTreeNodeKey}\n                    generateNodeProps={_genNodeProps}\n                    onMoveNode={onMoveNode}\n                    theme={theme}\n                />\n            )}\n            <EditRecordModal\n                open={editRecordModalOpen}\n                onClose={_handleEditRecordPostSave}\n                recordId={editionState.recordId}\n                library={editionState.library}\n            />\n            {!readOnly && (\n                <>\n                    <Confirm\n                        data-test-id=\"delete_confirm_modal\"\n                        open={openDeleteConfirm}\n                        onCancel={_handleCloseDeleteConfirm}\n                        onConfirm={_handleDelete}\n                        content={t('records.delete_confirm')}\n                    />\n                    <Modal open={openAddElementModal} onClose={_handleCloseAddElementModal} closeIcon>\n                        <Modal.Header>\n                            <Icon name=\"plus square outline\" />\n                            {t('trees.add_element')}\n                        </Modal.Header>\n                        <Modal.Content style={{textAlign: 'center'}}>\n                            <Button.Group size=\"large\">\n                                <Button type=\"button\" onClick={_openEditRecordModal()}>\n                                    <Icon name=\"plus circle\" />\n                                    {t('records.create_record')}\n                                </Button>\n                                <Button.Or text={orTxt} />\n                                <Button type=\"button\" onClick={_handleOpenSelectRecordModal}>\n                                    <Icon name=\"search\" />\n                                    {t('records.select_record')}\n                                </Button>\n                            </Button.Group>\n                        </Modal.Content>\n                    </Modal>\n                    <SelectRecordModal\n                        open={openSelectRecordModal}\n                        library={editionState.library}\n                        onClose={_handleCloseSelectRecordModal}\n                        onSelect={_handleSelectElement}\n                    />\n                </>\n            )}\n        </Wrapper>\n    );\n};\nexport default TreeExplorerView;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport TreeExplorerView from './TreeExplorerView';\nexport default TreeExplorerView;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {useApolloClient} from '@apollo/client';\nimport {FetchResult} from 'apollo-link';\nimport {ITreeItem} from 'components/attributes/EditAttribute/EditAttributeTabs/EmbeddedFieldsTab/EmbeddedFieldsTab';\nimport {getTreeNodeChildrenQuery} from 'queries/trees/treeNodeChildrenQuery';\nimport React, {useState} from 'react';\nimport {addNodeUnderParent, changeNodeAtPath, find, getNodeAtPath, removeNodeAtPath} from 'react-sortable-tree';\nimport 'react-sortable-tree/style.css';\nimport {Icon, Message} from 'semantic-ui-react';\nimport styled from 'styled-components';\nimport {\n    TREE_NODE_CHILDREN,\n    TREE_NODE_CHILDRENVariables,\n    TREE_NODE_CHILDREN_treeNodeChildren_list\n} from '_gqlTypes/TREE_NODE_CHILDREN';\nimport {fakeRootId, ITreeNode, ITreeNodeData} from '_types/trees';\nimport {WithOptional} from '_types/WithOptional';\nimport {addTreeElementQuery} from '../../../queries/trees/treeAddElementMutation';\nimport {deleteTreeElementQuery} from '../../../queries/trees/treeDeleteElementMutation';\nimport {moveTreeElementQuery} from '../../../queries/trees/treeMoveElementMutation';\nimport {getTreeNodeKey} from '../../../utils/utils';\nimport {ADD_TREE_ELEMENT, ADD_TREE_ELEMENTVariables} from '../../../_gqlTypes/ADD_TREE_ELEMENT';\nimport {DELETE_TREE_ELEMENT, DELETE_TREE_ELEMENTVariables} from '../../../_gqlTypes/DELETE_TREE_ELEMENT';\nimport {GET_TREE_BY_ID_trees_list} from '../../../_gqlTypes/GET_TREE_BY_ID';\nimport {MOVE_TREE_ELEMENT, MOVE_TREE_ELEMENTVariables} from '../../../_gqlTypes/MOVE_TREE_ELEMENT';\nimport RecordCard from '../../shared/RecordCard';\nimport TreeExplorerView from './TreeExplorerView';\nimport {\n    AddTreeElementHandler,\n    ClickNodeHandler,\n    DeleteNodeHandler,\n    MoveNodeHandler,\n    NodeVisibilityToggleHandler\n} from './_types';\n\ninterface ITreeExplorerProps {\n    tree: GET_TREE_BY_ID_trees_list;\n    readOnly?: boolean;\n    onClickNode?: (nodeData: ITreeNodeData) => void;\n    selection?: ITreeNodeData[] | null;\n    withFakeRoot?: boolean;\n    fakeRootLabel?: string;\n    compact?: boolean;\n    startAt?: string;\n}\n\ntype ConvertTreeRecordNode = WithOptional<TREE_NODE_CHILDREN_treeNodeChildren_list, 'order'>;\nconst _convertTreeRecord = (nodes: ConvertTreeRecordNode[], compact: boolean): ITreeItem[] => {\n    return nodes.map(\n        (n: ConvertTreeRecordNode): ITreeItem => {\n            const nodeTitle =\n                n.id !== fakeRootId && !compact ? (\n                    <RecordCard record={n.record.whoAmI} style={{height: '100%'}} />\n                ) : (\n                    <RootElem>{n.record.whoAmI.label ?? n.record.whoAmI.id}</RootElem>\n                );\n\n            return {\n                ...n,\n                title: nodeTitle,\n                expanded: false,\n                // Actual children loading will be handle by the _loadChildren function.\n                // Assigning an empty function here just displays the \"+\" button if we have children\n                children: n.childrenCount ? () => null : null,\n                path: []\n            };\n        }\n    );\n};\n\nconst RootElem = styled.div`\n    height: 100%;\n    padding-left: 0.5rem;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n`;\n\nconst TreeExplorer = ({\n    tree,\n    readOnly,\n    onClickNode,\n    selection,\n    withFakeRoot,\n    fakeRootLabel,\n    startAt,\n    compact = false\n}: ITreeExplorerProps) => {\n    const apolloClient = useApolloClient();\n\n    const fakeRootData = [\n        {\n            id: fakeRootId,\n            record: {\n                id: fakeRootId,\n                library: {id: fakeRootId, label: null},\n                whoAmI: {\n                    id: fakeRootId,\n                    label: fakeRootLabel || '',\n                    color: 'transparent',\n                    library: {id: fakeRootId, label: null},\n                    preview: null\n                },\n                isFakeRoot: true\n            },\n            childrenCount: 0,\n            order: 0\n        }\n    ];\n\n    const initTreeData = withFakeRoot ? _convertTreeRecord(fakeRootData, compact) : [];\n\n    const [treeData, setTreeData] = useState<ITreeNode[]>(initTreeData);\n    const [loaded, setLoaded] = useState<boolean>(false);\n    const [error, setError] = useState<string>();\n\n    /**\n     * Retrieve node children.\n     * We retrieve current node children + first level children to know if we must display \"expand\" button\n     *\n     * @param parent\tNo parent = root\n     * @param path      No path = root\n     * @param expand    Should expand node?\n     */\n    const _loadChildren = async (parent?: string | null, path?: Array<string | number>, expand: boolean = true) => {\n        const withPath = !!path;\n\n        // Retrieve data\n        const data = await apolloClient.query<TREE_NODE_CHILDREN, TREE_NODE_CHILDRENVariables>({\n            query: getTreeNodeChildrenQuery,\n            variables: {\n                treeId: tree.id,\n                node: parent || null\n            }\n        });\n\n        const convertedRecords = data.data.treeNodeChildren\n            ? _convertTreeRecord(data.data.treeNodeChildren.list, compact).map(i => ({...i, path}))\n            : [];\n\n        // Update tree node with fetched data\n        // We must get fresh node data from in case its state has changed during loading (expand/collapse...)\n        const nodeToUpdate = getNodeAtPath({treeData, path: path!, getNodeKey: getTreeNodeKey}) as ITreeNodeData;\n\n        let newTreeData;\n        if (!withPath) {\n            newTreeData = convertedRecords;\n        } else if (nodeToUpdate !== null) {\n            newTreeData = _mergeNode(\n                {\n                    ...nodeToUpdate.node,\n                    loading: false,\n                    loaded: true,\n                    children: convertedRecords,\n                    expanded: expand\n                },\n                path!\n            );\n        }\n\n        setLoaded(true);\n        setTreeData(newTreeData);\n        setError('');\n    };\n\n    /**\n     * Save a node move: save its new position and new order of its siblings\n     *\n     * @param client\n     * @param moveData\n     */\n    const _saveMove: MoveNodeHandler = async moveData => {\n        // Parent node in tree\n        const parentNode = moveData.nextParentNode as ITreeNode;\n\n        // Parent element to save\n        const parentTo = parentNode !== null && parentNode.id !== fakeRootId ? parentNode.id : null;\n\n        // Get new element position\n        let position = moveData.treeIndex;\n        if (parentNode !== null) {\n            const parentNodeAtPath = getNodeAtPath({\n                treeData,\n                path: moveData.nextPath.slice(0, -1),\n                getNodeKey: getTreeNodeKey\n            });\n            position = parentNodeAtPath ? moveData.treeIndex - parentNodeAtPath.treeIndex - 1 : moveData.treeIndex;\n        }\n\n        try {\n            // Save element move\n            await apolloClient.mutate<MOVE_TREE_ELEMENT, MOVE_TREE_ELEMENTVariables>({\n                mutation: moveTreeElementQuery,\n                variables: {\n                    treeId: tree.id,\n                    nodeId: moveData.node.id,\n                    parentTo,\n                    order: position\n                }\n            });\n\n            // Update positions (field 'order') for all siblings in destination\n            const siblings = parentNode !== null ? parentNode.children : treeData;\n            if (siblings?.length) {\n                await Promise.all(\n                    (siblings as ITreeItem[]).map(\n                        (s, i): Promise<void | FetchResult<MOVE_TREE_ELEMENT>> => {\n                            return getTreeNodeKey({node: s}) !== getTreeNodeKey(moveData) // Skip moved element\n                                ? apolloClient.mutate<MOVE_TREE_ELEMENT, MOVE_TREE_ELEMENTVariables>({\n                                      mutation: moveTreeElementQuery,\n                                      variables: {\n                                          treeId: tree.id,\n                                          nodeId: s.id,\n                                          parentTo,\n                                          order: i\n                                      }\n                                  })\n                                : Promise.resolve();\n                        }\n                    )\n                );\n            }\n            setError('');\n        } catch (err) {\n            const message = err.graphQLErrors?.[0]?.extensions?.fields?.element ?? err.message;\n            setError(message);\n        }\n    };\n\n    const _deleteNode: DeleteNodeHandler = async node => {\n        const variables: DELETE_TREE_ELEMENTVariables = {\n            treeId: tree.id,\n            nodeId: node.node.id\n        };\n\n        await apolloClient.mutate<DELETE_TREE_ELEMENT, DELETE_TREE_ELEMENTVariables>({\n            mutation: deleteTreeElementQuery,\n            variables\n        });\n\n        const updatedTree = removeNodeAtPath({\n            treeData,\n            path: node.path,\n            getNodeKey: getTreeNodeKey\n        });\n        setTreeData(updatedTree as ITreeNode[]);\n        setError('');\n    };\n\n    const _mergeNode = (nodeData: ITreeNode, path: Array<string | number>): ITreeNode[] => {\n        return changeNodeAtPath({treeData, path, newNode: nodeData, getNodeKey: getTreeNodeKey}) as ITreeNode[];\n    };\n\n    const _handleClickNode: ClickNodeHandler = nodeData => {\n        // Add all parents details on selected node\n        const hydratedPath = nodeData.path.map(nodeKey => {\n            // All we have is the parent key, so we need to find matching node in tree data\n            const findRes = find({\n                treeData,\n                getNodeKey: getTreeNodeKey,\n                searchQuery: nodeKey,\n                searchMethod: d => {\n                    return d.node.id === nodeKey;\n                }\n            });\n\n            return findRes.matches.length ? findRes.matches[0].node : null;\n        });\n\n        return onClickNode ? onClickNode({...nodeData, node: {...nodeData.node, parents: hydratedPath}}) : undefined;\n    };\n\n    /**\n     * Add an element to the tree: send save query and update tree data\n     *\n     * @param client\n     * @param record\n     * @param parent\n     */\n    const _handleAddElement: AddTreeElementHandler = async (record, parent, path) => {\n        try {\n            const addResult = await apolloClient.mutate<ADD_TREE_ELEMENT, ADD_TREE_ELEMENTVariables>({\n                mutation: addTreeElementQuery,\n                variables: {\n                    treeId: tree.id,\n                    element: {\n                        id: record.id,\n                        library: record.library.id\n                    },\n                    parent: parent !== fakeRootId ? parent : null\n                }\n            });\n\n            const newRecord = {\n                id: addResult.data.treeAddElement.id,\n                record: {\n                    id: record.id,\n                    library: record.library,\n                    whoAmI: record\n                },\n                childrenCount: 0,\n                order: 0\n            };\n\n            const parentKey = getTreeNodeKey({node: {id: parent, path}});\n            const updatedTree = addNodeUnderParent({\n                treeData,\n                newNode: _convertTreeRecord([newRecord], compact)[0],\n                parentKey,\n                getNodeKey: getTreeNodeKey,\n                expandParent: true\n            });\n            setTreeData(updatedTree.treeData as ITreeNode[]);\n            setError('');\n        } catch (err) {\n            const message = err.graphQLErrors?.[0]?.extensions?.fields?.element ?? err.message;\n            setError(message);\n        }\n    };\n\n    if (!loaded) {\n        const path = withFakeRoot ? [fakeRootId] : undefined;\n        _loadChildren(startAt || null, path);\n    }\n\n    const onVisibilityToggle: NodeVisibilityToggleHandler = ({expanded, node, path}) => {\n        if (node.expanded || node.loaded) {\n            return;\n        }\n\n        return _loadChildren(node.id, path, expanded);\n    };\n\n    return (\n        <>\n            {error && (\n                <Message negative>\n                    <Message.Header>\n                        <Icon name=\"ban\" /> {error}\n                    </Message.Header>\n                </Message>\n            )}\n            <TreeExplorerView\n                treeSettings={tree}\n                treeData={treeData}\n                readOnly={readOnly || false}\n                onTreeChange={setTreeData}\n                onVisibilityToggle={onVisibilityToggle}\n                onMoveNode={_saveMove}\n                onDeleteNode={_deleteNode}\n                onClickNode={_handleClickNode}\n                selection={selection}\n                onAddElement={_handleAddElement}\n                compact={compact}\n            />\n        </>\n    );\n};\n\nexport default TreeExplorer;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport TreeExplorer from './TreeExplorer';\nexport default TreeExplorer;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport gql from 'graphql-tag';\nimport {recordIdentityFragment} from 'queries/records/recordIdentityFragment';\n\nexport const attributeDetailsFragment = gql`\n    fragment AttributeDetails on Attribute {\n        id\n        type\n        format\n        system\n        readonly\n        label\n        description\n        multiple_values\n        metadata_fields {\n            id\n            label\n            type\n            format\n        }\n        permissions_conf {\n            permissionTreeAttributes {\n                id\n                label\n                ... on TreeAttribute {\n                    linked_tree {\n                        id\n                    }\n                }\n            }\n            relation\n        }\n        versions_conf {\n            versionable\n            mode\n            profile {\n                id\n                label\n                trees {\n                    id\n                    label\n                }\n            }\n        }\n        libraries {\n            id\n            label\n        }\n\n        ... on StandardAttribute {\n            unique\n        }\n\n        ... on LinkAttribute {\n            linked_library {\n                id\n            }\n            reverse_link\n        }\n        ... on TreeAttribute {\n            linked_tree {\n                id\n            }\n        }\n    }\n`;\n\nexport const attributeValuesListDetailsFragment = gql`\n    ${recordIdentityFragment}\n    fragment AttributeValuesListDetails on Attribute {\n        ... on StandardAttribute {\n            unique\n            values_list {\n                ... on StandardStringValuesListConf {\n                    enable\n                    allowFreeEntry\n                    values\n                }\n\n                ... on StandardDateRangeValuesListConf {\n                    enable\n                    allowFreeEntry\n                    dateRangeValues: values {\n                        from\n                        to\n                    }\n                }\n            }\n        }\n        ... on LinkAttribute {\n            values_list {\n                enable\n                allowFreeEntry\n                linkValues: values {\n                    ...RecordIdentity\n                }\n            }\n        }\n        ... on TreeAttribute {\n            values_list {\n                enable\n                allowFreeEntry\n                treeValues: values {\n                    record {\n                        ...RecordIdentity\n                    }\n                    ancestors {\n                        record {\n                            ...RecordIdentity\n                        }\n                    }\n                }\n            }\n        }\n    }\n`;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport gql from 'graphql-tag';\nimport {recordIdentityFragment} from 'queries/records/recordIdentityFragment';\n\nexport const getLibsQuery = gql`\n    ${recordIdentityFragment}\n    query GET_LIBRARIES($id: ID, $label: String, $system: Boolean, $behavior: [LibraryBehavior!]) {\n        libraries(filters: {id: $id, label: $label, system: $system, behavior: $behavior}) {\n            totalCount\n            list {\n                id\n                system\n                label\n                behavior\n                icon {\n                    ...RecordIdentity\n                }\n                gqlNames {\n                    query\n                    type\n                    list\n                    filter\n                    searchableFields\n                }\n            }\n        }\n    }\n`;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport gql from 'graphql-tag';\nimport {libraryDetailsFragment} from './libraryDetailsFragment';\n\nexport const getLibByIdQuery = gql`\n    ${libraryDetailsFragment}\n    query GET_LIB_BY_ID($id: ID, $lang: [AvailableLanguage!]) {\n        libraries(filters: {id: $id}) {\n            list {\n                ...LibraryDetails\n            }\n        }\n    }\n`;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {gql} from '@apollo/client';\nimport {attributeDetailsFragment} from 'queries/attributes/attributeFragments';\nimport {recordIdentityFragment} from 'queries/records/recordIdentityFragment';\n\nexport const libraryDetailsFragment = gql`\n    ${attributeDetailsFragment}\n    ${recordIdentityFragment}\n    fragment LibraryDetails on Library {\n        id\n        system\n        label\n        behavior\n        attributes {\n            ...AttributeDetails\n        }\n        fullTextAttributes {\n            id\n            label\n        }\n        permissions_conf {\n            permissionTreeAttributes {\n                id\n                ... on TreeAttribute {\n                    linked_tree {\n                        id\n                    }\n                }\n                label(lang: $lang)\n            }\n            relation\n        }\n        recordIdentityConf {\n            label\n            color\n            preview\n            treeColorPreview\n        }\n        defaultView {\n            id\n        }\n        gqlNames {\n            query\n            type\n            list\n            filter\n            searchableFields\n        }\n        permissions {\n            admin_library\n            access_library\n            access_record\n            create_record\n            edit_record\n            delete_record\n        }\n        icon {\n            ...RecordIdentity\n        }\n    }\n`;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {gqlUnchecked} from 'utils';\n\nexport interface IGetRecordsListQueryElement {\n    whoAmI: {\n        id: string;\n        label: string;\n        color: string;\n        preview: {\n            small: string;\n            medium: string;\n            pdf: string;\n            big: string;\n        };\n        library: {\n            id: string;\n            label: SystemTranslation;\n        };\n    };\n}\n\nexport interface IGetRecordsListQuery {\n    [x: string]: {\n        list: IGetRecordsListQueryElement[];\n        totalCount: number;\n    };\n}\n\nexport enum RecordFilterCondition {\n    BEGIN_WITH = 'BEGIN_WITH',\n    BETWEEN = 'BETWEEN',\n    CLASSIFIED_IN = 'CLASSIFIED_IN',\n    CONTAINS = 'CONTAINS',\n    END_AFTER = 'END_AFTER',\n    END_BEFORE = 'END_BEFORE',\n    END_ON = 'END_ON',\n    END_WITH = 'END_WITH',\n    EQUAL = 'EQUAL',\n    GREATER_THAN = 'GREATER_THAN',\n    IS_EMPTY = 'IS_EMPTY',\n    IS_NOT_EMPTY = 'IS_NOT_EMPTY',\n    LAST_MONTH = 'LAST_MONTH',\n    LESS_THAN = 'LESS_THAN',\n    NEXT_MONTH = 'NEXT_MONTH',\n    NOT_CLASSIFIED_IN = 'NOT_CLASSIFIED_IN',\n    NOT_CONTAINS = 'NOT_CONTAINS',\n    NOT_EQUAL = 'NOT_EQUAL',\n    START_AFTER = 'START_AFTER',\n    START_BEFORE = 'START_BEFORE',\n    START_ON = 'START_ON',\n    TODAY = 'TODAY',\n    TOMORROW = 'TOMORROW',\n    VALUES_COUNT_EQUAL = 'VALUES_COUNT_EQUAL',\n    VALUES_COUNT_GREATER_THAN = 'VALUES_COUNT_GREATER_THAN',\n    VALUES_COUNT_LOWER_THAN = 'VALUES_COUNT_LOWER_THAN',\n    YESTERDAY = 'YESTERDAY'\n}\n\nexport enum RecordFilterOperator {\n    AND = 'AND',\n    CLOSE_BRACKET = 'CLOSE_BRACKET',\n    OPEN_BRACKET = 'OPEN_BRACKET',\n    OR = 'OR'\n}\n\nexport interface IRecordFilterInput {\n    field?: string | null;\n    value?: string | null;\n    condition?: RecordFilterCondition | null;\n    operator?: RecordFilterOperator | null;\n    treeId?: string | null;\n}\n\nexport interface IRecordsPagination {\n    limit: number;\n    offset?: number;\n    cursor?: string;\n}\n\nexport interface IGetRecordsListQueryVariables {\n    filters: IRecordFilterInput[];\n    pagination: IRecordsPagination;\n}\n\nexport const getRecordsListQuery = (library: string) => gqlUnchecked`\n    query($filters:[RecordFilterInput], $pagination: RecordsPagination) {\n        ${library} (filters:$filters, pagination: $pagination){\n            totalCount\n            list {\n                whoAmI{\n                    id,\n                    label,\n                    color,\n                    preview {\n                        small\n                        medium\n                        pdf\n                        big\n                    },\n                    library{\n                        id,\n                        label\n                    }\n                }\n            }\n        }\n    }\n`;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport gql from 'graphql-tag';\n\nexport const getTreeByIdQuery = gql`\n    query GET_TREE_BY_ID($id: ID) {\n        trees(filters: {id: $id}) {\n            totalCount\n            list {\n                id\n                label\n                system\n                behavior\n                permissions_conf {\n                    libraryId\n                    permissionsConf {\n                        permissionTreeAttributes {\n                            id\n                            label\n                            ... on TreeAttribute {\n                                linked_tree {\n                                    id\n                                }\n                            }\n                        }\n                        relation\n                    }\n                }\n                libraries {\n                    library {\n                        id\n                        label\n                        attributes {\n                            id\n                            label\n                            type\n                        }\n                    }\n                    settings {\n                        allowMultiplePositions\n                        allowedAtRoot\n                        allowedChildren\n                    }\n                }\n            }\n        }\n    }\n`;\n"],"names":["fakeRootId","ListItem","styled","isSelected","rest","List","props","actions","type","selectedGroup","onSelect","t","useTranslation","_handleItemClick","groupName","Header","as","selection","relaxed","Object","keys","map","onClick","applyTo","readOnly","useState","node","id","path","treeIndex","selectedGroupNode","setSelectedGroupNode","selectedPermissionsGroup","setSelectedPermissionsGroup","maxColsCount","cols","push","DefinePermissionsViewLoadTree","treeId","nodeData","getTreeNodeKey","selectedNode","EditPermissions","permParams","usersGroup","ColumnsDisplay","columnsNumber","columnsContent","availableLanguages","useLang","lang","useQuery","getTreeByIdQuery","variables","loading","error","data","Loading","trees","ErrorDisplay","message","treeData","list","treeLabel","localizedLabel","label","TreeExplorer","compact","tree","onClickNode","withFakeRoot","fakeRootLabel","entityName","interpolation","escapeValue","getPermissionsActionsQuery","gql","getPermissionsQuery","savePermissionsQuery","CustomImg","size","svg","style","width","height","display","src","alt","IconSvg","PermissionSelector","value","inheritValue","onChange","forbiddenColor","allowedColor","React","isLoading","setIsLoading","permValToInputVal","permVal","inputValToPermVal","bgColors","inputVal","bgColor","hexToRgba","Wrapper","displayName","_handleChange","e","background","withLabel","Input","min","max","step","disabled","border","transparent","fluid","defaultProps","PermissionsHeader","permissions","inheritedPermissions","permissionsByName","reduce","perms","perm","name","allowed","heritPermByName","heritPerms","p","Table","celled","a","undefined","applyOn","fetchPolicy","notifyOnNetworkStatusChange","loadingActions","errorActions","dataActions","actionsToEdit","permissionsActionsByType","filter","includes","getPermsVariables","skip","useMutation","savePerms","inheritPerm","className","toString","_onSave","permToSave","permData","refetchQueries","query","createRecordQuery","recordIdentityFragment","valueDetailsFragment","valueDetailsExtendedFragment","_getAttributeValueQuery","attribute","fullQuery","fieldName","format","AttributeFormat","getRecordDataQuery","library","attributes","detailsExtendedFragment","find","gqlUnchecked","gqlNames","saveValueBatchQuery","Row","HoverMenu","Menu","onDeleteLink","readonly","isHovering","setIsHovering","openDeleteConfirm","setOpenDeleteConfirm","showModal","setShowModal","linkValue","onMouseEnter","onMouseLeave","position","RecordCard","record","whoAmI","inverted","Icon","id_value","open","onClose","recordId","Confirm","onCancel","onConfirm","content","isOpenEditRecordModal","setIsOpenEditRecordModal","editedRecord","setEditedRecord","treeValue","text","icon","action","r","displayFilter","TreeNodeBreadcrumb","element","ElementsCount","AddButton","Button","values","isOpenSelectRecordModal","setIsOpenSelectRecordModal","isOpenAddRecordModal","setIsOpenAddRecordModal","isOpenSelectTreeNodeModal","setIsOpenSelectTreeNodeModal","valuesToDisplay","v","_handleCloseSelectRecordModal","_handleCloseSelectTreeNodeModal","_handleDeleteLink","index","valueToDelete","modified_at","created_at","version","addValueBtn","basic","labelPosition","AttributeType","canAddValue","multiple_values","length","isLinkAttribute","linked_library","Dropdown","trigger","count","i","isLinkValue","isTreeValue","SelectRecordModal","isTreeAttribute","linked_tree","SelectTreeNodeModal","val","ancestors","parents","_getVirginValue","baseValue","raw_value","onSave","setSubmitFuncRef","errors","inModal","submitRef","useRef","useEffect","initValues","allValues","attrId","render","handleSubmit","setFieldValue","checked","newFieldValue","newVal","_addValue","newFieldValues","_renderValueField","attr","fieldValues","isValueNull","slice","attributeLabel","margin","Form","current","onSubmit","FormFieldWrapper","system","positive","initialValues","enableReinitialize","_extractValueToSave","extractedValue","join","initialRecordId","valueVersion","onIdentityUpdate","setSubmitFunc","onPostSave","attributesById","useMemo","acc","setRecordId","savePending","setSavePending","versionObjToGraphql","refetchData","refetch","networkStatus","saveValueBatch","dataSave","createRecord","_extractRecordIdentity","useCallback","dataQueryRes","color","preview","submittedValues","attrName","valToSave","_executeSaveValue","idRecord","resCreaRecord","saveValuesRes","freshData","NetworkStatus","withDimmer","formErrors","allErrors","saveError","deleteValueQuery","saveValueQuery","ButtonsWrapper","InputWrapper","StyledInput","StandardValuesActionTypes","blurTimeoutRef","onDelete","editing","setEditing","clearTimeout","_handleValidate","marginBottom","onFocus","target","onKeyPress","key","blur","onBlur","setTimeout","title","virginValue","state","valueIndex","REINIT","ADD","CHANGE","newState","newValue","SUBMIT","DELETE","CANCEL","_prepareValues","vals","Array","isArray","FieldLabel","useReducer","reducer","dispatch","_getValueInputByIndex","String","_handleSubmit","_handleDelete","_handleCancel","setRecordIdentity","getRecordDataVariables","deleteValueMutation","saveValueMutation","recordData","cleanData","_submitValue","_deleteValue","valueId","savedValue","_getInput","getLibByIdQuery","libraries","lib","recordIdentity","submitFuncRef","_handleClose","Modal","centered","closeOnDimmerClick","closeOnEscape","closeIcon","dimmer","fontSize","scrolling","minHeight","negative","QUERY","RootSelectorElem","elem","ActionTypes","restrictToRoots","librariesList","LocalActionTypes","initialState","selectable","onSelectionChanged","onEditRecordClick","multipleSelection","selectedRoot","selectedRootLabel","selectedRootQuery","selectedRootFilter","selectedRootAttributes","rootsList","filters","showFilters","execSearch","availableOffsets","selectedOffset","INIT_STATE","SET_RESTRICT_ROOTS","SET_SELECTED_ROOT","SET_ROOTS","SET_ROOT_INFOS","SET_FILTERS","FILTER_REMOVE","f","TOGGLE_FILTERS","SET_LIST","totalCount","offset","all","SET_OFFSET","currentPage","page","SET_LIMIT","limit","SELECTION_ADD","addedSelection","from","Set","add","callbackAdd","setImmediate","SELECTION_REMOVE","substractedSelection","callbackRemove","emptyFilter","operator","localReducer","ADD_FILTER","REMOVE_FILTER","stateCopy","splice","CHANGE_VALUE","CHANGE_ATTRIBUTE","RESET","FiltersPanel","localState","localDispatch","attributesDropDownOptions","fr","memoizedFunctions","removeFilter","changeValue","changeAttribute","renderFilter","filterData","placeholder","styles","search","options","_","Label","Segment","top","right","bottom","textAlign","boxSizing","preventDefault","goodFilters","applyFilters","primary","ListPanel","ListLoader","isSelectable","getHandleSelectionChanged","entity","event","actionType","idToSearch","elementInSelection","onEdit","callback","totalPages","Math","floor","limitOptions","x","Checkbox","toggle","colSpan","Pagination","onPageChange","pageInfo","activePage","marginRight","Select","listQuery","getRecordsListQuery","filtersVar","queryFilters","newFilter","field","condition","pagination","TopPanel","createRecordOpen","setCreateRecordOpen","clearRoot","toggleFilters","makeOnFilterRemove","stopPropagation","selectedRootAttributesById","circular","Divider","image","EditRecordModal","MainPanel","Dimmer","dimmed","Transition","visible","animation","duration","active","backgroundColor","GetLibraryInfos","QUERY_LIBRARY_CONFIG","getSelectionRef","RootSelector","root","NavigatorModal","Column","c","children","childrenList","pointing","JSON","stringify","PathPartWrapper","altPaths","collapsing","Breadcrumb","sections","link","HoverDropdown","showAltPaths","setShowAltPaths","menuItems","item","displayMenu","showMenuBtn","breadcrumbSections","defaultPath","el","elementRecord","currentSelection","setCurrentSelection","treeSettings","getTreeNodeChildrenQuery","addTreeElementQuery","deleteTreeElementQuery","moveTreeElementQuery","activeItemColor","LibIconLabel","bgcolor","initialEditionState","parent","onTreeChange","onVisibilityToggle","onMoveNode","onDeleteNode","onAddElement","editRecordModalOpen","setEditRecordModalOpen","openAddElementModal","setOpenAddElementModal","openSelectRecordModal","setOpenSelectRecordModal","nodeToDelete","setNodeToDelete","editionState","setEditionState","_handleCloseDeleteConfirm","_handleCloseAddElementModal","_openEditRecordModal","params","orTxt","theme","scaffoldBlockPxWidth","rowHeight","slideRegionSize","canDrag","canDrop","d","nextParent","getNodeKey","generateNodeProps","rowInfo","nodeClasses","n","isFakeRoot","buttons","parentNode","stringToColor","toUpperCase","_convertTreeRecord","nodes","nodeTitle","RootElem","expanded","childrenCount","startAt","apolloClient","useApolloClient","fakeRootData","order","initTreeData","setTreeData","loaded","setLoaded","setError","_loadChildren","expand","withPath","convertedRecords","treeNodeChildren","nodeToUpdate","getNodeAtPath","newTreeData","_mergeNode","_saveMove","moveData","nextParentNode","parentTo","parentNodeAtPath","nextPath","mutate","mutation","nodeId","siblings","Promise","s","resolve","graphQLErrors","extensions","fields","_deleteNode","updatedTree","removeNodeAtPath","changeNodeAtPath","newNode","_handleAddElement","addResult","newRecord","treeAddElement","parentKey","addNodeUnderParent","expandParent","Message","hydratedPath","nodeKey","findRes","searchQuery","searchMethod","matches","attributeDetailsFragment","attributeValuesListDetailsFragment","getLibsQuery","libraryDetailsFragment","RecordFilterCondition","RecordFilterOperator"],"sourceRoot":""}