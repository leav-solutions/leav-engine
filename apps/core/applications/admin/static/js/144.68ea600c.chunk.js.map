{"version":3,"file":"static/js/144.68ea600c.chunk.js","mappings":"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","sources":["components/libraries/LibrariesSelectorField/LibrariesSelectorField.tsx","components/libraries/LibrariesSelectorField/index.ts","components/libraries/LibrariesSelector/LibrariesSelector.tsx","components/libraries/LibrariesSelector/index.ts","components/permissions/DefineTreePermissionsView/DefineTreePermissionsView.tsx","components/permissions/DefineTreePermissionsView/index.ts","components/shared/PermissionsSettings/PermissionsAttributeSelector/PermissionsAttributeSelectorList/PermissionsAttributeSelectorList.tsx","components/shared/PermissionsSettings/PermissionsAttributeSelector/PermissionsAttributeSelectorList/index.ts","components/shared/PermissionsSettings/PermissionsAttributeSelector/PermissionsAttributeSelector.tsx","components/shared/PermissionsSettings/PermissionsAttributeSelector/index.ts","components/shared/PermissionsSettings/PermissionsSettings.tsx","components/shared/PermissionsSettings/index.ts","queries/trees/saveTreeMutation.ts","components/trees/EditTree/EditTreeTabs/InfosTab/InfosForm/TreeLibraries/TreeLibraries.tsx","components/trees/EditTree/EditTreeTabs/InfosTab/InfosForm/TreeLibraries/index.ts","components/trees/EditTree/EditTreeTabs/InfosTab/InfosForm/InfosForm.tsx","components/trees/EditTree/EditTreeTabs/InfosTab/InfosForm/index.ts","components/trees/EditTree/EditTreeTabs/InfosTab/InfosTab.tsx","components/trees/EditTree/EditTreeTabs/InfosTab/index.ts","components/trees/EditTree/EditTreeTabs/PermissionsTab/PermissionsContent/NodePermissionTabContent/NodePermissionTabContent.tsx","components/trees/EditTree/EditTreeTabs/PermissionsTab/PermissionsContent/NodePermissionTabContent/index.ts","components/trees/EditTree/EditTreeTabs/PermissionsTab/PermissionsContent/PermissionsContent.tsx","components/trees/EditTree/EditTreeTabs/PermissionsTab/PermissionsContent/index.ts","components/trees/EditTree/EditTreeTabs/PermissionsTab/PermissionsTab.tsx","components/trees/EditTree/EditTreeTabs/PermissionsTab/index.ts","components/trees/EditTree/EditTreeTabs/TreeStructure/_types.ts","components/trees/EditTree/EditTreeTabs/TreeStructure/TreeStructureView/DependenciesEditor/DependenciesLibraryItem/DependenciesLibraryItem.tsx","components/trees/EditTree/EditTreeTabs/TreeStructure/TreeStructureView/DependenciesEditor/DependenciesLibraryItem/index.ts","components/trees/EditTree/EditTreeTabs/TreeStructure/TreeStructureView/DependenciesEditor/DependenciesEditor.tsx","components/trees/EditTree/EditTreeTabs/TreeStructure/TreeStructureView/DependenciesEditor/index.ts","components/trees/EditTree/EditTreeTabs/TreeStructure/TreeStructureView/LibraryItem/LibraryItem.tsx","components/trees/EditTree/EditTreeTabs/TreeStructure/TreeStructureView/LibraryItem/index.ts","components/trees/EditTree/EditTreeTabs/TreeStructure/TreeStructureView/TreeStructureView.tsx","components/trees/EditTree/EditTreeTabs/TreeStructure/TreeStructureView/index.ts","components/trees/EditTree/EditTreeTabs/TreeStructure/TreeStructure.tsx","components/trees/EditTree/EditTreeTabs/TreeStructure/index.ts","components/trees/EditTree/EditTreeTabs/EditTreeTabs.tsx","components/trees/EditTree/EditTreeTabs/index.ts","components/trees/EditTree/index.ts","components/trees/EditTree/EditTree.tsx","queries/attributes/getAttributesQuery.ts","queries/trees/getTreesQuery.ts","../../../node_modules/lodash/_arrayIncludesWith.js","../../../node_modules/lodash/_baseUniq.js","../../../node_modules/lodash/_baseUnset.js","../../../node_modules/lodash/_createSet.js","../../../node_modules/lodash/_customOmitClone.js","../../../node_modules/lodash/_parent.js","../../../node_modules/lodash/last.js","../../../node_modules/lodash/omit.js","../../../node_modules/lodash/uniqBy.js"],"sourcesContent":["// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport React from 'react';\nimport {DropdownProps, Form} from 'semantic-ui-react';\nimport useLang from '../../../hooks/useLang';\nimport {localizedLabel} from '../../../utils/utils';\nimport {GET_LIBRARIES_libraries_list} from '../../../_gqlTypes/GET_LIBRARIES';\n\ninterface ILibrariesSelectorFieldProps extends DropdownProps {\n    loading?: boolean;\n    libraries: GET_LIBRARIES_libraries_list[] | null;\n}\n\nconst LibrariesSelectorField = ({loading, libraries, ...fieldProps}: ILibrariesSelectorFieldProps): JSX.Element => {\n    const availableLanguages = useLang().lang;\n    const options = !!libraries\n        ? libraries.map(l => ({key: l.id, value: l.id, text: localizedLabel(l.label, availableLanguages)}))\n        : [];\n\n    // TODO: find a cleaner way to remove props from i18n\n    delete fieldProps.t;\n    delete fieldProps.tReady;\n    delete fieldProps.defaultNS;\n    delete fieldProps.i18nOptions;\n    delete fieldProps.reportNS;\n\n    return <Form.Dropdown {...fieldProps} search options={options} />;\n};\n\nLibrariesSelectorField.defaultProps = {\n    loading: false,\n    libraries: []\n};\n\nexport default LibrariesSelectorField;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport LibrariesSelectorField from './LibrariesSelectorField';\nexport default LibrariesSelectorField;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {useQuery} from '@apollo/client';\nimport React from 'react';\nimport {FormDropdownProps} from 'semantic-ui-react';\nimport {GET_LIBRARIES, GET_LIBRARIESVariables} from '_gqlTypes/GET_LIBRARIES';\nimport {getLibsQuery} from '../../../queries/libraries/getLibrariesQuery';\nimport LibrariesSelectorField from '../LibrariesSelectorField';\n\nfunction LibrariesSelector(fieldProps: FormDropdownProps): JSX.Element {\n    const {loading, data} = useQuery<GET_LIBRARIES, GET_LIBRARIESVariables>(getLibsQuery);\n\n    return (\n        <LibrariesSelectorField\n            {...fieldProps}\n            loading={loading}\n            libraries={!!data && data.libraries ? data.libraries.list : null}\n        />\n    );\n}\n\nexport default LibrariesSelector;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport LibrariesSelector from './LibrariesSelector';\nexport default LibrariesSelector;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport React from 'react';\nimport {fakeRootId, ITreeNodeData} from '_types/trees';\nimport {getTreeNodeKey} from '../../../utils/utils';\nimport {GET_LIB_BY_ID_libraries_list_permissions_conf_permissionTreeAttributes_TreeAttribute} from '../../../_gqlTypes/GET_LIB_BY_ID';\nimport {PermissionTypes} from '../../../_gqlTypes/globalTypes';\nimport ColumnsDisplay from '../../shared/ColumnsDisplay';\nimport DefinePermissionsViewLoadTree from '../DefinePermissionsViewLoadTree';\nimport EditPermissions from '../EditPermissions';\n\ninterface IDefineTreePermissionsViewProps {\n    treeAttribute: GET_LIB_BY_ID_libraries_list_permissions_conf_permissionTreeAttributes_TreeAttribute;\n    permissionType: PermissionTypes;\n    applyTo: string;\n    readOnly?: boolean;\n}\n\nconst DefineTreePermissionsView = ({\n    treeAttribute: tree,\n    permissionType,\n    applyTo,\n    readOnly\n}: IDefineTreePermissionsViewProps): JSX.Element => {\n    const usersGroupsTreeId = 'users_groups';\n    const [selectedTreeNode, setSelectedTreeNode] = React.useState<ITreeNodeData | null>({\n        node: {id: fakeRootId},\n        path: [],\n        treeIndex: 0\n    });\n    const [selectedGroupNode, setSelectedGroupNode] = React.useState<ITreeNodeData | null>({\n        node: {id: fakeRootId},\n        path: [],\n        treeIndex: 0\n    });\n    const _selectTreeNode = (nodeData: ITreeNodeData) =>\n        setSelectedTreeNode(getTreeNodeKey(nodeData) !== getTreeNodeKey(selectedTreeNode) ? nodeData : null);\n\n    const _selectGroupNode = (nodeData: ITreeNodeData) =>\n        setSelectedGroupNode(getTreeNodeKey(nodeData) !== getTreeNodeKey(selectedGroupNode) ? nodeData : null);\n\n    if (!tree.linked_tree) {\n        return <p>Cannot find tree</p>;\n    }\n\n    const cols = [\n        <DefinePermissionsViewLoadTree\n            key=\"perm_tree\"\n            treeId={tree.linked_tree.id}\n            onClick={_selectTreeNode}\n            selectedNode={selectedTreeNode}\n        />\n    ];\n\n    if (selectedTreeNode) {\n        cols.push(\n            <DefinePermissionsViewLoadTree\n                treeId={usersGroupsTreeId}\n                onClick={_selectGroupNode}\n                selectedNode={selectedGroupNode}\n            />\n        );\n\n        if (selectedGroupNode) {\n            cols.push(\n                <EditPermissions\n                    permParams={{\n                        type: permissionType,\n                        applyTo,\n                        usersGroup: selectedGroupNode.node.id !== fakeRootId ? selectedGroupNode.node.id : null,\n                        permissionTreeTarget: {\n                            tree: tree.linked_tree.id,\n                            nodeId: selectedTreeNode.node.id !== fakeRootId ? selectedTreeNode.node.id : null\n                        }\n                    }}\n                    readOnly={readOnly}\n                />\n            );\n        }\n    }\n\n    return <ColumnsDisplay columnsNumber={3} columnsContent={cols} />;\n};\n\nDefineTreePermissionsView.defaultProps = {\n    readOnly: false\n};\n\nexport default DefineTreePermissionsView;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport DefineTreePermissionsView from './DefineTreePermissionsView';\nexport default DefineTreePermissionsView;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport useLang from 'hooks/useLang';\nimport React from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {List, Message} from 'semantic-ui-react';\nimport styled from 'styled-components';\nimport {activeItemColor} from 'themingVar';\nimport {localizedLabel} from 'utils';\nimport {GET_ATTRIBUTES_attributes_list} from '_gqlTypes/GET_ATTRIBUTES';\n\nconst AttributeItem = styled(List.Item)`\n    &&&& {\n        cursor: pointer;\n        padding: 0.5rem;\n    }\n    &:hover {\n        background-color: ${activeItemColor};\n    }\n`;\n\ninterface IPermissionsAttributeSelectorListProps {\n    attributes: GET_ATTRIBUTES_attributes_list[];\n    onSelect: (selectedAttribute: GET_ATTRIBUTES_attributes_list) => void;\n}\n\nfunction PermissionsAttributeSelectorList({attributes, onSelect}: IPermissionsAttributeSelectorListProps): JSX.Element {\n    const {lang} = useLang();\n    const {t} = useTranslation();\n\n    const _handleAttributeClick = (attribute: GET_ATTRIBUTES_attributes_list) => () => {\n        onSelect(attribute);\n    };\n\n    return (\n        <List divided aria-label=\"attribute-selector-list\">\n            {!attributes.length && (\n                <Message info size=\"tiny\">\n                    {t('permissions_settings.no_attributes_to_add')}\n                </Message>\n            )}\n            {attributes.map(attribute => (\n                <AttributeItem key={attribute.id} onClick={_handleAttributeClick(attribute)}>\n                    <List.Header>{localizedLabel(attribute.label, lang)}</List.Header>\n                    <List.Description>{attribute.id}</List.Description>\n                </AttributeItem>\n            ))}\n        </List>\n    );\n}\n\nexport default PermissionsAttributeSelectorList;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport PermissionsAttributeSelectorList from './PermissionsAttributeSelectorList';\nexport default PermissionsAttributeSelectorList;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {useLazyQuery} from '@apollo/client';\nimport ErrorDisplay from 'components/shared/ErrorDisplay';\nimport Loading from 'components/shared/Loading';\nimport SimplisticButton from 'components/shared/SimplisticButton';\nimport {getAttributesQuery} from 'queries/attributes/getAttributesQuery';\nimport React, {useEffect, useState} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {Icon} from 'semantic-ui-react';\nimport {GET_ATTRIBUTES, GET_ATTRIBUTESVariables, GET_ATTRIBUTES_attributes_list} from '_gqlTypes/GET_ATTRIBUTES';\nimport {GET_LIB_BY_ID_libraries_list} from '_gqlTypes/GET_LIB_BY_ID';\nimport {AttributeType} from '_gqlTypes/globalTypes';\nimport PermissionsAttributeSelectorList from './PermissionsAttributeSelectorList';\n\ninterface IPermissionsAttributeSelectorProps {\n    library?: GET_LIB_BY_ID_libraries_list;\n    selectedAttributes: string[];\n    onSelectAttribute: (attribute: string) => void;\n}\n\nfunction PermissionsAttributeSelector({\n    library,\n    selectedAttributes,\n    onSelectAttribute\n}: IPermissionsAttributeSelectorProps): JSX.Element {\n    const {t} = useTranslation();\n    const [isListExpanded, setIsListExpanded] = useState(false);\n    const [getAttributes, {loading, error, data, called}] = useLazyQuery<GET_ATTRIBUTES, GET_ATTRIBUTESVariables>(\n        getAttributesQuery,\n        {\n            variables: {\n                libraries: library ? [library.id] : null,\n                type: [AttributeType.tree]\n            }\n        }\n    );\n\n    useEffect(() => {\n        if (!isListExpanded || called) {\n            return;\n        }\n\n        getAttributes();\n    }, [isListExpanded, called]);\n\n    const _expandList = () => {\n        setIsListExpanded(true);\n    };\n\n    const _handleAttributeSelected = (attribute: GET_ATTRIBUTES_attributes_list) => {\n        onSelectAttribute(attribute.id);\n        setIsListExpanded(false);\n    };\n\n    const attributesList = (data?.attributes?.list ?? []).filter(\n        attribute => !selectedAttributes.includes(attribute.id)\n    );\n\n    return (\n        <>\n            <SimplisticButton basic compact onClick={_expandList}>\n                <Icon name=\"plus\" />\n                {t('permissions_settings.add_permissions_attribute')}\n            </SimplisticButton>\n            {loading && <Loading size=\"small\" />}\n            {error && <ErrorDisplay message={error.message} size=\"small\" />}\n            {isListExpanded && called && !loading && !error && (\n                <PermissionsAttributeSelectorList attributes={attributesList} onSelect={_handleAttributeSelected} />\n            )}\n        </>\n    );\n}\n\nexport default PermissionsAttributeSelector;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport PermissionsAttributeSelector from './PermissionsAttributeSelector';\nexport default PermissionsAttributeSelector;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport useLang from 'hooks/useLang';\nimport React from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {Button, Icon, Popup, Table} from 'semantic-ui-react';\nimport styled from 'styled-components';\nimport {localizedLabel} from 'utils';\nimport {GET_ATTRIBUTESVariables} from '_gqlTypes/GET_ATTRIBUTES';\nimport {GET_LIB_BY_ID_libraries_list, GET_LIB_BY_ID_libraries_list_permissions_conf} from '_gqlTypes/GET_LIB_BY_ID';\nimport {AttributeType, PermissionsRelation, Treepermissions_confInput} from '_gqlTypes/globalTypes';\nimport SimplisticButton from '../SimplisticButton';\nimport PermissionsAttributeSelector from './PermissionsAttributeSelector';\n\nconst PopContent = styled.div`\n    display: flex;\n    gap: 1rem;\n    flex-direction: column;\n    min-width: 225px;\n    max-width: 90vw;\n    font-size: 1rem;\n`;\n\nconst Trigger = styled.div`\n    cursor: pointer;\n`;\n\nconst FooterCell = styled(Table.Cell)<{$hasAttributes: boolean}>`\n    &&& {\n        ${props => !props.$hasAttributes && 'border-top: none;'}\n    }\n`;\n\nconst defaultRelation = PermissionsRelation.and;\n\ninterface IPermissionsSettingsProps extends React.HTMLAttributes<HTMLDivElement> {\n    library?: GET_LIB_BY_ID_libraries_list;\n    permissionsSettings: GET_LIB_BY_ID_libraries_list_permissions_conf;\n    onChangeSettings: (settings: Treepermissions_confInput) => void;\n    readonly: boolean;\n}\n\nfunction PermissionsSettings({\n    permissionsSettings,\n    onChangeSettings,\n    library,\n    readonly,\n    ...elementProps\n}: IPermissionsSettingsProps): JSX.Element {\n    const {t} = useTranslation();\n    const {lang} = useLang();\n    const [activeOperator, setActiveOperator] = React.useState<PermissionsRelation>(\n        permissionsSettings?.relation ?? PermissionsRelation.and\n    );\n    const permissionsAttributes = permissionsSettings?.permissionTreeAttributes ?? [];\n\n    const PopupTrigger = (\n        <Trigger {...elementProps}>\n            <Icon name=\"cog\" />\n            {t('permissions_settings.title')}\n        </Trigger>\n    );\n\n    const operators = Object.values(PermissionsRelation);\n\n    const _handleOperatorChange = (operator: PermissionsRelation) => () => {\n        setActiveOperator(operator);\n        onChangeSettings({\n            permissionTreeAttributes: permissionsSettings.permissionTreeAttributes.map(attr => attr.id),\n            relation: operator\n        });\n    };\n\n    const _handleAttributeSelected = (selectedAttribute: string) => {\n        const newSettings = {\n            permissionTreeAttributes: [...permissionsAttributes.map(a => a.id), selectedAttribute],\n            relation: permissionsSettings?.relation ?? defaultRelation\n        };\n\n        onChangeSettings(newSettings);\n    };\n\n    const _handleRemoveAttribute = (removedAttributeId: string) => () => {\n        onChangeSettings({\n            permissionTreeAttributes: permissionsAttributes\n                .map(a => a.id)\n                .filter(attributeId => attributeId !== removedAttributeId),\n            relation: permissionsSettings?.relation ?? defaultRelation\n        });\n    };\n\n    const attributeSelectionFilters: GET_ATTRIBUTESVariables = {\n        type: [AttributeType.tree]\n    };\n\n    if (library) {\n        attributeSelectionFilters.libraries = [library.id];\n    }\n\n    return (\n        <Popup trigger={PopupTrigger} on=\"click\" closeOnEscape position=\"bottom left\" style={{maxWidth: 'none'}}>\n            <PopContent>\n                <div>\n                    <h5>{t('permissions_settings.permissions_attributes')}</h5>\n                    <Table compact>\n                        <Table.Body>\n                            {permissionsAttributes.map(a => (\n                                <Table.Row key={a.id}>\n                                    <Table.Cell>{localizedLabel(a.label, lang)}</Table.Cell>\n                                    <Table.Cell width={3}>\n                                        {!readonly && (\n                                            <SimplisticButton\n                                                aria-label=\"remove\"\n                                                icon=\"trash alternate outline\"\n                                                onClick={_handleRemoveAttribute(a.id)}\n                                            />\n                                        )}\n                                    </Table.Cell>\n                                </Table.Row>\n                            ))}\n                        </Table.Body>\n                        {!readonly && (\n                            <Table.Footer>\n                                <Table.Row>\n                                    <FooterCell colSpan={2} $hasAttributes={!!permissionsAttributes.length}>\n                                        <PermissionsAttributeSelector\n                                            library={library}\n                                            onSelectAttribute={_handleAttributeSelected}\n                                            selectedAttributes={permissionsAttributes.map(a => a.id)}\n                                        />\n                                    </FooterCell>\n                                </Table.Row>\n                            </Table.Footer>\n                        )}\n                    </Table>\n                </div>\n                {permissionsAttributes.length > 1 && (\n                    <div>\n                        <h5>{t('permissions_settings.operator')}</h5>\n                        <Button.Group basic>\n                            {operators.map(operator => (\n                                <Button\n                                    key={operator}\n                                    disabled={readonly}\n                                    compact\n                                    onClick={_handleOperatorChange(operator)}\n                                    active={activeOperator === operator}\n                                >\n                                    {t(`permissions_settings.operator_${operator}`)}\n                                </Button>\n                            ))}\n                        </Button.Group>\n                    </div>\n                )}\n            </PopContent>\n        </Popup>\n    );\n}\n\nexport default PermissionsSettings;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport PermissionsSettings from './PermissionsSettings';\nexport default PermissionsSettings;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport gql from 'graphql-tag';\n\nexport const saveTreeQuery = gql`\n    mutation SAVE_TREE($treeData: TreeInput!) {\n        saveTree(tree: $treeData) {\n            id\n            system\n            label\n            behavior\n            libraries {\n                library {\n                    id\n                    label\n                    attributes {\n                        id\n                        label\n                        type\n                        ... on TreeAttribute {\n                            linked_tree {\n                                id\n                            }\n                        }\n                    }\n                }\n                settings {\n                    allowMultiplePositions\n                    allowedAtRoot\n                    allowedChildren\n                }\n            }\n            permissions_conf {\n                libraryId\n                permissionsConf {\n                    permissionTreeAttributes {\n                        id\n                        label\n                    }\n                    relation\n                }\n            }\n        }\n    }\n`;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport React from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {Button, Checkbox, Grid, Icon, Segment} from 'semantic-ui-react';\nimport styled from 'styled-components';\nimport {TreeLibraryInput} from '../../../../../../../_gqlTypes/globalTypes';\nimport LibrariesSelector from '../../../../../../libraries/LibrariesSelector';\n\ninterface ITreeLibrariesProps {\n    libraries: TreeLibraryInput[];\n    onChange: (libraries: TreeLibraryInput[]) => void;\n    readonly: boolean;\n}\n\nconst BlockLabel = styled.label`\n    font-weight: 700;\n`;\n\nconst DeleteIcon = styled(Icon)`\n    cursor: pointer;\n`;\n\nfunction TreeLibraries({onChange, libraries, readonly}: ITreeLibrariesProps): JSX.Element {\n    const {t} = useTranslation();\n\n    const _handleSettingsChange = (index: number) => (_, data) => {\n        let value = data.value;\n\n        if (data.type === 'checkbox') {\n            value = data.name === 'allowedChildren' ? (data.checked ? ['__all__'] : []) : data.checked;\n        } else if (data.name === 'allowedChildren' && !data.value.length) {\n            value = ['__all__'];\n        }\n\n        const newLibs = libraries;\n        newLibs[index].settings = {\n            ...newLibs[index].settings,\n            [data.name]: value\n        };\n\n        onChange(newLibs);\n    };\n\n    const _handleLibChange = (index: number) => (_, data) => {\n        const newLibs = libraries;\n        newLibs[index].library = data.value;\n\n        onChange(newLibs);\n    };\n\n    const _handleAddLibrary = () => {\n        onChange([\n            ...libraries,\n            {\n                library: '',\n                settings: {\n                    allowMultiplePositions: false,\n                    allowedAtRoot: true,\n                    allowedChildren: ['__all__']\n                }\n            }\n        ]);\n    };\n\n    const _handleDeleteLibrary = (index: number) => () => {\n        const newLibs = [...libraries];\n        onChange([...newLibs.splice(0, index), ...newLibs.splice(index + 1)]);\n    };\n\n    return (\n        <>\n            <Grid>\n                <Grid.Column textAlign=\"left\" floated=\"left\" width={8} verticalAlign=\"middle\">\n                    <BlockLabel>{t('trees.libraries')}</BlockLabel>\n                </Grid.Column>\n                {!readonly && (\n                    <Grid.Column floated=\"right\" width={8} textAlign=\"right\" verticalAlign=\"middle\">\n                        <Button\n                            data-test-id=\"add-button\"\n                            type=\"button\"\n                            icon\n                            labelPosition=\"left\"\n                            size=\"small\"\n                            onClick={_handleAddLibrary}\n                        >\n                            <Icon name=\"plus\" />\n                            {t('trees.add_library')}\n                        </Button>\n                    </Grid.Column>\n                )}\n            </Grid>\n            {libraries.map((treeLib, index) => {\n                return (\n                    <Segment key={index}>\n                        <Grid columns={3} stackable>\n                            <Grid.Row verticalAlign=\"middle\">\n                                <Grid.Column width={4}>\n                                    <LibrariesSelector\n                                        data-test-id=\"lib-selector\"\n                                        disabled={readonly}\n                                        multiple={false}\n                                        fluid\n                                        selection\n                                        name=\"libraries\"\n                                        onChange={_handleLibChange(index)}\n                                        value={treeLib.library}\n                                    />\n                                </Grid.Column>\n                                <Grid.Column width={11} textAlign=\"right\">\n                                    <Grid columns={1} stackable>\n                                        <Grid.Row verticalAlign=\"middle\">\n                                            <Grid.Column textAlign=\"left\">\n                                                <Checkbox\n                                                    data-test-id={`settings-allowMultiplePositions-${treeLib.library}`}\n                                                    toggle\n                                                    name=\"allowMultiplePositions\"\n                                                    checked={treeLib.settings.allowMultiplePositions}\n                                                    label={t('trees.allow_multiple_positions')}\n                                                    onChange={_handleSettingsChange(index)}\n                                                    disabled={readonly}\n                                                />\n                                            </Grid.Column>\n                                        </Grid.Row>\n                                    </Grid>\n                                </Grid.Column>\n                                {!readonly && (\n                                    <Grid.Column width={1} textAlign=\"right\">\n                                        <DeleteIcon\n                                            data-test-id=\"delete-button\"\n                                            name=\"cancel\"\n                                            onClick={_handleDeleteLibrary(index)}\n                                        />\n                                    </Grid.Column>\n                                )}\n                            </Grid.Row>\n                        </Grid>\n                    </Segment>\n                );\n            })}\n        </>\n    );\n}\n\nexport default TreeLibraries;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport TreeLibraries from './TreeLibraries';\nexport default TreeLibraries;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {Formik, FormikProps} from 'formik';\nimport omit from 'lodash/omit';\nimport React from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {Form} from 'semantic-ui-react';\nimport styled from 'styled-components';\nimport * as yup from 'yup';\nimport useLang from '../../../../../../hooks/useLang';\nimport {formatIDString, getFieldError} from '../../../../../../utils';\nimport {\n    GET_TREE_BY_ID_trees_list,\n    GET_TREE_BY_ID_trees_list_libraries_settings\n} from '../../../../../../_gqlTypes/GET_TREE_BY_ID';\nimport {TreeBehavior, TreeInput, TreeLibraryInput} from '../../../../../../_gqlTypes/globalTypes';\nimport {ErrorTypes, IFormError} from '../../../../../../_types/errors';\nimport {Override} from '../../../../../../_types/Override';\nimport FormFieldWrapper from '../../../../../shared/FormFieldWrapper';\nimport TreeLibraries from './TreeLibraries';\n\ninterface ITreeInfosFormProps {\n    tree: GET_TREE_BY_ID_trees_list | null;\n    onSubmit: (formData: TreeInput) => void;\n    readonly: boolean;\n    errors?: IFormError;\n    onCheckIdExists: (val: string) => Promise<boolean>;\n}\n\ntype TreeInfos = Override<\n    GET_TREE_BY_ID_trees_list,\n    {\n        libraries: TreeLibraryInput[];\n    }\n>;\n\nconst FormGroupWithMargin = styled(Form.Group)`\n    margin-top: 10px;\n`;\n\nconst TreeInfosForm = ({tree, onSubmit, readonly, errors, onCheckIdExists}: ITreeInfosFormProps): JSX.Element => {\n    const {t} = useTranslation();\n    const defaultTree = {\n        id: '',\n        label: {\n            fr: '',\n            en: ''\n        },\n        behavior: TreeBehavior.standard,\n        system: false,\n        permissions_conf: null,\n        libraries: []\n    };\n\n    const initialValues: TreeInfos =\n        tree === null\n            ? defaultTree\n            : {\n                  ...tree,\n                  libraries: tree.libraries.map(treeLib => ({\n                      library: treeLib.library.id,\n                      settings: omit(treeLib.settings, ['__typename']) as GET_TREE_BY_ID_trees_list_libraries_settings\n                  }))\n              };\n\n    const existingTree = tree !== null;\n\n    const {lang: userLang, defaultLang, availableLangs} = useLang();\n\n    const _handleSubmit = values => {\n        onSubmit(values);\n    };\n\n    const serverValidationErrors =\n        errors && errors.extensions.code === ErrorTypes.VALIDATION_ERROR ? errors.extensions.fields : {};\n\n    let idValidator = yup\n        .string()\n        .required()\n        .matches(/^[a-z0-9_]+$/);\n\n    if (!existingTree) {\n        // TODO: ID unicity validation is not debounced. As it's not trivial to implement, check future implementation\n        // in formik (https://github.com/jaredpalmer/formik/pull/1597)\n        idValidator = idValidator.test('isIdUnique', t('admin.validation_errors.id_exists'), onCheckIdExists);\n    }\n\n    const validationSchema = yup.object().shape({\n        label: yup.object().shape({\n            [defaultLang || availableLangs[0]]: yup.string().required()\n        }),\n        id: idValidator,\n        libraries: yup.array(\n            yup.object().shape({\n                library: yup.string(),\n                settings: yup.object()\n            })\n        )\n    });\n\n    const behaviorOptions = Object.values(TreeBehavior).map(b => ({\n        key: b,\n        value: b,\n        text: t(`trees.behavior_${b}`)\n    }));\n\n    const _renderForm = ({\n        handleSubmit,\n        handleBlur,\n        setFieldValue,\n        errors: inputErrors,\n        values,\n        touched\n    }: FormikProps<TreeInfos>) => {\n        const _handleLabelChange = (e, data) => {\n            _handleChange(e, data);\n\n            const {name, value} = data;\n            const [field, subfield] = name.split('.');\n\n            // On new attribute, automatically generate an ID based on label\n            if (!existingTree && field === 'label' && subfield === defaultLang) {\n                setFieldValue('id', formatIDString(value));\n            }\n        };\n\n        const _handleChange = (e, data) => {\n            const value = data.type === 'checkbox' ? data.checked : data.value;\n            const name: string = data.name;\n\n            setFieldValue(name, value);\n        };\n\n        const {id, label, libraries, system, behavior} = values;\n\n        const _getErrorByField = (fieldName: string): string =>\n            getFieldError<TreeInfos>(fieldName, touched, serverValidationErrors || {}, inputErrors);\n\n        const _handleLibrariesChange = (librariesSettings: TreeLibraryInput[]) => {\n            setFieldValue('libraries', librariesSettings);\n        };\n\n        return (\n            <Form onSubmit={handleSubmit}>\n                <Form.Group grouped>\n                    <label>{t('trees.label')}</label>\n                    {availableLangs.map(lang => (\n                        <FormFieldWrapper key={lang} error={_getErrorByField(`label.${lang}`)}>\n                            <Form.Input\n                                label={`${lang} ${lang === defaultLang ? '*' : ''}`}\n                                width=\"4\"\n                                name={'label.' + lang}\n                                disabled={readonly}\n                                value={label && label[lang] ? label[lang] : ''}\n                                onChange={_handleLabelChange}\n                            />\n                        </FormFieldWrapper>\n                    ))}\n                </Form.Group>\n                <FormFieldWrapper error={_getErrorByField('id')}>\n                    <Form.Input\n                        label={t('trees.ID')}\n                        width=\"4\"\n                        disabled={existingTree || readonly}\n                        name=\"id\"\n                        onChange={_handleChange}\n                        onBlur={handleBlur}\n                        value={id}\n                    />\n                </FormFieldWrapper>\n                <FormFieldWrapper error={_getErrorByField('behavior')}>\n                    <Form.Select\n                        label={t('trees.behavior')}\n                        disabled\n                        name=\"behavior\"\n                        onChange={_handleChange}\n                        onBlur={handleBlur}\n                        value={behavior}\n                        options={behaviorOptions}\n                    />\n                </FormFieldWrapper>\n                <FormFieldWrapper error={_getErrorByField('libraries')}>\n                    <TreeLibraries\n                        libraries={libraries}\n                        onChange={_handleLibrariesChange}\n                        readonly={system || readonly}\n                    />\n                </FormFieldWrapper>\n                {!readonly && (\n                    <FormGroupWithMargin>\n                        <Form.Button type=\"submit\">{t('admin.submit')}</Form.Button>\n                    </FormGroupWithMargin>\n                )}\n            </Form>\n        );\n    };\n\n    return (\n        <Formik\n            initialValues={initialValues}\n            onSubmit={_handleSubmit}\n            render={_renderForm}\n            validationSchema={validationSchema}\n        />\n    );\n};\n\nexport default TreeInfosForm;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport InfosForm from './InfosForm';\nexport default InfosForm;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {useLazyQuery, useMutation} from '@apollo/client';\nimport React from 'react';\nimport {useHistory} from 'react-router-dom';\nimport {getTreesQuery} from '../../../../../queries/trees/getTreesQuery';\nimport {saveTreeQuery} from '../../../../../queries/trees/saveTreeMutation';\nimport {clearCacheForQuery} from '../../../../../utils';\nimport {GET_TREES, GET_TREESVariables, GET_TREES_trees_list} from '../../../../../_gqlTypes/GET_TREES';\nimport {GET_TREE_BY_ID_trees_list} from '../../../../../_gqlTypes/GET_TREE_BY_ID';\nimport {TreeInput} from '../../../../../_gqlTypes/globalTypes';\nimport {SAVE_TREE, SAVE_TREEVariables} from '../../../../../_gqlTypes/SAVE_TREE';\nimport TreeInfosForm from './InfosForm';\n\ninterface ITreeInfosTabProps {\n    tree: GET_TREES_trees_list | null;\n    readonly: boolean;\n}\n\nfunction TreeInfosTab({tree, readonly}: ITreeInfosTabProps): JSX.Element {\n    const history = useHistory();\n    const isNewTree = !tree;\n    const [saveTree] = useMutation<SAVE_TREE, SAVE_TREEVariables>(saveTreeQuery, {\n        update: async cache => {\n            if (!tree) {\n                clearCacheForQuery(cache, 'trees');\n            }\n        }\n    });\n\n    const [getTreeById, {data: dataTreeById}] = useLazyQuery<GET_TREES, GET_TREESVariables>(getTreesQuery, {\n        fetchPolicy: 'no-cache'\n    });\n\n    const _handleSubmit = async (treeData: TreeInput) => {\n        await saveTree({\n            variables: {\n                treeData: {\n                    id: treeData.id,\n                    label: treeData.label,\n                    libraries: treeData.libraries?.filter(l => l.library) ?? null\n                }\n            },\n            refetchQueries: ['GET_TREES']\n        });\n\n        if (isNewTree) {\n            history.replace({pathname: '/trees/edit/' + treeData.id});\n        }\n    };\n\n    const _handleCheckIdExists = async val => {\n        await getTreeById({variables: {id: val}});\n        return !!dataTreeById && !!dataTreeById.trees && !dataTreeById.trees.list.length;\n    };\n\n    return (\n        <TreeInfosForm\n            tree={tree as GET_TREE_BY_ID_trees_list}\n            readonly={readonly}\n            onSubmit={_handleSubmit}\n            onCheckIdExists={_handleCheckIdExists}\n        />\n    );\n}\n\nexport default TreeInfosTab;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport InfosTab from './InfosTab';\nexport default InfosTab;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport PermissionsSettings from 'components/shared/PermissionsSettings';\nimport React from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {Tab} from 'semantic-ui-react';\nimport styled from 'styled-components';\nimport {GET_LIB_BY_ID_libraries_list} from '_gqlTypes/GET_LIB_BY_ID';\nimport useLang from '../../../../../../../hooks/useLang';\nimport {localizedLabel} from '../../../../../../../utils';\nimport {\n    GET_TREE_BY_ID_trees_list,\n    GET_TREE_BY_ID_trees_list_libraries,\n    GET_TREE_BY_ID_trees_list_permissions_conf_permissionsConf_permissionTreeAttributes_TreeAttribute\n} from '../../../../../../../_gqlTypes/GET_TREE_BY_ID';\nimport {PermissionTypes,Treepermissions_confInput} from '../../../../../../../_gqlTypes/globalTypes';\nimport DefinePermByUserGroupView from '../../../../../../permissions/DefinePermByUserGroupView';\nimport DefineTreePermissionsView from '../../../../../../permissions/DefineTreePermissionsView';\n\nconst PermissionsSettingsBtn = styled(PermissionsSettings)`\n    position: absolute;\n    top: 2rem;\n    right: 2rem;\n`;\n\ninterface INodePermissionTabContentProps {\n    tree: GET_TREE_BY_ID_trees_list;\n    treeLibraries: GET_TREE_BY_ID_trees_list_libraries;\n    onSubmitSettings: (library: string, conf: Treepermissions_confInput) => void;\n    readonly: boolean;\n}\n\nfunction NodePermissionTabContent({\n    readonly,\n    treeLibraries,\n    tree,\n    onSubmitSettings\n}: INodePermissionTabContentProps): JSX.Element {\n    const {lang} = useLang();\n    const {t} = useTranslation();\n    const _handleChangeSettings = (conf: Treepermissions_confInput) => onSubmitSettings(treeLibraries.library.id, conf);\n\n    const treePermsConf =\n        tree.permissions_conf?.filter(p => p.libraryId === treeLibraries.library.id)?.[0]?.permissionsConf ?? null;\n\n    const permissionsPanes = treePermsConf?.permissionTreeAttributes\n        ? treePermsConf?.permissionTreeAttributes.map(a => ({\n              key: 'a.id',\n              menuItem: localizedLabel(a.label, lang),\n              render: () => (\n                  <Tab.Pane key=\"treePermissions\" className=\"grow flex-col height100\">\n                      {\n                          <DefineTreePermissionsView\n                              key={a.id}\n                              treeAttribute={\n                                  a as GET_TREE_BY_ID_trees_list_permissions_conf_permissionsConf_permissionTreeAttributes_TreeAttribute\n                              }\n                              permissionType={PermissionTypes.tree_node}\n                              applyTo={`${tree.id}/${treeLibraries.library.id}`}\n                              readOnly={readonly}\n                          />\n                      }\n                  </Tab.Pane>\n              )\n          }))\n        : [];\n\n    permissionsPanes.unshift({\n        key: 'libPermissions',\n        menuItem: t('permissions.library_tab_name'),\n        render: () => (\n            <Tab.Pane key=\"libPermissions\" className=\"grow flex-col height100\">\n                {\n                    <DefinePermByUserGroupView\n                        type={PermissionTypes.tree_library}\n                        key=\"libPermissions\"\n                        applyTo={`${tree.id}/${treeLibraries.library.id}`}\n                        readOnly={readonly}\n                    />\n                }\n            </Tab.Pane>\n        )\n    });\n\n    return (\n        <>\n            <PermissionsSettingsBtn\n                permissionsSettings={treePermsConf}\n                onChangeSettings={_handleChangeSettings}\n                library={treeLibraries.library as GET_LIB_BY_ID_libraries_list}\n                readonly={readonly}\n            />\n            <Tab panes={permissionsPanes} className=\"grow flex-col height100\" />\n        </>\n    );\n}\n\nexport default NodePermissionTabContent;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport NodePermissionTabContent from './NodePermissionTabContent';\nexport default NodePermissionTabContent;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport React from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {Tab} from 'semantic-ui-react';\nimport useLang from '../../../../../../hooks/useLang';\nimport {localizedLabel} from '../../../../../../utils';\nimport {GET_TREE_BY_ID_trees_list} from '../../../../../../_gqlTypes/GET_TREE_BY_ID';\nimport {PermissionTypes, Treepermissions_confInput} from '../../../../../../_gqlTypes/globalTypes';\nimport DefinePermByUserGroupView from '../../../../../permissions/DefinePermByUserGroupView';\nimport NodePermissionTabContent from './NodePermissionTabContent';\n\ninterface IPermissionsContentProps {\n    tree: GET_TREE_BY_ID_trees_list;\n    readonly: boolean;\n    onSubmitSettings: (library: string, conf: Treepermissions_confInput) => void;\n}\n\nfunction PermissionsContent({tree, readonly, onSubmitSettings}: IPermissionsContentProps): JSX.Element {\n    const {t} = useTranslation();\n    const {lang} = useLang();\n\n    let panes = [\n        {\n            key: 'treePermissions',\n            menuItem: t('permissions.tree_tab_name'),\n            render: () => (\n                <Tab.Pane key=\"treePermissions\" className=\"grow flex-col height100\">\n                    {\n                        <DefinePermByUserGroupView\n                            type={PermissionTypes.tree}\n                            key=\"treePermissions\"\n                            applyTo={tree.id}\n                            readOnly={readonly}\n                        />\n                    }\n                </Tab.Pane>\n            )\n        }\n    ];\n\n    panes = [\n        ...panes,\n        ...tree.libraries.map(treeLib => ({\n            key: treeLib.library.id,\n            menuItem: localizedLabel(treeLib.library.label, lang),\n            render: () => (\n                <Tab.Pane key={treeLib.library.id} className=\"grow flex-col height100\">\n                    <NodePermissionTabContent\n                        tree={tree}\n                        treeLibraries={treeLib}\n                        onSubmitSettings={onSubmitSettings}\n                        readonly={readonly}\n                    />\n                </Tab.Pane>\n            )\n        }))\n    ];\n\n    return <Tab panes={panes} className=\"grow flex-col height100\" />;\n}\n\nexport default PermissionsContent;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport PermissionsContent from './PermissionsContent';\nexport default PermissionsContent;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {useMutation} from '@apollo/client';\nimport uniqBy from 'lodash/uniqBy';\nimport React from 'react';\nimport {saveTreeQuery} from '../../../../../queries/trees/saveTreeMutation';\nimport {GET_TREE_BY_ID_trees_list} from '../../../../../_gqlTypes/GET_TREE_BY_ID';\nimport {TreeNodePermissionsConfInput, Treepermissions_confInput} from '../../../../../_gqlTypes/globalTypes';\nimport {SAVE_TREE, SAVE_TREEVariables} from '../../../../../_gqlTypes/SAVE_TREE';\nimport PermissionsContent from './PermissionsContent';\n\ninterface IPermissionsTabProps {\n    tree: GET_TREE_BY_ID_trees_list;\n    readonly: boolean;\n}\n\nfunction PermissionsTab({tree, readonly}: IPermissionsTabProps): JSX.Element {\n    // TODO: handle errors\n    const [saveTree] = useMutation<SAVE_TREE, SAVE_TREEVariables>(saveTreeQuery);\n\n    /**\n     * Save tree's permissions conf\n     * We're receiving conf for one library and we have to save the whole tree permissions conf (all libraries included)\n     * Thus, we have to merge given conf with existing tree conf\n     **/\n    const _handleSubmitSettings = (libraryId: string, permissionsConf: Treepermissions_confInput) => {\n        // Putting new conf at the beginning of this array is mandatory to be able to update existing conf\n        const allPermsConf: TreeNodePermissionsConfInput[] = [\n            {\n                libraryId,\n                permissionsConf\n            },\n            ...(tree.permissions_conf ?? []).map(\n                (c): TreeNodePermissionsConfInput => ({\n                    libraryId: c.libraryId,\n                    permissionsConf: {\n                        permissionTreeAttributes: c.permissionsConf.permissionTreeAttributes.map(a => a.id),\n                        relation: c.permissionsConf.relation\n                    }\n                })\n            )\n        ];\n\n        // Dedup array to keep one conf per library\n        const uniqPermsConf = uniqBy(allPermsConf, el => el.libraryId);\n\n        return saveTree({\n            variables: {\n                treeData: {\n                    id: tree.id,\n                    permissions_conf: uniqPermsConf\n                }\n            }\n        });\n    };\n\n    return <PermissionsContent tree={tree} readonly={readonly} onSubmitSettings={_handleSubmitSettings} />;\n}\n\nexport default PermissionsTab;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport PermissionsTab from './PermissionsTab';\nexport default PermissionsTab;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {GET_TREES_trees_list_libraries} from '_gqlTypes/GET_TREES';\n\nexport const LIBRARY_DND_TYPE = 'library';\nexport const ROOT_ID = '__root__';\nexport const ALLOW_ALL_ID = '__all__';\n\nexport interface IDndLibraryItem {\n    type: string;\n    from: string;\n    library: GET_TREES_trees_list_libraries;\n}\n\nexport interface IDndDropResult {\n    id: string;\n}\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {localizedTranslation} from '@leav/utils';\nimport useLang from 'hooks/useLang';\nimport React, {useState} from 'react';\nimport {useDrag, useDrop} from 'react-dnd';\nimport {useTranslation} from 'react-i18next';\nimport {Button, Header, Icon} from 'semantic-ui-react';\nimport styled from 'styled-components';\nimport {GET_TREES_trees_list, GET_TREES_trees_list_libraries} from '_gqlTypes/GET_TREES';\nimport {IDndDropResult, IDndLibraryItem, LIBRARY_DND_TYPE} from '../../../_types';\n\nconst LibraryItemWrapper = styled.div<{isOver: boolean}>`\n    border: 1px solid #ddd;\n    border-radius: 0.25rem;\n    margin: 0.25rem 0 1rem 0;\n    padding: 0.5rem;\n    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);\n    cursor: grab;\n    width: 100%;\n    background-color: ${props => (props.isOver ? '#f5f5f5' : '#FFF')};\n    position: relative;\n`;\n\nconst AllowedChildrenWrapper = styled.div`\n    margin-top: 1rem;\n`;\n\nconst RemoveBtn = styled(Button)`\n    position: absolute;\n    top: 0.5rem;\n    right: 0.5rem;\n    &&&,\n    &&&:hover,\n    &&&:focus {\n        padding: 0;\n        margin: 0;\n        border: none;\n        box-shadow: none;\n    }\n`;\n\nconst ItemHeader = styled(Header)`\n    cursor: pointer;\n`;\n\ninterface IDependenciesLibraryItemProps {\n    tree: GET_TREES_trees_list;\n    libraryItem: GET_TREES_trees_list_libraries;\n    parentItemId: string;\n    readOnly: boolean;\n    onMove: (libraryId: string, parentFrom: string, parentTo: string) => void;\n}\n\nfunction DependenciesLibraryItem({\n    libraryItem,\n    parentItemId,\n    tree,\n    readOnly,\n    onMove\n}: IDependenciesLibraryItemProps): JSX.Element {\n    const {lang} = useLang();\n    const [isChildrenExpanded, setChildrenExpanded] = useState(false);\n    const {t} = useTranslation();\n\n    const _handleShowChildren = () => {\n        setChildrenExpanded(!isChildrenExpanded);\n    };\n\n    const _handleRemove = (e: React.SyntheticEvent) => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        onMove(libraryItem.library.id, parentItemId, null);\n    };\n\n    const [, drag] = useDrag<IDndLibraryItem, IDndDropResult, {}>({\n        item: {\n            type: LIBRARY_DND_TYPE,\n            from: parentItemId,\n            library: libraryItem\n        },\n        canDrag: !readOnly,\n        end: (item, monitor) => {\n            const dropResult = monitor.getDropResult();\n            if (dropResult) {\n                onMove(libraryItem.library.id, item.from, dropResult.id);\n            }\n        }\n    });\n\n    const [{isOverNested, isOverElement}, drop] = useDrop<\n        IDndLibraryItem,\n        IDndDropResult,\n        {isOverNested: boolean; isOverElement: boolean}\n    >({\n        accept: [LIBRARY_DND_TYPE],\n        canDrop: () => !readOnly,\n        drop: (item, monitor) => {\n            const isOverCurrent = monitor.isOver({shallow: true});\n\n            if (!isOverCurrent) {\n                return;\n            }\n\n            setChildrenExpanded(true);\n\n            return {id: libraryItem.library.id};\n        },\n        collect: monitor => ({\n            isOverElement: monitor.isOver({shallow: true}),\n            isOverNested: monitor.isOver()\n        })\n    });\n\n    const allowedLibraries = tree.libraries.filter(treeLibrary =>\n        libraryItem.settings.allowedChildren.some(\n            allowedChildId => allowedChildId === treeLibrary.library.id || allowedChildId === '__all__'\n        )\n    );\n\n    const mustShowChildren = isChildrenExpanded || isOverNested;\n\n    return (\n        <LibraryItemWrapper\n            key={libraryItem.library.id}\n            ref={drag}\n            isOver={isOverElement}\n            data-testid={`dependencies-library-item-${libraryItem.library.id}`}\n        >\n            <div ref={drop}>\n                <ItemHeader size=\"small\" onClick={_handleShowChildren}>\n                    <span>\n                        {mustShowChildren ? (\n                            <Icon name=\"triangle down\" style={{fontSize: '1rem'}} />\n                        ) : (\n                            <Icon name=\"triangle right\" style={{fontSize: '1rem'}} />\n                        )}\n                        {localizedTranslation(libraryItem.library.label, lang)}\n                    </span>\n                    {!readOnly && (\n                        <RemoveBtn basic circular size=\"small\" onClick={_handleRemove} aria-label={t('admin.remove')}>\n                            <Icon name=\"trash\" />\n                        </RemoveBtn>\n                    )}\n                </ItemHeader>\n                {mustShowChildren && (\n                    <>\n                        {!!allowedLibraries.length ? (\n                            <AllowedChildrenWrapper data-testid=\"allowed-children\">\n                                <div>{t('trees.allow_children')}:</div>\n                                {allowedLibraries.map(allowedLibrary => (\n                                    <DependenciesLibraryItem\n                                        key={allowedLibrary.library.id}\n                                        tree={tree}\n                                        libraryItem={allowedLibrary}\n                                        parentItemId={libraryItem.library.id}\n                                        readOnly={readOnly}\n                                        onMove={onMove}\n                                    />\n                                ))}\n                            </AllowedChildrenWrapper>\n                        ) : (\n                            <div>{t('trees.no_children_allowed')}</div>\n                        )}\n                    </>\n                )}\n            </div>\n        </LibraryItemWrapper>\n    );\n}\n\nexport default DependenciesLibraryItem;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport DependenciesLibraryItem from './DependenciesLibraryItem';\nexport default DependenciesLibraryItem;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport * as React from 'react';\nimport {useDrop} from 'react-dnd';\nimport {useTranslation} from 'react-i18next';\nimport {Header} from 'semantic-ui-react';\nimport styled from 'styled-components';\nimport {GET_TREES_trees_list} from '_gqlTypes/GET_TREES';\nimport {IDndDropResult, IDndLibraryItem, LIBRARY_DND_TYPE, ROOT_ID} from '../../_types';\nimport DependenciesLibraryItem from './DependenciesLibraryItem';\n\ninterface IDependenciesEditorProps {\n    tree: GET_TREES_trees_list;\n    readOnly: boolean;\n    onMove: (libraryId: string, parentFrom: string, parentTo: string) => void;\n}\n\nconst TreeRoot = styled.div<{isOver: boolean}>`\n    background: ${props => (props.isOver ? '#f5f5f5' : '#FFF')};\n    border: 2px dashed #ccc;\n    border-radius: 0.25rem;\n    padding: 1rem;\n    margin: 1rem 0;\n`;\n\nconst NoRootMessageWrapper = styled.div`\n    color: #ccc;\n    font-weight: bold;\n    margin: 3rem auto;\n    text-align: center;\n`;\n\nfunction DependenciesEditor({tree, onMove, readOnly}: IDependenciesEditorProps): JSX.Element {\n    const {t} = useTranslation();\n    const [{isOver}, drop] = useDrop<IDndLibraryItem, IDndDropResult, {isOver: boolean}>({\n        accept: [LIBRARY_DND_TYPE],\n        canDrop: () => !readOnly,\n        drop: (item, monitor) => {\n            const isOverCurrent = monitor.isOver({shallow: true});\n\n            if (!isOverCurrent) {\n                return;\n            }\n\n            return {id: ROOT_ID};\n        },\n        collect: monitor => ({\n            isOver: monitor.isOver({shallow: true})\n        })\n    });\n\n    const rootLibraries = tree.libraries.filter(treeLibrary => treeLibrary.settings.allowedAtRoot);\n\n    return (\n        <TreeRoot ref={drop} isOver={isOver} data-testid=\"dependencies-editor-root\">\n            <Header size=\"small\">{t('trees.root')}</Header>\n            {rootLibraries.length ? (\n                rootLibraries.map(rootLibrary => (\n                    <DependenciesLibraryItem\n                        key={rootLibrary.library.id}\n                        tree={tree}\n                        libraryItem={rootLibrary}\n                        parentItemId={ROOT_ID}\n                        readOnly={readOnly}\n                        onMove={onMove}\n                    />\n                ))\n            ) : (\n                <NoRootMessageWrapper>{t('trees.no_root_libraries')}</NoRootMessageWrapper>\n            )}\n        </TreeRoot>\n    );\n}\n\nexport default DependenciesEditor;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport DependenciesEditor from './DependenciesEditor';\nexport default DependenciesEditor;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {localizedTranslation} from '@leav/utils';\nimport useLang from 'hooks/useLang';\nimport React from 'react';\nimport {useDrag} from 'react-dnd';\nimport {useTranslation} from 'react-i18next';\nimport {Button, Icon} from 'semantic-ui-react';\nimport styled from 'styled-components';\nimport {GET_TREES_trees_list_libraries} from '_gqlTypes/GET_TREES';\nimport {IDndDropResult, IDndLibraryItem, ROOT_ID} from '../../_types';\n\ninterface ILibraryItemProps {\n    treeLibrary: GET_TREES_trees_list_libraries;\n    readOnly: boolean;\n    onMove: (libraryId: string, parentFrom: string, parentTo: string) => void;\n}\n\nconst LibraryItemWrapper = styled.div`\n    border: 1px solid #ddd;\n    border-radius: 0.25rem;\n    margin: 1rem 0;\n    padding: 0.5rem;\n    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);\n    cursor: grab;\n    width: 100%;\n    position: relative;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n`;\n\nconst AddBtn = styled(Button)`\n    &&&,\n    &&&:hover,\n    &&&:focus {\n        border: none;\n        box-shadow: none;\n    }\n`;\n\nfunction LibraryItem({treeLibrary, readOnly, onMove}: ILibraryItemProps): JSX.Element {\n    const {lang} = useLang();\n    const {t} = useTranslation();\n\n    const [, drag] = useDrag<IDndLibraryItem, IDndDropResult, {}>({\n        item: {\n            type: 'library',\n            from: null,\n            library: treeLibrary\n        },\n        canDrag: !readOnly,\n        end: (_, monitor) => {\n            const dropResult = monitor.getDropResult();\n            if (dropResult) {\n                onMove(treeLibrary.library.id, null, dropResult.id);\n            }\n        }\n    });\n\n    const _handleAdd = () => {\n        onMove(treeLibrary.library.id, null, ROOT_ID);\n    };\n\n    return (\n        <LibraryItemWrapper\n            key={treeLibrary.library.id}\n            ref={drag}\n            data-testid={`library-item-${treeLibrary.library.id}`}\n        >\n            {localizedTranslation(treeLibrary.library.label, lang)}\n            {!readOnly && (\n                <AddBtn icon circular basic size=\"small\" onClick={_handleAdd} aria-label={t('admin.add')}>\n                    <Icon name=\"plus\" />\n                </AddBtn>\n            )}\n        </LibraryItemWrapper>\n    );\n}\n\nexport default LibraryItem;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport LibraryItem from './LibraryItem';\nexport default LibraryItem;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {IKeyValue} from '@leav/utils';\nimport React from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {Header, Loader} from 'semantic-ui-react';\nimport styled from 'styled-components';\nimport {GET_TREES_trees_list} from '_gqlTypes/GET_TREES';\nimport {SAVE_TREE_saveTree_libraries_settings} from '_gqlTypes/SAVE_TREE';\nimport {ALLOW_ALL_ID, ROOT_ID} from '../_types';\nimport DependenciesEditor from './DependenciesEditor';\nimport LibraryItem from './LibraryItem';\n\nconst Wrapper = styled.div`\n    display: grid;\n    grid-template-columns: 250px 1fr;\n    grid-template-rows: 1fr;\n    grid-template-areas: 'libraries deps';\n    gap: 1rem;\n    height: 100%;\n`;\n\nconst Libraries = styled.div`\n    grid-area: libraries;\n    overflow: auto;\n    width: 250px;\n`;\n\nconst Dependencies = styled.div`\n    border-left: 1px solid #ccc;\n    padding-left: 1rem;\n    grid-area: deps;\n    overflow: auto;\n    position: relative;\n`;\n\ninterface ITreeStructureViewProps {\n    tree: GET_TREES_trees_list;\n    readOnly: boolean;\n    onChange: (dependencies: IKeyValue<SAVE_TREE_saveTree_libraries_settings>) => void;\n    loading: boolean;\n}\n\nfunction TreeStructureView({tree, readOnly, onChange, loading}: ITreeStructureViewProps): JSX.Element {\n    const {t} = useTranslation();\n\n    const deps = tree.libraries.reduce((acc, library) => {\n        acc[library.library.id] = library.settings;\n        return acc;\n    }, {} as IKeyValue<SAVE_TREE_saveTree_libraries_settings>);\n\n    const _handleLibraryMove = (libraryId: string, parentFrom: string, parentTo: string) => {\n        // Add library to its parent (or root)\n        // If removing library, parentTo is null\n        if (parentTo === ROOT_ID) {\n            deps[libraryId] = {...deps[libraryId], allowedAtRoot: true};\n        } else if (parentTo) {\n            deps[parentTo] = {\n                ...deps[parentTo],\n                allowedChildren: [...deps[parentTo].allowedChildren, libraryId].filter(id => id !== ALLOW_ALL_ID)\n            };\n        }\n\n        // Remove library from its previous parent (or root)\n        // If coming from libraries list, parentFrom is null\n        if (parentFrom === ROOT_ID) {\n            deps[libraryId] = {...deps[libraryId], allowedAtRoot: false};\n        } else if (parentFrom) {\n            deps[parentFrom] = {\n                ...deps[parentFrom],\n                allowedChildren: deps[parentFrom].allowedChildren.filter(id => id !== libraryId && id !== ALLOW_ALL_ID)\n            };\n        }\n\n        onChange(deps);\n    };\n\n    return (\n        <Wrapper>\n            <Libraries data-testid=\"libraries-list\">\n                <Header size=\"small\">\n                    {t('trees.libraries')}\n                    {tree.libraries.map(treeLibrary => (\n                        <LibraryItem\n                            key={treeLibrary.library.id}\n                            treeLibrary={treeLibrary}\n                            readOnly={readOnly}\n                            onMove={_handleLibraryMove}\n                        />\n                    ))}\n                </Header>\n            </Libraries>\n            <Dependencies data-testid=\"dependencies-editor\">\n                <Header size=\"small\">\n                    {t('trees.dependencies')}\n                    {loading && <Loader size=\"tiny\" active inline style={{marginLeft: '1rem'}} />}\n                </Header>\n                <DependenciesEditor tree={tree} readOnly={readOnly} onMove={_handleLibraryMove} />\n            </Dependencies>\n        </Wrapper>\n    );\n}\n\nexport default TreeStructureView;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport TreeStructureView from './TreeStructureView';\nexport default TreeStructureView;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {useMutation} from '@apollo/client';\nimport {IKeyValue} from '@leav/utils';\nimport {saveTreeQuery} from 'queries/trees/saveTreeMutation';\nimport React from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {GET_TREES_trees_list} from '_gqlTypes/GET_TREES';\nimport {SAVE_TREE, SAVE_TREEVariables, SAVE_TREE_saveTree_libraries_settings} from '_gqlTypes/SAVE_TREE';\nimport TreeStructureView from './TreeStructureView';\n\ninterface ITreeStructureProps {\n    tree: GET_TREES_trees_list;\n    readOnly: boolean;\n}\n\nfunction TreeStructure({tree, readOnly}: ITreeStructureProps): JSX.Element {\n    const {t} = useTranslation();\n    const [saveTree, {loading}] = useMutation<SAVE_TREE, SAVE_TREEVariables>(saveTreeQuery, {\n        onError: error => undefined\n    });\n\n    const _handleChange = async (dependencies: IKeyValue<SAVE_TREE_saveTree_libraries_settings>) => {\n        await saveTree({\n            variables: {\n                treeData: {\n                    id: tree.id,\n                    libraries: tree.libraries?.map(treeLibrary => ({\n                        library: treeLibrary.library.id,\n                        settings: {\n                            allowMultiplePositions: dependencies[treeLibrary.library.id].allowMultiplePositions,\n                            allowedAtRoot: dependencies[treeLibrary.library.id].allowedAtRoot,\n                            allowedChildren: dependencies[treeLibrary.library.id].allowedChildren\n                        }\n                    }))\n                }\n            }\n        });\n    };\n\n    return <TreeStructureView tree={tree} readOnly={readOnly} onChange={_handleChange} loading={loading} />;\n}\n\nexport default TreeStructure;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport TreeStructure from './TreeStructure';\nexport default TreeStructure;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport TreeExplorer from 'components/trees/TreeExplorer';\nimport React, {useState} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {useHistory, useLocation} from 'react-router-dom';\nimport {Header, Tab, TabProps} from 'semantic-ui-react';\nimport useLang from '../../../../hooks/useLang';\nimport {localizedLabel} from '../../../../utils';\nimport {GET_TREE_BY_ID_trees_list} from '../../../../_gqlTypes/GET_TREE_BY_ID';\nimport TreeInfosTab from './InfosTab';\nimport PermissionsTab from './PermissionsTab';\nimport TreeStructure from './TreeStructure';\n\nexport interface IEditTreeMatchParams {\n    id: string;\n}\n\ninterface IEditTreeTabsProps {\n    tree: GET_TREE_BY_ID_trees_list | null;\n    readonly: boolean;\n}\n\nfunction EditTreeTabs({tree, readonly}: IEditTreeTabsProps): JSX.Element {\n    const {t} = useTranslation();\n    const {lang} = useLang();\n    const history = useHistory();\n    const location = useLocation();\n\n    const isCreationMode = tree === null;\n\n    const label = isCreationMode ? t('trees.new') : localizedLabel(tree?.label ?? null, lang) || tree!.id;\n\n    const panes = [\n        {\n            key: 'infos',\n            mustBeDisplayed: true,\n            menuItem: t('trees.informations'),\n            render: () => (\n                <Tab.Pane key=\"infos\" className=\"grow\">\n                    <TreeInfosTab tree={tree} readonly={readonly} />\n                </Tab.Pane>\n            )\n        },\n        {\n            key: 'structure',\n            mustBeDisplayed: !isCreationMode,\n            menuItem: t('trees.structure'),\n            render: () => (\n                <Tab.Pane key=\"structure\" className=\"grow\">\n                    <TreeStructure tree={tree} readOnly={readonly} />\n                </Tab.Pane>\n            )\n        },\n        {\n            key: 'explorer',\n            mustBeDisplayed: !isCreationMode,\n            menuItem: t('trees.explorer'),\n            render: () => (\n                <Tab.Pane key=\"explorer\" className=\"grow\">\n                    <TreeExplorer\n                        withFakeRoot\n                        fakeRootLabel={label}\n                        tree={tree as GET_TREE_BY_ID_trees_list}\n                        readOnly={readonly}\n                    />\n                </Tab.Pane>\n            )\n        },\n        {\n            key: 'permissions',\n            mustBeDisplayed: !isCreationMode,\n            menuItem: t('trees.permissions'),\n            render: () => (\n                <Tab.Pane key=\"structure\" className=\"grow\">\n                    <PermissionsTab tree={tree as GET_TREE_BY_ID_trees_list} readonly={readonly} />\n                </Tab.Pane>\n            )\n        }\n    ].filter(p => p.mustBeDisplayed);\n\n    const tabName = location ? location.hash.replace('#', '') : undefined;\n    const [activeIndex, setActiveIndex] = useState<number | undefined>(\n        tabName ? panes.findIndex(p => tabName === p.key) : 0\n    );\n\n    const _handleOnTabChange = (event: React.MouseEvent<HTMLDivElement, MouseEvent>, data: TabProps) => {\n        if (data.panes && data.activeIndex !== undefined) {\n            setActiveIndex(Number(data.activeIndex.toString()));\n            history?.push(`#${data.panes[data.activeIndex].key}`);\n        }\n    };\n\n    return (\n        <>\n            <Header className=\"no-grow\">{label}</Header>\n            <Tab\n                activeIndex={activeIndex}\n                onTabChange={_handleOnTabChange}\n                menu={{secondary: true, pointing: true}}\n                panes={panes}\n                className=\"grow flex-col height100\"\n            />\n        </>\n    );\n}\n\nexport default EditTreeTabs;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport EditTreeTabs from './EditTreeTabs';\nexport default EditTreeTabs;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport EditTree from './EditTree';\nexport default EditTree;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {useQuery} from '@apollo/client';\nimport React from 'react';\nimport useUserData from '../../../hooks/useUserData';\nimport {getTreeByIdQuery} from '../../../queries/trees/getTreeById';\nimport {GET_TREE_BY_ID, GET_TREE_BY_IDVariables} from '../../../_gqlTypes/GET_TREE_BY_ID';\nimport {PermissionsActions} from '../../../_gqlTypes/globalTypes';\nimport Loading from '../../shared/Loading';\nimport EditTreeTabs from './EditTreeTabs';\n\ninterface IEditTreeProps {\n    match: any;\n}\n\nconst EditTree = ({match}: IEditTreeProps): JSX.Element => {\n    const treeId = match.params.id;\n    const userData = useUserData();\n\n    const {loading, error, data} = useQuery<GET_TREE_BY_ID, GET_TREE_BY_IDVariables>(getTreeByIdQuery, {\n        variables: {id: treeId},\n        skip: !treeId\n    });\n\n    if (loading) {\n        return <Loading withDimmer />;\n    }\n\n    if (typeof error !== 'undefined') {\n        return <p>Error: {error.message}</p>;\n    }\n\n    if (treeId && !data?.trees?.list.length) {\n        return <div>Unknown tree</div>;\n    }\n\n    return (\n        <EditTreeTabs\n            tree={data?.trees?.list[0] ?? null}\n            readonly={!userData.permissions[PermissionsActions.admin_edit_tree]}\n        />\n    );\n};\n\nexport default EditTree;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport gql from 'graphql-tag';\n\nexport const getAttributesQuery = gql`\n    query GET_ATTRIBUTES(\n        $id: ID\n        $label: String\n        $type: [AttributeType]\n        $format: [AttributeFormat]\n        $system: Boolean\n        $multiple_values: Boolean\n        $versionable: Boolean\n        $libraries: [String!]\n    ) {\n        attributes(\n            filters: {\n                id: $id\n                label: $label\n                type: $type\n                format: $format\n                system: $system\n                multiple_values: $multiple_values\n                versionable: $versionable\n                libraries: $libraries\n            }\n        ) {\n            totalCount\n            list {\n                id\n                label\n                type\n                format\n                system\n                multiple_values\n                ... on StandardAttribute {\n                    unique\n                }\n                ... on LinkAttribute {\n                    linked_library {\n                        id\n                    }\n                    reverse_link\n                }\n                ... on TreeAttribute {\n                    linked_tree {\n                        id\n                    }\n                }\n            }\n        }\n    }\n`;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport gql from 'graphql-tag';\n\nexport const getTreesQueryName = 'GET_TREES';\n\nexport const getTreesQuery = gql`\n    query GET_TREES($id: ID, $label: String, $system: Boolean) {\n        trees(filters: {id: $id, label: $label, system: $system}) {\n            totalCount\n            list {\n                id\n                label\n                system\n                behavior\n                libraries {\n                    library {\n                        id\n                        label\n                    }\n                    settings {\n                        allowMultiplePositions\n                        allowedAtRoot\n                        allowedChildren\n                    }\n                }\n            }\n        }\n    }\n`;\n","/**\n * This function is like `arrayIncludes` except that it accepts a comparator.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @param {Function} comparator The comparator invoked per element.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludesWith(array, value, comparator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (comparator(value, array[index])) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arrayIncludesWith;\n","var SetCache = require('./_SetCache'),\n    arrayIncludes = require('./_arrayIncludes'),\n    arrayIncludesWith = require('./_arrayIncludesWith'),\n    cacheHas = require('./_cacheHas'),\n    createSet = require('./_createSet'),\n    setToArray = require('./_setToArray');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n */\nfunction baseUniq(array, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      length = array.length,\n      isCommon = true,\n      result = [],\n      seen = result;\n\n  if (comparator) {\n    isCommon = false;\n    includes = arrayIncludesWith;\n  }\n  else if (length >= LARGE_ARRAY_SIZE) {\n    var set = iteratee ? null : createSet(array);\n    if (set) {\n      return setToArray(set);\n    }\n    isCommon = false;\n    includes = cacheHas;\n    seen = new SetCache;\n  }\n  else {\n    seen = iteratee ? [] : result;\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var seenIndex = seen.length;\n      while (seenIndex--) {\n        if (seen[seenIndex] === computed) {\n          continue outer;\n        }\n      }\n      if (iteratee) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n    else if (!includes(seen, computed, comparator)) {\n      if (seen !== result) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseUniq;\n","var castPath = require('./_castPath'),\n    last = require('./last'),\n    parent = require('./_parent'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.unset`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The property path to unset.\n * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n */\nfunction baseUnset(object, path) {\n  path = castPath(path, object);\n  object = parent(object, path);\n  return object == null || delete object[toKey(last(path))];\n}\n\nmodule.exports = baseUnset;\n","var Set = require('./_Set'),\n    noop = require('./noop'),\n    setToArray = require('./_setToArray');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Creates a set object of `values`.\n *\n * @private\n * @param {Array} values The values to add to the set.\n * @returns {Object} Returns the new set.\n */\nvar createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n  return new Set(values);\n};\n\nmodule.exports = createSet;\n","var isPlainObject = require('./isPlainObject');\n\n/**\n * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n * objects.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {string} key The key of the property to inspect.\n * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n */\nfunction customOmitClone(value) {\n  return isPlainObject(value) ? undefined : value;\n}\n\nmodule.exports = customOmitClone;\n","var baseGet = require('./_baseGet'),\n    baseSlice = require('./_baseSlice');\n\n/**\n * Gets the parent value at `path` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} path The path to get the parent value of.\n * @returns {*} Returns the parent value.\n */\nfunction parent(object, path) {\n  return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n}\n\nmodule.exports = parent;\n","/**\n * Gets the last element of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the last element of `array`.\n * @example\n *\n * _.last([1, 2, 3]);\n * // => 3\n */\nfunction last(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? array[length - 1] : undefined;\n}\n\nmodule.exports = last;\n","var arrayMap = require('./_arrayMap'),\n    baseClone = require('./_baseClone'),\n    baseUnset = require('./_baseUnset'),\n    castPath = require('./_castPath'),\n    copyObject = require('./_copyObject'),\n    customOmitClone = require('./_customOmitClone'),\n    flatRest = require('./_flatRest'),\n    getAllKeysIn = require('./_getAllKeysIn');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * The opposite of `_.pick`; this method creates an object composed of the\n * own and inherited enumerable property paths of `object` that are not omitted.\n *\n * **Note:** This method is considerably slower than `_.pick`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The source object.\n * @param {...(string|string[])} [paths] The property paths to omit.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.omit(object, ['a', 'c']);\n * // => { 'b': '2' }\n */\nvar omit = flatRest(function(object, paths) {\n  var result = {};\n  if (object == null) {\n    return result;\n  }\n  var isDeep = false;\n  paths = arrayMap(paths, function(path) {\n    path = castPath(path, object);\n    isDeep || (isDeep = path.length > 1);\n    return path;\n  });\n  copyObject(object, getAllKeysIn(object), result);\n  if (isDeep) {\n    result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n  }\n  var length = paths.length;\n  while (length--) {\n    baseUnset(result, paths[length]);\n  }\n  return result;\n});\n\nmodule.exports = omit;\n","var baseIteratee = require('./_baseIteratee'),\n    baseUniq = require('./_baseUniq');\n\n/**\n * This method is like `_.uniq` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the criterion by which\n * uniqueness is computed. The order of result values is determined by the\n * order they occur in the array. The iteratee is invoked with one argument:\n * (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n * // => [2.1, 1.2]\n *\n * // The `_.property` iteratee shorthand.\n * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n * // => [{ 'x': 1 }, { 'x': 2 }]\n */\nfunction uniqBy(array, iteratee) {\n  return (array && array.length) ? baseUniq(array, baseIteratee(iteratee, 2)) : [];\n}\n\nmodule.exports = uniqBy;\n"],"names":["LibrariesSelectorField","loading","libraries","fieldProps","availableLanguages","useLang","lang","options","map","l","key","id","value","text","localizedLabel","label","t","tReady","defaultNS","i18nOptions","reportNS","Form","search","defaultProps","useQuery","getLibsQuery","data","list","DefineTreePermissionsView","tree","treeAttribute","permissionType","applyTo","readOnly","React","node","fakeRootId","path","treeIndex","selectedTreeNode","setSelectedTreeNode","selectedGroupNode","setSelectedGroupNode","linked_tree","cols","DefinePermissionsViewLoadTree","treeId","onClick","nodeData","getTreeNodeKey","selectedNode","push","EditPermissions","permParams","type","usersGroup","permissionTreeTarget","nodeId","ColumnsDisplay","columnsNumber","columnsContent","AttributeItem","styled","List","activeItemColor","attributes","onSelect","useTranslation","_handleAttributeClick","attribute","divided","length","Message","info","size","library","selectedAttributes","onSelectAttribute","useState","isListExpanded","setIsListExpanded","useLazyQuery","getAttributesQuery","variables","AttributeType","getAttributes","error","called","useEffect","attributesList","filter","includes","SimplisticButton","basic","compact","Icon","name","Loading","ErrorDisplay","message","PopContent","Trigger","FooterCell","Table","props","$hasAttributes","defaultRelation","PermissionsRelation","permissionsSettings","onChangeSettings","readonly","elementProps","relation","activeOperator","setActiveOperator","permissionsAttributes","permissionTreeAttributes","PopupTrigger","operators","Object","values","_handleOperatorChange","operator","attr","attributeSelectionFilters","Popup","trigger","on","closeOnEscape","position","style","maxWidth","a","width","icon","removedAttributeId","attributeId","colSpan","selectedAttribute","newSettings","Button","disabled","active","saveTreeQuery","gql","BlockLabel","DeleteIcon","onChange","_handleSettingsChange","index","_","checked","newLibs","settings","_handleLibChange","_handleDeleteLibrary","splice","Grid","textAlign","floated","verticalAlign","labelPosition","allowMultiplePositions","allowedAtRoot","allowedChildren","treeLib","Segment","columns","stackable","LibrariesSelector","multiple","fluid","selection","Checkbox","toggle","FormGroupWithMargin","onSubmit","errors","onCheckIdExists","defaultTree","fr","en","behavior","TreeBehavior","system","permissions_conf","initialValues","omit","existingTree","defaultLang","availableLangs","serverValidationErrors","extensions","code","ErrorTypes","fields","idValidator","yup","required","matches","test","validationSchema","shape","behaviorOptions","b","render","handleSubmit","handleBlur","setFieldValue","inputErrors","touched","_handleLabelChange","e","_handleChange","split","field","subfield","formatIDString","_getErrorByField","fieldName","getFieldError","grouped","FormFieldWrapper","onBlur","librariesSettings","history","useHistory","isNewTree","useMutation","update","cache","clearCacheForQuery","saveTree","getTreesQuery","fetchPolicy","getTreeById","dataTreeById","_handleSubmit","treeData","refetchQueries","replace","pathname","_handleCheckIdExists","val","trees","PermissionsSettingsBtn","PermissionsSettings","treeLibraries","onSubmitSettings","treePermsConf","p","libraryId","permissionsConf","permissionsPanes","menuItem","Tab","className","PermissionTypes","unshift","DefinePermByUserGroupView","conf","panes","allPermsConf","c","uniqPermsConf","uniqBy","el","LIBRARY_DND_TYPE","ROOT_ID","ALLOW_ALL_ID","LibraryItemWrapper","isOver","AllowedChildrenWrapper","RemoveBtn","ItemHeader","Header","DependenciesLibraryItem","libraryItem","parentItemId","onMove","isChildrenExpanded","setChildrenExpanded","useDrag","item","from","canDrag","end","monitor","dropResult","getDropResult","drag","useDrop","accept","canDrop","drop","shallow","collect","isOverElement","isOverNested","allowedLibraries","treeLibrary","some","allowedChildId","mustShowChildren","ref","fontSize","localizedTranslation","circular","preventDefault","stopPropagation","allowedLibrary","TreeRoot","NoRootMessageWrapper","rootLibraries","rootLibrary","AddBtn","Wrapper","Libraries","Dependencies","deps","reduce","acc","_handleLibraryMove","parentFrom","parentTo","Loader","inline","marginLeft","onError","dependencies","location","useLocation","isCreationMode","mustBeDisplayed","TreeExplorer","withFakeRoot","fakeRootLabel","tabName","hash","undefined","findIndex","activeIndex","setActiveIndex","onTabChange","event","Number","toString","menu","secondary","pointing","match","params","userData","useUserData","getTreeByIdQuery","skip","withDimmer","permissions","PermissionsActions","getTreesQueryName","module","exports","array","comparator","SetCache","require","arrayIncludes","arrayIncludesWith","cacheHas","createSet","setToArray","iteratee","isCommon","result","seen","set","outer","computed","seenIndex","castPath","last","parent","toKey","object","Set","noop","isPlainObject","baseGet","baseSlice","arrayMap","baseClone","baseUnset","copyObject","customOmitClone","flatRest","getAllKeysIn","paths","isDeep","CLONE_DEEP_FLAG","baseIteratee","baseUniq"],"sourceRoot":""}