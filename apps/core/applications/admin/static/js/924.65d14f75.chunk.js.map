{"version":3,"file":"static/js/924.65d14f75.chunk.js","mappings":"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","sources":["components/shared/ConfirmedButton/index.ts","components/shared/ConfirmedButton/ConfirmedButton.tsx","components/shared/DeleteButton/DeleteButton.tsx","components/shared/DeleteButton/index.ts","queries/trees/deleteTreeMutation.ts","components/trees/DeleteTree/DeleteTree.tsx","components/trees/DeleteTree/index.ts","components/trees/TreesList/TreesList.tsx","components/trees/TreesList/index.ts","components/trees/Trees/Trees.tsx","components/trees/Trees/index.ts","queries/trees/getTreesQuery.ts"],"sourcesContent":["// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport ConfirmedButton from './ConfirmedButton';\nexport default ConfirmedButton;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport React, {useState} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {Confirm} from 'semantic-ui-react';\n\ninterface IConfirmedButtonProps {\n    actionButton?: React.ReactElement<any>;\n    action: (param?: any) => void;\n    confirmMessage: string;\n    children: JSX.Element;\n}\n\nconst ConfirmedButton = (props: IConfirmedButtonProps): JSX.Element => {\n    const {confirmMessage, children} = props;\n    const {t} = useTranslation();\n    const [showConfirm, setShowConfirm] = useState<boolean>(false);\n\n    const _disableClick = (e: React.SyntheticEvent) => {\n        e.preventDefault();\n        e.stopPropagation();\n    };\n\n    const _openConfirm = (e: React.SyntheticEvent) => {\n        e.preventDefault();\n        e.stopPropagation();\n        setShowConfirm(true);\n    };\n\n    const _closeConfirm = (e: React.SyntheticEvent) => {\n        e.preventDefault();\n        e.stopPropagation();\n        setShowConfirm(false);\n    };\n\n    const _runAction = (e: React.SyntheticEvent) => {\n        _closeConfirm(e);\n        props.action();\n    };\n\n    const clickableButton = React.cloneElement(children, {onClick: _openConfirm});\n\n    return (\n        <div onClick={_disableClick}>\n            {clickableButton}\n            <Confirm\n                open={showConfirm}\n                content={confirmMessage}\n                onCancel={_closeConfirm}\n                onConfirm={_runAction}\n                cancelButton={t('admin.cancel')}\n                closeOnDocumentClick={false}\n                closeOnDimmerClick={false}\n            />\n        </div>\n    );\n};\n\nexport default ConfirmedButton;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport React from 'react';\nimport {Button} from 'semantic-ui-react';\n\ninterface IDeleteButtonProps {\n    disabled: boolean;\n    onClick?: (event: React.SyntheticEvent) => void;\n}\n\nfunction DeleteButton({disabled, onClick}: IDeleteButtonProps): JSX.Element {\n    return (\n        <Button aria-label=\"delete\" className=\"delete\" circular icon=\"trash\" disabled={disabled} onClick={onClick} />\n    );\n}\n\nexport default DeleteButton;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport DeleteButton from './DeleteButton';\nexport default DeleteButton;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport gql from 'graphql-tag';\n\nexport const deleteTreeQuery = gql`\n    mutation DELETE_TREE($treeId: ID!) {\n        deleteTree(id: $treeId) {\n            id\n        }\n    }\n`;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {StoreObject, useMutation} from '@apollo/client';\nimport React from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {DELETE_TREE, DELETE_TREEVariables} from '_gqlTypes/DELETE_TREE';\nimport useLang from '../../../hooks/useLang';\nimport useUserData from '../../../hooks/useUserData';\nimport {deleteTreeQuery} from '../../../queries/trees/deleteTreeMutation';\nimport {getTreesQueryName} from '../../../queries/trees/getTreesQuery';\nimport {deleteFromCache, localizedLabel} from '../../../utils/utils';\nimport {GET_TREES_trees_list} from '../../../_gqlTypes/GET_TREES';\nimport {PermissionsActions} from '../../../_gqlTypes/globalTypes';\nimport ConfirmedButton from '../../shared/ConfirmedButton';\nimport DeleteButton from '../../shared/DeleteButton';\n\ninterface IDeleteTreeProps {\n    tree?: GET_TREES_trees_list;\n    filters?: any;\n}\n\nconst DeleteTree = ({tree, filters}: IDeleteTreeProps): JSX.Element | null => {\n    const {t} = useTranslation();\n    const availableLanguages = useLang().lang;\n    const userData = useUserData();\n    const [deleteTree] = useMutation<DELETE_TREE, DELETE_TREEVariables>(deleteTreeQuery, {\n        refetchQueries: [getTreesQueryName],\n        update: (cache, {data}) => {\n            deleteFromCache(cache, (data.deleteTree as unknown) as StoreObject);\n        }\n    });\n\n    const _handleDelete = async () =>\n        deleteTree({\n            variables: {treeId: tree.id}\n        });\n\n    const treeLabel = localizedLabel(tree.label, availableLanguages);\n\n    return !!tree && userData.permissions[PermissionsActions.admin_delete_tree] ? (\n        <ConfirmedButton action={_handleDelete} confirmMessage={t('trees.confirm_delete', {treeLabel})}>\n            <DeleteButton disabled={tree.system} />\n        </ConfirmedButton>\n    ) : (\n        <></>\n    );\n};\n\nexport default DeleteTree;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport DeleteTree from './DeleteTree';\nexport default DeleteTree;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport React from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {Checkbox, Input, Table} from 'semantic-ui-react';\nimport useLang from '../../../hooks/useLang';\nimport {localizedLabel} from '../../../utils/utils';\nimport {GET_TREES_trees_list} from '../../../_gqlTypes/GET_TREES';\nimport Loading from '../../shared/Loading';\nimport DeleteTree from '../DeleteTree';\n\ninterface ITreesListProps {\n    trees: GET_TREES_trees_list[] | null;\n    loading?: boolean;\n    onRowClick: (tree: GET_TREES_trees_list) => void;\n    onFiltersUpdate?: (filters: any) => void;\n    filters?: any;\n}\n\nconst TreesList = ({trees, loading, filters, onFiltersUpdate, onRowClick}: ITreesListProps): JSX.Element => {\n    const {t} = useTranslation();\n    const availableLanguages = useLang().lang;\n    const _handleFilterChange = (e: React.SyntheticEvent, d: any) => {\n        // If a checkbox was not checked and is clicked, go back to indeterminate state\n        if (d.type === 'checkbox' && filters.system === false && d.checked) {\n            d.indeterminate = true;\n            d.checked = false;\n        }\n\n        if (onFiltersUpdate) {\n            onFiltersUpdate(d);\n        }\n    };\n\n    return (\n        <Table selectable striped>\n            <Table.Header>\n                <Table.Row>\n                    <Table.HeaderCell width={8}>{t('trees.label')}</Table.HeaderCell>\n                    <Table.HeaderCell width={6}>{t('trees.ID')}</Table.HeaderCell>\n                    <Table.HeaderCell width={1}>{t('trees.isSystem')}</Table.HeaderCell>\n                    <Table.HeaderCell width={1} />\n                </Table.Row>\n                <Table.Row className=\"filters\">\n                    <Table.HeaderCell>\n                        <Input\n                            size=\"small\"\n                            fluid\n                            placeholder={t('trees.label') + '...'}\n                            name=\"label\"\n                            value={filters.label || ''}\n                            onChange={_handleFilterChange}\n                        />\n                    </Table.HeaderCell>\n                    <Table.HeaderCell>\n                        <Input\n                            size=\"small\"\n                            fluid\n                            placeholder={t('trees.ID') + '...'}\n                            name=\"id\"\n                            value={filters.id || ''}\n                            onChange={_handleFilterChange}\n                        />\n                    </Table.HeaderCell>\n                    <Table.HeaderCell>\n                        <Checkbox\n                            indeterminate={typeof filters.system === 'undefined'}\n                            name=\"system\"\n                            checked={filters.system}\n                            onChange={_handleFilterChange}\n                        />\n                    </Table.HeaderCell>\n                    <Table.HeaderCell />\n                </Table.Row>\n            </Table.Header>\n            <Table.Body>\n                {loading ? (\n                    <Table.Row>\n                        <Table.Cell colSpan={6}>\n                            <Loading />\n                        </Table.Cell>\n                    </Table.Row>\n                ) : (\n                    trees &&\n                    trees.map(tree => {\n                        const treeLabel = localizedLabel(tree.label, availableLanguages);\n                        const onClick = () => onRowClick(tree);\n                        return (\n                            <Table.Row key={tree.id} onClick={onClick}>\n                                <Table.Cell>{treeLabel}</Table.Cell>\n                                <Table.Cell>{tree.id}</Table.Cell>\n                                <Table.Cell>\n                                    <Checkbox readOnly checked={!!tree.system} />\n                                </Table.Cell>\n                                <Table.Cell>\n                                    <DeleteTree tree={tree} filters={filters} />\n                                </Table.Cell>\n                            </Table.Row>\n                        );\n                    })\n                )}\n            </Table.Body>\n        </Table>\n    );\n};\n\nTreesList.defaultProps = {\n    loading: false,\n    trees: [],\n    filters: {}\n};\n\nexport default TreesList;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport TreesList from './TreesList';\nexport default TreesList;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport {useQuery} from '@apollo/client';\nimport ErrorDisplay from 'components/shared/ErrorDisplay';\nimport Loading from 'components/shared/Loading';\nimport {useCurrentApplicationContext} from 'context/CurrentApplicationContext';\nimport {History} from 'history';\nimport React, {useState} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {RiNodeTree} from 'react-icons/ri';\nimport {Link} from 'react-router-dom';\nimport {Button, Grid, Header, Icon} from 'semantic-ui-react';\nimport styled from 'styled-components';\nimport useUserData from '../../../hooks/useUserData';\nimport {getTreesQuery} from '../../../queries/trees/getTreesQuery';\nimport {addWildcardToFilters, isTreeInApp} from '../../../utils/utils';\nimport {GET_TREES, GET_TREESVariables, GET_TREES_trees_list} from '../../../_gqlTypes/GET_TREES';\nimport {PermissionsActions} from '../../../_gqlTypes/globalTypes';\nimport TreesList from '../TreesList';\n\nconst Title = styled(Header)`\n    display: flex;\n    align-items: center;\n    gap: 0.5rem;\n`;\n\ninterface ITreesProps {\n    history: History;\n}\n\nconst Trees = ({history}: ITreesProps): JSX.Element => {\n    const {t} = useTranslation();\n    const applicationData = useCurrentApplicationContext();\n\n    const [filters, setFilters] = useState<Partial<GET_TREESVariables>>({});\n    const {loading, error, data} = useQuery<GET_TREES, GET_TREESVariables>(getTreesQuery, {\n        variables: {...addWildcardToFilters(filters)}\n    });\n    const userData = useUserData();\n\n    const _onFiltersUpdate = (filterElem: any) => {\n        const newElemState =\n            filterElem.type === 'checkbox'\n                ? filterElem.indeterminate\n                    ? undefined\n                    : filterElem.checked\n                : filterElem.value;\n\n        setFilters({\n            ...filters,\n            [filterElem.name]: newElemState\n        });\n    };\n\n    const _handleRowClick = (tree: GET_TREES_trees_list) => history.push('/trees/edit/' + tree.id);\n    const trees = (data?.trees?.list ?? []).filter(tree => isTreeInApp(applicationData.currentApp, tree.id));\n\n    return (\n        <>\n            <Grid>\n                <Grid.Column textAlign=\"left\" floated=\"left\" width={8} verticalAlign=\"middle\">\n                    <Title size=\"large\">\n                        <RiNodeTree size={30} />\n                        {t('trees.title')}\n                    </Title>\n                </Grid.Column>\n                {userData.permissions[PermissionsActions.admin_create_tree] && (\n                    <Grid.Column floated=\"right\" width={6} textAlign=\"right\" verticalAlign=\"middle\">\n                        <Button primary icon labelPosition=\"left\" size=\"medium\" as={Link} to={'/trees/edit/'}>\n                            <>\n                                <Icon name=\"plus\" />\n                                {t('trees.new')}\n                            </>\n                        </Button>\n                    </Grid.Column>\n                )}\n            </Grid>\n            {loading && <Loading />}\n            {error && <ErrorDisplay message={error.message} />}\n            {!loading && !error && (\n                <TreesList\n                    trees={trees}\n                    onRowClick={_handleRowClick}\n                    onFiltersUpdate={_onFiltersUpdate}\n                    filters={filters}\n                    loading={loading}\n                />\n            )}\n        </>\n    );\n};\n\nexport default Trees;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport Trees from './Trees';\nexport default Trees;\n","// Copyright LEAV Solutions 2017\n// This file is released under LGPL V3\n// License text available at https://www.gnu.org/licenses/lgpl-3.0.txt\nimport gql from 'graphql-tag';\n\nexport const getTreesQueryName = 'GET_TREES';\n\nexport const getTreesQuery = gql`\n    query GET_TREES($id: ID, $label: String, $system: Boolean) {\n        trees(filters: {id: $id, label: $label, system: $system}) {\n            totalCount\n            list {\n                id\n                label\n                system\n                behavior\n                libraries {\n                    library {\n                        id\n                        label\n                    }\n                    settings {\n                        allowMultiplePositions\n                        allowedAtRoot\n                        allowedChildren\n                    }\n                }\n            }\n        }\n    }\n`;\n"],"names":["props","confirmMessage","children","t","useTranslation","useState","showConfirm","setShowConfirm","_closeConfirm","e","preventDefault","stopPropagation","clickableButton","React","onClick","Confirm","open","content","onCancel","onConfirm","action","cancelButton","closeOnDocumentClick","closeOnDimmerClick","disabled","Button","className","circular","icon","deleteTreeQuery","gql","tree","filters","availableLanguages","useLang","lang","userData","useUserData","useMutation","refetchQueries","getTreesQueryName","update","cache","data","deleteFromCache","deleteTree","_handleDelete","variables","treeId","id","treeLabel","localizedLabel","label","permissions","PermissionsActions","ConfirmedButton","DeleteButton","system","TreesList","trees","loading","onFiltersUpdate","onRowClick","_handleFilterChange","d","type","checked","indeterminate","Table","selectable","striped","width","Input","size","fluid","placeholder","name","value","onChange","Checkbox","colSpan","Loading","map","readOnly","defaultProps","Title","styled","Header","history","applicationData","useCurrentApplicationContext","setFilters","useQuery","getTreesQuery","addWildcardToFilters","error","list","filter","isTreeInApp","currentApp","Grid","textAlign","floated","verticalAlign","primary","labelPosition","as","Link","to","Icon","ErrorDisplay","message","push","filterElem","newElemState","undefined"],"sourceRoot":""}