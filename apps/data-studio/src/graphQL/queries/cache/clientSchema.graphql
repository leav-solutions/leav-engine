type ActiveLibraryGqlNames {
    searchableFields: String!,
    query: String!,
    type: String!
}

type ActiveLibraryPermissions {
    access_library: Boolean!,
    access_record: Boolean!,
    create_record: Boolean!,
    edit_record: Boolean!,
    delete_record: Boolean!
}

type ActiveLibrary {
    id: String!,
    name: String!,
    filter: String!,
    behavior: LibraryBehavior!,
    attributes: [Any]!,
    gql: ActiveLibraryGqlNames!,
    trees: [String]!,
    permissions: ActiveLibraryPermissions!
}

type ActiveTreePermissions {
    access_tree: Boolean!,
    edit_children: Boolean!,
}

type ActiveTree {
    id: String!,
    libraries: [ActiveTreeLibraries!]!,
    label: String!,
    behavior: TreeBehavior!,
    permissions: ActiveTreePermissions!
}

type ActiveTreeLibraries {
    id: String!
    behavior: LibraryBehavior!
}

enum InfoType {
    basic
    success
    warning
    error
}

enum InfoPriority {
    low
    medium
    high
}

enum InfoChannel {
    trigger
    passive
}

type Info {
    content: String!,
    type: InfoType!,
    time: Int!,
    priority: InfoPriority,
    channel: InfoChannel
}

type BaseInfo {
    content: String!,
    type: InfoType
}


extend type Query {
    activeLib: ActiveLibrary,
    activeTree: ActiveTree,
    baseInfo: BaseInfo,
    infosStack: [Info!]
    lang: String!,
    availableLangs: [String!]!,
    defaultLang: String!
    userId: String!,
    userWhoAmI: RecordIdentity!,
    userPermissions: [String!]!
}
