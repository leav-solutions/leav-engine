[
    {
        id: '9f66af45-8c83-407f-8643-91b7f4c6e733',
        realm: 'master',
        displayName: 'Keycloak',
        displayNameHtml: '<div class="kc-logo-text"><span>Keycloak</span></div>',
        notBefore: 0,
        defaultSignatureAlgorithm: 'RS256',
        revokeRefreshToken: false,
        refreshTokenMaxReuse: 0,
        accessTokenLifespan: 60,
        accessTokenLifespanForImplicitFlow: 900,
        ssoSessionIdleTimeout: 1800,
        ssoSessionMaxLifespan: 36000,
        ssoSessionIdleTimeoutRememberMe: 0,
        ssoSessionMaxLifespanRememberMe: 0,
        offlineSessionIdleTimeout: 2592000,
        offlineSessionMaxLifespanEnabled: false,
        offlineSessionMaxLifespan: 5184000,
        clientSessionIdleTimeout: 0,
        clientSessionMaxLifespan: 0,
        clientOfflineSessionIdleTimeout: 0,
        clientOfflineSessionMaxLifespan: 0,
        accessCodeLifespan: 60,
        accessCodeLifespanUserAction: 300,
        accessCodeLifespanLogin: 1800,
        actionTokenGeneratedByAdminLifespan: 43200,
        actionTokenGeneratedByUserLifespan: 300,
        oauth2DeviceCodeLifespan: 600,
        oauth2DevicePollingInterval: 5,
        enabled: true,
        sslRequired: 'none',
        registrationAllowed: false,
        registrationEmailAsUsername: false,
        rememberMe: false,
        verifyEmail: false,
        loginWithEmailAllowed: true,
        duplicateEmailsAllowed: false,
        resetPasswordAllowed: false,
        editUsernameAllowed: false,
        bruteForceProtected: false,
        permanentLockout: false,
        maxFailureWaitSeconds: 900,
        minimumQuickLoginWaitSeconds: 60,
        waitIncrementSeconds: 60,
        quickLoginCheckMilliSeconds: 1000,
        maxDeltaTimeSeconds: 43200,
        failureFactor: 30,
        roles: {
            realm: [
                {
                    id: 'f35e821b-d4ad-41ae-927e-34e2cb9ef1c3',
                    name: 'create-realm',
                    description: '${role_create-realm}',
                    composite: false,
                    clientRole: false,
                    containerId: '9f66af45-8c83-407f-8643-91b7f4c6e733',
                    attributes: {}
                },
                {
                    id: '198c4bdc-26dd-4941-aba7-e6e0fb88cad9',
                    name: 'admin',
                    description: '${role_admin}',
                    composite: true,
                    composites: {
                        realm: ['create-realm'],
                        client: {
                            'master-realm': [
                                'view-identity-providers',
                                'query-groups',
                                'query-users',
                                'manage-realm',
                                'manage-identity-providers',
                                'query-clients',
                                'query-realms',
                                'manage-clients',
                                'manage-events',
                                'view-users',
                                'create-client',
                                'view-realm',
                                'view-authorization',
                                'manage-authorization',
                                'view-events',
                                'view-clients',
                                'manage-users',
                                'impersonation'
                            ]
                        }
                    },
                    clientRole: false,
                    containerId: '9f66af45-8c83-407f-8643-91b7f4c6e733',
                    attributes: {}
                },
                {
                    id: '34740da5-3fea-48cf-9d56-ae8fe1e7787e',
                    name: 'default-roles-master',
                    description: '${role_default-roles}',
                    composite: true,
                    composites: {
                        realm: ['offline_access', 'uma_authorization'],
                        client: {
                            account: ['view-profile', 'manage-account']
                        }
                    },
                    clientRole: false,
                    containerId: '9f66af45-8c83-407f-8643-91b7f4c6e733',
                    attributes: {}
                },
                {
                    id: '93a2b632-7e46-4573-9334-c24d0373fca5',
                    name: 'offline_access',
                    description: '${role_offline-access}',
                    composite: false,
                    clientRole: false,
                    containerId: '9f66af45-8c83-407f-8643-91b7f4c6e733',
                    attributes: {}
                },
                {
                    id: '4084e82d-15db-418e-8a61-624c7f0c29d1',
                    name: 'uma_authorization',
                    description: '${role_uma_authorization}',
                    composite: false,
                    clientRole: false,
                    containerId: '9f66af45-8c83-407f-8643-91b7f4c6e733',
                    attributes: {}
                }
            ],
            client: {
                'security-admin-console': [],
                'admin-cli': [],
                'account-console': [],
                broker: [
                    {
                        id: 'a1e61c87-7baa-4216-915e-6625c6ec383c',
                        name: 'read-token',
                        description: '${role_read-token}',
                        composite: false,
                        clientRole: true,
                        containerId: '0ac680dc-7e8b-4d55-990c-67737efe9382',
                        attributes: {}
                    }
                ],
                leav: [],
                'master-realm': [
                    {
                        id: 'ab3f6524-3a0a-45e1-b96f-ad5b99de7f08',
                        name: 'query-groups',
                        description: '${role_query-groups}',
                        composite: false,
                        clientRole: true,
                        containerId: 'cba95ee8-38d2-4c94-9544-4e30795729f2',
                        attributes: {}
                    },
                    {
                        id: 'da4b1828-907c-4ee1-8dfb-d7febb0232b8',
                        name: 'view-identity-providers',
                        description: '${role_view-identity-providers}',
                        composite: false,
                        clientRole: true,
                        containerId: 'cba95ee8-38d2-4c94-9544-4e30795729f2',
                        attributes: {}
                    },
                    {
                        id: '192af7c8-4515-415e-ae6b-72ee5958c63f',
                        name: 'query-users',
                        description: '${role_query-users}',
                        composite: false,
                        clientRole: true,
                        containerId: 'cba95ee8-38d2-4c94-9544-4e30795729f2',
                        attributes: {}
                    },
                    {
                        id: '49799bc3-24af-4480-8fa7-87b4ee12d114',
                        name: 'manage-realm',
                        description: '${role_manage-realm}',
                        composite: false,
                        clientRole: true,
                        containerId: 'cba95ee8-38d2-4c94-9544-4e30795729f2',
                        attributes: {}
                    },
                    {
                        id: 'f5833858-617e-4df7-a564-d677ca8c2f65',
                        name: 'manage-identity-providers',
                        description: '${role_manage-identity-providers}',
                        composite: false,
                        clientRole: true,
                        containerId: 'cba95ee8-38d2-4c94-9544-4e30795729f2',
                        attributes: {}
                    },
                    {
                        id: 'df86b9e0-1f36-4af7-b8f3-109597637d36',
                        name: 'query-clients',
                        description: '${role_query-clients}',
                        composite: false,
                        clientRole: true,
                        containerId: 'cba95ee8-38d2-4c94-9544-4e30795729f2',
                        attributes: {}
                    },
                    {
                        id: 'd8207e81-a2f3-44fc-9283-8c369814e09e',
                        name: 'query-realms',
                        description: '${role_query-realms}',
                        composite: false,
                        clientRole: true,
                        containerId: 'cba95ee8-38d2-4c94-9544-4e30795729f2',
                        attributes: {}
                    },
                    {
                        id: 'defe610d-37c9-42df-addd-37000b1596ae',
                        name: 'manage-clients',
                        description: '${role_manage-clients}',
                        composite: false,
                        clientRole: true,
                        containerId: 'cba95ee8-38d2-4c94-9544-4e30795729f2',
                        attributes: {}
                    },
                    {
                        id: '5bd701ac-f4c1-4c56-a820-a54dd6f1c8bb',
                        name: 'manage-events',
                        description: '${role_manage-events}',
                        composite: false,
                        clientRole: true,
                        containerId: 'cba95ee8-38d2-4c94-9544-4e30795729f2',
                        attributes: {}
                    },
                    {
                        id: '11c8e118-1b80-4b30-a343-71c39d43c21d',
                        name: 'view-users',
                        description: '${role_view-users}',
                        composite: true,
                        composites: {
                            client: {
                                'master-realm': ['query-groups', 'query-users']
                            }
                        },
                        clientRole: true,
                        containerId: 'cba95ee8-38d2-4c94-9544-4e30795729f2',
                        attributes: {}
                    },
                    {
                        id: '5d865b53-44e8-4a68-8e99-680c31aa0468',
                        name: 'create-client',
                        description: '${role_create-client}',
                        composite: false,
                        clientRole: true,
                        containerId: 'cba95ee8-38d2-4c94-9544-4e30795729f2',
                        attributes: {}
                    },
                    {
                        id: '1ad3826f-c521-4348-9184-51e78887c9b4',
                        name: 'view-realm',
                        description: '${role_view-realm}',
                        composite: false,
                        clientRole: true,
                        containerId: 'cba95ee8-38d2-4c94-9544-4e30795729f2',
                        attributes: {}
                    },
                    {
                        id: '15901b3c-4b06-404e-ae4f-8950be1217e0',
                        name: 'manage-authorization',
                        description: '${role_manage-authorization}',
                        composite: false,
                        clientRole: true,
                        containerId: 'cba95ee8-38d2-4c94-9544-4e30795729f2',
                        attributes: {}
                    },
                    {
                        id: '1870db07-9667-46ba-bad4-2575459ba31e',
                        name: 'view-authorization',
                        description: '${role_view-authorization}',
                        composite: false,
                        clientRole: true,
                        containerId: 'cba95ee8-38d2-4c94-9544-4e30795729f2',
                        attributes: {}
                    },
                    {
                        id: 'a7444ee2-0aba-4c0c-a657-7047db0e5941',
                        name: 'view-events',
                        description: '${role_view-events}',
                        composite: false,
                        clientRole: true,
                        containerId: 'cba95ee8-38d2-4c94-9544-4e30795729f2',
                        attributes: {}
                    },
                    {
                        id: '26536a00-864e-406c-b0d7-ad3c7f76e9c2',
                        name: 'view-clients',
                        description: '${role_view-clients}',
                        composite: true,
                        composites: {
                            client: {
                                'master-realm': ['query-clients']
                            }
                        },
                        clientRole: true,
                        containerId: 'cba95ee8-38d2-4c94-9544-4e30795729f2',
                        attributes: {}
                    },
                    {
                        id: '786d028b-f3d0-4a35-b883-b548388b6ed0',
                        name: 'manage-users',
                        description: '${role_manage-users}',
                        composite: false,
                        clientRole: true,
                        containerId: 'cba95ee8-38d2-4c94-9544-4e30795729f2',
                        attributes: {}
                    },
                    {
                        id: 'e064c63a-b30f-4244-9fc6-7f69ea221ed8',
                        name: 'impersonation',
                        description: '${role_impersonation}',
                        composite: false,
                        clientRole: true,
                        containerId: 'cba95ee8-38d2-4c94-9544-4e30795729f2',
                        attributes: {}
                    }
                ],
                account: [
                    {
                        id: 'e3fad7bc-a13f-49ce-b29b-0f6ac2390fbe',
                        name: 'view-profile',
                        description: '${role_view-profile}',
                        composite: false,
                        clientRole: true,
                        containerId: '52162245-4531-42fb-a571-11e876b59352',
                        attributes: {}
                    },
                    {
                        id: '8318f545-4f58-4a50-b5e6-4b39eba5b441',
                        name: 'manage-account-links',
                        description: '${role_manage-account-links}',
                        composite: false,
                        clientRole: true,
                        containerId: '52162245-4531-42fb-a571-11e876b59352',
                        attributes: {}
                    },
                    {
                        id: '35044846-dcd2-4ce1-a7ef-846cf639496f',
                        name: 'view-applications',
                        description: '${role_view-applications}',
                        composite: false,
                        clientRole: true,
                        containerId: '52162245-4531-42fb-a571-11e876b59352',
                        attributes: {}
                    },
                    {
                        id: '15771382-335c-419b-87ff-1db24e50ee9c',
                        name: 'delete-account',
                        description: '${role_delete-account}',
                        composite: false,
                        clientRole: true,
                        containerId: '52162245-4531-42fb-a571-11e876b59352',
                        attributes: {}
                    },
                    {
                        id: '67f68c5b-7b31-420d-9a78-5dee251f462f',
                        name: 'view-consent',
                        description: '${role_view-consent}',
                        composite: false,
                        clientRole: true,
                        containerId: '52162245-4531-42fb-a571-11e876b59352',
                        attributes: {}
                    },
                    {
                        id: '8b061c81-7321-4760-bc67-ab65176f85dc',
                        name: 'view-groups',
                        description: '${role_view-groups}',
                        composite: false,
                        clientRole: true,
                        containerId: '52162245-4531-42fb-a571-11e876b59352',
                        attributes: {}
                    },
                    {
                        id: 'aed6fc83-777c-495c-a693-ab73bb6a97d0',
                        name: 'manage-consent',
                        description: '${role_manage-consent}',
                        composite: true,
                        composites: {
                            client: {
                                account: ['view-consent']
                            }
                        },
                        clientRole: true,
                        containerId: '52162245-4531-42fb-a571-11e876b59352',
                        attributes: {}
                    },
                    {
                        id: 'c3acd4f8-eee1-4644-88f0-722b6f55640c',
                        name: 'manage-account',
                        description: '${role_manage-account}',
                        composite: true,
                        composites: {
                            client: {
                                account: ['manage-account-links']
                            }
                        },
                        clientRole: true,
                        containerId: '52162245-4531-42fb-a571-11e876b59352',
                        attributes: {}
                    }
                ]
            }
        },
        groups: [],
        defaultRole: {
            id: '34740da5-3fea-48cf-9d56-ae8fe1e7787e',
            name: 'default-roles-master',
            description: '${role_default-roles}',
            composite: true,
            clientRole: false,
            containerId: '9f66af45-8c83-407f-8643-91b7f4c6e733'
        },
        requiredCredentials: ['password'],
        otpPolicyType: 'totp',
        otpPolicyAlgorithm: 'HmacSHA1',
        otpPolicyInitialCounter: 0,
        otpPolicyDigits: 6,
        otpPolicyLookAheadWindow: 1,
        otpPolicyPeriod: 30,
        otpPolicyCodeReusable: false,
        otpSupportedApplications: ['totpAppFreeOTPName', 'totpAppGoogleName', 'totpAppMicrosoftAuthenticatorName'],
        localizationTexts: {},
        webAuthnPolicyRpEntityName: 'keycloak',
        webAuthnPolicySignatureAlgorithms: ['ES256'],
        webAuthnPolicyRpId: '',
        webAuthnPolicyAttestationConveyancePreference: 'not specified',
        webAuthnPolicyAuthenticatorAttachment: 'not specified',
        webAuthnPolicyRequireResidentKey: 'not specified',
        webAuthnPolicyUserVerificationRequirement: 'not specified',
        webAuthnPolicyCreateTimeout: 0,
        webAuthnPolicyAvoidSameAuthenticatorRegister: false,
        webAuthnPolicyAcceptableAaguids: [],
        webAuthnPolicyExtraOrigins: [],
        webAuthnPolicyPasswordlessRpEntityName: 'keycloak',
        webAuthnPolicyPasswordlessSignatureAlgorithms: ['ES256'],
        webAuthnPolicyPasswordlessRpId: '',
        webAuthnPolicyPasswordlessAttestationConveyancePreference: 'not specified',
        webAuthnPolicyPasswordlessAuthenticatorAttachment: 'not specified',
        webAuthnPolicyPasswordlessRequireResidentKey: 'not specified',
        webAuthnPolicyPasswordlessUserVerificationRequirement: 'not specified',
        webAuthnPolicyPasswordlessCreateTimeout: 0,
        webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister: false,
        webAuthnPolicyPasswordlessAcceptableAaguids: [],
        webAuthnPolicyPasswordlessExtraOrigins: [],
        users: [
            {
                id: '95a610b6-8347-4823-b354-64f816eddba2',
                createdTimestamp: 1718033185101,
                username: 'admin',
                enabled: true,
                totp: false,
                emailVerified: true,
                firstName: 'Admin',
                lastName: 'Admin',
                email: 'email@domain.com',
                credentials: [
                    {
                        id: 'fde02b6a-b176-4e2f-abda-abf0cd05dbfd',
                        type: 'password',
                        createdDate: 1718033185187,
                        secretData:
                            '{"value":"Jb7q3wAMXGzcVpyDoiYLVN06AU0MQdLyrjtTvTD2iuE=","salt":"q6AFd5Boac9g82YkGem5+Q==","additionalParameters":{}}',
                        credentialData: '{"hashIterations":27500,"algorithm":"pbkdf2-sha256","additionalParameters":{}}'
                    }
                ],
                disableableCredentialTypes: [],
                requiredActions: [],
                realmRoles: ['default-roles-master', 'admin'],
                notBefore: 0,
                groups: []
            }
        ],
        scopeMappings: [
            {
                clientScope: 'offline_access',
                roles: ['offline_access']
            }
        ],
        clientScopeMappings: {
            account: [
                {
                    client: 'account-console',
                    roles: ['manage-account', 'view-groups']
                }
            ]
        },
        clients: [
            {
                id: '52162245-4531-42fb-a571-11e876b59352',
                clientId: 'account',
                name: '${client_account}',
                rootUrl: '${authBaseUrl}',
                baseUrl: '/realms/master/account/',
                surrogateAuthRequired: false,
                enabled: true,
                alwaysDisplayInConsole: false,
                clientAuthenticatorType: 'client-secret',
                redirectUris: ['/realms/master/account/*'],
                webOrigins: [],
                notBefore: 0,
                bearerOnly: false,
                consentRequired: false,
                standardFlowEnabled: true,
                implicitFlowEnabled: false,
                directAccessGrantsEnabled: false,
                serviceAccountsEnabled: false,
                publicClient: true,
                frontchannelLogout: false,
                protocol: 'openid-connect',
                attributes: {
                    'post.logout.redirect.uris': '+'
                },
                authenticationFlowBindingOverrides: {},
                fullScopeAllowed: false,
                nodeReRegistrationTimeout: 0,
                defaultClientScopes: ['web-origins', 'acr', 'profile', 'roles', 'email'],
                optionalClientScopes: ['address', 'phone', 'offline_access', 'microprofile-jwt']
            },
            {
                id: '6868832d-573d-4753-a5b3-79cf7df43e50',
                clientId: 'account-console',
                name: '${client_account-console}',
                rootUrl: '${authBaseUrl}',
                baseUrl: '/realms/master/account/',
                surrogateAuthRequired: false,
                enabled: true,
                alwaysDisplayInConsole: false,
                clientAuthenticatorType: 'client-secret',
                redirectUris: ['/realms/master/account/*'],
                webOrigins: [],
                notBefore: 0,
                bearerOnly: false,
                consentRequired: false,
                standardFlowEnabled: true,
                implicitFlowEnabled: false,
                directAccessGrantsEnabled: false,
                serviceAccountsEnabled: false,
                publicClient: true,
                frontchannelLogout: false,
                protocol: 'openid-connect',
                attributes: {
                    'post.logout.redirect.uris': '+',
                    'pkce.code.challenge.method': 'S256'
                },
                authenticationFlowBindingOverrides: {},
                fullScopeAllowed: false,
                nodeReRegistrationTimeout: 0,
                protocolMappers: [
                    {
                        id: '7f1696f8-76e6-43f5-9213-f43dc7fcd6ea',
                        name: 'audience resolve',
                        protocol: 'openid-connect',
                        protocolMapper: 'oidc-audience-resolve-mapper',
                        consentRequired: false,
                        config: {}
                    }
                ],
                defaultClientScopes: ['web-origins', 'acr', 'profile', 'roles', 'email'],
                optionalClientScopes: ['address', 'phone', 'offline_access', 'microprofile-jwt']
            },
            {
                id: '3c3892f8-d93c-4c8f-b62c-0a6d8ebcffdc',
                clientId: 'admin-cli',
                name: '${client_admin-cli}',
                surrogateAuthRequired: false,
                enabled: true,
                alwaysDisplayInConsole: false,
                clientAuthenticatorType: 'client-secret',
                redirectUris: [],
                webOrigins: [],
                notBefore: 0,
                bearerOnly: false,
                consentRequired: false,
                standardFlowEnabled: false,
                implicitFlowEnabled: false,
                directAccessGrantsEnabled: true,
                serviceAccountsEnabled: false,
                publicClient: true,
                frontchannelLogout: false,
                protocol: 'openid-connect',
                attributes: {},
                authenticationFlowBindingOverrides: {},
                fullScopeAllowed: false,
                nodeReRegistrationTimeout: 0,
                defaultClientScopes: ['web-origins', 'acr', 'profile', 'roles', 'email'],
                optionalClientScopes: ['address', 'phone', 'offline_access', 'microprofile-jwt']
            },
            {
                id: '0ac680dc-7e8b-4d55-990c-67737efe9382',
                clientId: 'broker',
                name: '${client_broker}',
                surrogateAuthRequired: false,
                enabled: true,
                alwaysDisplayInConsole: false,
                clientAuthenticatorType: 'client-secret',
                redirectUris: [],
                webOrigins: [],
                notBefore: 0,
                bearerOnly: true,
                consentRequired: false,
                standardFlowEnabled: true,
                implicitFlowEnabled: false,
                directAccessGrantsEnabled: false,
                serviceAccountsEnabled: false,
                publicClient: false,
                frontchannelLogout: false,
                protocol: 'openid-connect',
                attributes: {},
                authenticationFlowBindingOverrides: {},
                fullScopeAllowed: false,
                nodeReRegistrationTimeout: 0,
                defaultClientScopes: ['web-origins', 'acr', 'profile', 'roles', 'email'],
                optionalClientScopes: ['address', 'phone', 'offline_access', 'microprofile-jwt']
            },
            {
                id: 'eca58c4a-9e17-4f38-845f-1804cc35ba6c',
                clientId: 'leav',
                name: '',
                description: '',
                rootUrl: '',
                adminUrl: '',
                baseUrl: '',
                surrogateAuthRequired: false,
                enabled: true,
                alwaysDisplayInConsole: false,
                clientAuthenticatorType: 'client-secret',
                redirectUris: ['*'],
                webOrigins: ['*'],
                notBefore: 0,
                bearerOnly: false,
                consentRequired: false,
                standardFlowEnabled: true,
                implicitFlowEnabled: false,
                directAccessGrantsEnabled: true,
                serviceAccountsEnabled: false,
                publicClient: true,
                frontchannelLogout: true,
                protocol: 'openid-connect',
                attributes: {
                    'oidc.ciba.grant.enabled': 'false',
                    'post.logout.redirect.uris': '*',
                    'oauth2.device.authorization.grant.enabled': 'false',
                    'backchannel.logout.session.required': 'true',
                    'backchannel.logout.revoke.offline.tokens': 'false'
                },
                authenticationFlowBindingOverrides: {},
                fullScopeAllowed: true,
                nodeReRegistrationTimeout: -1,
                defaultClientScopes: ['web-origins', 'acr', 'profile', 'roles', 'email'],
                optionalClientScopes: ['address', 'phone', 'offline_access', 'microprofile-jwt']
            },
            {
                id: 'cba95ee8-38d2-4c94-9544-4e30795729f2',
                clientId: 'master-realm',
                name: 'master Realm',
                surrogateAuthRequired: false,
                enabled: true,
                alwaysDisplayInConsole: false,
                clientAuthenticatorType: 'client-secret',
                redirectUris: [],
                webOrigins: [],
                notBefore: 0,
                bearerOnly: true,
                consentRequired: false,
                standardFlowEnabled: true,
                implicitFlowEnabled: false,
                directAccessGrantsEnabled: false,
                serviceAccountsEnabled: false,
                publicClient: false,
                frontchannelLogout: false,
                attributes: {},
                authenticationFlowBindingOverrides: {},
                fullScopeAllowed: false,
                nodeReRegistrationTimeout: 0,
                defaultClientScopes: ['web-origins', 'acr', 'profile', 'roles', 'email'],
                optionalClientScopes: ['address', 'phone', 'offline_access', 'microprofile-jwt']
            },
            {
                id: '3995fd31-ac0b-41fa-a170-fa7b840c1623',
                clientId: 'security-admin-console',
                name: '${client_security-admin-console}',
                rootUrl: '${authAdminUrl}',
                baseUrl: '/admin/master/console/',
                surrogateAuthRequired: false,
                enabled: true,
                alwaysDisplayInConsole: false,
                clientAuthenticatorType: 'client-secret',
                redirectUris: ['/admin/master/console/*'],
                webOrigins: ['+'],
                notBefore: 0,
                bearerOnly: false,
                consentRequired: false,
                standardFlowEnabled: true,
                implicitFlowEnabled: false,
                directAccessGrantsEnabled: false,
                serviceAccountsEnabled: false,
                publicClient: true,
                frontchannelLogout: false,
                protocol: 'openid-connect',
                attributes: {
                    'post.logout.redirect.uris': '+',
                    'pkce.code.challenge.method': 'S256'
                },
                authenticationFlowBindingOverrides: {},
                fullScopeAllowed: false,
                nodeReRegistrationTimeout: 0,
                protocolMappers: [
                    {
                        id: '2045838a-5f2c-47ea-820e-1385cc9f0beb',
                        name: 'locale',
                        protocol: 'openid-connect',
                        protocolMapper: 'oidc-usermodel-attribute-mapper',
                        consentRequired: false,
                        config: {
                            'introspection.token.claim': 'true',
                            'userinfo.token.claim': 'true',
                            'user.attribute': 'locale',
                            'id.token.claim': 'true',
                            'access.token.claim': 'true',
                            'claim.name': 'locale',
                            'jsonType.label': 'String'
                        }
                    }
                ],
                defaultClientScopes: ['web-origins', 'acr', 'profile', 'roles', 'email'],
                optionalClientScopes: ['address', 'phone', 'offline_access', 'microprofile-jwt']
            }
        ],
        clientScopes: [
            {
                id: '434cb01e-b2ee-4417-af52-b4fbbaac4239',
                name: 'role_list',
                description: 'SAML role list',
                protocol: 'saml',
                attributes: {
                    'consent.screen.text': '${samlRoleListScopeConsentText}',
                    'display.on.consent.screen': 'true'
                },
                protocolMappers: [
                    {
                        id: '077e7f65-23a7-4971-bc32-9ba17dc35a21',
                        name: 'role list',
                        protocol: 'saml',
                        protocolMapper: 'saml-role-list-mapper',
                        consentRequired: false,
                        config: {
                            single: 'false',
                            'attribute.nameformat': 'Basic',
                            'attribute.name': 'Role'
                        }
                    }
                ]
            },
            {
                id: 'b74ff3a6-e554-44a5-b85e-f29a1f54cc81',
                name: 'acr',
                description: 'OpenID Connect scope for add acr (authentication context class reference) to the token',
                protocol: 'openid-connect',
                attributes: {
                    'include.in.token.scope': 'false',
                    'display.on.consent.screen': 'false'
                },
                protocolMappers: [
                    {
                        id: 'e16d5466-d160-4a07-8ccd-ceca65b81891',
                        name: 'acr loa level',
                        protocol: 'openid-connect',
                        protocolMapper: 'oidc-acr-mapper',
                        consentRequired: false,
                        config: {
                            'id.token.claim': 'true',
                            'introspection.token.claim': 'true',
                            'access.token.claim': 'true'
                        }
                    }
                ]
            },
            {
                id: 'cfd6ab7c-c383-48f0-a4b9-55f53bebe536',
                name: 'microprofile-jwt',
                description: 'Microprofile - JWT built-in scope',
                protocol: 'openid-connect',
                attributes: {
                    'include.in.token.scope': 'true',
                    'display.on.consent.screen': 'false'
                },
                protocolMappers: [
                    {
                        id: '02bc8401-4c6b-4d50-9a76-56966ccf3df4',
                        name: 'groups',
                        protocol: 'openid-connect',
                        protocolMapper: 'oidc-usermodel-realm-role-mapper',
                        consentRequired: false,
                        config: {
                            'introspection.token.claim': 'true',
                            multivalued: 'true',
                            'user.attribute': 'foo',
                            'id.token.claim': 'true',
                            'access.token.claim': 'true',
                            'claim.name': 'groups',
                            'jsonType.label': 'String'
                        }
                    },
                    {
                        id: 'e123df31-f392-4526-8cf2-54886e361de4',
                        name: 'upn',
                        protocol: 'openid-connect',
                        protocolMapper: 'oidc-usermodel-attribute-mapper',
                        consentRequired: false,
                        config: {
                            'introspection.token.claim': 'true',
                            'userinfo.token.claim': 'true',
                            'user.attribute': 'username',
                            'id.token.claim': 'true',
                            'access.token.claim': 'true',
                            'claim.name': 'upn',
                            'jsonType.label': 'String'
                        }
                    }
                ]
            },
            {
                id: '2587780f-fa49-4995-a026-365aafe3cbb5',
                name: 'profile',
                description: 'OpenID Connect built-in scope: profile',
                protocol: 'openid-connect',
                attributes: {
                    'include.in.token.scope': 'true',
                    'display.on.consent.screen': 'true',
                    'consent.screen.text': '${profileScopeConsentText}'
                },
                protocolMappers: [
                    {
                        id: 'ac1b4b5b-9e2a-470a-9ec7-df2905a7fdac',
                        name: 'family name',
                        protocol: 'openid-connect',
                        protocolMapper: 'oidc-usermodel-attribute-mapper',
                        consentRequired: false,
                        config: {
                            'introspection.token.claim': 'true',
                            'userinfo.token.claim': 'true',
                            'user.attribute': 'lastName',
                            'id.token.claim': 'true',
                            'access.token.claim': 'true',
                            'claim.name': 'family_name',
                            'jsonType.label': 'String'
                        }
                    },
                    {
                        id: 'b5de8656-940f-4b1c-b372-67206d73f5bb',
                        name: 'website',
                        protocol: 'openid-connect',
                        protocolMapper: 'oidc-usermodel-attribute-mapper',
                        consentRequired: false,
                        config: {
                            'introspection.token.claim': 'true',
                            'userinfo.token.claim': 'true',
                            'user.attribute': 'website',
                            'id.token.claim': 'true',
                            'access.token.claim': 'true',
                            'claim.name': 'website',
                            'jsonType.label': 'String'
                        }
                    },
                    {
                        id: 'b11fe9f5-e675-4b5e-8fc5-e6910eb8dc28',
                        name: 'username',
                        protocol: 'openid-connect',
                        protocolMapper: 'oidc-usermodel-attribute-mapper',
                        consentRequired: false,
                        config: {
                            'introspection.token.claim': 'true',
                            'userinfo.token.claim': 'true',
                            'user.attribute': 'username',
                            'id.token.claim': 'true',
                            'access.token.claim': 'true',
                            'claim.name': 'preferred_username',
                            'jsonType.label': 'String'
                        }
                    },
                    {
                        id: '7b48245b-9b7e-4db5-8583-065e21d4f153',
                        name: 'full name',
                        protocol: 'openid-connect',
                        protocolMapper: 'oidc-full-name-mapper',
                        consentRequired: false,
                        config: {
                            'id.token.claim': 'true',
                            'introspection.token.claim': 'true',
                            'access.token.claim': 'true',
                            'userinfo.token.claim': 'true'
                        }
                    },
                    {
                        id: '572bbc83-e324-4926-9ffd-d6f58ca1e56f',
                        name: 'gender',
                        protocol: 'openid-connect',
                        protocolMapper: 'oidc-usermodel-attribute-mapper',
                        consentRequired: false,
                        config: {
                            'introspection.token.claim': 'true',
                            'userinfo.token.claim': 'true',
                            'user.attribute': 'gender',
                            'id.token.claim': 'true',
                            'access.token.claim': 'true',
                            'claim.name': 'gender',
                            'jsonType.label': 'String'
                        }
                    },
                    {
                        id: '8760fdc1-977b-47b7-ae19-b590e58fa8bc',
                        name: 'locale',
                        protocol: 'openid-connect',
                        protocolMapper: 'oidc-usermodel-attribute-mapper',
                        consentRequired: false,
                        config: {
                            'introspection.token.claim': 'true',
                            'userinfo.token.claim': 'true',
                            'user.attribute': 'locale',
                            'id.token.claim': 'true',
                            'access.token.claim': 'true',
                            'claim.name': 'locale',
                            'jsonType.label': 'String'
                        }
                    },
                    {
                        id: 'b673fe1b-68cd-4125-a289-b10e5530aa09',
                        name: 'given name',
                        protocol: 'openid-connect',
                        protocolMapper: 'oidc-usermodel-attribute-mapper',
                        consentRequired: false,
                        config: {
                            'introspection.token.claim': 'true',
                            'userinfo.token.claim': 'true',
                            'user.attribute': 'firstName',
                            'id.token.claim': 'true',
                            'access.token.claim': 'true',
                            'claim.name': 'given_name',
                            'jsonType.label': 'String'
                        }
                    },
                    {
                        id: '82247818-c7b5-4c07-afa7-428b97cdf582',
                        name: 'zoneinfo',
                        protocol: 'openid-connect',
                        protocolMapper: 'oidc-usermodel-attribute-mapper',
                        consentRequired: false,
                        config: {
                            'introspection.token.claim': 'true',
                            'userinfo.token.claim': 'true',
                            'user.attribute': 'zoneinfo',
                            'id.token.claim': 'true',
                            'access.token.claim': 'true',
                            'claim.name': 'zoneinfo',
                            'jsonType.label': 'String'
                        }
                    },
                    {
                        id: 'd6d96404-9587-4729-a94a-ac0a1abd5972',
                        name: 'nickname',
                        protocol: 'openid-connect',
                        protocolMapper: 'oidc-usermodel-attribute-mapper',
                        consentRequired: false,
                        config: {
                            'introspection.token.claim': 'true',
                            'userinfo.token.claim': 'true',
                            'user.attribute': 'nickname',
                            'id.token.claim': 'true',
                            'access.token.claim': 'true',
                            'claim.name': 'nickname',
                            'jsonType.label': 'String'
                        }
                    },
                    {
                        id: '4b62ce96-a30d-424d-9c99-5aadc87c1152',
                        name: 'birthdate',
                        protocol: 'openid-connect',
                        protocolMapper: 'oidc-usermodel-attribute-mapper',
                        consentRequired: false,
                        config: {
                            'introspection.token.claim': 'true',
                            'userinfo.token.claim': 'true',
                            'user.attribute': 'birthdate',
                            'id.token.claim': 'true',
                            'access.token.claim': 'true',
                            'claim.name': 'birthdate',
                            'jsonType.label': 'String'
                        }
                    },
                    {
                        id: 'd11f5d82-17df-4800-aeaf-668ca9c0502f',
                        name: 'middle name',
                        protocol: 'openid-connect',
                        protocolMapper: 'oidc-usermodel-attribute-mapper',
                        consentRequired: false,
                        config: {
                            'introspection.token.claim': 'true',
                            'userinfo.token.claim': 'true',
                            'user.attribute': 'middleName',
                            'id.token.claim': 'true',
                            'access.token.claim': 'true',
                            'claim.name': 'middle_name',
                            'jsonType.label': 'String'
                        }
                    },
                    {
                        id: 'a343003f-ccb8-4540-9f6b-523973fc62c8',
                        name: 'updated at',
                        protocol: 'openid-connect',
                        protocolMapper: 'oidc-usermodel-attribute-mapper',
                        consentRequired: false,
                        config: {
                            'introspection.token.claim': 'true',
                            'userinfo.token.claim': 'true',
                            'user.attribute': 'updatedAt',
                            'id.token.claim': 'true',
                            'access.token.claim': 'true',
                            'claim.name': 'updated_at',
                            'jsonType.label': 'long'
                        }
                    },
                    {
                        id: 'b88216a6-22eb-4965-a493-130c57f15ad0',
                        name: 'picture',
                        protocol: 'openid-connect',
                        protocolMapper: 'oidc-usermodel-attribute-mapper',
                        consentRequired: false,
                        config: {
                            'introspection.token.claim': 'true',
                            'userinfo.token.claim': 'true',
                            'user.attribute': 'picture',
                            'id.token.claim': 'true',
                            'access.token.claim': 'true',
                            'claim.name': 'picture',
                            'jsonType.label': 'String'
                        }
                    },
                    {
                        id: 'e2d9a206-b0fb-4e58-bc2e-acc72b0a3ed9',
                        name: 'profile',
                        protocol: 'openid-connect',
                        protocolMapper: 'oidc-usermodel-attribute-mapper',
                        consentRequired: false,
                        config: {
                            'introspection.token.claim': 'true',
                            'userinfo.token.claim': 'true',
                            'user.attribute': 'profile',
                            'id.token.claim': 'true',
                            'access.token.claim': 'true',
                            'claim.name': 'profile',
                            'jsonType.label': 'String'
                        }
                    }
                ]
            },
            {
                id: '1458dbeb-35fd-4930-9e1d-d690b86aa731',
                name: 'email',
                description: 'OpenID Connect built-in scope: email',
                protocol: 'openid-connect',
                attributes: {
                    'include.in.token.scope': 'true',
                    'display.on.consent.screen': 'true',
                    'consent.screen.text': '${emailScopeConsentText}'
                },
                protocolMappers: [
                    {
                        id: 'd48de3f2-e584-4b79-95fb-ee658c5cbe3d',
                        name: 'email verified',
                        protocol: 'openid-connect',
                        protocolMapper: 'oidc-usermodel-property-mapper',
                        consentRequired: false,
                        config: {
                            'introspection.token.claim': 'true',
                            'userinfo.token.claim': 'true',
                            'user.attribute': 'emailVerified',
                            'id.token.claim': 'true',
                            'access.token.claim': 'true',
                            'claim.name': 'email_verified',
                            'jsonType.label': 'boolean'
                        }
                    },
                    {
                        id: '204eb847-2825-4d91-83a1-c66ecc05405d',
                        name: 'email',
                        protocol: 'openid-connect',
                        protocolMapper: 'oidc-usermodel-attribute-mapper',
                        consentRequired: false,
                        config: {
                            'introspection.token.claim': 'true',
                            'userinfo.token.claim': 'true',
                            'user.attribute': 'email',
                            'id.token.claim': 'true',
                            'access.token.claim': 'true',
                            'claim.name': 'email',
                            'jsonType.label': 'String'
                        }
                    }
                ]
            },
            {
                id: '68dff252-8883-4346-977b-3e5d3d20a6c1',
                name: 'offline_access',
                description: 'OpenID Connect built-in scope: offline_access',
                protocol: 'openid-connect',
                attributes: {
                    'consent.screen.text': '${offlineAccessScopeConsentText}',
                    'display.on.consent.screen': 'true'
                }
            },
            {
                id: 'c1248010-81d6-4c09-86b3-4615bc1892aa',
                name: 'address',
                description: 'OpenID Connect built-in scope: address',
                protocol: 'openid-connect',
                attributes: {
                    'include.in.token.scope': 'true',
                    'display.on.consent.screen': 'true',
                    'consent.screen.text': '${addressScopeConsentText}'
                },
                protocolMappers: [
                    {
                        id: '3ee4d9a9-ffdd-4086-adaa-8effe0e3e682',
                        name: 'address',
                        protocol: 'openid-connect',
                        protocolMapper: 'oidc-address-mapper',
                        consentRequired: false,
                        config: {
                            'user.attribute.formatted': 'formatted',
                            'user.attribute.country': 'country',
                            'introspection.token.claim': 'true',
                            'user.attribute.postal_code': 'postal_code',
                            'userinfo.token.claim': 'true',
                            'user.attribute.street': 'street',
                            'id.token.claim': 'true',
                            'user.attribute.region': 'region',
                            'access.token.claim': 'true',
                            'user.attribute.locality': 'locality'
                        }
                    }
                ]
            },
            {
                id: 'a76b81a7-0741-44c3-b26a-136211b789bd',
                name: 'phone',
                description: 'OpenID Connect built-in scope: phone',
                protocol: 'openid-connect',
                attributes: {
                    'include.in.token.scope': 'true',
                    'display.on.consent.screen': 'true',
                    'consent.screen.text': '${phoneScopeConsentText}'
                },
                protocolMappers: [
                    {
                        id: 'e4a789ce-ec35-4619-a5ff-a6b71a4e6dcd',
                        name: 'phone number',
                        protocol: 'openid-connect',
                        protocolMapper: 'oidc-usermodel-attribute-mapper',
                        consentRequired: false,
                        config: {
                            'introspection.token.claim': 'true',
                            'userinfo.token.claim': 'true',
                            'user.attribute': 'phoneNumber',
                            'id.token.claim': 'true',
                            'access.token.claim': 'true',
                            'claim.name': 'phone_number',
                            'jsonType.label': 'String'
                        }
                    },
                    {
                        id: '25678ee0-994d-4bbc-b2cb-8e1947a6976a',
                        name: 'phone number verified',
                        protocol: 'openid-connect',
                        protocolMapper: 'oidc-usermodel-attribute-mapper',
                        consentRequired: false,
                        config: {
                            'introspection.token.claim': 'true',
                            'userinfo.token.claim': 'true',
                            'user.attribute': 'phoneNumberVerified',
                            'id.token.claim': 'true',
                            'access.token.claim': 'true',
                            'claim.name': 'phone_number_verified',
                            'jsonType.label': 'boolean'
                        }
                    }
                ]
            },
            {
                id: '1b32e36c-b2c5-46bd-ac77-51d2af311e71',
                name: 'web-origins',
                description: 'OpenID Connect scope for add allowed web origins to the access token',
                protocol: 'openid-connect',
                attributes: {
                    'include.in.token.scope': 'false',
                    'display.on.consent.screen': 'false',
                    'consent.screen.text': ''
                },
                protocolMappers: [
                    {
                        id: 'bc6d984b-6ad5-4c7c-97c1-2ea94b767144',
                        name: 'allowed web origins',
                        protocol: 'openid-connect',
                        protocolMapper: 'oidc-allowed-origins-mapper',
                        consentRequired: false,
                        config: {
                            'introspection.token.claim': 'true',
                            'access.token.claim': 'true'
                        }
                    }
                ]
            },
            {
                id: 'ec6fb6d5-2507-4225-8cb1-51229cfaa987',
                name: 'roles',
                description: 'OpenID Connect scope for add user roles to the access token',
                protocol: 'openid-connect',
                attributes: {
                    'include.in.token.scope': 'false',
                    'display.on.consent.screen': 'true',
                    'consent.screen.text': '${rolesScopeConsentText}'
                },
                protocolMappers: [
                    {
                        id: '639af6a5-9081-41c8-9395-cd7ff523dc46',
                        name: 'realm roles',
                        protocol: 'openid-connect',
                        protocolMapper: 'oidc-usermodel-realm-role-mapper',
                        consentRequired: false,
                        config: {
                            'introspection.token.claim': 'true',
                            multivalued: 'true',
                            'user.attribute': 'foo',
                            'access.token.claim': 'true',
                            'claim.name': 'realm_access.roles',
                            'jsonType.label': 'String'
                        }
                    },
                    {
                        id: '7b2df91a-7d65-4aa7-bf43-3bccf784b611',
                        name: 'audience resolve',
                        protocol: 'openid-connect',
                        protocolMapper: 'oidc-audience-resolve-mapper',
                        consentRequired: false,
                        config: {
                            'introspection.token.claim': 'true',
                            'access.token.claim': 'true'
                        }
                    },
                    {
                        id: 'b5b0cefe-576d-4dc6-980d-234b18e07762',
                        name: 'client roles',
                        protocol: 'openid-connect',
                        protocolMapper: 'oidc-usermodel-client-role-mapper',
                        consentRequired: false,
                        config: {
                            'introspection.token.claim': 'true',
                            multivalued: 'true',
                            'user.attribute': 'foo',
                            'access.token.claim': 'true',
                            'claim.name': 'resource_access.${client_id}.roles',
                            'jsonType.label': 'String'
                        }
                    }
                ]
            }
        ],
        defaultDefaultClientScopes: ['role_list', 'profile', 'email', 'roles', 'web-origins', 'acr'],
        defaultOptionalClientScopes: ['offline_access', 'address', 'phone', 'microprofile-jwt'],
        browserSecurityHeaders: {
            contentSecurityPolicyReportOnly: '',
            xContentTypeOptions: 'nosniff',
            referrerPolicy: 'no-referrer',
            xRobotsTag: 'none',
            xFrameOptions: 'SAMEORIGIN',
            contentSecurityPolicy: "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
            xXSSProtection: '1; mode=block',
            strictTransportSecurity: 'max-age=31536000; includeSubDomains'
        },
        smtpServer: {},
        eventsEnabled: false,
        eventsListeners: ['jboss-logging'],
        enabledEventTypes: [],
        adminEventsEnabled: false,
        adminEventsDetailsEnabled: false,
        identityProviders: [],
        identityProviderMappers: [],
        components: {
            'org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy': [
                {
                    id: '73e7eae6-92fd-45ac-8b0f-1faddd359904',
                    name: 'Max Clients Limit',
                    providerId: 'max-clients',
                    subType: 'anonymous',
                    subComponents: {},
                    config: {
                        'max-clients': ['200']
                    }
                },
                {
                    id: '271b98a4-621a-4f26-b2dc-34a6631db578',
                    name: 'Allowed Client Scopes',
                    providerId: 'allowed-client-templates',
                    subType: 'authenticated',
                    subComponents: {},
                    config: {
                        'allow-default-scopes': ['true']
                    }
                },
                {
                    id: '6b5b3cb3-01dc-44d7-8917-55d670ec266c',
                    name: 'Allowed Protocol Mapper Types',
                    providerId: 'allowed-protocol-mappers',
                    subType: 'anonymous',
                    subComponents: {},
                    config: {
                        'allowed-protocol-mapper-types': [
                            'oidc-sha256-pairwise-sub-mapper',
                            'saml-user-property-mapper',
                            'saml-role-list-mapper',
                            'oidc-full-name-mapper',
                            'saml-user-attribute-mapper',
                            'oidc-address-mapper',
                            'oidc-usermodel-property-mapper',
                            'oidc-usermodel-attribute-mapper'
                        ]
                    }
                },
                {
                    id: '00e26f1c-b46b-4db9-9afe-9073cbb20fd5',
                    name: 'Allowed Protocol Mapper Types',
                    providerId: 'allowed-protocol-mappers',
                    subType: 'authenticated',
                    subComponents: {},
                    config: {
                        'allowed-protocol-mapper-types': [
                            'saml-user-property-mapper',
                            'oidc-sha256-pairwise-sub-mapper',
                            'saml-role-list-mapper',
                            'saml-user-attribute-mapper',
                            'oidc-usermodel-attribute-mapper',
                            'oidc-usermodel-property-mapper',
                            'oidc-full-name-mapper',
                            'oidc-address-mapper'
                        ]
                    }
                },
                {
                    id: 'cf077fb5-87cd-471d-89df-1157737e597f',
                    name: 'Consent Required',
                    providerId: 'consent-required',
                    subType: 'anonymous',
                    subComponents: {},
                    config: {}
                },
                {
                    id: '4e278800-036e-455e-9f88-85ed610b257f',
                    name: 'Allowed Client Scopes',
                    providerId: 'allowed-client-templates',
                    subType: 'anonymous',
                    subComponents: {},
                    config: {
                        'allow-default-scopes': ['true']
                    }
                },
                {
                    id: '4c36c4a6-3645-4744-8159-96d242e2fbcc',
                    name: 'Trusted Hosts',
                    providerId: 'trusted-hosts',
                    subType: 'anonymous',
                    subComponents: {},
                    config: {
                        'host-sending-registration-request-must-match': ['true'],
                        'client-uris-must-match': ['true']
                    }
                },
                {
                    id: 'd0b7782f-2426-47c4-9fac-78c08d081f43',
                    name: 'Full Scope Disabled',
                    providerId: 'scope',
                    subType: 'anonymous',
                    subComponents: {},
                    config: {}
                }
            ],
            'org.keycloak.keys.KeyProvider': [
                {
                    id: 'd3bd0b09-1afe-4c05-b92e-355ea8b3ed27',
                    name: 'rsa-generated',
                    providerId: 'rsa-generated',
                    subComponents: {},
                    config: {
                        privateKey: [
                            'MIIEpAIBAAKCAQEAq0l64H50clWKb81HkLuxfJiFTCrkvt68j40EGp81xE8YDHYCjfVTzzvNQ48JSq7cdyZqX5FNKztyoQe+vW9gYwWU4zpeiERnjMA/XRSBZv3VPnfjfY2O26OwhNl9VhXGtkPJ2Z3whYRNlEVFd6jHIHOx88+kuNEZTHh60NXsJQSrnK2k+RWgt/bXmMWnAzn+ssJQW3PK6x1JygVm5a1E05Kr1vZqXOeZAbPjXqmHj8L9xHkxXaz+ovLr2edrFo13W4+MmbtnEfOnzSCG9pq9JKbh5KfUDVs5GpNgpdYfZA0PySetmCAFBQ4epXnLa9K4nQLCe6ucE54V7poIzN7o3QIDAQABAoIBABkHjcXMShEttXhiPjjvacopMiFP4J6Q8cDlpwSKNf3Ps6tD0K+/JQC9XmCm6tas+AO5QLC3t4JqbMph1Voyh5qGBZxcD9Wdw/vqA9hYLL3zYvvT4mbwY+sYild/aInxzgMdo3CssambtwfERO3CuLEMoaOyY1cBHHnziQ7ck7tSK7c/88fCCkaoM0ZaQPaYyxY8SPkYsq5uzN/EJQBB9hZupIns+hsHtjUa2BPrMhcJfQu7lUtLrZx+XRDcIL/fQrp9wFKhtma9hC4obhQB7TUsIwtzVServknEu+8yGZX6npL2lafK0zWNbRBXF7hGT5Dod0F0ytZkrKSuBf5lJMkCgYEA7ThXNX58bDTf+wGmoTZ+WAURQKIaW5AfhchbnM1eRYab1Pf7kwtHiQy1C0SmYmOznMzKrjdKdItdqKQOWc9sBSeZlTcA4aQpmfzvQpYSIBR38gkLRCG57PCzGB2+I/WAwnvPeYz+8GXcYvOhg88uCqIu2VSY1qGQK85qg9RIg8sCgYEAuNjlflTk0bF7kgw35sAfR4ow5Ty8OSYqY++Hn6uFToXP0iIbZj5rQtB801KvWaYlVQfGb7girhYNFeTtEr07Exky0korkYRsnHZEyu61z5wvgFzAPdz1BaiXpwnrX3WipxQAPVqUpDJBOJdXN8ANj52fYzqs3Mb8IxTVZeE/QPcCgYEAzq5j7UvDBFQdQgjyMUvVUMM5gOK7rEMp89nZWAjmthTN+QQGwNr2/MWBh8vMW7UabOdRP/EUge5bL++gQUejieoyufsuXWo2hOAHZjByolizGMIgesAXygT9RWnEnHfuM4TEA9eA19sn5V73vmvoZYNg5iH6+CXUAxbZXvq6I3kCgYBE1ZhYfBqdr98ZWu1yQ3cid+aPZxecnIbKokc6AXBp9lCWqtbTM0lUHzlspGziEIn0aSnPLp3TgCitT4utH8Sg7xBK2Q3yaYLcnPovK8eOoVXbEi8Qmniv+8FFld8NtEu2ti8EqfeSUZiSD2GORDmIkqTpGc+Hg54fHkH9Z2zbrwKBgQC9usnhUWdrptx1xVC6mu+EiX9AYMR9+sxvO0KKJIysI13z3OUKhqGpQAhjbT/2S91cKPqzNOe2NWQcl+3SiALCZ2kOv37PYGZSlbNco/fHt8Z4KmaqC2sGU7CROtriajAczIYbpv69CUseGeykISKt8GKiFd9+0cNZ/kxgBMGpHw=='
                        ],
                        keyUse: ['SIG'],
                        certificate: [
                            'MIICmzCCAYMCBgGQAsH3rjANBgkqhkiG9w0BAQsFADARMQ8wDQYDVQQDDAZtYXN0ZXIwHhcNMjQwNjEwMTUyNDQ0WhcNMzQwNjEwMTUyNjI0WjARMQ8wDQYDVQQDDAZtYXN0ZXIwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCrSXrgfnRyVYpvzUeQu7F8mIVMKuS+3ryPjQQanzXETxgMdgKN9VPPO81DjwlKrtx3JmpfkU0rO3KhB769b2BjBZTjOl6IRGeMwD9dFIFm/dU+d+N9jY7bo7CE2X1WFca2Q8nZnfCFhE2URUV3qMcgc7Hzz6S40RlMeHrQ1ewlBKucraT5FaC39teYxacDOf6ywlBbc8rrHUnKBWblrUTTkqvW9mpc55kBs+NeqYePwv3EeTFdrP6i8uvZ52sWjXdbj4yZu2cR86fNIIb2mr0kpuHkp9QNWzkak2Cl1h9kDQ/JJ62YIAUFDh6lectr0ridAsJ7q5wTnhXumgjM3ujdAgMBAAEwDQYJKoZIhvcNAQELBQADggEBAKQpf9rbVEeLMwCu5G+Fh1UWd3suTZKLp1uGJ+Ie7m/qsUBAGjgpChfQ0gREhIzFxZc/UWHHDzgm5ej4Po+hiuUD4pZPZok+23CUZcl3Q5rhw1ic9he6sfivdT7tXHxWIEixU0uKxwkLA9kZqHnPW9CJALwyqXduPYXL6j/P3yGhAI7OUWdo4IlYZYn8OiJnGsEenOxO3xmHm2s1r/CUxKnE6jkO3+PmHHPNGO6RIsmAdXQR4GuzGPEGVzZUkk2kX9nf2nmS223nDkM4Pt8JtOw9Y9LvmX6SG71KzXE0wcPRcjUyV0+RypIHcDIyRPcGAktzExUHoai3A+S6X6Z6tKU='
                        ],
                        priority: ['100']
                    }
                },
                {
                    id: '9f3cefbb-bb1f-46b2-a7fe-febff415ed6e',
                    name: 'hmac-generated',
                    providerId: 'hmac-generated',
                    subComponents: {},
                    config: {
                        kid: ['21ab7203-398a-4bb3-94c2-70c5dfb32a35'],
                        secret: [
                            'zES782xBVycjG6yAswy_S3hwVuHiUMxQ3DoCtjqjFJ8thaHYeQF_oqqp2KC_gRKyUH97C8GKvw0ks8nEG46V5g'
                        ],
                        priority: ['100'],
                        algorithm: ['HS256']
                    }
                },
                {
                    id: '26f83c3c-1fd2-495e-8f7a-d49ebc4fb112',
                    name: 'rsa-enc-generated',
                    providerId: 'rsa-enc-generated',
                    subComponents: {},
                    config: {
                        privateKey: [
                            'MIIEowIBAAKCAQEA23+tX651kQPipw+r0QaoyDS84+7R1ywEI8H9h9VG9UAsU2MeZuWAjoJRzCJDeVIDkPJ0Ewk5Lx0WxXnLtrX+7zjfGmbYFD8if62LOCV9kritFU7g3Rf2tAdqMagMVr/vUs+1B+HBdISYtZEQZJHu3d4/VzVA9MIU75qawjyqnU0NGtDEP9f4mefd1uQN1faOL+7OygbMB9q4IU7CnUa4LDztO24GgAHoepyE8pSKNTU0BsEieRczHqrZK7UldQL3xrEfhbFig5+FeaT+qpRgHvH2Pi8KHh6FDEsSmxdOfCb7hMvISlLQuLLVIOYWW2gqDXTDOyfcVWZ7UvNv9PiLYwIDAQABAoIBAGF4KtboM5C3tvgUf2mMmXp94Lsem9P+2b+/LwQYczAI1SYaR6/Nje66c/Q/6tJ+1tKQt3aUi+4d7rS2Rv3Vh2VXTcr9jEpBVuJ3f/DoxQBYPZPOuQ+0ynpbKI7wXrpO9MlDLtJXL368Osu1pR/jpbykKmBhZ3zIil9zufEy21iJwgjFYApA4mU89dq4R8xPLOWSDo8ayY0SPMW6I4B1j9H5v8KXKmW1EYsGyj6SjbwvTd2w9Qmbxyc4/cRbSK3vYjHSWgXUpdDI+PLaKOpqtYq07kBI31XluUfc0U2pt/xuYaH/9tk4IWoKkmZzQqtx3BA5iS++NWCn/RxwcbShl9ECgYEA8outjBGELy4vKIfw+fExeZ4mZnAp+TVP7nJAGY4Q7UWz9+77h25z3S2oXdYHRtzjCr3SnzKMnMCq+MZ4X02EoQO8Y/9yeTQ+6AnbWN7JHIlRxL5AIW+H4Z8zmfGSEfrg4z8M0Vz/ScnQve0flyr8cXANz67dcognexDqm3IJXecCgYEA56y3k5lW0yGWy92lxKp1BS+1nemSAtX1BHsdJX3T0CW74CGC7/mCcG0O/Sy7CcFzBmx/gqMgr8fbah8Z7iITAEeoSoDkOJcmrsAA24DZkVWZf93+pAIzNVS5X0VV01S5b5Wogg/e8sdMYqshmkbP+Njje1ti+zPkFLcWKiDpHyUCgYBdUW5pSMgB2xQb1QnbMHhnoXiGyzrq/h8Nz/lnm6hZkgrnJpSyC8YaYBm6WMGd+xiDpnsl8y30lZByfPINQOb5iFVwZ/UkOvzFDB3PuI/KIe9K8iP8eUvffAA/h5k6v7rM1BJbbxttyW8908DmyYwtHP7DXDUpfscp611Ih3yhGwKBgASw45qyfSaTRIlmOIgN54auW6AR7anvCSIJGCL9ND+/s9kq9IrFY5XBL4+Cy1q8NwcHRWGwyeWlR1UTwiOnPvk/ejHgAD8BGIBrVNkc98rQj+Yd6Z0KilznFUXPkphP291di2buyVXjITHSQ0DrdCSWx6xkwlFR0Kl2t5Usy2udAoGBAJlloZvgs09GO001mTlrRfDwUwVnTuXze55DFBlS78RaLkC4FpTaQwrspOrMW2Se1hu4moL6AozT7VoD3dxR4qRN3y/1LRkJ03h6CRnxFSOIhTu3p+PsLoYFilqrgJrf17X3Aln5wzGRphLwIapLujlABU6FXwB9OoePtQnGFTMP'
                        ],
                        keyUse: ['ENC'],
                        certificate: [
                            'MIICmzCCAYMCBgGQAsH4CTANBgkqhkiG9w0BAQsFADARMQ8wDQYDVQQDDAZtYXN0ZXIwHhcNMjQwNjEwMTUyNDQ0WhcNMzQwNjEwMTUyNjI0WjARMQ8wDQYDVQQDDAZtYXN0ZXIwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDbf61frnWRA+KnD6vRBqjINLzj7tHXLAQjwf2H1Ub1QCxTYx5m5YCOglHMIkN5UgOQ8nQTCTkvHRbFecu2tf7vON8aZtgUPyJ/rYs4JX2SuK0VTuDdF/a0B2oxqAxWv+9Sz7UH4cF0hJi1kRBkke7d3j9XNUD0whTvmprCPKqdTQ0a0MQ/1/iZ593W5A3V9o4v7s7KBswH2rghTsKdRrgsPO07bgaAAeh6nITylIo1NTQGwSJ5FzMeqtkrtSV1AvfGsR+FsWKDn4V5pP6qlGAe8fY+LwoeHoUMSxKbF058JvuEy8hKUtC4stUg5hZbaCoNdMM7J9xVZntS82/0+ItjAgMBAAEwDQYJKoZIhvcNAQELBQADggEBADIB//T9u5/Djh23fNPPERHvli7hnG8tJ0hGhjM7uLkNndlFY0SQd1o7btxWFgXw7vOvkGe5RIX/dYSvvUX6+0Vylv+92BOAWpoL4ibo8OD5ayJ6RqLoz2DJSiwOrOVwNe1vF/j+KkZvjMU/y6CUeYQ8FAL5GYrHYyX9C6fsgjBYm7T2GC1HhagYUJeJsn3ta/4FzKJVsYmFxCACpMlB+C1ATst0H4l8F0fM9JAZofU1My/ap0mfhF0MZ1V7u8GFxNDnErfRJhenMxuZUz5Q7o8dzRS5Zw5svaNCIht3AW2z5rWH8s405LlEQ3hJmv1ilKFoiq11745vKwMcW+RHsKU='
                        ],
                        priority: ['100'],
                        algorithm: ['RSA-OAEP']
                    }
                },
                {
                    id: 'e971f2bf-818f-4c65-a6d0-bbb3a2079936',
                    name: 'aes-generated',
                    providerId: 'aes-generated',
                    subComponents: {},
                    config: {
                        kid: ['c8ac421f-602a-43a7-bc84-2571b2300144'],
                        secret: ['7tXAysBmnOkB0KyjLQoKeQ'],
                        priority: ['100']
                    }
                }
            ]
        },
        internationalizationEnabled: false,
        supportedLocales: [],
        authenticationFlows: [
            {
                id: '6dd5737d-3933-485d-b98a-1bca8eb37d46',
                alias: 'Account verification options',
                description: 'Method with which to verity the existing account',
                providerId: 'basic-flow',
                topLevel: false,
                builtIn: true,
                authenticationExecutions: [
                    {
                        authenticator: 'idp-email-verification',
                        authenticatorFlow: false,
                        requirement: 'ALTERNATIVE',
                        priority: 10,
                        autheticatorFlow: false,
                        userSetupAllowed: false
                    },
                    {
                        authenticatorFlow: true,
                        requirement: 'ALTERNATIVE',
                        priority: 20,
                        autheticatorFlow: true,
                        flowAlias: 'Verify Existing Account by Re-authentication',
                        userSetupAllowed: false
                    }
                ]
            },
            {
                id: '98fb2951-beed-417f-8b08-012cd135179f',
                alias: 'Browser - Conditional OTP',
                description: 'Flow to determine if the OTP is required for the authentication',
                providerId: 'basic-flow',
                topLevel: false,
                builtIn: true,
                authenticationExecutions: [
                    {
                        authenticator: 'conditional-user-configured',
                        authenticatorFlow: false,
                        requirement: 'REQUIRED',
                        priority: 10,
                        autheticatorFlow: false,
                        userSetupAllowed: false
                    },
                    {
                        authenticator: 'auth-otp-form',
                        authenticatorFlow: false,
                        requirement: 'REQUIRED',
                        priority: 20,
                        autheticatorFlow: false,
                        userSetupAllowed: false
                    }
                ]
            },
            {
                id: '7ef881ef-4f1e-43de-8cb6-3b78387e198c',
                alias: 'Direct Grant - Conditional OTP',
                description: 'Flow to determine if the OTP is required for the authentication',
                providerId: 'basic-flow',
                topLevel: false,
                builtIn: true,
                authenticationExecutions: [
                    {
                        authenticator: 'conditional-user-configured',
                        authenticatorFlow: false,
                        requirement: 'REQUIRED',
                        priority: 10,
                        autheticatorFlow: false,
                        userSetupAllowed: false
                    },
                    {
                        authenticator: 'direct-grant-validate-otp',
                        authenticatorFlow: false,
                        requirement: 'REQUIRED',
                        priority: 20,
                        autheticatorFlow: false,
                        userSetupAllowed: false
                    }
                ]
            },
            {
                id: '4523c8e6-2e2c-4bf9-a0b4-f8ef8ba39631',
                alias: 'First broker login - Conditional OTP',
                description: 'Flow to determine if the OTP is required for the authentication',
                providerId: 'basic-flow',
                topLevel: false,
                builtIn: true,
                authenticationExecutions: [
                    {
                        authenticator: 'conditional-user-configured',
                        authenticatorFlow: false,
                        requirement: 'REQUIRED',
                        priority: 10,
                        autheticatorFlow: false,
                        userSetupAllowed: false
                    },
                    {
                        authenticator: 'auth-otp-form',
                        authenticatorFlow: false,
                        requirement: 'REQUIRED',
                        priority: 20,
                        autheticatorFlow: false,
                        userSetupAllowed: false
                    }
                ]
            },
            {
                id: 'd0e16adb-8b9f-46c1-8309-7eb7ebe07df3',
                alias: 'Handle Existing Account',
                description:
                    'Handle what to do if there is existing account with same email/username like authenticated identity provider',
                providerId: 'basic-flow',
                topLevel: false,
                builtIn: true,
                authenticationExecutions: [
                    {
                        authenticator: 'idp-confirm-link',
                        authenticatorFlow: false,
                        requirement: 'REQUIRED',
                        priority: 10,
                        autheticatorFlow: false,
                        userSetupAllowed: false
                    },
                    {
                        authenticatorFlow: true,
                        requirement: 'REQUIRED',
                        priority: 20,
                        autheticatorFlow: true,
                        flowAlias: 'Account verification options',
                        userSetupAllowed: false
                    }
                ]
            },
            {
                id: '7e4fc2c2-06f2-4c70-9469-5d3dc395bb57',
                alias: 'Reset - Conditional OTP',
                description: 'Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.',
                providerId: 'basic-flow',
                topLevel: false,
                builtIn: true,
                authenticationExecutions: [
                    {
                        authenticator: 'conditional-user-configured',
                        authenticatorFlow: false,
                        requirement: 'REQUIRED',
                        priority: 10,
                        autheticatorFlow: false,
                        userSetupAllowed: false
                    },
                    {
                        authenticator: 'reset-otp',
                        authenticatorFlow: false,
                        requirement: 'REQUIRED',
                        priority: 20,
                        autheticatorFlow: false,
                        userSetupAllowed: false
                    }
                ]
            },
            {
                id: '0d2ce0ff-6047-438a-9dc2-7047f3c6f3da',
                alias: 'User creation or linking',
                description: 'Flow for the existing/non-existing user alternatives',
                providerId: 'basic-flow',
                topLevel: false,
                builtIn: true,
                authenticationExecutions: [
                    {
                        authenticatorConfig: 'create unique user config',
                        authenticator: 'idp-create-user-if-unique',
                        authenticatorFlow: false,
                        requirement: 'ALTERNATIVE',
                        priority: 10,
                        autheticatorFlow: false,
                        userSetupAllowed: false
                    },
                    {
                        authenticatorFlow: true,
                        requirement: 'ALTERNATIVE',
                        priority: 20,
                        autheticatorFlow: true,
                        flowAlias: 'Handle Existing Account',
                        userSetupAllowed: false
                    }
                ]
            },
            {
                id: 'bfaa4f9f-60fb-4798-a384-724d48bb7d5a',
                alias: 'Verify Existing Account by Re-authentication',
                description: 'Reauthentication of existing account',
                providerId: 'basic-flow',
                topLevel: false,
                builtIn: true,
                authenticationExecutions: [
                    {
                        authenticator: 'idp-username-password-form',
                        authenticatorFlow: false,
                        requirement: 'REQUIRED',
                        priority: 10,
                        autheticatorFlow: false,
                        userSetupAllowed: false
                    },
                    {
                        authenticatorFlow: true,
                        requirement: 'CONDITIONAL',
                        priority: 20,
                        autheticatorFlow: true,
                        flowAlias: 'First broker login - Conditional OTP',
                        userSetupAllowed: false
                    }
                ]
            },
            {
                id: 'b5821380-60ca-472e-9fe6-2572274d42e7',
                alias: 'browser',
                description: 'browser based authentication',
                providerId: 'basic-flow',
                topLevel: true,
                builtIn: true,
                authenticationExecutions: [
                    {
                        authenticator: 'auth-cookie',
                        authenticatorFlow: false,
                        requirement: 'ALTERNATIVE',
                        priority: 10,
                        autheticatorFlow: false,
                        userSetupAllowed: false
                    },
                    {
                        authenticator: 'auth-spnego',
                        authenticatorFlow: false,
                        requirement: 'DISABLED',
                        priority: 20,
                        autheticatorFlow: false,
                        userSetupAllowed: false
                    },
                    {
                        authenticator: 'identity-provider-redirector',
                        authenticatorFlow: false,
                        requirement: 'ALTERNATIVE',
                        priority: 25,
                        autheticatorFlow: false,
                        userSetupAllowed: false
                    },
                    {
                        authenticatorFlow: true,
                        requirement: 'ALTERNATIVE',
                        priority: 30,
                        autheticatorFlow: true,
                        flowAlias: 'forms',
                        userSetupAllowed: false
                    }
                ]
            },
            {
                id: '499b1b4e-ddc0-42f6-9ea6-debea80b4547',
                alias: 'clients',
                description: 'Base authentication for clients',
                providerId: 'client-flow',
                topLevel: true,
                builtIn: true,
                authenticationExecutions: [
                    {
                        authenticator: 'client-secret',
                        authenticatorFlow: false,
                        requirement: 'ALTERNATIVE',
                        priority: 10,
                        autheticatorFlow: false,
                        userSetupAllowed: false
                    },
                    {
                        authenticator: 'client-jwt',
                        authenticatorFlow: false,
                        requirement: 'ALTERNATIVE',
                        priority: 20,
                        autheticatorFlow: false,
                        userSetupAllowed: false
                    },
                    {
                        authenticator: 'client-secret-jwt',
                        authenticatorFlow: false,
                        requirement: 'ALTERNATIVE',
                        priority: 30,
                        autheticatorFlow: false,
                        userSetupAllowed: false
                    },
                    {
                        authenticator: 'client-x509',
                        authenticatorFlow: false,
                        requirement: 'ALTERNATIVE',
                        priority: 40,
                        autheticatorFlow: false,
                        userSetupAllowed: false
                    }
                ]
            },
            {
                id: '5bfd778e-e694-42ac-b5cb-6abf029f3368',
                alias: 'direct grant',
                description: 'OpenID Connect Resource Owner Grant',
                providerId: 'basic-flow',
                topLevel: true,
                builtIn: true,
                authenticationExecutions: [
                    {
                        authenticator: 'direct-grant-validate-username',
                        authenticatorFlow: false,
                        requirement: 'REQUIRED',
                        priority: 10,
                        autheticatorFlow: false,
                        userSetupAllowed: false
                    },
                    {
                        authenticator: 'direct-grant-validate-password',
                        authenticatorFlow: false,
                        requirement: 'REQUIRED',
                        priority: 20,
                        autheticatorFlow: false,
                        userSetupAllowed: false
                    },
                    {
                        authenticatorFlow: true,
                        requirement: 'CONDITIONAL',
                        priority: 30,
                        autheticatorFlow: true,
                        flowAlias: 'Direct Grant - Conditional OTP',
                        userSetupAllowed: false
                    }
                ]
            },
            {
                id: 'ac141a07-e4fc-457a-bb5f-42bead96c61e',
                alias: 'docker auth',
                description: 'Used by Docker clients to authenticate against the IDP',
                providerId: 'basic-flow',
                topLevel: true,
                builtIn: true,
                authenticationExecutions: [
                    {
                        authenticator: 'docker-http-basic-authenticator',
                        authenticatorFlow: false,
                        requirement: 'REQUIRED',
                        priority: 10,
                        autheticatorFlow: false,
                        userSetupAllowed: false
                    }
                ]
            },
            {
                id: 'db4d45f8-c108-4e14-a9d5-adac7186037c',
                alias: 'first broker login',
                description:
                    'Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account',
                providerId: 'basic-flow',
                topLevel: true,
                builtIn: true,
                authenticationExecutions: [
                    {
                        authenticatorConfig: 'review profile config',
                        authenticator: 'idp-review-profile',
                        authenticatorFlow: false,
                        requirement: 'REQUIRED',
                        priority: 10,
                        autheticatorFlow: false,
                        userSetupAllowed: false
                    },
                    {
                        authenticatorFlow: true,
                        requirement: 'REQUIRED',
                        priority: 20,
                        autheticatorFlow: true,
                        flowAlias: 'User creation or linking',
                        userSetupAllowed: false
                    }
                ]
            },
            {
                id: '32b23ef3-f940-48b0-87c7-f8f26d6da50c',
                alias: 'forms',
                description: 'Username, password, otp and other auth forms.',
                providerId: 'basic-flow',
                topLevel: false,
                builtIn: true,
                authenticationExecutions: [
                    {
                        authenticator: 'auth-username-password-form',
                        authenticatorFlow: false,
                        requirement: 'REQUIRED',
                        priority: 10,
                        autheticatorFlow: false,
                        userSetupAllowed: false
                    },
                    {
                        authenticatorFlow: true,
                        requirement: 'CONDITIONAL',
                        priority: 20,
                        autheticatorFlow: true,
                        flowAlias: 'Browser - Conditional OTP',
                        userSetupAllowed: false
                    }
                ]
            },
            {
                id: '9517d34a-4baa-4d7a-89c2-e1fab653dcc7',
                alias: 'registration',
                description: 'registration flow',
                providerId: 'basic-flow',
                topLevel: true,
                builtIn: true,
                authenticationExecutions: [
                    {
                        authenticator: 'registration-page-form',
                        authenticatorFlow: true,
                        requirement: 'REQUIRED',
                        priority: 10,
                        autheticatorFlow: true,
                        flowAlias: 'registration form',
                        userSetupAllowed: false
                    }
                ]
            },
            {
                id: 'd5ada9e4-556d-43a0-92af-3cf61744c05e',
                alias: 'registration form',
                description: 'registration form',
                providerId: 'form-flow',
                topLevel: false,
                builtIn: true,
                authenticationExecutions: [
                    {
                        authenticator: 'registration-user-creation',
                        authenticatorFlow: false,
                        requirement: 'REQUIRED',
                        priority: 20,
                        autheticatorFlow: false,
                        userSetupAllowed: false
                    },
                    {
                        authenticator: 'registration-password-action',
                        authenticatorFlow: false,
                        requirement: 'REQUIRED',
                        priority: 50,
                        autheticatorFlow: false,
                        userSetupAllowed: false
                    },
                    {
                        authenticator: 'registration-recaptcha-action',
                        authenticatorFlow: false,
                        requirement: 'DISABLED',
                        priority: 60,
                        autheticatorFlow: false,
                        userSetupAllowed: false
                    },
                    {
                        authenticator: 'registration-terms-and-conditions',
                        authenticatorFlow: false,
                        requirement: 'DISABLED',
                        priority: 70,
                        autheticatorFlow: false,
                        userSetupAllowed: false
                    }
                ]
            },
            {
                id: 'e42054f9-3438-49c3-8ef3-96ff68df95d7',
                alias: 'reset credentials',
                description: 'Reset credentials for a user if they forgot their password or something',
                providerId: 'basic-flow',
                topLevel: true,
                builtIn: true,
                authenticationExecutions: [
                    {
                        authenticator: 'reset-credentials-choose-user',
                        authenticatorFlow: false,
                        requirement: 'REQUIRED',
                        priority: 10,
                        autheticatorFlow: false,
                        userSetupAllowed: false
                    },
                    {
                        authenticator: 'reset-credential-email',
                        authenticatorFlow: false,
                        requirement: 'REQUIRED',
                        priority: 20,
                        autheticatorFlow: false,
                        userSetupAllowed: false
                    },
                    {
                        authenticator: 'reset-password',
                        authenticatorFlow: false,
                        requirement: 'REQUIRED',
                        priority: 30,
                        autheticatorFlow: false,
                        userSetupAllowed: false
                    },
                    {
                        authenticatorFlow: true,
                        requirement: 'CONDITIONAL',
                        priority: 40,
                        autheticatorFlow: true,
                        flowAlias: 'Reset - Conditional OTP',
                        userSetupAllowed: false
                    }
                ]
            },
            {
                id: 'bf9d62fe-baec-4a71-8ec0-972d0aeb1df6',
                alias: 'saml ecp',
                description: 'SAML ECP Profile Authentication Flow',
                providerId: 'basic-flow',
                topLevel: true,
                builtIn: true,
                authenticationExecutions: [
                    {
                        authenticator: 'http-basic-authenticator',
                        authenticatorFlow: false,
                        requirement: 'REQUIRED',
                        priority: 10,
                        autheticatorFlow: false,
                        userSetupAllowed: false
                    }
                ]
            }
        ],
        authenticatorConfig: [
            {
                id: 'e5c2e7f6-5ee3-45e6-a4f5-3cb22363c8a4',
                alias: 'create unique user config',
                config: {
                    'require.password.update.after.registration': 'false'
                }
            },
            {
                id: '2d996a99-555f-4b35-b1b5-05c3f04c5d2d',
                alias: 'review profile config',
                config: {
                    'update.profile.on.first.login': 'missing'
                }
            }
        ],
        requiredActions: [
            {
                alias: 'CONFIGURE_TOTP',
                name: 'Configure OTP',
                providerId: 'CONFIGURE_TOTP',
                enabled: true,
                defaultAction: false,
                priority: 10,
                config: {}
            },
            {
                alias: 'TERMS_AND_CONDITIONS',
                name: 'Terms and Conditions',
                providerId: 'TERMS_AND_CONDITIONS',
                enabled: false,
                defaultAction: false,
                priority: 20,
                config: {}
            },
            {
                alias: 'UPDATE_PASSWORD',
                name: 'Update Password',
                providerId: 'UPDATE_PASSWORD',
                enabled: true,
                defaultAction: false,
                priority: 30,
                config: {}
            },
            {
                alias: 'UPDATE_PROFILE',
                name: 'Update Profile',
                providerId: 'UPDATE_PROFILE',
                enabled: true,
                defaultAction: false,
                priority: 40,
                config: {}
            },
            {
                alias: 'VERIFY_EMAIL',
                name: 'Verify Email',
                providerId: 'VERIFY_EMAIL',
                enabled: true,
                defaultAction: false,
                priority: 50,
                config: {}
            },
            {
                alias: 'delete_account',
                name: 'Delete Account',
                providerId: 'delete_account',
                enabled: false,
                defaultAction: false,
                priority: 60,
                config: {}
            },
            {
                alias: 'webauthn-register',
                name: 'Webauthn Register',
                providerId: 'webauthn-register',
                enabled: true,
                defaultAction: false,
                priority: 70,
                config: {}
            },
            {
                alias: 'webauthn-register-passwordless',
                name: 'Webauthn Register Passwordless',
                providerId: 'webauthn-register-passwordless',
                enabled: true,
                defaultAction: false,
                priority: 80,
                config: {}
            },
            {
                alias: 'update_user_locale',
                name: 'Update User Locale',
                providerId: 'update_user_locale',
                enabled: true,
                defaultAction: false,
                priority: 1000,
                config: {}
            }
        ],
        browserFlow: 'browser',
        registrationFlow: 'registration',
        directGrantFlow: 'direct grant',
        resetCredentialsFlow: 'reset credentials',
        clientAuthenticationFlow: 'clients',
        dockerAuthenticationFlow: 'docker auth',
        attributes: {
            cibaBackchannelTokenDeliveryMode: 'poll',
            cibaExpiresIn: '120',
            cibaAuthRequestedUserHint: 'login_hint',
            oauth2DeviceCodeLifespan: '600',
            oauth2DevicePollingInterval: '5',
            clientOfflineSessionMaxLifespan: '0',
            clientSessionIdleTimeout: '0',
            parRequestUriLifespan: '60',
            clientSessionMaxLifespan: '0',
            clientOfflineSessionIdleTimeout: '0',
            cibaInterval: '5',
            realmReusableOtpCode: 'false'
        },
        keycloakVersion: '23.0.5',
        userManagedAccessAllowed: false,
        clientProfiles: {
            profiles: []
        },
        clientPolicies: {
            policies: []
        }
    }
];
